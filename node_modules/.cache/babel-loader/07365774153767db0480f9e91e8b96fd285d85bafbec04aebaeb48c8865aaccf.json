{"ast":null,"code":"import * as React from \"react\";\nimport { isHover, saveNodeType } from \"../utils\";\nimport { ClickableShape, InteractiveYCoordinate } from \"../components\";\nexport class EachInteractiveYCoordinate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCloseIconHover = (_, moreProps) => {\n      if (this.state.closeIconHover !== moreProps.hovering) {\n        this.setState({\n          closeIconHover: moreProps.hovering\n        });\n      }\n    };\n    this.handleHover = (e, moreProps) => {\n      if (this.state.hover !== moreProps.hovering) {\n        this.setState({\n          hover: moreProps.hovering,\n          closeIconHover: moreProps.hovering ? this.state.closeIconHover : false\n        });\n      }\n    };\n    this.handleDelete = (e, moreProps) => {\n      const {\n        index,\n        onDelete\n      } = this.props;\n      if (onDelete !== undefined) {\n        onDelete(e, index, moreProps);\n      }\n    };\n    this.handleDrag = (e, moreProps) => {\n      const {\n        index,\n        onDrag\n      } = this.props;\n      if (onDrag === undefined) {\n        return;\n      }\n      const {\n        mouseXY: [, mouseY],\n        chartConfig: {\n          yScale\n        }\n      } = moreProps;\n      const {\n        dy\n      } = this.dragStartPosition;\n      const newYValue = yScale.invert(mouseY - dy);\n      onDrag(e, index, newYValue);\n    };\n    this.handleDragStart = (_, moreProps) => {\n      const {\n        yValue\n      } = this.props;\n      const {\n        mouseXY\n      } = moreProps;\n      const {\n        chartConfig: {\n          yScale\n        }\n      } = moreProps;\n      const [, mouseY] = mouseXY;\n      const dy = mouseY - yScale(yValue);\n      this.dragStartPosition = {\n        yValue,\n        dy\n      };\n    };\n    this.isHover = isHover.bind(this);\n    this.saveNodeType = saveNodeType.bind(this);\n    this.state = {\n      hover: false,\n      closeIconHover: false\n    };\n  }\n  render() {\n    const {\n      yValue,\n      bgFill,\n      textFill,\n      fontFamily,\n      fontSize,\n      fontWeight,\n      fontStyle,\n      text,\n      selected,\n      onDragComplete,\n      stroke,\n      strokeDasharray,\n      strokeWidth,\n      edge,\n      textBox,\n      draggable\n    } = this.props;\n    const {\n      hover,\n      closeIconHover\n    } = this.state;\n    const hoverHandler = {\n      onHover: this.handleHover,\n      onUnHover: this.handleHover\n    };\n    const dragProps = draggable ? {\n      onDragStart: this.handleDragStart,\n      onDrag: this.handleDrag,\n      onDragComplete\n    } : {};\n    return React.createElement(\"g\", null, React.createElement(InteractiveYCoordinate, Object.assign({\n      ref: this.saveNodeType(\"priceCoordinate\"),\n      selected: selected && !closeIconHover,\n      hovering: hover || closeIconHover,\n      interactiveCursorClass: \"react-financial-charts-move-cursor\"\n    }, hoverHandler, dragProps, {\n      yValue: yValue,\n      bgFillStyle: bgFill,\n      textFill: textFill,\n      fontFamily: fontFamily,\n      fontStyle: fontStyle,\n      fontWeight: fontWeight,\n      fontSize: fontSize,\n      strokeStyle: stroke,\n      strokeDasharray: strokeDasharray,\n      strokeWidth: strokeWidth,\n      text: text,\n      textBox: textBox,\n      edge: edge\n    })), React.createElement(ClickableShape, {\n      show: true,\n      hovering: closeIconHover,\n      text: text,\n      yValue: yValue,\n      fontFamily: fontFamily,\n      fontStyle: fontStyle,\n      fontWeight: fontWeight,\n      fontSize: fontSize,\n      textBox: textBox,\n      strokeStyle: stroke,\n      onHover: this.handleCloseIconHover,\n      onUnHover: this.handleCloseIconHover,\n      onClick: this.handleDelete\n    }));\n  }\n}\nEachInteractiveYCoordinate.defaultProps = {\n  strokeWidth: 1,\n  selected: false,\n  draggable: false\n};","map":{"version":3,"names":["React","isHover","saveNodeType","ClickableShape","InteractiveYCoordinate","EachInteractiveYCoordinate","Component","constructor","props","handleCloseIconHover","_","moreProps","state","closeIconHover","hovering","setState","handleHover","e","hover","handleDelete","index","onDelete","undefined","handleDrag","onDrag","mouseXY","mouseY","chartConfig","yScale","dy","dragStartPosition","newYValue","invert","handleDragStart","yValue","bind","render","bgFill","textFill","fontFamily","fontSize","fontWeight","fontStyle","text","selected","onDragComplete","stroke","strokeDasharray","strokeWidth","edge","textBox","draggable","hoverHandler","onHover","onUnHover","dragProps","onDragStart","createElement","Object","assign","ref","interactiveCursorClass","bgFillStyle","strokeStyle","show","onClick","defaultProps"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\interactive\\src\\wrapper\\EachInteractiveYCoordinate.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { strokeDashTypes } from \"@react-financial-charts/core\";\nimport { isHover, saveNodeType } from \"../utils\";\nimport { ClickableShape, InteractiveYCoordinate } from \"../components\";\n\nexport interface EachInteractiveYCoordinateProps {\n    readonly index?: number;\n    readonly draggable: boolean;\n    readonly yValue: number;\n    readonly bgFill: string;\n    readonly stroke: string;\n    readonly strokeWidth: number;\n    readonly strokeDasharray: strokeDashTypes;\n    readonly textFill: string;\n    readonly fontWeight: string;\n    readonly fontFamily: string;\n    readonly fontStyle: string;\n    readonly fontSize: number;\n    readonly text: string;\n    readonly selected: boolean;\n    readonly edge: object;\n    readonly textBox: {\n        readonly closeIcon: any;\n        readonly left: number;\n        readonly height: number;\n        readonly padding: any;\n    };\n    readonly onDrag?: (e: React.MouseEvent, index: number | undefined, moreProps: any) => void;\n    readonly onDragComplete?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onDelete?: (e: React.MouseEvent, index: number | undefined, moreProps: any) => void;\n}\n\ninterface EachInteractiveYCoordinateState {\n    closeIconHover: boolean;\n    hover: boolean;\n}\n\nexport class EachInteractiveYCoordinate extends React.Component<\n    EachInteractiveYCoordinateProps,\n    EachInteractiveYCoordinateState\n> {\n    public static defaultProps = {\n        strokeWidth: 1,\n        selected: false,\n        draggable: false,\n    };\n\n    private dragStartPosition: any;\n    // @ts-ignore\n    private isHover: any;\n    private saveNodeType: any;\n\n    public constructor(props: EachInteractiveYCoordinateProps) {\n        super(props);\n\n        this.isHover = isHover.bind(this);\n        this.saveNodeType = saveNodeType.bind(this);\n\n        this.state = {\n            hover: false,\n            closeIconHover: false,\n        };\n    }\n\n    public render() {\n        const {\n            yValue,\n            bgFill,\n            textFill,\n            fontFamily,\n            fontSize,\n            fontWeight,\n            fontStyle,\n            text,\n            selected,\n            onDragComplete,\n            stroke,\n            strokeDasharray,\n            strokeWidth,\n            edge,\n            textBox,\n            draggable,\n        } = this.props;\n\n        const { hover, closeIconHover } = this.state;\n\n        const hoverHandler = {\n            onHover: this.handleHover,\n            onUnHover: this.handleHover,\n        };\n\n        const dragProps = draggable\n            ? {\n                  onDragStart: this.handleDragStart,\n                  onDrag: this.handleDrag,\n                  onDragComplete,\n              }\n            : {};\n        return (\n            <g>\n                <InteractiveYCoordinate\n                    ref={this.saveNodeType(\"priceCoordinate\")}\n                    selected={selected && !closeIconHover}\n                    hovering={hover || closeIconHover}\n                    interactiveCursorClass=\"react-financial-charts-move-cursor\"\n                    {...hoverHandler}\n                    {...dragProps}\n                    yValue={yValue}\n                    bgFillStyle={bgFill}\n                    textFill={textFill}\n                    fontFamily={fontFamily}\n                    fontStyle={fontStyle}\n                    fontWeight={fontWeight}\n                    fontSize={fontSize}\n                    strokeStyle={stroke}\n                    strokeDasharray={strokeDasharray}\n                    strokeWidth={strokeWidth}\n                    text={text}\n                    textBox={textBox}\n                    edge={edge}\n                />\n                <ClickableShape\n                    show\n                    hovering={closeIconHover}\n                    text={text}\n                    yValue={yValue}\n                    fontFamily={fontFamily}\n                    fontStyle={fontStyle}\n                    fontWeight={fontWeight}\n                    fontSize={fontSize}\n                    textBox={textBox}\n                    strokeStyle={stroke}\n                    onHover={this.handleCloseIconHover}\n                    onUnHover={this.handleCloseIconHover}\n                    onClick={this.handleDelete}\n                />\n            </g>\n        );\n    }\n\n    private readonly handleCloseIconHover = (_: React.MouseEvent, moreProps: any) => {\n        if (this.state.closeIconHover !== moreProps.hovering) {\n            this.setState({\n                closeIconHover: moreProps.hovering,\n            });\n        }\n    };\n\n    private readonly handleHover = (e: React.MouseEvent, moreProps: any) => {\n        if (this.state.hover !== moreProps.hovering) {\n            this.setState({\n                hover: moreProps.hovering,\n                closeIconHover: moreProps.hovering ? this.state.closeIconHover : false,\n            });\n        }\n    };\n\n    private readonly handleDelete = (e: React.MouseEvent, moreProps: any) => {\n        const { index, onDelete } = this.props;\n        if (onDelete !== undefined) {\n            onDelete(e, index, moreProps);\n        }\n    };\n\n    private readonly handleDrag = (e: React.MouseEvent, moreProps: any) => {\n        const { index, onDrag } = this.props;\n        if (onDrag === undefined) {\n            return;\n        }\n\n        const {\n            mouseXY: [, mouseY],\n            chartConfig: { yScale },\n        } = moreProps;\n\n        const { dy } = this.dragStartPosition;\n\n        const newYValue = yScale.invert(mouseY - dy);\n\n        onDrag(e, index, newYValue);\n    };\n\n    private readonly handleDragStart = (_: React.MouseEvent, moreProps: any) => {\n        const { yValue } = this.props;\n        const { mouseXY } = moreProps;\n        const {\n            chartConfig: { yScale },\n        } = moreProps;\n        const [, mouseY] = mouseXY;\n\n        const dy = mouseY - yScale(yValue);\n\n        this.dragStartPosition = {\n            yValue,\n            dy,\n        };\n    };\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,OAAO,EAAEC,YAAY,QAAQ,UAAU;AAChD,SAASC,cAAc,EAAEC,sBAAsB,QAAQ,eAAe;AAkCtE,OAAM,MAAOC,0BAA2B,SAAQL,KAAK,CAACM,SAGrD;EAYGC,YAAmBC,KAAsC;IACrD,KAAK,CAACA,KAAK,CAAC;IAuFC,KAAAC,oBAAoB,GAAG,CAACC,CAAmB,EAAEC,SAAc,KAAI;MAC5E,IAAI,IAAI,CAACC,KAAK,CAACC,cAAc,KAAKF,SAAS,CAACG,QAAQ,EAAE;QAClD,IAAI,CAACC,QAAQ,CAAC;UACVF,cAAc,EAAEF,SAAS,CAACG;SAC7B,CAAC;;IAEV,CAAC;IAEgB,KAAAE,WAAW,GAAG,CAACC,CAAmB,EAAEN,SAAc,KAAI;MACnE,IAAI,IAAI,CAACC,KAAK,CAACM,KAAK,KAAKP,SAAS,CAACG,QAAQ,EAAE;QACzC,IAAI,CAACC,QAAQ,CAAC;UACVG,KAAK,EAAEP,SAAS,CAACG,QAAQ;UACzBD,cAAc,EAAEF,SAAS,CAACG,QAAQ,GAAG,IAAI,CAACF,KAAK,CAACC,cAAc,GAAG;SACpE,CAAC;;IAEV,CAAC;IAEgB,KAAAM,YAAY,GAAG,CAACF,CAAmB,EAAEN,SAAc,KAAI;MACpE,MAAM;QAAES,KAAK;QAAEC;MAAQ,CAAE,GAAG,IAAI,CAACb,KAAK;MACtC,IAAIa,QAAQ,KAAKC,SAAS,EAAE;QACxBD,QAAQ,CAACJ,CAAC,EAAEG,KAAK,EAAET,SAAS,CAAC;;IAErC,CAAC;IAEgB,KAAAY,UAAU,GAAG,CAACN,CAAmB,EAAEN,SAAc,KAAI;MAClE,MAAM;QAAES,KAAK;QAAEI;MAAM,CAAE,GAAG,IAAI,CAAChB,KAAK;MACpC,IAAIgB,MAAM,KAAKF,SAAS,EAAE;QACtB;;MAGJ,MAAM;QACFG,OAAO,EAAE,GAAGC,MAAM,CAAC;QACnBC,WAAW,EAAE;UAAEC;QAAM;MAAE,CAC1B,GAAGjB,SAAS;MAEb,MAAM;QAAEkB;MAAE,CAAE,GAAG,IAAI,CAACC,iBAAiB;MAErC,MAAMC,SAAS,GAAGH,MAAM,CAACI,MAAM,CAACN,MAAM,GAAGG,EAAE,CAAC;MAE5CL,MAAM,CAACP,CAAC,EAAEG,KAAK,EAAEW,SAAS,CAAC;IAC/B,CAAC;IAEgB,KAAAE,eAAe,GAAG,CAACvB,CAAmB,EAAEC,SAAc,KAAI;MACvE,MAAM;QAAEuB;MAAM,CAAE,GAAG,IAAI,CAAC1B,KAAK;MAC7B,MAAM;QAAEiB;MAAO,CAAE,GAAGd,SAAS;MAC7B,MAAM;QACFgB,WAAW,EAAE;UAAEC;QAAM;MAAE,CAC1B,GAAGjB,SAAS;MACb,MAAM,GAAGe,MAAM,CAAC,GAAGD,OAAO;MAE1B,MAAMI,EAAE,GAAGH,MAAM,GAAGE,MAAM,CAACM,MAAM,CAAC;MAElC,IAAI,CAACJ,iBAAiB,GAAG;QACrBI,MAAM;QACNL;OACH;IACL,CAAC;IA7IG,IAAI,CAAC5B,OAAO,GAAGA,OAAO,CAACkC,IAAI,CAAC,IAAI,CAAC;IACjC,IAAI,CAACjC,YAAY,GAAGA,YAAY,CAACiC,IAAI,CAAC,IAAI,CAAC;IAE3C,IAAI,CAACvB,KAAK,GAAG;MACTM,KAAK,EAAE,KAAK;MACZL,cAAc,EAAE;KACnB;EACL;EAEOuB,MAAMA,CAAA;IACT,MAAM;MACFF,MAAM;MACNG,MAAM;MACNC,QAAQ;MACRC,UAAU;MACVC,QAAQ;MACRC,UAAU;MACVC,SAAS;MACTC,IAAI;MACJC,QAAQ;MACRC,cAAc;MACdC,MAAM;MACNC,eAAe;MACfC,WAAW;MACXC,IAAI;MACJC,OAAO;MACPC;IAAS,CACZ,GAAG,IAAI,CAAC3C,KAAK;IAEd,MAAM;MAAEU,KAAK;MAAEL;IAAc,CAAE,GAAG,IAAI,CAACD,KAAK;IAE5C,MAAMwC,YAAY,GAAG;MACjBC,OAAO,EAAE,IAAI,CAACrC,WAAW;MACzBsC,SAAS,EAAE,IAAI,CAACtC;KACnB;IAED,MAAMuC,SAAS,GAAGJ,SAAS,GACrB;MACIK,WAAW,EAAE,IAAI,CAACvB,eAAe;MACjCT,MAAM,EAAE,IAAI,CAACD,UAAU;MACvBsB;KACH,GACD,EAAE;IACR,OACI7C,KAAA,CAAAyD,aAAA,YACIzD,KAAA,CAAAyD,aAAA,CAACrD,sBAAsB,EAAAsD,MAAA,CAAAC,MAAA;MACnBC,GAAG,EAAE,IAAI,CAAC1D,YAAY,CAAC,iBAAiB,CAAC;MACzC0C,QAAQ,EAAEA,QAAQ,IAAI,CAAC/B,cAAc;MACrCC,QAAQ,EAAEI,KAAK,IAAIL,cAAc;MACjCgD,sBAAsB,EAAC;IAAoC,GACvDT,YAAY,EACZG,SAAS;MACbrB,MAAM,EAAEA,MAAM;MACd4B,WAAW,EAAEzB,MAAM;MACnBC,QAAQ,EAAEA,QAAQ;MAClBC,UAAU,EAAEA,UAAU;MACtBG,SAAS,EAAEA,SAAS;MACpBD,UAAU,EAAEA,UAAU;MACtBD,QAAQ,EAAEA,QAAQ;MAClBuB,WAAW,EAAEjB,MAAM;MACnBC,eAAe,EAAEA,eAAe;MAChCC,WAAW,EAAEA,WAAW;MACxBL,IAAI,EAAEA,IAAI;MACVO,OAAO,EAAEA,OAAO;MAChBD,IAAI,EAAEA;IAAI,GACZ,EACFjD,KAAA,CAAAyD,aAAA,CAACtD,cAAc;MACX6D,IAAI;MACJlD,QAAQ,EAAED,cAAc;MACxB8B,IAAI,EAAEA,IAAI;MACVT,MAAM,EAAEA,MAAM;MACdK,UAAU,EAAEA,UAAU;MACtBG,SAAS,EAAEA,SAAS;MACpBD,UAAU,EAAEA,UAAU;MACtBD,QAAQ,EAAEA,QAAQ;MAClBU,OAAO,EAAEA,OAAO;MAChBa,WAAW,EAAEjB,MAAM;MACnBO,OAAO,EAAE,IAAI,CAAC5C,oBAAoB;MAClC6C,SAAS,EAAE,IAAI,CAAC7C,oBAAoB;MACpCwD,OAAO,EAAE,IAAI,CAAC9C;IAAY,EAC5B,CACF;EAEZ;;AAjGcd,0BAAA,CAAA6D,YAAY,GAAG;EACzBlB,WAAW,EAAE,CAAC;EACdJ,QAAQ,EAAE,KAAK;EACfO,SAAS,EAAE;CACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}