{"ast":null,"code":"import * as React from \"react\";\nimport { getMouseCanvas, GenericChartComponent } from \"@react-financial-charts/core\";\nexport class MouseCoordinateXV2 extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.drawOnCanvas = (ctx, moreProps) => {\n      const {\n        show,\n        currentItem\n      } = moreProps;\n      const {\n        drawCoordinate\n      } = this.props;\n      if (show && currentItem != null) {\n        const shape = getXCoordinateInfo(ctx, this.props, moreProps);\n        drawCoordinate(ctx, shape, this.props, moreProps);\n      }\n    };\n  }\n  render() {\n    return React.createElement(GenericChartComponent, {\n      clip: false,\n      canvasDraw: this.drawOnCanvas,\n      canvasToDraw: getMouseCanvas,\n      drawOn: [\"mousemove\", \"pan\", \"drag\"]\n    });\n  }\n}\nMouseCoordinateXV2.defaultProps = {\n  xPosition: defaultXPosition,\n  drawCoordinate: defaultDrawCoordinate,\n  at: \"bottom\",\n  orient: \"bottom\",\n  text: {\n    fontStyle: \"\",\n    fontWeight: \"\",\n    fontFamily: \"-apple-system, system-ui, Roboto, 'Helvetica Neue', Ubuntu, sans-serif\",\n    fontSize: 13,\n    fill: \"rgb(35, 35, 35)\"\n  },\n  bg: {\n    fill: \"rgb(255, 255, 255)\",\n    stroke: \"rgb(35, 35, 35)\",\n    strokeWidth: 1,\n    padding: {\n      left: 7,\n      right: 7,\n      top: 4,\n      bottom: 4\n    }\n  },\n  dx: 7,\n  dy: 7\n};\nfunction defaultXPosition(props, moreProps) {\n  const {\n    currentItem,\n    xAccessor\n  } = moreProps;\n  return xAccessor(currentItem);\n}\nfunction getXCoordinateInfo(ctx, props, moreProps) {\n  const {\n    at,\n    displayFormat,\n    text,\n    xPosition\n  } = props;\n  const xValue = xPosition(props, moreProps);\n  const {\n    xScale,\n    chartConfig: {\n      height\n    }\n  } = moreProps;\n  ctx.font = `${text.fontStyle} ${text.fontWeight} ${text.fontSize}px ${text.fontFamily}`;\n  const t = displayFormat(xValue);\n  const textWidth = ctx.measureText(t).width;\n  const y = at === \"bottom\" ? height : 0;\n  const x = Math.round(xScale(xValue));\n  return {\n    x,\n    y,\n    textWidth,\n    text: t\n  };\n}\nfunction defaultDrawCoordinate(ctx, shape, props, moreProps) {\n  const {\n    x,\n    y,\n    textWidth,\n    text\n  } = shape;\n  const {\n    orient,\n    dx,\n    dy,\n    bg: {\n      padding,\n      fill,\n      stroke,\n      strokeWidth\n    },\n    text: {\n      fontSize,\n      fill: textFill\n    }\n  } = props;\n  ctx.textAlign = \"center\";\n  const sign = orient === \"top\" ? -1 : 1;\n  const halfWidth = Math.round(textWidth / 2 + padding.right);\n  const height = Math.round(fontSize + padding.top + padding.bottom);\n  ctx.strokeStyle = typeof stroke === \"function\" ? stroke(moreProps, ctx) : stroke;\n  ctx.fillStyle = typeof fill === \"function\" ? fill(moreProps, ctx) : fill;\n  ctx.lineWidth = typeof strokeWidth === \"function\" ? strokeWidth(moreProps) : strokeWidth;\n  ctx.beginPath();\n  ctx.moveTo(x, y);\n  ctx.lineTo(x + dx, y + sign * dy);\n  ctx.lineTo(x + halfWidth, y + sign * dy);\n  ctx.lineTo(x + halfWidth, y + sign * (dy + height));\n  ctx.lineTo(x - halfWidth, y + sign * (dy + height));\n  ctx.lineTo(x - halfWidth, y + sign * dy);\n  ctx.lineTo(x - dx, y + sign * dy);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.fill();\n  ctx.beginPath();\n  ctx.fillStyle = typeof textFill === \"function\" ? textFill(moreProps, ctx) : textFill;\n  ctx.textBaseline = orient === \"top\" ? \"alphabetic\" : \"hanging\";\n  const pad = orient === \"top\" ? padding.bottom : padding.top;\n  ctx.fillText(text, x, y + sign * (dy + pad + 2));\n}","map":{"version":3,"names":["React","getMouseCanvas","GenericChartComponent","MouseCoordinateXV2","Component","constructor","drawOnCanvas","ctx","moreProps","show","currentItem","drawCoordinate","props","shape","getXCoordinateInfo","render","createElement","clip","canvasDraw","canvasToDraw","drawOn","defaultProps","xPosition","defaultXPosition","defaultDrawCoordinate","at","orient","text","fontStyle","fontWeight","fontFamily","fontSize","fill","bg","stroke","strokeWidth","padding","left","right","top","bottom","dx","dy","xAccessor","displayFormat","xValue","xScale","chartConfig","height","font","t","textWidth","measureText","width","y","x","Math","round","textFill","textAlign","sign","halfWidth","strokeStyle","fillStyle","lineWidth","beginPath","moveTo","lineTo","closePath","textBaseline","pad","fillText"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\coordinates\\src\\MouseCoordinateXV2.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { getMouseCanvas, GenericChartComponent } from \"@react-financial-charts/core\";\n\ninterface MouseCoordinateXV2Props {\n    readonly at?: \"bottom\" | \"top\";\n    readonly bg: {\n        readonly fill: string | ((moreProps: any, ctx: CanvasRenderingContext2D) => string);\n        readonly stroke: string | ((moreProps: any, ctx: CanvasRenderingContext2D) => string);\n        readonly strokeWidth: number | ((moreProps: any) => number);\n        readonly padding: {\n            left: number;\n            right: number;\n            top: number;\n            bottom: number;\n        };\n    };\n    readonly drawCoordinate: (ctx: CanvasRenderingContext2D, shape: any, props: any, moreProps: any) => void;\n    readonly displayFormat: (value: number) => string;\n    readonly dx: number;\n    readonly dy: number;\n    readonly orient?: \"bottom\" | \"top\";\n    readonly text: {\n        readonly fontStyle: string;\n        readonly fontWeight: string;\n        readonly fontFamily: string;\n        readonly fontSize: number;\n        readonly fill: string | ((moreProps: any, ctx: CanvasRenderingContext2D) => string);\n    };\n    readonly xPosition: (props: MouseCoordinateXV2Props, moreProps: any) => number;\n}\n\nexport class MouseCoordinateXV2 extends React.Component<MouseCoordinateXV2Props> {\n    public static defaultProps = {\n        xPosition: defaultXPosition,\n        drawCoordinate: defaultDrawCoordinate,\n        at: \"bottom\",\n        orient: \"bottom\",\n        text: {\n            fontStyle: \"\",\n            fontWeight: \"\",\n            fontFamily: \"-apple-system, system-ui, Roboto, 'Helvetica Neue', Ubuntu, sans-serif\",\n            fontSize: 13,\n            fill: \"rgb(35, 35, 35)\",\n        },\n        bg: {\n            fill: \"rgb(255, 255, 255)\",\n            stroke: \"rgb(35, 35, 35)\",\n            strokeWidth: 1,\n            padding: {\n                left: 7,\n                right: 7,\n                top: 4,\n                bottom: 4,\n            },\n        },\n        dx: 7,\n        dy: 7,\n    };\n\n    public render() {\n        return (\n            <GenericChartComponent\n                clip={false}\n                canvasDraw={this.drawOnCanvas}\n                canvasToDraw={getMouseCanvas}\n                drawOn={[\"mousemove\", \"pan\", \"drag\"]}\n            />\n        );\n    }\n\n    private readonly drawOnCanvas = (ctx: CanvasRenderingContext2D, moreProps: any) => {\n        const { show, currentItem } = moreProps;\n        const { drawCoordinate } = this.props;\n\n        if (show && currentItem != null) {\n            const shape = getXCoordinateInfo(ctx, this.props, moreProps);\n\n            drawCoordinate(ctx, shape, this.props, moreProps);\n        }\n    };\n}\n\nfunction defaultXPosition(props: MouseCoordinateXV2Props, moreProps: any) {\n    const { currentItem, xAccessor } = moreProps;\n\n    return xAccessor(currentItem);\n}\n\nfunction getXCoordinateInfo(ctx: CanvasRenderingContext2D, props: MouseCoordinateXV2Props, moreProps: any) {\n    const { at, displayFormat, text, xPosition } = props;\n\n    const xValue = xPosition(props, moreProps);\n\n    const {\n        xScale,\n        chartConfig: { height },\n    } = moreProps;\n\n    ctx.font = `${text.fontStyle} ${text.fontWeight} ${text.fontSize}px ${text.fontFamily}`;\n\n    const t = displayFormat(xValue);\n    const textWidth = ctx.measureText(t).width;\n\n    const y = at === \"bottom\" ? height : 0;\n    const x = Math.round(xScale(xValue));\n\n    return {\n        x,\n        y,\n        textWidth,\n        text: t,\n    };\n}\n\nfunction defaultDrawCoordinate(\n    ctx: CanvasRenderingContext2D,\n    shape: any,\n    props: MouseCoordinateXV2Props,\n    moreProps: any,\n) {\n    const { x, y, textWidth, text } = shape;\n\n    const {\n        orient,\n        dx,\n        dy,\n        bg: { padding, fill, stroke, strokeWidth },\n        text: { fontSize, fill: textFill },\n    } = props;\n\n    ctx.textAlign = \"center\";\n\n    const sign = orient === \"top\" ? -1 : 1;\n    const halfWidth = Math.round(textWidth / 2 + padding.right);\n    const height = Math.round(fontSize + padding.top + padding.bottom);\n\n    ctx.strokeStyle = typeof stroke === \"function\" ? stroke(moreProps, ctx) : stroke;\n    ctx.fillStyle = typeof fill === \"function\" ? fill(moreProps, ctx) : fill;\n    ctx.lineWidth = typeof strokeWidth === \"function\" ? strokeWidth(moreProps) : strokeWidth;\n\n    ctx.beginPath();\n\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + sign * dy);\n    ctx.lineTo(x + halfWidth, y + sign * dy);\n    ctx.lineTo(x + halfWidth, y + sign * (dy + height));\n    ctx.lineTo(x - halfWidth, y + sign * (dy + height));\n    ctx.lineTo(x - halfWidth, y + sign * dy);\n    ctx.lineTo(x - dx, y + sign * dy);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.fill();\n\n    ctx.beginPath();\n    ctx.fillStyle = typeof textFill === \"function\" ? textFill(moreProps, ctx) : textFill;\n\n    ctx.textBaseline = orient === \"top\" ? \"alphabetic\" : \"hanging\";\n    const pad = orient === \"top\" ? padding.bottom : padding.top;\n\n    ctx.fillText(text, x, y + sign * (dy + pad + 2));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}