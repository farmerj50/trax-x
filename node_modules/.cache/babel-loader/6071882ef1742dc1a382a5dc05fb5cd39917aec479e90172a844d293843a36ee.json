{"ast":null,"code":"import { d3Window, first, getTouchProps, last, MOUSEMOVE, mousePosition, MOUSEUP, sign, TOUCHEND, TOUCHMOVE, touchPosition } from \"@react-financial-charts/core\";\nimport { mean } from \"d3-array\";\nimport { select, pointer } from \"d3-selection\";\nimport * as React from \"react\";\nexport class AxisZoomCapture extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.clicked = false;\n    this.dragHappened = false;\n    this.handleDragEnd = e => {\n      const container = this.ref.current;\n      if (container === null) {\n        return;\n      }\n      if (!this.dragHappened) {\n        if (this.clicked) {\n          const mouseXY = pointer(e, container);\n          const {\n            onDoubleClick\n          } = this.props;\n          if (onDoubleClick !== undefined) {\n            onDoubleClick(e, mouseXY);\n          }\n        } else {\n          this.clicked = true;\n          setTimeout(() => {\n            this.clicked = false;\n          }, 300);\n        }\n      }\n      select(d3Window(container)).on(MOUSEMOVE, null).on(MOUSEUP, null).on(TOUCHMOVE, null).on(TOUCHEND, null);\n      this.setState({\n        startPosition: null\n      });\n    };\n    this.handleDrag = e => {\n      const container = this.ref.current;\n      if (container === null) {\n        return;\n      }\n      this.dragHappened = true;\n      const {\n        getMouseDelta,\n        inverted = true\n      } = this.props;\n      const {\n        startPosition\n      } = this.state;\n      if (startPosition !== null) {\n        const {\n          startScale\n        } = startPosition;\n        const {\n          startXY\n        } = startPosition;\n        const mouseXY = pointer(e, container);\n        const diff = getMouseDelta(startXY, mouseXY);\n        const center = mean(startScale.range());\n        if (center === undefined) {\n          return;\n        }\n        const tempRange = startScale.range().map(d => inverted ? d - sign(d - center) * diff : d + sign(d - center) * diff);\n        const newDomain = tempRange.map(startScale.invert);\n        if (sign(last(startScale.range()) - first(startScale.range())) === sign(last(tempRange) - first(tempRange))) {\n          const {\n            axisZoomCallback\n          } = this.props;\n          if (axisZoomCallback !== undefined) {\n            axisZoomCallback(newDomain);\n          }\n        }\n      }\n    };\n    this.handleDragStartTouch = event => {\n      const container = this.ref.current;\n      if (container === null) {\n        return;\n      }\n      this.dragHappened = false;\n      const {\n        getScale,\n        getMoreProps\n      } = this.props;\n      const allProps = getMoreProps();\n      const startScale = getScale(allProps);\n      if (event.touches.length === 1 && startScale.invert !== undefined) {\n        select(d3Window(container)).on(TOUCHMOVE, this.handleDrag).on(TOUCHEND, this.handleDragEnd);\n        const startXY = touchPosition(getTouchProps(event.touches[0]), event);\n        this.setState({\n          startPosition: {\n            startScale,\n            startXY\n          }\n        });\n      }\n    };\n    this.handleDragStartMouse = event => {\n      event.preventDefault();\n      const container = this.ref.current;\n      if (container === null) {\n        return;\n      }\n      this.dragHappened = false;\n      const {\n        getScale,\n        getMoreProps\n      } = this.props;\n      const allProps = getMoreProps();\n      const startScale = getScale(allProps);\n      if (startScale.invert !== undefined) {\n        select(d3Window(container)).on(MOUSEMOVE, this.handleDrag, false).on(MOUSEUP, this.handleDragEnd, false);\n        const startXY = mousePosition(event);\n        this.setState({\n          startPosition: {\n            startXY,\n            startScale\n          }\n        });\n      }\n    };\n    this.handleRightClick = event => {\n      event.stopPropagation();\n      event.preventDefault();\n      const container = this.ref.current;\n      if (container === null) {\n        return;\n      }\n      const {\n        onContextMenu\n      } = this.props;\n      if (onContextMenu === undefined) {\n        return;\n      }\n      const defaultRect = container.getBoundingClientRect();\n      const mouseXY = mousePosition(event, defaultRect);\n      select(d3Window(container)).on(MOUSEMOVE, null).on(MOUSEUP, null);\n      this.setState({\n        startPosition: null\n      });\n      onContextMenu(event, mouseXY);\n    };\n    this.state = {\n      startPosition: null\n    };\n  }\n  render() {\n    const {\n      bg,\n      className,\n      zoomCursorClassName\n    } = this.props;\n    const cursor = this.state.startPosition !== null ? zoomCursorClassName : \"react-financial-charts-default-cursor\";\n    return React.createElement(\"rect\", {\n      className: `react-financial-charts-enable-interaction ${cursor} ${className}`,\n      ref: this.ref,\n      x: bg.x,\n      y: bg.y,\n      opacity: 0,\n      height: bg.h,\n      width: bg.w,\n      onContextMenu: this.handleRightClick,\n      onMouseDown: this.handleDragStartMouse,\n      onTouchStart: this.handleDragStartTouch\n    });\n  }\n}","map":{"version":3,"names":["d3Window","first","getTouchProps","last","MOUSEMOVE","mousePosition","MOUSEUP","sign","TOUCHEND","TOUCHMOVE","touchPosition","mean","select","pointer","React","AxisZoomCapture","Component","constructor","props","ref","createRef","clicked","dragHappened","handleDragEnd","e","container","current","mouseXY","onDoubleClick","undefined","setTimeout","on","setState","startPosition","handleDrag","getMouseDelta","inverted","state","startScale","startXY","diff","center","range","tempRange","map","d","newDomain","invert","axisZoomCallback","handleDragStartTouch","event","getScale","getMoreProps","allProps","touches","length","handleDragStartMouse","preventDefault","handleRightClick","stopPropagation","onContextMenu","defaultRect","getBoundingClientRect","render","bg","className","zoomCursorClassName","cursor","createElement","x","y","opacity","height","h","width","w","onMouseDown","onTouchStart"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\axes\\src\\AxisZoomCapture.tsx"],"sourcesContent":["import {\n    d3Window,\n    first,\n    getTouchProps,\n    last,\n    MOUSEMOVE,\n    mousePosition,\n    MOUSEUP,\n    sign,\n    TOUCHEND,\n    TOUCHMOVE,\n    touchPosition,\n} from \"@react-financial-charts/core\";\nimport { mean } from \"d3-array\";\nimport { ScaleContinuousNumeric } from \"d3-scale\";\nimport { select, pointer } from \"d3-selection\";\nimport * as React from \"react\";\n\nexport interface AxisZoomCaptureProps {\n    readonly axisZoomCallback?: (domain: number[]) => void;\n    readonly bg: {\n        h: number;\n        x: number;\n        w: number;\n        y: number;\n    };\n    readonly className?: string;\n    readonly getMoreProps: () => any;\n    readonly getScale: (moreProps: any) => ScaleContinuousNumeric<number, number>;\n    readonly getMouseDelta: (startXY: [number, number], mouseXY: [number, number]) => number;\n    readonly innerTickSize?: number;\n    readonly inverted?: boolean;\n    readonly onDoubleClick?: (e: React.MouseEvent, mousePosition: [number, number]) => void;\n    readonly onContextMenu?: (e: React.MouseEvent, mousePosition: [number, number]) => void;\n    readonly outerTickSize?: number;\n    readonly showDomain?: boolean;\n    readonly showTicks?: boolean;\n    readonly tickFormat?: (datum: number) => string;\n    readonly tickPadding?: number;\n    readonly tickSize?: number;\n    readonly ticks?: number;\n    readonly tickValues?: number[];\n    readonly zoomCursorClassName?: string;\n}\n\ninterface AxisZoomCaptureState {\n    startPosition: { startScale: ScaleContinuousNumeric<number, number>; startXY: [number, number] } | null;\n}\n\nexport class AxisZoomCapture extends React.Component<AxisZoomCaptureProps, AxisZoomCaptureState> {\n    private readonly ref = React.createRef<SVGRectElement>();\n    private clicked = false;\n    private dragHappened = false;\n\n    public constructor(props: AxisZoomCaptureProps) {\n        super(props);\n\n        this.state = {\n            startPosition: null,\n        };\n    }\n\n    public render() {\n        const { bg, className, zoomCursorClassName } = this.props;\n\n        const cursor =\n            this.state.startPosition !== null ? zoomCursorClassName : \"react-financial-charts-default-cursor\";\n\n        return (\n            <rect\n                className={`react-financial-charts-enable-interaction ${cursor} ${className}`}\n                ref={this.ref}\n                x={bg.x}\n                y={bg.y}\n                opacity={0}\n                height={bg.h}\n                width={bg.w}\n                onContextMenu={this.handleRightClick}\n                onMouseDown={this.handleDragStartMouse}\n                onTouchStart={this.handleDragStartTouch}\n            />\n        );\n    }\n\n    private readonly handleDragEnd = (e: any) => {\n        const container = this.ref.current;\n        if (container === null) {\n            return;\n        }\n\n        if (!this.dragHappened) {\n            if (this.clicked) {\n                const mouseXY = pointer(e, container);\n                const { onDoubleClick } = this.props;\n                if (onDoubleClick !== undefined) {\n                    onDoubleClick(e, mouseXY);\n                }\n            } else {\n                this.clicked = true;\n                setTimeout(() => {\n                    this.clicked = false;\n                }, 300);\n            }\n        }\n\n        select(d3Window(container)).on(MOUSEMOVE, null).on(MOUSEUP, null).on(TOUCHMOVE, null).on(TOUCHEND, null);\n\n        this.setState({\n            startPosition: null,\n        });\n    };\n\n    private readonly handleDrag = (e: any) => {\n        const container = this.ref.current;\n        if (container === null) {\n            return;\n        }\n        this.dragHappened = true;\n\n        const { getMouseDelta, inverted = true } = this.props;\n\n        const { startPosition } = this.state;\n        if (startPosition !== null) {\n            const { startScale } = startPosition;\n            const { startXY } = startPosition;\n\n            const mouseXY = pointer(e, container);\n\n            const diff = getMouseDelta(startXY, mouseXY);\n\n            const center = mean(startScale.range());\n            if (center === undefined) {\n                return;\n            }\n\n            const tempRange = startScale\n                .range()\n                .map((d) => (inverted ? d - sign(d - center) * diff : d + sign(d - center) * diff));\n\n            const newDomain = tempRange.map(startScale.invert);\n\n            if (\n                sign(last(startScale.range()) - first(startScale.range())) === sign(last(tempRange) - first(tempRange))\n            ) {\n                const { axisZoomCallback } = this.props;\n                if (axisZoomCallback !== undefined) {\n                    axisZoomCallback(newDomain);\n                }\n            }\n        }\n    };\n\n    private readonly handleDragStartTouch = (event: React.TouchEvent<SVGRectElement>) => {\n        const container = this.ref.current;\n        if (container === null) {\n            return;\n        }\n\n        this.dragHappened = false;\n\n        const { getScale, getMoreProps } = this.props;\n        const allProps = getMoreProps();\n        const startScale = getScale(allProps);\n\n        if (event.touches.length === 1 && startScale.invert !== undefined) {\n            select(d3Window(container)).on(TOUCHMOVE, this.handleDrag).on(TOUCHEND, this.handleDragEnd);\n\n            const startXY = touchPosition(getTouchProps(event.touches[0]), event);\n\n            this.setState({\n                startPosition: {\n                    startScale,\n                    startXY,\n                },\n            });\n        }\n    };\n\n    private readonly handleDragStartMouse = (event: React.MouseEvent<SVGRectElement, MouseEvent>) => {\n        event.preventDefault();\n\n        const container = this.ref.current;\n        if (container === null) {\n            return;\n        }\n\n        this.dragHappened = false;\n\n        const { getScale, getMoreProps } = this.props;\n        const allProps = getMoreProps();\n        const startScale = getScale(allProps);\n\n        if (startScale.invert !== undefined) {\n            select(d3Window(container)).on(MOUSEMOVE, this.handleDrag, false).on(MOUSEUP, this.handleDragEnd, false);\n\n            const startXY = mousePosition(event);\n\n            this.setState({\n                startPosition: {\n                    startXY,\n                    startScale,\n                },\n            });\n        }\n    };\n\n    private readonly handleRightClick = (event: React.MouseEvent<SVGRectElement, MouseEvent>) => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const container = this.ref.current;\n        if (container === null) {\n            return;\n        }\n\n        const { onContextMenu } = this.props;\n        if (onContextMenu === undefined) {\n            return;\n        }\n\n        const defaultRect = container.getBoundingClientRect();\n        const mouseXY = mousePosition(event, defaultRect);\n\n        select(d3Window(container)).on(MOUSEMOVE, null).on(MOUSEUP, null);\n\n        this.setState({\n            startPosition: null,\n        });\n\n        onContextMenu(event, mouseXY);\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}