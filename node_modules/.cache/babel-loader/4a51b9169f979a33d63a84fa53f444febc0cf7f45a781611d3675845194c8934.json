{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabby\\\\trax-x\\\\src\\\\components\\\\CandlestickChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { createChart } from \"lightweight-charts\";\nimport _ from \"lodash\"; // For throttling API calls\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CandlestickChart = ({\n  ticker,\n  entryPoint,\n  exitPoint,\n  additionalData\n}) => {\n  _s();\n  const chartContainerRef = useRef(null);\n  const priceLineRef = useRef({});\n  const chartRef = useRef(null); // Reference for the chart instance\n  const isMounted = useRef(true); // Track if the component is mounted\n  const [isChartVisible, setChartVisible] = useState(true); // Track chart visibility\n\n  // Add or update price lines\n  const addOrUpdatePriceLine = (key, price, color, title) => {\n    if (priceLineRef.current[key]) {\n      priceLineRef.current[key].applyOptions({\n        price,\n        color,\n        title\n      });\n    } else if (chartRef.current) {\n      const series = chartRef.current.getSeries()[0]; // Assumes first series is candlestick\n      priceLineRef.current[key] = series.createPriceLine({\n        price,\n        color,\n        lineWidth: 2,\n        title\n      });\n    }\n  };\n  useEffect(() => {\n    isMounted.current = true;\n\n    // Initialize the chart\n    const chart = createChart(chartContainerRef.current, {\n      width: chartContainerRef.current.clientWidth || 700,\n      height: 400,\n      layout: {\n        backgroundColor: \"#ffffff\",\n        textColor: \"#000000\"\n      },\n      grid: {\n        vertLines: {\n          color: \"#eeeeee\"\n        },\n        horzLines: {\n          color: \"#eeeeee\"\n        }\n      },\n      priceScale: {\n        borderColor: \"#cccccc\"\n      },\n      timeScale: {\n        borderColor: \"#cccccc\"\n      }\n    });\n    const candlestickSeries = chart.addCandlestickSeries();\n    chartRef.current = chart; // Store the chart instance\n\n    const fetchInitialData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${ticker}`);\n        const data = await response.json();\n        if (data.dates && data.open && data.high && data.low && data.close) {\n          const formattedData = data.dates.map((date, index) => ({\n            time: date,\n            open: data.open[index],\n            high: data.high[index],\n            low: data.low[index],\n            close: data.close[index]\n          }));\n          candlestickSeries.setData(formattedData);\n\n          // Add initial price lines\n          const currentPrice = formattedData[formattedData.length - 1].close;\n          addOrUpdatePriceLine(\"currentPriceLine\", currentPrice, \"blue\", `Current: ${currentPrice.toFixed(2)}`);\n          addOrUpdatePriceLine(\"entryPriceLine\", entryPoint, \"green\", `Entry: ${entryPoint.toFixed(2)}`);\n          addOrUpdatePriceLine(\"exitPriceLine\", exitPoint, \"red\", `Exit: ${exitPoint.toFixed(2)}`);\n        }\n      } catch (error) {\n        if (isMounted.current) {\n          console.error(\"Error fetching initial data:\", error);\n        }\n      }\n    };\n    fetchInitialData();\n    const throttledUpdateChart = _.throttle(async () => {\n      if (!chartRef.current) return; // Skip if chart is disposed\n\n      try {\n        const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${ticker}`);\n        const data = await response.json();\n        if (data.dates && data.open && data.high && data.low && data.close) {\n          const latestData = {\n            time: data.dates[data.dates.length - 1],\n            open: data.open[data.open.length - 1],\n            high: data.high[data.high.length - 1],\n            low: data.low[data.low.length - 1],\n            close: data.close[data.close.length - 1]\n          };\n          candlestickSeries.update(latestData);\n          const currentPrice = latestData.close;\n          addOrUpdatePriceLine(\"currentPriceLine\", currentPrice, \"blue\", `Current: ${currentPrice.toFixed(2)}`);\n        }\n      } catch (error) {\n        if (isMounted.current) {\n          console.error(\"Error updating chart:\", error);\n        }\n      }\n    }, 5000); // Throttle updates to every 5 seconds\n\n    const intervalId = setInterval(() => {\n      if (isChartVisible && isMounted.current) {\n        throttledUpdateChart();\n      }\n    }, 5000);\n    const handleResize = () => {\n      if (!chartRef.current) return; // Skip if chart is disposed\n      chartRef.current.applyOptions({\n        width: chartContainerRef.current.clientWidth\n      });\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      isMounted.current = false; // Mark component as unmounted\n      clearInterval(intervalId);\n      window.removeEventListener(\"resize\", handleResize);\n      if (chartRef.current) {\n        chartRef.current.remove();\n        chartRef.current = null;\n      }\n    };\n  }, [ticker, entryPoint, exitPoint, isChartVisible]);\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      setChartVisible(entry.isIntersecting);\n    });\n    observer.observe(chartContainerRef.current);\n    return () => observer.disconnect();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"chart-title\",\n      children: ticker\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chartContainerRef,\n      className: \"chart-wrapper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: additionalData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Entry Point:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), \" $\", entryPoint.toFixed(2), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 66\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Exit Point:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), \" $\", exitPoint.toFixed(2), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 64\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Current Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), \" Displayed on chart\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(CandlestickChart, \"JFTo9xI7wvU1z/ejVwddp64fCn4=\");\n_c = CandlestickChart;\nexport default CandlestickChart;\nvar _c;\n$RefreshReg$(_c, \"CandlestickChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","createChart","_","jsxDEV","_jsxDEV","CandlestickChart","ticker","entryPoint","exitPoint","additionalData","_s","chartContainerRef","priceLineRef","chartRef","isMounted","isChartVisible","setChartVisible","addOrUpdatePriceLine","key","price","color","title","current","applyOptions","series","getSeries","createPriceLine","lineWidth","chart","width","clientWidth","height","layout","backgroundColor","textColor","grid","vertLines","horzLines","priceScale","borderColor","timeScale","candlestickSeries","addCandlestickSeries","fetchInitialData","response","fetch","data","json","dates","open","high","low","close","formattedData","map","date","index","time","setData","currentPrice","length","toFixed","error","console","throttledUpdateChart","throttle","latestData","update","intervalId","setInterval","handleResize","window","addEventListener","clearInterval","removeEventListener","remove","observer","IntersectionObserver","entry","isIntersecting","observe","disconnect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/gabby/trax-x/src/components/CandlestickChart.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { createChart } from \"lightweight-charts\";\r\nimport _ from \"lodash\"; // For throttling API calls\r\n\r\nconst CandlestickChart = ({ ticker, entryPoint, exitPoint, additionalData }) => {\r\n  const chartContainerRef = useRef(null);\r\n  const priceLineRef = useRef({});\r\n  const chartRef = useRef(null); // Reference for the chart instance\r\n  const isMounted = useRef(true); // Track if the component is mounted\r\n  const [isChartVisible, setChartVisible] = useState(true); // Track chart visibility\r\n\r\n  // Add or update price lines\r\n  const addOrUpdatePriceLine = (key, price, color, title) => {\r\n    if (priceLineRef.current[key]) {\r\n      priceLineRef.current[key].applyOptions({\r\n        price,\r\n        color,\r\n        title,\r\n      });\r\n    } else if (chartRef.current) {\r\n      const series = chartRef.current.getSeries()[0]; // Assumes first series is candlestick\r\n      priceLineRef.current[key] = series.createPriceLine({\r\n        price,\r\n        color,\r\n        lineWidth: 2,\r\n        title,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n\r\n    // Initialize the chart\r\n    const chart = createChart(chartContainerRef.current, {\r\n      width: chartContainerRef.current.clientWidth || 700,\r\n      height: 400,\r\n      layout: {\r\n        backgroundColor: \"#ffffff\",\r\n        textColor: \"#000000\",\r\n      },\r\n      grid: {\r\n        vertLines: { color: \"#eeeeee\" },\r\n        horzLines: { color: \"#eeeeee\" },\r\n      },\r\n      priceScale: { borderColor: \"#cccccc\" },\r\n      timeScale: { borderColor: \"#cccccc\" },\r\n    });\r\n\r\n    const candlestickSeries = chart.addCandlestickSeries();\r\n    chartRef.current = chart; // Store the chart instance\r\n\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${ticker}`);\r\n        const data = await response.json();\r\n\r\n        if (data.dates && data.open && data.high && data.low && data.close) {\r\n          const formattedData = data.dates.map((date, index) => ({\r\n            time: date,\r\n            open: data.open[index],\r\n            high: data.high[index],\r\n            low: data.low[index],\r\n            close: data.close[index],\r\n          }));\r\n          candlestickSeries.setData(formattedData);\r\n\r\n          // Add initial price lines\r\n          const currentPrice = formattedData[formattedData.length - 1].close;\r\n\r\n          addOrUpdatePriceLine(\"currentPriceLine\", currentPrice, \"blue\", `Current: ${currentPrice.toFixed(2)}`);\r\n          addOrUpdatePriceLine(\"entryPriceLine\", entryPoint, \"green\", `Entry: ${entryPoint.toFixed(2)}`);\r\n          addOrUpdatePriceLine(\"exitPriceLine\", exitPoint, \"red\", `Exit: ${exitPoint.toFixed(2)}`);\r\n        }\r\n      } catch (error) {\r\n        if (isMounted.current) {\r\n          console.error(\"Error fetching initial data:\", error);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchInitialData();\r\n\r\n    const throttledUpdateChart = _.throttle(async () => {\r\n      if (!chartRef.current) return; // Skip if chart is disposed\r\n\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${ticker}`);\r\n        const data = await response.json();\r\n\r\n        if (data.dates && data.open && data.high && data.low && data.close) {\r\n          const latestData = {\r\n            time: data.dates[data.dates.length - 1],\r\n            open: data.open[data.open.length - 1],\r\n            high: data.high[data.high.length - 1],\r\n            low: data.low[data.low.length - 1],\r\n            close: data.close[data.close.length - 1],\r\n          };\r\n          candlestickSeries.update(latestData);\r\n\r\n          const currentPrice = latestData.close;\r\n          addOrUpdatePriceLine(\"currentPriceLine\", currentPrice, \"blue\", `Current: ${currentPrice.toFixed(2)}`);\r\n        }\r\n      } catch (error) {\r\n        if (isMounted.current) {\r\n          console.error(\"Error updating chart:\", error);\r\n        }\r\n      }\r\n    }, 5000); // Throttle updates to every 5 seconds\r\n\r\n    const intervalId = setInterval(() => {\r\n      if (isChartVisible && isMounted.current) {\r\n        throttledUpdateChart();\r\n      }\r\n    }, 5000);\r\n\r\n    const handleResize = () => {\r\n      if (!chartRef.current) return; // Skip if chart is disposed\r\n      chartRef.current.applyOptions({ width: chartContainerRef.current.clientWidth });\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      isMounted.current = false; // Mark component as unmounted\r\n      clearInterval(intervalId);\r\n      window.removeEventListener(\"resize\", handleResize);\r\n      if (chartRef.current) {\r\n        chartRef.current.remove();\r\n        chartRef.current = null;\r\n      }\r\n    };\r\n  }, [ticker, entryPoint, exitPoint, isChartVisible]);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(([entry]) => {\r\n      setChartVisible(entry.isIntersecting);\r\n    });\r\n\r\n    observer.observe(chartContainerRef.current);\r\n\r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <h3 className=\"chart-title\">{ticker}</h3>\r\n      <div ref={chartContainerRef} className=\"chart-wrapper\"></div>\r\n      <div className=\"chart-info\">\r\n        <p>{additionalData}</p>\r\n        <p>\r\n          <strong>Entry Point:</strong> ${entryPoint.toFixed(2)} <br />\r\n          <strong>Exit Point:</strong> ${exitPoint.toFixed(2)} <br />\r\n          <strong>Current Price:</strong> Displayed on chart\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CandlestickChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}