{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { extent as d3Extent, min, max } from \"d3-array\";\nimport { head, last, isDefined, isNotDefined, clearCanvas, shallowEqual, identity, noop, functor, getLogger } from \"./utils\";\n\n/* eslint-disable no-unused-vars */\nimport { mouseBasedZoomAnchor, lastVisibleItemBasedZoomAnchor, rightDomainBasedZoomAnchor } from \"./utils/zoomBehavior\";\n/* eslint-enable no-unused-vars */\n\nimport { getNewChartConfig, getChartConfigWithUpdatedYScales, getCurrentCharts, getCurrentItem } from \"./utils/ChartDataUtil\";\nimport EventCapture from \"./EventCapture\";\nimport CanvasContainer from \"./CanvasContainer\";\nimport evaluator from \"./scale/evaluator\";\nvar log = getLogger(\"ChartCanvas\");\nvar CANDIDATES_FOR_RESET = [\"seriesName\"];\nfunction shouldResetChart(thisProps, nextProps) {\n  return !CANDIDATES_FOR_RESET.every(function (key) {\n    var result = shallowEqual(thisProps[key], nextProps[key]);\n    // console.log(key, result);\n    return result;\n  });\n}\nfunction getCursorStyle() {\n  var tooltipStyle = \"\\n\\t.react-stockcharts-grabbing-cursor {\\n\\t\\tpointer-events: all;\\n\\t\\tcursor: -moz-grabbing;\\n\\t\\tcursor: -webkit-grabbing;\\n\\t\\tcursor: grabbing;\\n\\t}\\n\\t.react-stockcharts-crosshair-cursor {\\n\\t\\tpointer-events: all;\\n\\t\\tcursor: crosshair;\\n\\t}\\n\\t.react-stockcharts-tooltip-hover {\\n\\t\\tpointer-events: all;\\n\\t\\tcursor: pointer;\\n\\t}\\n\\t.react-stockcharts-avoid-interaction {\\n\\t\\tpointer-events: none;\\n\\t}\\n\\t.react-stockcharts-enable-interaction {\\n\\t\\tpointer-events: all;\\n\\t}\\n\\t.react-stockcharts-tooltip {\\n\\t\\tpointer-events: all;\\n\\t\\tcursor: pointer;\\n\\t}\\n\\t.react-stockcharts-default-cursor {\\n\\t\\tcursor: default;\\n\\t}\\n\\t.react-stockcharts-move-cursor {\\n\\t\\tcursor: move;\\n\\t}\\n\\t.react-stockcharts-pointer-cursor {\\n\\t\\tcursor: pointer;\\n\\t}\\n\\t.react-stockcharts-ns-resize-cursor {\\n\\t\\tcursor: ns-resize;\\n\\t}\\n\\t.react-stockcharts-ew-resize-cursor {\\n\\t\\tcursor: ew-resize;\\n\\t}\";\n  return React.createElement(\"style\", {\n    type: \"text/css\"\n  }, tooltipStyle);\n}\nfunction getDimensions(props) {\n  return {\n    height: props.height - props.margin.top - props.margin.bottom,\n    width: props.width - props.margin.left - props.margin.right\n  };\n}\nfunction getXScaleDirection(flipXScale) {\n  return flipXScale ? -1 : 1;\n}\nfunction calculateFullData(props) {\n  var fullData = props.data,\n    plotFull = props.plotFull,\n    xScale = props.xScale,\n    clamp = props.clamp,\n    pointsPerPxThreshold = props.pointsPerPxThreshold,\n    flipXScale = props.flipXScale;\n  var xAccessor = props.xAccessor,\n    displayXAccessor = props.displayXAccessor,\n    minPointsPerPxThreshold = props.minPointsPerPxThreshold;\n  var useWholeData = isDefined(plotFull) ? plotFull : xAccessor === identity;\n  var _evaluator = evaluator({\n      xScale: xScale,\n      useWholeData: useWholeData,\n      clamp: clamp,\n      pointsPerPxThreshold: pointsPerPxThreshold,\n      minPointsPerPxThreshold: minPointsPerPxThreshold,\n      flipXScale: flipXScale\n    }),\n    filterData = _evaluator.filterData;\n  return {\n    xAccessor: xAccessor,\n    displayXAccessor: displayXAccessor || xAccessor,\n    xScale: xScale.copy(),\n    fullData: fullData,\n    filterData: filterData\n  };\n}\nfunction resetChart(props) {\n  var firstCalculation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!firstCalculation) log(\"CHART RESET\");\n  }\n  var state = calculateState(props);\n  var xAccessor = state.xAccessor,\n    displayXAccessor = state.displayXAccessor,\n    fullData = state.fullData;\n  var initialPlotData = state.plotData,\n    xScale = state.xScale;\n  var postCalculator = props.postCalculator,\n    children = props.children;\n  var plotData = postCalculator(initialPlotData);\n  var dimensions = getDimensions(props);\n  var chartConfig = getChartConfigWithUpdatedYScales(getNewChartConfig(dimensions, children), {\n    plotData: plotData,\n    xAccessor: xAccessor,\n    displayXAccessor: displayXAccessor,\n    fullData: fullData\n  }, xScale.domain());\n  return _extends({}, state, {\n    xScale: xScale,\n    plotData: plotData,\n    chartConfig: chartConfig\n  });\n}\nfunction updateChart(newState, initialXScale, props, lastItemWasVisible, initialChartConfig) {\n  var fullData = newState.fullData,\n    xScale = newState.xScale,\n    xAccessor = newState.xAccessor,\n    displayXAccessor = newState.displayXAccessor,\n    filterData = newState.filterData;\n  var lastItem = last(fullData);\n  var _initialXScale$domain = initialXScale.domain(),\n    _initialXScale$domain2 = _slicedToArray(_initialXScale$domain, 2),\n    start = _initialXScale$domain2[0],\n    end = _initialXScale$domain2[1];\n  if (process.env.NODE_ENV !== \"production\") {\n    log(\"TRIVIAL CHANGE\");\n  }\n  var postCalculator = props.postCalculator,\n    children = props.children,\n    padding = props.padding,\n    flipXScale = props.flipXScale;\n  var maintainPointsPerPixelOnResize = props.maintainPointsPerPixelOnResize;\n  var direction = getXScaleDirection(flipXScale);\n  var dimensions = getDimensions(props);\n  var updatedXScale = setXRange(xScale, dimensions, padding, direction);\n\n  // console.log(\"lastItemWasVisible =\", lastItemWasVisible, end, xAccessor(lastItem), end >= xAccessor(lastItem));\n  var initialPlotData = void 0;\n  if (!lastItemWasVisible || end >= xAccessor(lastItem)) {\n    // resize comes here...\n    var _initialXScale$range = initialXScale.range(),\n      _initialXScale$range2 = _slicedToArray(_initialXScale$range, 2),\n      rangeStart = _initialXScale$range2[0],\n      rangeEnd = _initialXScale$range2[1];\n    var _updatedXScale$range = updatedXScale.range(),\n      _updatedXScale$range2 = _slicedToArray(_updatedXScale$range, 2),\n      newRangeStart = _updatedXScale$range2[0],\n      newRangeEnd = _updatedXScale$range2[1];\n    var newDomainExtent = (newRangeEnd - newRangeStart) / (rangeEnd - rangeStart) * (end - start);\n    var newStart = maintainPointsPerPixelOnResize ? end - newDomainExtent : start;\n    var lastItemX = initialXScale(xAccessor(lastItem));\n    // console.log(\"pointsPerPixel => \", newStart, start, end, updatedXScale(end));\n    var response = filterData(fullData, [newStart, end], xAccessor, updatedXScale, {\n      fallbackStart: start,\n      fallbackEnd: {\n        lastItem: lastItem,\n        lastItemX: lastItemX\n      }\n    });\n    initialPlotData = response.plotData;\n    updatedXScale.domain(response.domain);\n    // console.log(\"HERE!!!!!\", start, end);\n  } else if (lastItemWasVisible && end < xAccessor(lastItem)) {\n    // this is when a new item is added and last item was visible\n    // so slide over and show the new item also\n\n    // get plotData between [xAccessor(l) - (end - start), xAccessor(l)] and DO change the domain\n    var dx = initialXScale(xAccessor(lastItem)) - initialXScale.range()[1];\n    var _initialXScale$range$ = initialXScale.range().map(function (x) {\n        return x + dx;\n      }).map(initialXScale.invert),\n      _initialXScale$range$2 = _slicedToArray(_initialXScale$range$, 2),\n      _newStart = _initialXScale$range$2[0],\n      newEnd = _initialXScale$range$2[1];\n    var _response = filterData(fullData, [_newStart, newEnd], xAccessor, updatedXScale);\n    initialPlotData = _response.plotData;\n    updatedXScale.domain(_response.domain); // if last item was visible, then shift\n  }\n  // plotData = getDataOfLength(fullData, showingInterval, plotData.length)\n  var plotData = postCalculator(initialPlotData);\n  var chartConfig = getChartConfigWithUpdatedYScales(getNewChartConfig(dimensions, children, initialChartConfig), {\n    plotData: plotData,\n    xAccessor: xAccessor,\n    displayXAccessor: displayXAccessor,\n    fullData: fullData\n  }, updatedXScale.domain());\n  return {\n    xScale: updatedXScale,\n    xAccessor: xAccessor,\n    chartConfig: chartConfig,\n    plotData: plotData,\n    fullData: fullData,\n    filterData: filterData\n  };\n}\nfunction calculateState(props) {\n  var inputXAccesor = props.xAccessor,\n    xExtentsProp = props.xExtents,\n    data = props.data,\n    padding = props.padding,\n    flipXScale = props.flipXScale;\n  if (process.env.NODE_ENV !== \"production\" && isDefined(props.xScale.invert)) {\n    for (var i = 1; i < data.length; i++) {\n      var prev = data[i - 1];\n      var curr = data[i];\n      if (inputXAccesor(prev) > inputXAccesor(curr)) {\n        throw new Error(\"'data' is not sorted on 'xAccessor', send 'data' sorted in ascending order of 'xAccessor'\");\n      }\n    }\n  }\n  var direction = getXScaleDirection(flipXScale);\n  var dimensions = getDimensions(props);\n  var extent = typeof xExtentsProp === \"function\" ? xExtentsProp(data) : d3Extent(xExtentsProp.map(function (d) {\n    return functor(d);\n  }).map(function (each) {\n    return each(data, inputXAccesor);\n  }));\n  var _calculateFullData = calculateFullData(props),\n    xAccessor = _calculateFullData.xAccessor,\n    displayXAccessor = _calculateFullData.displayXAccessor,\n    xScale = _calculateFullData.xScale,\n    fullData = _calculateFullData.fullData,\n    filterData = _calculateFullData.filterData;\n  var updatedXScale = setXRange(xScale, dimensions, padding, direction);\n  var _filterData = filterData(fullData, extent, inputXAccesor, updatedXScale),\n    plotData = _filterData.plotData,\n    domain = _filterData.domain;\n  if (process.env.NODE_ENV !== \"production\" && plotData.length <= 1) {\n    throw new Error(\"Showing \" + plotData.length + \" datapoints, review the 'xExtents' prop of ChartCanvas\");\n  }\n  return {\n    plotData: plotData,\n    xScale: updatedXScale.domain(domain),\n    xAccessor: xAccessor,\n    displayXAccessor: displayXAccessor,\n    fullData: fullData,\n    filterData: filterData\n  };\n}\nfunction setXRange(xScale, dimensions, padding) {\n  var direction = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  if (xScale.rangeRoundPoints) {\n    if (isNaN(padding)) throw new Error(\"padding has to be a number for ordinal scale\");\n    xScale.rangeRoundPoints([0, dimensions.width], padding);\n  } else if (xScale.padding) {\n    if (isNaN(padding)) throw new Error(\"padding has to be a number for ordinal scale\");\n    xScale.range([0, dimensions.width]);\n    xScale.padding(padding / 2);\n  } else {\n    var _ref = isNaN(padding) ? padding : {\n        left: padding,\n        right: padding\n      },\n      left = _ref.left,\n      right = _ref.right;\n    if (direction > 0) {\n      xScale.range([left, dimensions.width - right]);\n    } else {\n      xScale.range([dimensions.width - right, left]);\n    }\n  }\n  return xScale;\n}\nfunction pinchCoordinates(pinch) {\n  var touch1Pos = pinch.touch1Pos,\n    touch2Pos = pinch.touch2Pos;\n  return {\n    topLeft: [Math.min(touch1Pos[0], touch2Pos[0]), Math.min(touch1Pos[1], touch2Pos[1])],\n    bottomRight: [Math.max(touch1Pos[0], touch2Pos[0]), Math.max(touch1Pos[1], touch2Pos[1])]\n  };\n}\nvar ChartCanvas = function (_Component) {\n  _inherits(ChartCanvas, _Component);\n  function ChartCanvas() {\n    _classCallCheck(this, ChartCanvas);\n    var _this = _possibleConstructorReturn(this, (ChartCanvas.__proto__ || Object.getPrototypeOf(ChartCanvas)).call(this));\n    _this.getDataInfo = _this.getDataInfo.bind(_this);\n    _this.getCanvasContexts = _this.getCanvasContexts.bind(_this);\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleMouseEnter = _this.handleMouseEnter.bind(_this);\n    _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);\n    _this.handleZoom = _this.handleZoom.bind(_this);\n    _this.handlePinchZoom = _this.handlePinchZoom.bind(_this);\n    _this.handlePinchZoomEnd = _this.handlePinchZoomEnd.bind(_this);\n    _this.handlePan = _this.handlePan.bind(_this);\n    _this.handlePanEnd = _this.handlePanEnd.bind(_this);\n    _this.handleClick = _this.handleClick.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleDoubleClick = _this.handleDoubleClick.bind(_this);\n    _this.handleContextMenu = _this.handleContextMenu.bind(_this);\n    _this.handleDragStart = _this.handleDragStart.bind(_this);\n    _this.handleDrag = _this.handleDrag.bind(_this);\n    _this.handleDragEnd = _this.handleDragEnd.bind(_this);\n    _this.panHelper = _this.panHelper.bind(_this);\n    _this.pinchZoomHelper = _this.pinchZoomHelper.bind(_this);\n    _this.xAxisZoom = _this.xAxisZoom.bind(_this);\n    _this.yAxisZoom = _this.yAxisZoom.bind(_this);\n    _this.resetYDomain = _this.resetYDomain.bind(_this);\n    _this.calculateStateForDomain = _this.calculateStateForDomain.bind(_this);\n    _this.generateSubscriptionId = _this.generateSubscriptionId.bind(_this);\n    _this.draw = _this.draw.bind(_this);\n    _this.redraw = _this.redraw.bind(_this);\n    _this.getAllPanConditions = _this.getAllPanConditions.bind(_this);\n    _this.subscriptions = [];\n    _this.subscribe = _this.subscribe.bind(_this);\n    _this.unsubscribe = _this.unsubscribe.bind(_this);\n    _this.amIOnTop = _this.amIOnTop.bind(_this);\n    _this.saveEventCaptureNode = _this.saveEventCaptureNode.bind(_this);\n    _this.saveCanvasContainerNode = _this.saveCanvasContainerNode.bind(_this);\n    _this.setCursorClass = _this.setCursorClass.bind(_this);\n    _this.getMutableState = _this.getMutableState.bind(_this);\n    // this.canvasDrawCallbackList = [];\n    _this.interactiveState = [];\n    _this.panInProgress = false;\n    _this.state = {};\n    _this.mutableState = {};\n    _this.lastSubscriptionId = 0;\n    return _this;\n  }\n  _createClass(ChartCanvas, [{\n    key: \"saveEventCaptureNode\",\n    value: function saveEventCaptureNode(node) {\n      this.eventCaptureNode = node;\n    }\n  }, {\n    key: \"saveCanvasContainerNode\",\n    value: function saveCanvasContainerNode(node) {\n      this.canvasContainerNode = node;\n    }\n  }, {\n    key: \"getMutableState\",\n    value: function getMutableState() {\n      return this.mutableState;\n    }\n  }, {\n    key: \"getDataInfo\",\n    value: function getDataInfo() {\n      return _extends({}, this.state, {\n        fullData: this.fullData\n      });\n    }\n  }, {\n    key: \"getCanvasContexts\",\n    value: function getCanvasContexts() {\n      if (this.canvasContainerNode) {\n        return this.canvasContainerNode.getCanvasContexts();\n      }\n    }\n  }, {\n    key: \"generateSubscriptionId\",\n    value: function generateSubscriptionId() {\n      this.lastSubscriptionId++;\n      return this.lastSubscriptionId;\n    }\n  }, {\n    key: \"clearBothCanvas\",\n    value: function clearBothCanvas() {\n      var canvases = this.getCanvasContexts();\n      if (canvases && canvases.axes) {\n        clearCanvas([canvases.axes,\n        // canvases.hover,\n        canvases.mouseCoord], this.props.ratio);\n      }\n    }\n  }, {\n    key: \"clearMouseCanvas\",\n    value: function clearMouseCanvas() {\n      var canvases = this.getCanvasContexts();\n      if (canvases && canvases.mouseCoord) {\n        clearCanvas([canvases.mouseCoord], this.props.ratio);\n      }\n    }\n  }, {\n    key: \"clearThreeCanvas\",\n    value: function clearThreeCanvas() {\n      var canvases = this.getCanvasContexts();\n      if (canvases && canvases.axes) {\n        clearCanvas([canvases.axes,\n        // canvases.hover,\n        canvases.mouseCoord, canvases.bg], this.props.ratio);\n      }\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(id, rest) {\n      var _rest$getPanCondition = rest.getPanConditions,\n        getPanConditions = _rest$getPanCondition === undefined ? functor({\n          draggable: false,\n          panEnabled: true\n        }) : _rest$getPanCondition;\n      this.subscriptions = this.subscriptions.concat(_extends({\n        id: id\n      }, rest, {\n        getPanConditions: getPanConditions\n      }));\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(id) {\n      this.subscriptions = this.subscriptions.filter(function (each) {\n        return each.id !== id;\n      });\n    }\n  }, {\n    key: \"getAllPanConditions\",\n    value: function getAllPanConditions() {\n      return this.subscriptions.map(function (each) {\n        return each.getPanConditions();\n      });\n    }\n  }, {\n    key: \"setCursorClass\",\n    value: function setCursorClass(className) {\n      if (this.eventCaptureNode != null) {\n        this.eventCaptureNode.setCursorClass(className);\n      }\n    }\n  }, {\n    key: \"amIOnTop\",\n    value: function amIOnTop(id) {\n      var dragableComponents = this.subscriptions.filter(function (each) {\n        return each.getPanConditions().draggable;\n      });\n      return dragableComponents.length > 0 && last(dragableComponents).id === id;\n    }\n  }, {\n    key: \"handleContextMenu\",\n    value: function handleContextMenu(mouseXY, e) {\n      var _state = this.state,\n        xAccessor = _state.xAccessor,\n        chartConfig = _state.chartConfig,\n        plotData = _state.plotData,\n        xScale = _state.xScale;\n      var currentCharts = getCurrentCharts(chartConfig, mouseXY);\n      var currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n      this.triggerEvent(\"contextmenu\", {\n        mouseXY: mouseXY,\n        currentItem: currentItem,\n        currentCharts: currentCharts\n      }, e);\n    }\n  }, {\n    key: \"calculateStateForDomain\",\n    value: function calculateStateForDomain(newDomain) {\n      var _state2 = this.state,\n        xAccessor = _state2.xAccessor,\n        displayXAccessor = _state2.displayXAccessor,\n        initialXScale = _state2.xScale,\n        initialChartConfig = _state2.chartConfig,\n        initialPlotData = _state2.plotData;\n      var filterData = this.state.filterData;\n      var fullData = this.fullData;\n      var postCalculator = this.props.postCalculator;\n      var _filterData2 = filterData(fullData, newDomain, xAccessor, initialXScale, {\n          currentPlotData: initialPlotData,\n          currentDomain: initialXScale.domain()\n        }),\n        beforePlotData = _filterData2.plotData,\n        domain = _filterData2.domain;\n      var plotData = postCalculator(beforePlotData);\n      var updatedScale = initialXScale.copy().domain(domain);\n      var chartConfig = getChartConfigWithUpdatedYScales(initialChartConfig, {\n        plotData: plotData,\n        xAccessor: xAccessor,\n        displayXAccessor: displayXAccessor,\n        fullData: fullData\n      }, updatedScale.domain());\n      return {\n        xScale: updatedScale,\n        plotData: plotData,\n        chartConfig: chartConfig\n      };\n    }\n  }, {\n    key: \"pinchZoomHelper\",\n    value: function pinchZoomHelper(initialPinch, finalPinch) {\n      var initialPinchXScale = initialPinch.xScale;\n      var _state3 = this.state,\n        initialXScale = _state3.xScale,\n        initialChartConfig = _state3.chartConfig,\n        initialPlotData = _state3.plotData,\n        xAccessor = _state3.xAccessor,\n        displayXAccessor = _state3.displayXAccessor;\n      var filterData = this.state.filterData;\n      var fullData = this.fullData;\n      var postCalculator = this.props.postCalculator;\n      var _pinchCoordinates = pinchCoordinates(initialPinch),\n        iTL = _pinchCoordinates.topLeft,\n        iBR = _pinchCoordinates.bottomRight;\n      var _pinchCoordinates2 = pinchCoordinates(finalPinch),\n        fTL = _pinchCoordinates2.topLeft,\n        fBR = _pinchCoordinates2.bottomRight;\n      var e = initialPinchXScale.range()[1];\n      var xDash = Math.round(-(iBR[0] * fTL[0] - iTL[0] * fBR[0]) / (iTL[0] - iBR[0]));\n      var yDash = Math.round(e + ((e - iBR[0]) * (e - fTL[0]) - (e - iTL[0]) * (e - fBR[0])) / (e - iTL[0] - (e - iBR[0])));\n      var x = Math.round(-xDash * iTL[0] / (-xDash + fTL[0]));\n      var y = Math.round(e - (yDash - e) * (e - iTL[0]) / (yDash + (e - fTL[0])));\n      var newDomain = [x, y].map(initialPinchXScale.invert);\n      // var domainR = initial.right + right;\n\n      var _filterData3 = filterData(fullData, newDomain, xAccessor, initialPinchXScale, {\n          currentPlotData: initialPlotData,\n          currentDomain: initialXScale.domain()\n        }),\n        beforePlotData = _filterData3.plotData,\n        domain = _filterData3.domain;\n      var plotData = postCalculator(beforePlotData);\n      var updatedScale = initialXScale.copy().domain(domain);\n      var mouseXY = finalPinch.touch1Pos;\n      var chartConfig = getChartConfigWithUpdatedYScales(initialChartConfig, {\n        plotData: plotData,\n        xAccessor: xAccessor,\n        displayXAccessor: displayXAccessor,\n        fullData: fullData\n      }, updatedScale.domain());\n      var currentItem = getCurrentItem(updatedScale, xAccessor, mouseXY, plotData);\n      return {\n        chartConfig: chartConfig,\n        xScale: updatedScale,\n        plotData: plotData,\n        mouseXY: mouseXY,\n        currentItem: currentItem\n      };\n    }\n  }, {\n    key: \"cancelDrag\",\n    value: function cancelDrag() {\n      this.eventCaptureNode.cancelDrag();\n      this.triggerEvent(\"dragcancel\");\n    }\n  }, {\n    key: \"handlePinchZoom\",\n    value: function handlePinchZoom(initialPinch, finalPinch, e) {\n      var _this2 = this;\n      if (!this.waitingForPinchZoomAnimationFrame) {\n        this.waitingForPinchZoomAnimationFrame = true;\n        var state = this.pinchZoomHelper(initialPinch, finalPinch);\n        this.triggerEvent(\"pinchzoom\", state, e);\n        this.finalPinch = finalPinch;\n        requestAnimationFrame(function () {\n          _this2.clearBothCanvas();\n          _this2.draw({\n            trigger: \"pinchzoom\"\n          });\n          _this2.waitingForPinchZoomAnimationFrame = false;\n        });\n      }\n    }\n  }, {\n    key: \"handlePinchZoomEnd\",\n    value: function handlePinchZoomEnd(initialPinch, e) {\n      var xAccessor = this.state.xAccessor;\n      if (this.finalPinch) {\n        var state = this.pinchZoomHelper(initialPinch, this.finalPinch);\n        var xScale = state.xScale;\n        this.triggerEvent(\"pinchzoom\", state, e);\n        this.finalPinch = null;\n        this.clearThreeCanvas();\n        var fullData = this.fullData;\n        var firstItem = head(fullData);\n        var start = head(xScale.domain());\n        var end = xAccessor(firstItem);\n        var onLoadMore = this.props.onLoadMore;\n        this.setState(state, function () {\n          if (start < end) {\n            onLoadMore(start, end);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"handleZoom\",\n    value: function handleZoom(zoomDirection, mouseXY, e) {\n      if (this.panInProgress) return;\n      // console.log(\"zoomDirection \", zoomDirection, \" mouseXY \", mouseXY);\n      var _state4 = this.state,\n        xAccessor = _state4.xAccessor,\n        initialXScale = _state4.xScale,\n        initialPlotData = _state4.plotData;\n      var _props = this.props,\n        zoomMultiplier = _props.zoomMultiplier,\n        zoomAnchor = _props.zoomAnchor;\n      var fullData = this.fullData;\n      var item = zoomAnchor({\n        xScale: initialXScale,\n        xAccessor: xAccessor,\n        mouseXY: mouseXY,\n        plotData: initialPlotData,\n        fullData: fullData\n      });\n      var cx = initialXScale(item);\n      var c = zoomDirection > 0 ? 1 * zoomMultiplier : 1 / zoomMultiplier;\n      var newDomain = initialXScale.range().map(function (x) {\n        return cx + (x - cx) * c;\n      }).map(initialXScale.invert);\n      var _calculateStateForDom = this.calculateStateForDomain(newDomain),\n        xScale = _calculateStateForDom.xScale,\n        plotData = _calculateStateForDom.plotData,\n        chartConfig = _calculateStateForDom.chartConfig;\n      var currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n      var currentCharts = getCurrentCharts(chartConfig, mouseXY);\n      this.clearThreeCanvas();\n      var firstItem = head(fullData);\n      var start = head(xScale.domain());\n      var end = xAccessor(firstItem);\n      var onLoadMore = this.props.onLoadMore;\n      this.mutableState = {\n        mouseXY: mouseXY,\n        currentItem: currentItem,\n        currentCharts: currentCharts\n      };\n      this.triggerEvent(\"zoom\", {\n        xScale: xScale,\n        plotData: plotData,\n        chartConfig: chartConfig,\n        mouseXY: mouseXY,\n        currentCharts: currentCharts,\n        currentItem: currentItem,\n        show: true\n      }, e);\n      this.setState({\n        xScale: xScale,\n        plotData: plotData,\n        chartConfig: chartConfig\n      }, function () {\n        if (start < end) {\n          onLoadMore(start, end);\n        }\n      });\n    }\n  }, {\n    key: \"xAxisZoom\",\n    value: function xAxisZoom(newDomain) {\n      var _calculateStateForDom2 = this.calculateStateForDomain(newDomain),\n        xScale = _calculateStateForDom2.xScale,\n        plotData = _calculateStateForDom2.plotData,\n        chartConfig = _calculateStateForDom2.chartConfig;\n      this.clearThreeCanvas();\n      var xAccessor = this.state.xAccessor;\n      var fullData = this.fullData;\n      var firstItem = head(fullData);\n      var start = head(xScale.domain());\n      var end = xAccessor(firstItem);\n      var onLoadMore = this.props.onLoadMore;\n      this.setState({\n        xScale: xScale,\n        plotData: plotData,\n        chartConfig: chartConfig\n      }, function () {\n        if (start < end) onLoadMore(start, end);\n      });\n    }\n  }, {\n    key: \"yAxisZoom\",\n    value: function yAxisZoom(chartId, newDomain) {\n      this.clearThreeCanvas();\n      var initialChartConfig = this.state.chartConfig;\n      var chartConfig = initialChartConfig.map(function (each) {\n        if (each.id === chartId) {\n          var yScale = each.yScale;\n          return _extends({}, each, {\n            yScale: yScale.copy().domain(newDomain),\n            yPanEnabled: true\n          });\n        } else {\n          return each;\n        }\n      });\n      this.setState({\n        chartConfig: chartConfig\n      });\n    }\n  }, {\n    key: \"triggerEvent\",\n    value: function triggerEvent(type, props, e) {\n      var _this3 = this;\n\n      // console.log(\"triggering ->\", type);\n\n      this.subscriptions.forEach(function (each) {\n        var state = _extends({}, _this3.state, {\n          fullData: _this3.fullData,\n          subscriptions: _this3.subscriptions\n        });\n        each.listener(type, props, state, e);\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(props) {\n      this.subscriptions.forEach(function (each) {\n        if (isDefined(each.draw)) each.draw(props);\n      });\n    }\n  }, {\n    key: \"redraw\",\n    value: function redraw() {\n      this.clearThreeCanvas();\n      this.draw({\n        force: true\n      });\n    }\n  }, {\n    key: \"panHelper\",\n    value: function panHelper(mouseXY, initialXScale, _ref2, chartsToPan) {\n      var dx = _ref2.dx,\n        dy = _ref2.dy;\n      var _state5 = this.state,\n        xAccessor = _state5.xAccessor,\n        displayXAccessor = _state5.displayXAccessor,\n        initialChartConfig = _state5.chartConfig;\n      var filterData = this.state.filterData;\n      var fullData = this.fullData;\n      var postCalculator = this.props.postCalculator;\n\n      // console.log(dx, dy);\n\n      if (isNotDefined(initialXScale.invert)) throw new Error(\"xScale provided does not have an invert() method.\" + \"You are likely using an ordinal scale. This scale does not support zoom, pan\");\n      var newDomain = initialXScale.range().map(function (x) {\n        return x - dx;\n      }).map(initialXScale.invert);\n      var _filterData4 = filterData(fullData, newDomain, xAccessor, initialXScale, {\n          currentPlotData: this.hackyWayToStopPanBeyondBounds__plotData,\n          currentDomain: this.hackyWayToStopPanBeyondBounds__domain\n        }),\n        beforePlotData = _filterData4.plotData,\n        domain = _filterData4.domain;\n      var updatedScale = initialXScale.copy().domain(domain);\n      var plotData = postCalculator(beforePlotData);\n      // console.log(last(plotData));\n\n      var currentItem = getCurrentItem(updatedScale, xAccessor, mouseXY, plotData);\n      var chartConfig = getChartConfigWithUpdatedYScales(initialChartConfig, {\n        plotData: plotData,\n        xAccessor: xAccessor,\n        displayXAccessor: displayXAccessor,\n        fullData: fullData\n      }, updatedScale.domain(), dy, chartsToPan);\n      var currentCharts = getCurrentCharts(chartConfig, mouseXY);\n\n      // console.log(initialXScale.domain(), newDomain, updatedScale.domain());\n      return {\n        xScale: updatedScale,\n        plotData: plotData,\n        chartConfig: chartConfig,\n        mouseXY: mouseXY,\n        currentCharts: currentCharts,\n        currentItem: currentItem\n      };\n    }\n  }, {\n    key: \"handlePan\",\n    value: function handlePan(mousePosition, panStartXScale, dxdy, chartsToPan, e) {\n      var _this4 = this;\n      if (!this.waitingForPanAnimationFrame) {\n        this.waitingForPanAnimationFrame = true;\n        this.hackyWayToStopPanBeyondBounds__plotData = this.hackyWayToStopPanBeyondBounds__plotData || this.state.plotData;\n        this.hackyWayToStopPanBeyondBounds__domain = this.hackyWayToStopPanBeyondBounds__domain || this.state.xScale.domain();\n        var state = this.panHelper(mousePosition, panStartXScale, dxdy, chartsToPan);\n        this.hackyWayToStopPanBeyondBounds__plotData = state.plotData;\n        this.hackyWayToStopPanBeyondBounds__domain = state.xScale.domain();\n        this.panInProgress = true;\n        // console.log(panStartXScale.domain(), state.xScale.domain());\n\n        this.triggerEvent(\"pan\", state, e);\n        this.mutableState = {\n          mouseXY: state.mouseXY,\n          currentItem: state.currentItem,\n          currentCharts: state.currentCharts\n        };\n        requestAnimationFrame(function () {\n          _this4.waitingForPanAnimationFrame = false;\n          _this4.clearBothCanvas();\n          _this4.draw({\n            trigger: \"pan\"\n          });\n        });\n      }\n    }\n  }, {\n    key: \"handlePanEnd\",\n    value: function handlePanEnd(mousePosition, panStartXScale, dxdy, chartsToPan, e) {\n      var _this5 = this;\n      var state = this.panHelper(mousePosition, panStartXScale, dxdy, chartsToPan);\n      // console.log(this.canvasDrawCallbackList.map(d => d.type));\n      this.hackyWayToStopPanBeyondBounds__plotData = null;\n      this.hackyWayToStopPanBeyondBounds__domain = null;\n      this.panInProgress = false;\n\n      // console.log(\"PANEND\", panEnd++);\n      var xScale = state.xScale,\n        plotData = state.plotData,\n        chartConfig = state.chartConfig;\n      this.triggerEvent(\"panend\", state, e);\n      requestAnimationFrame(function () {\n        var xAccessor = _this5.state.xAccessor;\n        var fullData = _this5.fullData;\n        var firstItem = head(fullData);\n        var start = head(xScale.domain());\n        var end = xAccessor(firstItem);\n        // console.log(start, end, start < end ? \"Load more\" : \"I have it\");\n\n        var onLoadMore = _this5.props.onLoadMore;\n        _this5.clearThreeCanvas();\n        _this5.setState({\n          xScale: xScale,\n          plotData: plotData,\n          chartConfig: chartConfig\n        }, function () {\n          if (start < end) onLoadMore(start, end);\n        });\n      });\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(mousePosition, currentCharts, e) {\n      this.triggerEvent(\"mousedown\", this.mutableState, e);\n    }\n  }, {\n    key: \"handleMouseEnter\",\n    value: function handleMouseEnter(e) {\n      this.triggerEvent(\"mouseenter\", {\n        show: true\n      }, e);\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(mouseXY, inputType, e) {\n      var _this6 = this;\n      if (!this.waitingForMouseMoveAnimationFrame) {\n        this.waitingForMouseMoveAnimationFrame = true;\n        var _state6 = this.state,\n          chartConfig = _state6.chartConfig,\n          plotData = _state6.plotData,\n          xScale = _state6.xScale,\n          xAccessor = _state6.xAccessor;\n        var currentCharts = getCurrentCharts(chartConfig, mouseXY);\n        var currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n        this.triggerEvent(\"mousemove\", {\n          show: true,\n          mouseXY: mouseXY,\n          // prevMouseXY is used in interactive components\n          prevMouseXY: this.prevMouseXY,\n          currentItem: currentItem,\n          currentCharts: currentCharts\n        }, e);\n        this.prevMouseXY = mouseXY;\n        this.mutableState = {\n          mouseXY: mouseXY,\n          currentItem: currentItem,\n          currentCharts: currentCharts\n        };\n        requestAnimationFrame(function () {\n          _this6.clearMouseCanvas();\n          _this6.draw({\n            trigger: \"mousemove\"\n          });\n          _this6.waitingForMouseMoveAnimationFrame = false;\n        });\n      }\n    }\n  }, {\n    key: \"handleMouseLeave\",\n    value: function handleMouseLeave(e) {\n      this.triggerEvent(\"mouseleave\", {\n        show: false\n      }, e);\n      this.clearMouseCanvas();\n      this.draw({\n        trigger: \"mouseleave\"\n      });\n    }\n  }, {\n    key: \"handleDragStart\",\n    value: function handleDragStart(_ref3, e) {\n      var startPos = _ref3.startPos;\n      this.triggerEvent(\"dragstart\", {\n        startPos: startPos\n      }, e);\n    }\n  }, {\n    key: \"handleDrag\",\n    value: function handleDrag(_ref4, e) {\n      var _this7 = this;\n      var startPos = _ref4.startPos,\n        mouseXY = _ref4.mouseXY;\n      var _state7 = this.state,\n        chartConfig = _state7.chartConfig,\n        plotData = _state7.plotData,\n        xScale = _state7.xScale,\n        xAccessor = _state7.xAccessor;\n      var currentCharts = getCurrentCharts(chartConfig, mouseXY);\n      var currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n      this.triggerEvent(\"drag\", {\n        startPos: startPos,\n        mouseXY: mouseXY,\n        currentItem: currentItem,\n        currentCharts: currentCharts\n      }, e);\n      this.mutableState = {\n        mouseXY: mouseXY,\n        currentItem: currentItem,\n        currentCharts: currentCharts\n      };\n      requestAnimationFrame(function () {\n        _this7.clearMouseCanvas();\n        _this7.draw({\n          trigger: \"drag\"\n        });\n      });\n    }\n  }, {\n    key: \"handleDragEnd\",\n    value: function handleDragEnd(_ref5, e) {\n      var _this8 = this;\n      var mouseXY = _ref5.mouseXY;\n      this.triggerEvent(\"dragend\", {\n        mouseXY: mouseXY\n      }, e);\n      requestAnimationFrame(function () {\n        _this8.clearMouseCanvas();\n        _this8.draw({\n          trigger: \"dragend\"\n        });\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(mousePosition, e) {\n      var _this9 = this;\n      this.triggerEvent(\"click\", this.mutableState, e);\n      requestAnimationFrame(function () {\n        _this9.clearMouseCanvas();\n        _this9.draw({\n          trigger: \"click\"\n        });\n      });\n    }\n  }, {\n    key: \"handleDoubleClick\",\n    value: function handleDoubleClick(mousePosition, e) {\n      this.triggerEvent(\"dblclick\", {}, e);\n    }\n  }, {\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      var dimensions = getDimensions(this.props);\n      return {\n        fullData: this.fullData,\n        plotData: this.state.plotData,\n        width: dimensions.width,\n        height: dimensions.height,\n        chartConfig: this.state.chartConfig,\n        xScale: this.state.xScale,\n        xAccessor: this.state.xAccessor,\n        displayXAccessor: this.state.displayXAccessor,\n        chartCanvasType: this.props.type,\n        margin: this.props.margin,\n        ratio: this.props.ratio,\n        xAxisZoom: this.xAxisZoom,\n        yAxisZoom: this.yAxisZoom,\n        getCanvasContexts: this.getCanvasContexts,\n        redraw: this.redraw,\n        subscribe: this.subscribe,\n        unsubscribe: this.unsubscribe,\n        generateSubscriptionId: this.generateSubscriptionId,\n        getMutableState: this.getMutableState,\n        amIOnTop: this.amIOnTop,\n        setCursorClass: this.setCursorClass\n      };\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _resetChart = resetChart(this.props, true),\n        fullData = _resetChart.fullData,\n        state = _objectWithoutProperties(_resetChart, [\"fullData\"]);\n      this.setState(state);\n      this.fullData = fullData;\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var reset = shouldResetChart(this.props, nextProps);\n      var interaction = isInteractionEnabled(this.state.xScale, this.state.xAccessor, this.state.plotData);\n      var initialChartConfig = this.state.chartConfig;\n      var newState = void 0;\n      if (!interaction || reset || !shallowEqual(this.props.xExtents, nextProps.xExtents)) {\n        if (process.env.NODE_ENV !== \"production\") {\n          if (!interaction) log(\"RESET CHART, changes to a non interactive chart\");else if (reset) log(\"RESET CHART, one or more of these props changed\", CANDIDATES_FOR_RESET);else log(\"xExtents changed\");\n        }\n        // do reset\n        newState = resetChart(nextProps);\n        this.mutableState = {};\n      } else {\n        var _state$xScale$domain = this.state.xScale.domain(),\n          _state$xScale$domain2 = _slicedToArray(_state$xScale$domain, 2),\n          start = _state$xScale$domain2[0],\n          end = _state$xScale$domain2[1];\n        var prevLastItem = last(this.fullData);\n        var calculatedState = calculateFullData(nextProps);\n        var xAccessor = calculatedState.xAccessor;\n        var lastItemWasVisible = xAccessor(prevLastItem) <= end && xAccessor(prevLastItem) >= start;\n        if (process.env.NODE_ENV !== \"production\") {\n          if (this.props.data !== nextProps.data) log(\"data is changed but seriesName did not, change the seriesName if you wish to reset the chart and lastItemWasVisible = \", lastItemWasVisible);else log(\"Trivial change, may be width/height or type changed, but that does not matter\");\n        }\n        newState = updateChart(calculatedState, this.state.xScale, nextProps, lastItemWasVisible, initialChartConfig);\n      }\n      var _newState = newState,\n        fullData = _newState.fullData,\n        state = _objectWithoutProperties(_newState, [\"fullData\"]);\n      if (this.panInProgress) {\n        if (process.env.NODE_ENV !== \"production\") {\n          log(\"Pan is in progress\");\n        }\n      } else {\n        /*\n        if (!reset) {\n        \tstate.chartConfig\n        \t\t.forEach((each) => {\n        \t\t\t// const sourceChartConfig = initialChartConfig.filter(d => d.id === each.id);\n        \t\t\tconst prevChartConfig = find(initialChartConfig, d => d.id === each.id);\n        \t\t\tif (isDefined(prevChartConfig) && prevChartConfig.yPanEnabled) {\n        \t\t\t\teach.yScale.domain(prevChartConfig.yScale.domain());\n        \t\t\t\teach.yPanEnabled = prevChartConfig.yPanEnabled;\n        \t\t\t}\n        \t\t});\n        }\n        */\n        this.clearThreeCanvas();\n        this.setState(state);\n      }\n      this.fullData = fullData;\n    }\n    /*\n    componentDidUpdate(prevProps, prevState) {\n    \tconsole.error(this.state.chartConfig, this.state.chartConfig.map(d => d.yScale.domain()));\n    }\n    */\n  }, {\n    key: \"resetYDomain\",\n    value: function resetYDomain(chartId) {\n      var chartConfig = this.state.chartConfig;\n      var changed = false;\n      var newChartConfig = chartConfig.map(function (each) {\n        if ((isNotDefined(chartId) || each.id === chartId) && !shallowEqual(each.yScale.domain(), each.realYDomain)) {\n          changed = true;\n          return _extends({}, each, {\n            yScale: each.yScale.domain(each.realYDomain),\n            yPanEnabled: false\n          });\n        }\n        return each;\n      });\n      if (changed) {\n        this.clearThreeCanvas();\n        this.setState({\n          chartConfig: newChartConfig\n        });\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      // console.log(\"Happneing.....\", !this.panInProgress)\n      return !this.panInProgress;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props2 = this.props,\n        type = _props2.type,\n        height = _props2.height,\n        width = _props2.width,\n        margin = _props2.margin,\n        className = _props2.className,\n        zIndex = _props2.zIndex,\n        defaultFocus = _props2.defaultFocus,\n        ratio = _props2.ratio,\n        mouseMoveEvent = _props2.mouseMoveEvent,\n        panEvent = _props2.panEvent,\n        zoomEvent = _props2.zoomEvent;\n      var _props3 = this.props,\n        useCrossHairStyleCursor = _props3.useCrossHairStyleCursor,\n        onSelect = _props3.onSelect;\n      var _state8 = this.state,\n        plotData = _state8.plotData,\n        xScale = _state8.xScale,\n        xAccessor = _state8.xAccessor,\n        chartConfig = _state8.chartConfig;\n      var dimensions = getDimensions(this.props);\n      var interaction = isInteractionEnabled(xScale, xAccessor, plotData);\n      var cursorStyle = useCrossHairStyleCursor && interaction;\n      var cursor = getCursorStyle();\n      return React.createElement(\"div\", {\n        style: {\n          position: \"relative\",\n          width: width,\n          height: height\n        },\n        className: className,\n        onClick: onSelect\n      }, React.createElement(CanvasContainer, {\n        ref: this.saveCanvasContainerNode,\n        type: type,\n        ratio: ratio,\n        width: width,\n        height: height,\n        zIndex: zIndex\n      }), React.createElement(\"svg\", {\n        className: className,\n        width: width,\n        height: height,\n        style: {\n          position: \"absolute\",\n          zIndex: zIndex + 5\n        }\n      }, cursor, React.createElement(\"defs\", null, React.createElement(\"clipPath\", {\n        id: \"chart-area-clip\"\n      }, React.createElement(\"rect\", {\n        x: \"0\",\n        y: \"0\",\n        width: dimensions.width,\n        height: dimensions.height\n      })), chartConfig.map(function (each, idx) {\n        return React.createElement(\"clipPath\", {\n          key: idx,\n          id: \"chart-area-clip-\" + each.id\n        }, React.createElement(\"rect\", {\n          x: \"0\",\n          y: \"0\",\n          width: each.width,\n          height: each.height\n        }));\n      })), React.createElement(\"g\", {\n        transform: \"translate(\" + (margin.left + 0.5) + \", \" + (margin.top + 0.5) + \")\"\n      }, React.createElement(EventCapture, {\n        ref: this.saveEventCaptureNode,\n        useCrossHairStyleCursor: cursorStyle,\n        mouseMove: mouseMoveEvent && interaction,\n        zoom: zoomEvent && interaction,\n        pan: panEvent && interaction,\n        width: dimensions.width,\n        height: dimensions.height,\n        chartConfig: chartConfig,\n        xScale: xScale,\n        xAccessor: xAccessor,\n        focus: defaultFocus,\n        disableInteraction: this.props.disableInteraction,\n        getAllPanConditions: this.getAllPanConditions,\n        onContextMenu: this.handleContextMenu,\n        onClick: this.handleClick,\n        onDoubleClick: this.handleDoubleClick,\n        onMouseDown: this.handleMouseDown,\n        onMouseMove: this.handleMouseMove,\n        onMouseEnter: this.handleMouseEnter,\n        onMouseLeave: this.handleMouseLeave,\n        onDragStart: this.handleDragStart,\n        onDrag: this.handleDrag,\n        onDragComplete: this.handleDragEnd,\n        onZoom: this.handleZoom,\n        onPinchZoom: this.handlePinchZoom,\n        onPinchZoomEnd: this.handlePinchZoomEnd,\n        onPan: this.handlePan,\n        onPanEnd: this.handlePanEnd\n      }), React.createElement(\"g\", {\n        className: \"react-stockcharts-avoid-interaction\"\n      }, this.props.children))));\n    }\n  }]);\n  return ChartCanvas;\n}(Component);\nfunction isInteractionEnabled(xScale, xAccessor, data) {\n  var interaction = !isNaN(xScale(xAccessor(head(data)))) && isDefined(xScale.invert);\n  return interaction;\n}\nChartCanvas.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  margin: PropTypes.object,\n  ratio: PropTypes.number.isRequired,\n  // interval: PropTypes.oneOf([\"D\", \"W\", \"M\"]), // ,\"m1\", \"m5\", \"m15\", \"W\", \"M\"\n  type: PropTypes.oneOf([\"svg\", \"hybrid\"]),\n  pointsPerPxThreshold: PropTypes.number,\n  minPointsPerPxThreshold: PropTypes.number,\n  data: PropTypes.array.isRequired,\n  // initialDisplay: PropTypes.number,\n  xAccessor: PropTypes.func,\n  xExtents: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\n  zoomAnchor: PropTypes.func,\n  className: PropTypes.string,\n  seriesName: PropTypes.string.isRequired,\n  zIndex: PropTypes.number,\n  children: PropTypes.node.isRequired,\n  xScale: PropTypes.func.isRequired,\n  postCalculator: PropTypes.func,\n  flipXScale: PropTypes.bool,\n  useCrossHairStyleCursor: PropTypes.bool,\n  padding: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    left: PropTypes.number,\n    right: PropTypes.number\n  })]),\n  defaultFocus: PropTypes.bool,\n  zoomMultiplier: PropTypes.number,\n  onLoadMore: PropTypes.func,\n  displayXAccessor: function displayXAccessor(props, propName /* , componentName */) {\n    if (isNotDefined(props[propName])) {\n      console.warn(\"`displayXAccessor` is not defined,\" + \" will use the value from `xAccessor` as `displayXAccessor`.\" + \" This might be ok if you do not use a discontinuous scale\" + \" but if you do, provide a `displayXAccessor` prop to `ChartCanvas`\");\n    } else if (typeof props[propName] !== \"function\") {\n      return new Error(\"displayXAccessor has to be a function\");\n    }\n  },\n  mouseMoveEvent: PropTypes.bool,\n  panEvent: PropTypes.bool,\n  clamp: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]),\n  zoomEvent: PropTypes.bool,\n  onSelect: PropTypes.func,\n  maintainPointsPerPixelOnResize: PropTypes.bool,\n  disableInteraction: PropTypes.bool\n};\nChartCanvas.defaultProps = {\n  margin: {\n    top: 20,\n    right: 30,\n    bottom: 30,\n    left: 80\n  },\n  type: \"hybrid\",\n  pointsPerPxThreshold: 2,\n  minPointsPerPxThreshold: 1 / 100,\n  className: \"react-stockchart\",\n  zIndex: 1,\n  xExtents: [min, max],\n  postCalculator: identity,\n  padding: 0,\n  xAccessor: identity,\n  flipXScale: false,\n  useCrossHairStyleCursor: true,\n  defaultFocus: true,\n  onLoadMore: noop,\n  onSelect: noop,\n  mouseMoveEvent: true,\n  panEvent: true,\n  zoomEvent: true,\n  zoomMultiplier: 1.1,\n  clamp: false,\n  zoomAnchor: mouseBasedZoomAnchor,\n  maintainPointsPerPixelOnResize: true,\n  // ratio: 2,\n  disableInteraction: false\n};\nChartCanvas.childContextTypes = {\n  plotData: PropTypes.array,\n  fullData: PropTypes.array,\n  chartConfig: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n    origin: PropTypes.arrayOf(PropTypes.number).isRequired,\n    padding: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n      top: PropTypes.number,\n      bottom: PropTypes.number\n    })]),\n    yExtents: PropTypes.arrayOf(PropTypes.func),\n    yExtentsProvider: PropTypes.func,\n    yScale: PropTypes.func.isRequired,\n    mouseCoordinates: PropTypes.shape({\n      at: PropTypes.string,\n      format: PropTypes.func\n    }),\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired\n  })).isRequired,\n  xScale: PropTypes.func.isRequired,\n  xAccessor: PropTypes.func.isRequired,\n  displayXAccessor: PropTypes.func.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  chartCanvasType: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n  margin: PropTypes.object.isRequired,\n  ratio: PropTypes.number.isRequired,\n  getCanvasContexts: PropTypes.func,\n  xAxisZoom: PropTypes.func,\n  yAxisZoom: PropTypes.func,\n  amIOnTop: PropTypes.func,\n  redraw: PropTypes.func,\n  subscribe: PropTypes.func,\n  unsubscribe: PropTypes.func,\n  setCursorClass: PropTypes.func,\n  generateSubscriptionId: PropTypes.func,\n  getMutableState: PropTypes.func\n};\nChartCanvas.ohlcv = function (d) {\n  return {\n    date: d.date,\n    open: d.open,\n    high: d.high,\n    low: d.low,\n    close: d.close,\n    volume: d.volume\n  };\n};\nexport default ChartCanvas;","map":{"version":3,"names":["React","Component","PropTypes","extent","d3Extent","min","max","head","last","isDefined","isNotDefined","clearCanvas","shallowEqual","identity","noop","functor","getLogger","mouseBasedZoomAnchor","lastVisibleItemBasedZoomAnchor","rightDomainBasedZoomAnchor","getNewChartConfig","getChartConfigWithUpdatedYScales","getCurrentCharts","getCurrentItem","EventCapture","CanvasContainer","evaluator","log","CANDIDATES_FOR_RESET","shouldResetChart","thisProps","nextProps","every","key","result","getCursorStyle","tooltipStyle","createElement","type","getDimensions","props","height","margin","top","bottom","width","left","right","getXScaleDirection","flipXScale","calculateFullData","fullData","data","plotFull","xScale","clamp","pointsPerPxThreshold","xAccessor","displayXAccessor","minPointsPerPxThreshold","useWholeData","_evaluator","filterData","copy","resetChart","firstCalculation","arguments","length","undefined","process","env","NODE_ENV","state","calculateState","initialPlotData","plotData","postCalculator","children","dimensions","chartConfig","domain","_extends","updateChart","newState","initialXScale","lastItemWasVisible","initialChartConfig","lastItem","_initialXScale$domain","_initialXScale$domain2","_slicedToArray","start","end","padding","maintainPointsPerPixelOnResize","direction","updatedXScale","setXRange","_initialXScale$range","range","_initialXScale$range2","rangeStart","rangeEnd","_updatedXScale$range","_updatedXScale$range2","newRangeStart","newRangeEnd","newDomainExtent","newStart","lastItemX","response","fallbackStart","fallbackEnd","dx","_initialXScale$range$","map","x","invert","_initialXScale$range$2","_newStart","newEnd","_response","inputXAccesor","xExtentsProp","xExtents","i","prev","curr","Error","d","each","_calculateFullData","_filterData","rangeRoundPoints","isNaN","_ref","pinchCoordinates","pinch","touch1Pos","touch2Pos","topLeft","Math","bottomRight","ChartCanvas","_classCallCheck","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","getDataInfo","bind","getCanvasContexts","handleMouseMove","handleMouseEnter","handleMouseLeave","handleZoom","handlePinchZoom","handlePinchZoomEnd","handlePan","handlePanEnd","handleClick","handleMouseDown","handleDoubleClick","handleContextMenu","handleDragStart","handleDrag","handleDragEnd","panHelper","pinchZoomHelper","xAxisZoom","yAxisZoom","resetYDomain","calculateStateForDomain","generateSubscriptionId","draw","redraw","getAllPanConditions","subscriptions","subscribe","unsubscribe","amIOnTop","saveEventCaptureNode","saveCanvasContainerNode","setCursorClass","getMutableState","interactiveState","panInProgress","mutableState","lastSubscriptionId","node","eventCaptureNode","canvasContainerNode","canvases","axes","mouseCoord","ratio","bg","id","rest","_rest$getPanCondition","getPanConditions","draggable","panEnabled","concat","filter","className","dragableComponents","mouseXY","e","_state","currentCharts","currentItem","triggerEvent","newDomain","_state2","_filterData2","currentPlotData","currentDomain","beforePlotData","updatedScale","initialPinch","finalPinch","initialPinchXScale","_state3","_pinchCoordinates","iTL","iBR","_pinchCoordinates2","fTL","fBR","xDash","round","yDash","y","_filterData3","cancelDrag","_this2","waitingForPinchZoomAnimationFrame","requestAnimationFrame","clearBothCanvas","trigger","clearThreeCanvas","firstItem","onLoadMore","setState","zoomDirection","_state4","_props","zoomMultiplier","zoomAnchor","item","cx","c","_calculateStateForDom","show","_calculateStateForDom2","chartId","yScale","yPanEnabled","_this3","forEach","listener","force","chartsToPan","_ref2","dy","_state5","_filterData4","hackyWayToStopPanBeyondBounds__plotData","hackyWayToStopPanBeyondBounds__domain","mousePosition","panStartXScale","dxdy","_this4","waitingForPanAnimationFrame","_this5","inputType","_this6","waitingForMouseMoveAnimationFrame","_state6","prevMouseXY","clearMouseCanvas","startPos","_ref3","_this7","_ref4","_state7","_this8","_ref5","_this9","chartCanvasType","_resetChart","_objectWithoutProperties","reset","interaction","isInteractionEnabled","_state$xScale$domain","_state$xScale$domain2","prevLastItem","calculatedState","_newState","changed","newChartConfig","realYDomain","_props2","zIndex","defaultFocus","mouseMoveEvent","panEvent","zoomEvent","_props3","useCrossHairStyleCursor","onSelect","_state8","cursorStyle","cursor","style","position","onClick","ref","idx","transform","mouseMove","zoom","pan","focus","disableInteraction","onContextMenu","onDoubleClick","onMouseDown","onMouseMove","onMouseEnter","onMouseLeave","onDragStart","onDrag","onDragComplete","onZoom","onPinchZoom","onPinchZoomEnd","onPan","onPanEnd","propTypes","number","isRequired","object","oneOf","array","func","oneOfType","string","seriesName","bool","shape","propName","console","warn","defaultProps","childContextTypes","arrayOf","origin","yExtents","yExtentsProvider","mouseCoordinates","at","format","ohlcv","date","open","high","low","close","volume"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\src\\lib\\ChartCanvas.js"],"sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { extent as d3Extent, min, max } from \"d3-array\";\n\nimport {\n\thead,\n\tlast,\n\tisDefined,\n\tisNotDefined,\n\tclearCanvas,\n\tshallowEqual,\n\tidentity,\n\tnoop,\n\tfunctor,\n\tgetLogger,\n} from \"./utils\";\n\n/* eslint-disable no-unused-vars */\nimport {\n\tmouseBasedZoomAnchor,\n\tlastVisibleItemBasedZoomAnchor,\n\trightDomainBasedZoomAnchor,\n} from \"./utils/zoomBehavior\";\n/* eslint-enable no-unused-vars */\n\nimport { getNewChartConfig, getChartConfigWithUpdatedYScales, getCurrentCharts, getCurrentItem } from \"./utils/ChartDataUtil\";\n\nimport EventCapture from \"./EventCapture\";\n\nimport CanvasContainer from \"./CanvasContainer\";\nimport evaluator from \"./scale/evaluator\";\n\nconst log = getLogger(\"ChartCanvas\");\n\nconst CANDIDATES_FOR_RESET = [\n\t\"seriesName\",\n\t/* \"data\",*/\n\t/* \"xAccessor\",*/\n];\n\nfunction shouldResetChart(thisProps, nextProps) {\n\treturn !CANDIDATES_FOR_RESET.every(key => {\n\t\tconst result = shallowEqual(thisProps[key], nextProps[key]);\n\t\t// console.log(key, result);\n\t\treturn result;\n\t});\n}\n\nfunction getCursorStyle() {\n\tconst tooltipStyle = `\n\t.react-stockcharts-grabbing-cursor {\n\t\tpointer-events: all;\n\t\tcursor: -moz-grabbing;\n\t\tcursor: -webkit-grabbing;\n\t\tcursor: grabbing;\n\t}\n\t.react-stockcharts-crosshair-cursor {\n\t\tpointer-events: all;\n\t\tcursor: crosshair;\n\t}\n\t.react-stockcharts-tooltip-hover {\n\t\tpointer-events: all;\n\t\tcursor: pointer;\n\t}\n\t.react-stockcharts-avoid-interaction {\n\t\tpointer-events: none;\n\t}\n\t.react-stockcharts-enable-interaction {\n\t\tpointer-events: all;\n\t}\n\t.react-stockcharts-tooltip {\n\t\tpointer-events: all;\n\t\tcursor: pointer;\n\t}\n\t.react-stockcharts-default-cursor {\n\t\tcursor: default;\n\t}\n\t.react-stockcharts-move-cursor {\n\t\tcursor: move;\n\t}\n\t.react-stockcharts-pointer-cursor {\n\t\tcursor: pointer;\n\t}\n\t.react-stockcharts-ns-resize-cursor {\n\t\tcursor: ns-resize;\n\t}\n\t.react-stockcharts-ew-resize-cursor {\n\t\tcursor: ew-resize;\n\t}`;\n\treturn (<style type=\"text/css\">{tooltipStyle}</style>);\n}\n\nfunction getDimensions(props) {\n\treturn {\n\t\theight: props.height - props.margin.top - props.margin.bottom,\n\t\twidth: props.width - props.margin.left - props.margin.right,\n\t};\n}\n\nfunction getXScaleDirection(flipXScale) {\n\treturn flipXScale ? -1 : 1;\n}\n\nfunction calculateFullData(props) {\n\tconst { data: fullData, plotFull, xScale, clamp, pointsPerPxThreshold, flipXScale } = props;\n\tconst { xAccessor, displayXAccessor, minPointsPerPxThreshold } = props;\n\n\tconst useWholeData = isDefined(plotFull)\n\t\t? plotFull\n\t\t: xAccessor === identity;\n\n\tconst { filterData } = evaluator({\n\t\txScale,\n\t\tuseWholeData,\n\t\tclamp,\n\t\tpointsPerPxThreshold,\n\t\tminPointsPerPxThreshold,\n\t\tflipXScale,\n\t});\n\n\treturn {\n\t\txAccessor,\n\t\tdisplayXAccessor: displayXAccessor || xAccessor,\n\t\txScale: xScale.copy(),\n\t\tfullData,\n\t\tfilterData\n\t};\n}\nfunction resetChart(props, firstCalculation = false) {\n\tif (process.env.NODE_ENV !== \"production\") {\n\t\tif (!firstCalculation) log(\"CHART RESET\");\n\t}\n\n\tconst state = calculateState(props);\n\tconst { xAccessor, displayXAccessor, fullData } = state;\n\tconst { plotData: initialPlotData, xScale } = state;\n\tconst { postCalculator, children } = props;\n\n\tconst plotData = postCalculator(initialPlotData);\n\n\tconst dimensions = getDimensions(props);\n\tconst chartConfig = getChartConfigWithUpdatedYScales(\n\t\tgetNewChartConfig(dimensions, children),\n\t\t{ plotData, xAccessor, displayXAccessor, fullData },\n\t\txScale.domain()\n\t);\n\n\treturn {\n\t\t...state,\n\t\txScale,\n\t\tplotData,\n\t\tchartConfig,\n\t};\n}\n\nfunction updateChart(\n\tnewState,\n\tinitialXScale,\n\tprops,\n\tlastItemWasVisible,\n\tinitialChartConfig,\n) {\n\n\tconst { fullData, xScale, xAccessor, displayXAccessor, filterData } = newState;\n\n\tconst lastItem = last(fullData);\n\tconst [start, end] = initialXScale.domain();\n\n\tif (process.env.NODE_ENV !== \"production\") {\n\t\tlog(\"TRIVIAL CHANGE\");\n\t}\n\n\tconst { postCalculator, children, padding, flipXScale } = props;\n\tconst { maintainPointsPerPixelOnResize } = props;\n\tconst direction = getXScaleDirection(flipXScale);\n\tconst dimensions = getDimensions(props);\n\n\tconst updatedXScale = setXRange(xScale, dimensions, padding, direction);\n\n\t// console.log(\"lastItemWasVisible =\", lastItemWasVisible, end, xAccessor(lastItem), end >= xAccessor(lastItem));\n\tlet initialPlotData;\n\tif (!lastItemWasVisible || end >= xAccessor(lastItem)) {\n\t\t// resize comes here...\n\t\t// get plotData between [start, end] and do not change the domain\n\t\tconst [rangeStart, rangeEnd] = initialXScale.range();\n\t\tconst [newRangeStart, newRangeEnd] = updatedXScale.range();\n\t\tconst newDomainExtent = ((newRangeEnd - newRangeStart) / (rangeEnd - rangeStart)) * (end - start);\n\t\tconst newStart = maintainPointsPerPixelOnResize\n\t\t\t? end - newDomainExtent\n\t\t\t: start;\n\n\t\tconst lastItemX = initialXScale(xAccessor(lastItem));\n\t\t// console.log(\"pointsPerPixel => \", newStart, start, end, updatedXScale(end));\n\t\tconst response = filterData(\n\t\t\tfullData, [newStart, end], xAccessor, updatedXScale,\n\t\t\t{ fallbackStart: start, fallbackEnd: { lastItem, lastItemX } }\n\t\t);\n\t\tinitialPlotData = response.plotData;\n\t\tupdatedXScale.domain(response.domain);\n\t\t// console.log(\"HERE!!!!!\", start, end);\n\t} else if (lastItemWasVisible\n\t\t\t&& end < xAccessor(lastItem)) {\n\t\t// this is when a new item is added and last item was visible\n\t\t// so slide over and show the new item also\n\n\t\t// get plotData between [xAccessor(l) - (end - start), xAccessor(l)] and DO change the domain\n\t\tconst dx = initialXScale(xAccessor(lastItem)) - initialXScale.range()[1];\n\t\tconst [newStart, newEnd] = initialXScale.range().map(x => x + dx).map(initialXScale.invert);\n\n\n\t\tconst response = filterData(fullData, [newStart, newEnd], xAccessor, updatedXScale);\n\t\tinitialPlotData = response.plotData;\n\t\tupdatedXScale.domain(response.domain);\t\t// if last item was visible, then shift\n\t}\n\t// plotData = getDataOfLength(fullData, showingInterval, plotData.length)\n\tconst plotData = postCalculator(initialPlotData);\n\tconst chartConfig = getChartConfigWithUpdatedYScales(\n\t\tgetNewChartConfig(dimensions, children, initialChartConfig),\n\t\t{ plotData, xAccessor, displayXAccessor, fullData },\n\t\tupdatedXScale.domain()\n\t);\n\n\treturn {\n\t\txScale: updatedXScale,\n\t\txAccessor,\n\t\tchartConfig,\n\t\tplotData,\n\t\tfullData,\n\t\tfilterData,\n\t};\n}\n\nfunction calculateState(props) {\n\n\tconst {\n\t\txAccessor: inputXAccesor, xExtents: xExtentsProp, data, padding, flipXScale\n\t} = props;\n\n\tif (process.env.NODE_ENV !== \"production\" && isDefined(props.xScale.invert)) {\n\t\tfor (let i = 1; i < data.length; i++) {\n\t\t\tconst prev = data[i - 1];\n\t\t\tconst curr = data[i];\n\t\t\tif (inputXAccesor(prev) > inputXAccesor(curr)) {\n\t\t\t\tthrow new Error(\"'data' is not sorted on 'xAccessor', send 'data' sorted in ascending order of 'xAccessor'\");\n\t\t\t}\n\t\t}\n\t}\n\n\tconst direction = getXScaleDirection(flipXScale);\n\tconst dimensions = getDimensions(props);\n\n\tconst extent = typeof xExtentsProp === \"function\"\n\t\t? xExtentsProp(data)\n\t\t: d3Extent(xExtentsProp.map(d => functor(d)).map(each => each(data, inputXAccesor)));\n\n\tconst { xAccessor, displayXAccessor, xScale, fullData, filterData } = calculateFullData(props);\n\tconst updatedXScale = setXRange(xScale, dimensions, padding, direction);\n\n\tconst { plotData, domain } = filterData(fullData, extent, inputXAccesor, updatedXScale);\n\n\tif (process.env.NODE_ENV !== \"production\" && plotData.length <= 1) {\n\t\tthrow new Error(`Showing ${plotData.length} datapoints, review the 'xExtents' prop of ChartCanvas`);\n\t}\n\treturn {\n\t\tplotData,\n\t\txScale: updatedXScale.domain(domain),\n\t\txAccessor,\n\t\tdisplayXAccessor,\n\t\tfullData,\n\t\tfilterData,\n\t};\n}\n\nfunction setXRange(xScale, dimensions, padding, direction = 1) {\n\tif (xScale.rangeRoundPoints) {\n\t\tif (isNaN(padding)) throw new Error(\"padding has to be a number for ordinal scale\");\n\t\txScale.rangeRoundPoints([0, dimensions.width], padding);\n\t} else if (xScale.padding) {\n\t\tif (isNaN(padding)) throw new Error(\"padding has to be a number for ordinal scale\");\n\t\txScale.range([0, dimensions.width]);\n\t\txScale.padding(padding / 2);\n\t} else {\n\t\tconst { left, right } = isNaN(padding)\n\t\t\t? padding\n\t\t\t: { left: padding, right: padding };\n\t\tif (direction > 0) {\n\t\t\txScale.range([left, dimensions.width - right]);\n\t\t} else {\n\t\t\txScale.range([dimensions.width - right, left]);\n\t\t}\n\t}\n\treturn xScale;\n}\n\nfunction pinchCoordinates(pinch) {\n\tconst { touch1Pos, touch2Pos } = pinch;\n\n\treturn {\n\t\ttopLeft: [Math.min(touch1Pos[0], touch2Pos[0]), Math.min(touch1Pos[1], touch2Pos[1])],\n\t\tbottomRight: [Math.max(touch1Pos[0], touch2Pos[0]), Math.max(touch1Pos[1], touch2Pos[1])]\n\t};\n}\n\n\nclass ChartCanvas extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.getDataInfo = this.getDataInfo.bind(this);\n\t\tthis.getCanvasContexts = this.getCanvasContexts.bind(this);\n\n\t\tthis.handleMouseMove = this.handleMouseMove.bind(this);\n\t\tthis.handleMouseEnter = this.handleMouseEnter.bind(this);\n\t\tthis.handleMouseLeave = this.handleMouseLeave.bind(this);\n\t\tthis.handleZoom = this.handleZoom.bind(this);\n\t\tthis.handlePinchZoom = this.handlePinchZoom.bind(this);\n\t\tthis.handlePinchZoomEnd = this.handlePinchZoomEnd.bind(this);\n\t\tthis.handlePan = this.handlePan.bind(this);\n\t\tthis.handlePanEnd = this.handlePanEnd.bind(this);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t\tthis.handleMouseDown = this.handleMouseDown.bind(this);\n\t\tthis.handleDoubleClick = this.handleDoubleClick.bind(this);\n\t\tthis.handleContextMenu = this.handleContextMenu.bind(this);\n\t\tthis.handleDragStart = this.handleDragStart.bind(this);\n\t\tthis.handleDrag = this.handleDrag.bind(this);\n\t\tthis.handleDragEnd = this.handleDragEnd.bind(this);\n\n\t\tthis.panHelper = this.panHelper.bind(this);\n\t\tthis.pinchZoomHelper = this.pinchZoomHelper.bind(this);\n\t\tthis.xAxisZoom = this.xAxisZoom.bind(this);\n\t\tthis.yAxisZoom = this.yAxisZoom.bind(this);\n\t\tthis.resetYDomain = this.resetYDomain.bind(this);\n\t\tthis.calculateStateForDomain = this.calculateStateForDomain.bind(this);\n\t\tthis.generateSubscriptionId = this.generateSubscriptionId.bind(this);\n\t\tthis.draw = this.draw.bind(this);\n\t\tthis.redraw = this.redraw.bind(this);\n\t\tthis.getAllPanConditions = this.getAllPanConditions.bind(this);\n\n\t\tthis.subscriptions = [];\n\t\tthis.subscribe = this.subscribe.bind(this);\n\t\tthis.unsubscribe = this.unsubscribe.bind(this);\n\t\tthis.amIOnTop = this.amIOnTop.bind(this);\n\t\tthis.saveEventCaptureNode = this.saveEventCaptureNode.bind(this);\n\t\tthis.saveCanvasContainerNode = this.saveCanvasContainerNode.bind(this);\n\t\tthis.setCursorClass = this.setCursorClass.bind(this);\n\t\tthis.getMutableState = this.getMutableState.bind(this);\n\t\t// this.canvasDrawCallbackList = [];\n\t\tthis.interactiveState = [];\n\t\tthis.panInProgress = false;\n\n\t\tthis.state = {};\n\t\tthis.mutableState = {};\n\t\tthis.lastSubscriptionId = 0;\n\t}\n\tsaveEventCaptureNode(node) {\n\t\tthis.eventCaptureNode = node;\n\t}\n\tsaveCanvasContainerNode(node) {\n\t\tthis.canvasContainerNode = node;\n\t}\n\tgetMutableState() {\n\t\treturn this.mutableState;\n\t}\n\tgetDataInfo() {\n\t\treturn {\n\t\t\t...this.state,\n\t\t\tfullData: this.fullData,\n\t\t};\n\t}\n\tgetCanvasContexts() {\n\t\tif (this.canvasContainerNode) {\n\t\t\treturn this.canvasContainerNode.getCanvasContexts();\n\t\t}\n\t}\n\tgenerateSubscriptionId() {\n\t\tthis.lastSubscriptionId++;\n\t\treturn this.lastSubscriptionId;\n\t}\n\tclearBothCanvas() {\n\t\tconst canvases = this.getCanvasContexts();\n\t\tif (canvases && canvases.axes) {\n\t\t\tclearCanvas([\n\t\t\t\tcanvases.axes,\n\t\t\t\t// canvases.hover,\n\t\t\t\tcanvases.mouseCoord\n\t\t\t], this.props.ratio);\n\t\t}\n\t}\n\tclearMouseCanvas() {\n\t\tconst canvases = this.getCanvasContexts();\n\t\tif (canvases && canvases.mouseCoord) {\n\t\t\tclearCanvas([\n\t\t\t\tcanvases.mouseCoord,\n\t\t\t\t// canvases.hover,\n\t\t\t], this.props.ratio);\n\t\t}\n\t}\n\tclearThreeCanvas() {\n\t\tconst canvases = this.getCanvasContexts();\n\t\tif (canvases && canvases.axes) {\n\t\t\tclearCanvas([\n\t\t\t\tcanvases.axes,\n\t\t\t\t// canvases.hover,\n\t\t\t\tcanvases.mouseCoord,\n\t\t\t\tcanvases.bg\n\t\t\t], this.props.ratio);\n\t\t}\n\t}\n\tsubscribe(id, rest) {\n\t\tconst { getPanConditions = functor({\n\t\t\tdraggable: false,\n\t\t\tpanEnabled: true,\n\t\t}) } = rest;\n\t\tthis.subscriptions = this.subscriptions.concat({\n\t\t\tid,\n\t\t\t...rest,\n\t\t\tgetPanConditions,\n\t\t});\n\t}\n\tunsubscribe(id) {\n\t\tthis.subscriptions = this.subscriptions.filter(each => each.id !== id);\n\t}\n\tgetAllPanConditions() {\n\t\treturn this.subscriptions\n\t\t\t.map(each => each.getPanConditions());\n\t}\n\tsetCursorClass(className) {\n\t\tif (this.eventCaptureNode != null) {\n\t\t\tthis.eventCaptureNode.setCursorClass(className);\n\t\t}\n\t}\n\tamIOnTop(id) {\n\t\tconst dragableComponents = this.subscriptions\n\t\t\t.filter(each => each.getPanConditions().draggable);\n\n\t\treturn dragableComponents.length > 0\n\t\t\t&& last(dragableComponents).id === id;\n\t}\n\thandleContextMenu(mouseXY, e) {\n\t\tconst { xAccessor, chartConfig, plotData, xScale } = this.state;\n\n\t\tconst currentCharts = getCurrentCharts(chartConfig, mouseXY);\n\t\tconst currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n\n\t\tthis.triggerEvent(\"contextmenu\", {\n\t\t\tmouseXY,\n\t\t\tcurrentItem,\n\t\t\tcurrentCharts,\n\t\t}, e);\n\t}\n\tcalculateStateForDomain(newDomain) {\n\t\tconst {\n\t\t\txAccessor,\n\t\t\tdisplayXAccessor,\n\t\t\txScale: initialXScale,\n\t\t\tchartConfig: initialChartConfig,\n\t\t\tplotData: initialPlotData\n\t\t} = this.state;\n\t\tconst { filterData } = this.state;\n\t\tconst { fullData } = this;\n\t\tconst { postCalculator } = this.props;\n\n\t\tconst { plotData: beforePlotData, domain } = filterData(\n\t\t\tfullData,\n\t\t\tnewDomain,\n\t\t\txAccessor,\n\t\t\tinitialXScale,\n\t\t\t{\n\t\t\t\tcurrentPlotData: initialPlotData,\n\t\t\t\tcurrentDomain: initialXScale.domain()\n\t\t\t}\n\t\t);\n\n\t\tconst plotData = postCalculator(beforePlotData);\n\t\tconst updatedScale = initialXScale.copy().domain(domain);\n\t\tconst chartConfig = getChartConfigWithUpdatedYScales(\n\t\t\tinitialChartConfig,\n\t\t\t{ plotData, xAccessor, displayXAccessor, fullData },\n\t\t\tupdatedScale.domain()\n\t\t);\n\n\t\treturn {\n\t\t\txScale: updatedScale,\n\t\t\tplotData,\n\t\t\tchartConfig,\n\t\t};\n\t}\n\tpinchZoomHelper(initialPinch, finalPinch) {\n\t\tconst { xScale: initialPinchXScale } = initialPinch;\n\n\t\tconst {\n\t\t\txScale: initialXScale,\n\t\t\tchartConfig: initialChartConfig,\n\t\t\tplotData: initialPlotData,\n\t\t\txAccessor,\n\t\t\tdisplayXAccessor,\n\t\t} = this.state;\n\t\tconst { filterData } = this.state;\n\t\tconst { fullData } = this;\n\t\tconst { postCalculator } = this.props;\n\n\t\tconst { topLeft: iTL, bottomRight: iBR } = pinchCoordinates(initialPinch);\n\t\tconst { topLeft: fTL, bottomRight: fBR } = pinchCoordinates(finalPinch);\n\n\t\tconst e = initialPinchXScale.range()[1];\n\n\t\tconst xDash = Math.round(-(iBR[0] * fTL[0] - iTL[0] * fBR[0]) / (iTL[0] - iBR[0]));\n\t\tconst yDash = Math.round(e + ((e - iBR[0]) * (e - fTL[0]) - (e - iTL[0]) * (e - fBR[0])) / ((e - iTL[0]) - (e - iBR[0])));\n\n\t\tconst x = Math.round(-xDash * iTL[0] / (-xDash + fTL[0]));\n\t\tconst y = Math.round(e - (yDash - e) * (e - iTL[0]) / (yDash + (e - fTL[0])));\n\n\t\tconst newDomain = [x, y].map(initialPinchXScale.invert);\n\t\t// var domainR = initial.right + right;\n\n\t\tconst { plotData: beforePlotData, domain } = filterData(\n\t\t\tfullData,\n\t\t\tnewDomain,\n\t\t\txAccessor,\n\t\t\tinitialPinchXScale,\n\t\t\t{\n\t\t\t\tcurrentPlotData: initialPlotData,\n\t\t\t\tcurrentDomain: initialXScale.domain()\n\t\t\t}\n\t\t);\n\n\t\tconst plotData = postCalculator(beforePlotData);\n\t\tconst updatedScale = initialXScale.copy().domain(domain);\n\n\t\tconst mouseXY = finalPinch.touch1Pos;\n\t\tconst chartConfig = getChartConfigWithUpdatedYScales(\n\t\t\tinitialChartConfig,\n\t\t\t{ plotData, xAccessor, displayXAccessor, fullData },\n\t\t\tupdatedScale.domain()\n\t\t);\n\t\tconst currentItem = getCurrentItem(updatedScale, xAccessor, mouseXY, plotData);\n\n\t\treturn {\n\t\t\tchartConfig,\n\t\t\txScale: updatedScale,\n\t\t\tplotData,\n\t\t\tmouseXY,\n\t\t\tcurrentItem,\n\t\t};\n\t}\n\tcancelDrag() {\n\t\tthis.eventCaptureNode.cancelDrag();\n\t\tthis.triggerEvent(\"dragcancel\");\n\t}\n\thandlePinchZoom(initialPinch, finalPinch, e) {\n\t\tif (!this.waitingForPinchZoomAnimationFrame) {\n\t\t\tthis.waitingForPinchZoomAnimationFrame = true;\n\t\t\tconst state = this.pinchZoomHelper(initialPinch, finalPinch);\n\n\t\t\tthis.triggerEvent(\"pinchzoom\", state, e);\n\n\t\t\tthis.finalPinch = finalPinch;\n\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tthis.clearBothCanvas();\n\t\t\t\tthis.draw({ trigger: \"pinchzoom\" });\n\t\t\t\tthis.waitingForPinchZoomAnimationFrame = false;\n\t\t\t});\n\t\t}\n\t}\n\thandlePinchZoomEnd(initialPinch, e) {\n\t\tconst { xAccessor } = this.state;\n\n\t\tif (this.finalPinch) {\n\t\t\tconst state = this.pinchZoomHelper(initialPinch, this.finalPinch);\n\t\t\tconst { xScale } = state;\n\t\t\tthis.triggerEvent(\"pinchzoom\", state, e);\n\n\t\t\tthis.finalPinch = null;\n\n\t\t\tthis.clearThreeCanvas();\n\n\t\t\tconst { fullData } = this;\n\t\t\tconst firstItem = head(fullData);\n\n\t\t\tconst start = head(xScale.domain());\n\t\t\tconst end = xAccessor(firstItem);\n\t\t\tconst { onLoadMore } = this.props;\n\n\t\t\tthis.setState(state, () => {\n\t\t\t\tif (start < end) {\n\t\t\t\t\tonLoadMore(start, end);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\thandleZoom(zoomDirection, mouseXY, e) {\n\t\tif (this.panInProgress)\n\t\t\treturn;\n\t\t// console.log(\"zoomDirection \", zoomDirection, \" mouseXY \", mouseXY);\n\t\tconst { xAccessor, xScale: initialXScale, plotData: initialPlotData } = this.state;\n\t\tconst { zoomMultiplier, zoomAnchor } = this.props;\n\t\tconst { fullData } = this;\n\t\tconst item = zoomAnchor({\n\t\t\txScale: initialXScale,\n\t\t\txAccessor,\n\t\t\tmouseXY,\n\t\t\tplotData: initialPlotData,\n\t\t\tfullData,\n\t\t});\n\n\t\tconst cx = initialXScale(item);\n\t\tconst c = zoomDirection > 0 ? 1 * zoomMultiplier : 1 / zoomMultiplier;\n\t\tconst newDomain = initialXScale.range().map(x => cx + (x - cx) * c).map(initialXScale.invert);\n\n\t\tconst { xScale, plotData, chartConfig } = this.calculateStateForDomain(newDomain);\n\n\t\tconst currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n\t\tconst currentCharts = getCurrentCharts(chartConfig, mouseXY);\n\n\t\tthis.clearThreeCanvas();\n\n\t\tconst firstItem = head(fullData);\n\n\t\tconst start = head(xScale.domain());\n\t\tconst end = xAccessor(firstItem);\n\t\tconst { onLoadMore } = this.props;\n\n\t\tthis.mutableState = {\n\t\t\tmouseXY: mouseXY,\n\t\t\tcurrentItem: currentItem,\n\t\t\tcurrentCharts: currentCharts,\n\t\t};\n\n\t\tthis.triggerEvent(\"zoom\", {\n\t\t\txScale,\n\t\t\tplotData,\n\t\t\tchartConfig,\n\t\t\tmouseXY,\n\t\t\tcurrentCharts,\n\t\t\tcurrentItem,\n\t\t\tshow: true,\n\t\t}, e);\n\n\t\tthis.setState({\n\t\t\txScale,\n\t\t\tplotData,\n\t\t\tchartConfig,\n\t\t}, () => {\n\t\t\tif (start < end) {\n\t\t\t\tonLoadMore(start, end);\n\t\t\t}\n\t\t});\n\t}\n\txAxisZoom(newDomain) {\n\t\tconst { xScale, plotData, chartConfig } = this.calculateStateForDomain(newDomain);\n\t\tthis.clearThreeCanvas();\n\n\t\tconst { xAccessor } = this.state;\n\t\tconst { fullData } = this;\n\t\tconst firstItem = head(fullData);\n\t\tconst start = head(xScale.domain());\n\t\tconst end = xAccessor(firstItem);\n\t\tconst { onLoadMore } = this.props;\n\n\t\tthis.setState({\n\t\t\txScale,\n\t\t\tplotData,\n\t\t\tchartConfig,\n\t\t}, () => {\n\t\t\tif (start < end) onLoadMore(start, end);\n\t\t});\n\t}\n\tyAxisZoom(chartId, newDomain) {\n\t\tthis.clearThreeCanvas();\n\t\tconst { chartConfig: initialChartConfig } = this.state;\n\t\tconst chartConfig = initialChartConfig\n\t\t\t.map(each => {\n\t\t\t\tif (each.id === chartId) {\n\t\t\t\t\tconst { yScale } = each;\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...each,\n\t\t\t\t\t\tyScale: yScale.copy().domain(newDomain),\n\t\t\t\t\t\tyPanEnabled: true,\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\treturn each;\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.setState({\n\t\t\tchartConfig,\n\t\t});\n\t}\n\ttriggerEvent(type, props, e) {\n\t\t// console.log(\"triggering ->\", type);\n\n\t\tthis.subscriptions.forEach(each => {\n\t\t\tconst state = {\n\t\t\t\t...this.state,\n\t\t\t\tfullData: this.fullData,\n\t\t\t\tsubscriptions: this.subscriptions,\n\t\t\t};\n\t\t\teach.listener(type, props, state, e);\n\t\t});\n\t}\n\tdraw(props) {\n\t\tthis.subscriptions.forEach(each => {\n\t\t\tif (isDefined(each.draw))\n\t\t\t\teach.draw(props);\n\t\t});\n\t}\n\tredraw() {\n\t\tthis.clearThreeCanvas();\n\t\tthis.draw({ force: true });\n\t}\n\tpanHelper(mouseXY, initialXScale, { dx, dy }, chartsToPan) {\n\t\tconst { xAccessor, displayXAccessor, chartConfig: initialChartConfig } = this.state;\n\t\tconst { filterData } = this.state;\n\t\tconst { fullData } = this;\n\t\tconst { postCalculator } = this.props;\n\n\t\t// console.log(dx, dy);\n\t\tif (isNotDefined(initialXScale.invert))\n\t\t\tthrow new Error(\"xScale provided does not have an invert() method.\"\n\t\t\t\t+ \"You are likely using an ordinal scale. This scale does not support zoom, pan\");\n\n\t\tconst newDomain = initialXScale.range().map(x => x - dx).map(initialXScale.invert);\n\n\t\tconst { plotData: beforePlotData, domain } = filterData(\n\t\t\tfullData,\n\t\t\tnewDomain,\n\t\t\txAccessor,\n\t\t\tinitialXScale,\n\t\t\t{\n\t\t\t\tcurrentPlotData: this.hackyWayToStopPanBeyondBounds__plotData,\n\t\t\t\tcurrentDomain: this.hackyWayToStopPanBeyondBounds__domain\n\t\t\t}\n\t\t);\n\n\t\tconst updatedScale = initialXScale.copy().domain(domain);\n\t\tconst plotData = postCalculator(beforePlotData);\n\t\t// console.log(last(plotData));\n\n\t\tconst currentItem = getCurrentItem(updatedScale, xAccessor, mouseXY, plotData);\n\t\tconst chartConfig = getChartConfigWithUpdatedYScales(\n\t\t\tinitialChartConfig,\n\t\t\t{ plotData, xAccessor, displayXAccessor, fullData },\n\t\t\tupdatedScale.domain(),\n\t\t\tdy,\n\t\t\tchartsToPan\n\t\t);\n\t\tconst currentCharts = getCurrentCharts(chartConfig, mouseXY);\n\n\t\t// console.log(initialXScale.domain(), newDomain, updatedScale.domain());\n\t\treturn {\n\t\t\txScale: updatedScale,\n\t\t\tplotData,\n\t\t\tchartConfig,\n\t\t\tmouseXY,\n\t\t\tcurrentCharts,\n\t\t\tcurrentItem,\n\t\t};\n\t}\n\thandlePan(mousePosition, panStartXScale, dxdy, chartsToPan, e) {\n\t\tif (!this.waitingForPanAnimationFrame) {\n\t\t\tthis.waitingForPanAnimationFrame = true;\n\n\t\t\tthis.hackyWayToStopPanBeyondBounds__plotData = this.hackyWayToStopPanBeyondBounds__plotData || this.state.plotData;\n\t\t\tthis.hackyWayToStopPanBeyondBounds__domain = this.hackyWayToStopPanBeyondBounds__domain || this.state.xScale.domain();\n\n\t\t\tconst state = this.panHelper(mousePosition, panStartXScale, dxdy, chartsToPan);\n\n\t\t\tthis.hackyWayToStopPanBeyondBounds__plotData = state.plotData;\n\t\t\tthis.hackyWayToStopPanBeyondBounds__domain = state.xScale.domain();\n\n\t\t\tthis.panInProgress = true;\n\t\t\t// console.log(panStartXScale.domain(), state.xScale.domain());\n\n\t\t\tthis.triggerEvent(\"pan\", state, e);\n\n\t\t\tthis.mutableState = {\n\t\t\t\tmouseXY: state.mouseXY,\n\t\t\t\tcurrentItem: state.currentItem,\n\t\t\t\tcurrentCharts: state.currentCharts,\n\t\t\t};\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tthis.waitingForPanAnimationFrame = false;\n\t\t\t\tthis.clearBothCanvas();\n\t\t\t\tthis.draw({ trigger: \"pan\" });\n\t\t\t});\n\t\t}\n\t}\n\thandlePanEnd(mousePosition, panStartXScale, dxdy, chartsToPan, e) {\n\t\tconst state = this.panHelper(mousePosition, panStartXScale, dxdy, chartsToPan);\n\t\t// console.log(this.canvasDrawCallbackList.map(d => d.type));\n\t\tthis.hackyWayToStopPanBeyondBounds__plotData = null;\n\t\tthis.hackyWayToStopPanBeyondBounds__domain = null;\n\n\t\tthis.panInProgress = false;\n\n\t\t// console.log(\"PANEND\", panEnd++);\n\t\tconst {\n\t\t\txScale,\n\t\t\tplotData,\n\t\t\tchartConfig,\n\t\t} = state;\n\n\t\tthis.triggerEvent(\"panend\", state, e);\n\n\t\trequestAnimationFrame(() => {\n\t\t\tconst { xAccessor } = this.state;\n\t\t\tconst { fullData } = this;\n\n\t\t\tconst firstItem = head(fullData);\n\t\t\tconst start = head(xScale.domain());\n\t\t\tconst end = xAccessor(firstItem);\n\t\t\t// console.log(start, end, start < end ? \"Load more\" : \"I have it\");\n\n\t\t\tconst { onLoadMore } = this.props;\n\n\t\t\tthis.clearThreeCanvas();\n\n\t\t\tthis.setState({\n\t\t\t\txScale,\n\t\t\t\tplotData,\n\t\t\t\tchartConfig,\n\t\t\t}, () => {\n\t\t\t\tif (start < end) onLoadMore(start, end);\n\t\t\t});\n\t\t});\n\t}\n\thandleMouseDown(mousePosition, currentCharts, e) {\n\t\tthis.triggerEvent(\"mousedown\", this.mutableState, e);\n\t}\n\thandleMouseEnter(e) {\n\t\tthis.triggerEvent(\"mouseenter\", {\n\t\t\tshow: true,\n\t\t}, e);\n\t}\n\thandleMouseMove(mouseXY, inputType, e) {\n\t\tif (!this.waitingForMouseMoveAnimationFrame) {\n\t\t\tthis.waitingForMouseMoveAnimationFrame = true;\n\n\t\t\tconst { chartConfig, plotData, xScale, xAccessor } = this.state;\n\t\t\tconst currentCharts = getCurrentCharts(chartConfig, mouseXY);\n\t\t\tconst currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n\t\t\tthis.triggerEvent(\"mousemove\", {\n\t\t\t\tshow: true,\n\t\t\t\tmouseXY,\n\t\t\t\t// prevMouseXY is used in interactive components\n\t\t\t\tprevMouseXY: this.prevMouseXY,\n\t\t\t\tcurrentItem,\n\t\t\t\tcurrentCharts,\n\t\t\t}, e);\n\n\t\t\tthis.prevMouseXY = mouseXY;\n\t\t\tthis.mutableState = {\n\t\t\t\tmouseXY,\n\t\t\t\tcurrentItem,\n\t\t\t\tcurrentCharts,\n\t\t\t};\n\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tthis.clearMouseCanvas();\n\t\t\t\tthis.draw({ trigger: \"mousemove\" });\n\t\t\t\tthis.waitingForMouseMoveAnimationFrame = false;\n\t\t\t});\n\t\t}\n\t}\n\thandleMouseLeave(e) {\n\t\tthis.triggerEvent(\"mouseleave\", { show: false }, e);\n\t\tthis.clearMouseCanvas();\n\t\tthis.draw({ trigger: \"mouseleave\" });\n\t}\n\thandleDragStart({ startPos }, e) {\n\t\tthis.triggerEvent(\"dragstart\", { startPos }, e);\n\t}\n\thandleDrag({ startPos, mouseXY }, e) {\n\t\tconst { chartConfig, plotData, xScale, xAccessor } = this.state;\n\t\tconst currentCharts = getCurrentCharts(chartConfig, mouseXY);\n\t\tconst currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n\n\t\tthis.triggerEvent(\"drag\", {\n\t\t\tstartPos,\n\t\t\tmouseXY,\n\t\t\tcurrentItem,\n\t\t\tcurrentCharts,\n\t\t}, e);\n\n\t\tthis.mutableState = {\n\t\t\tmouseXY,\n\t\t\tcurrentItem,\n\t\t\tcurrentCharts,\n\t\t};\n\n\t\trequestAnimationFrame(() => {\n\t\t\tthis.clearMouseCanvas();\n\t\t\tthis.draw({ trigger: \"drag\" });\n\t\t});\n\t}\n\thandleDragEnd({ mouseXY }, e) {\n\t\tthis.triggerEvent(\"dragend\", { mouseXY }, e);\n\n\t\trequestAnimationFrame(() => {\n\t\t\tthis.clearMouseCanvas();\n\t\t\tthis.draw({ trigger: \"dragend\" });\n\t\t});\n\t}\n\thandleClick(mousePosition, e) {\n\t\tthis.triggerEvent(\"click\", this.mutableState, e);\n\n\t\trequestAnimationFrame(() => {\n\t\t\tthis.clearMouseCanvas();\n\t\t\tthis.draw({ trigger: \"click\" });\n\t\t});\n\t}\n\thandleDoubleClick(mousePosition, e) {\n\t\tthis.triggerEvent(\"dblclick\", {}, e);\n\t}\n\tgetChildContext() {\n\t\tconst dimensions = getDimensions(this.props);\n\t\treturn {\n\t\t\tfullData: this.fullData,\n\t\t\tplotData: this.state.plotData,\n\t\t\twidth: dimensions.width,\n\t\t\theight: dimensions.height,\n\t\t\tchartConfig: this.state.chartConfig,\n\t\t\txScale: this.state.xScale,\n\t\t\txAccessor: this.state.xAccessor,\n\t\t\tdisplayXAccessor: this.state.displayXAccessor,\n\t\t\tchartCanvasType: this.props.type,\n\t\t\tmargin: this.props.margin,\n\t\t\tratio: this.props.ratio,\n\t\t\txAxisZoom: this.xAxisZoom,\n\t\t\tyAxisZoom: this.yAxisZoom,\n\t\t\tgetCanvasContexts: this.getCanvasContexts,\n\t\t\tredraw: this.redraw,\n\t\t\tsubscribe: this.subscribe,\n\t\t\tunsubscribe: this.unsubscribe,\n\t\t\tgenerateSubscriptionId: this.generateSubscriptionId,\n\t\t\tgetMutableState: this.getMutableState,\n\t\t\tamIOnTop: this.amIOnTop,\n\t\t\tsetCursorClass: this.setCursorClass,\n\t\t};\n\t}\n\tcomponentWillMount() {\n\t\tconst { fullData, ...state } = resetChart(this.props, true);\n\t\tthis.setState(state);\n\t\tthis.fullData = fullData;\n\t}\n\tcomponentWillReceiveProps(nextProps) {\n\t\tconst reset = shouldResetChart(this.props, nextProps);\n\n\t\tconst interaction = isInteractionEnabled(this.state.xScale, this.state.xAccessor, this.state.plotData);\n\t\tconst { chartConfig: initialChartConfig } = this.state;\n\n\t\tlet newState;\n\t\tif (!interaction || reset || !shallowEqual(this.props.xExtents, nextProps.xExtents)) {\n\t\t\tif (process.env.NODE_ENV !== \"production\") {\n\t\t\t\tif (!interaction)\n\t\t\t\t\tlog(\"RESET CHART, changes to a non interactive chart\");\n\t\t\t\telse if (reset)\n\t\t\t\t\tlog(\"RESET CHART, one or more of these props changed\", CANDIDATES_FOR_RESET);\n\t\t\t\telse\n\t\t\t\t\tlog(\"xExtents changed\");\n\t\t\t}\n\t\t\t// do reset\n\t\t\tnewState = resetChart(nextProps);\n\t\t\tthis.mutableState = {};\n\t\t} else {\n\n\t\t\tconst [start, end] = this.state.xScale.domain();\n\t\t\tconst prevLastItem = last(this.fullData);\n\n\t\t\tconst calculatedState = calculateFullData(nextProps);\n\t\t\tconst { xAccessor } = calculatedState;\n\t\t\tconst lastItemWasVisible = xAccessor(prevLastItem) <= end && xAccessor(prevLastItem) >= start;\n\n\t\t\tif (process.env.NODE_ENV !== \"production\") {\n\t\t\t\tif (this.props.data !== nextProps.data)\n\t\t\t\t\tlog(\"data is changed but seriesName did not, change the seriesName if you wish to reset the chart and lastItemWasVisible = \", lastItemWasVisible);\n\t\t\t\telse\n\t\t\t\t\tlog(\"Trivial change, may be width/height or type changed, but that does not matter\");\n\t\t\t}\n\n\t\t\tnewState = updateChart(\n\t\t\t\tcalculatedState,\n\t\t\t\tthis.state.xScale,\n\t\t\t\tnextProps,\n\t\t\t\tlastItemWasVisible,\n\t\t\t\tinitialChartConfig,\n\t\t\t);\n\t\t}\n\n\t\tconst { fullData, ...state } = newState;\n\n\t\tif (this.panInProgress) {\n\t\t\tif (process.env.NODE_ENV !== \"production\") {\n\t\t\t\tlog(\"Pan is in progress\");\n\t\t\t}\n\t\t} else {\n\t\t\t/*\n\t\t\tif (!reset) {\n\t\t\t\tstate.chartConfig\n\t\t\t\t\t.forEach((each) => {\n\t\t\t\t\t\t// const sourceChartConfig = initialChartConfig.filter(d => d.id === each.id);\n\t\t\t\t\t\tconst prevChartConfig = find(initialChartConfig, d => d.id === each.id);\n\t\t\t\t\t\tif (isDefined(prevChartConfig) && prevChartConfig.yPanEnabled) {\n\t\t\t\t\t\t\teach.yScale.domain(prevChartConfig.yScale.domain());\n\t\t\t\t\t\t\teach.yPanEnabled = prevChartConfig.yPanEnabled;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\t*/\n\t\t\tthis.clearThreeCanvas();\n\n\t\t\tthis.setState(state);\n\t\t}\n\t\tthis.fullData = fullData;\n\t}\n\t/*\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tconsole.error(this.state.chartConfig, this.state.chartConfig.map(d => d.yScale.domain()));\n\t}\n\t*/\n\tresetYDomain(chartId) {\n\t\tconst { chartConfig } = this.state;\n\t\tlet changed = false;\n\t\tconst newChartConfig = chartConfig\n\t\t\t.map(each => {\n\t\t\t\tif ((isNotDefined(chartId) || each.id === chartId)\n\t\t\t\t\t\t&& !shallowEqual(each.yScale.domain(), each.realYDomain)) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...each,\n\t\t\t\t\t\tyScale: each.yScale.domain(each.realYDomain),\n\t\t\t\t\t\tyPanEnabled: false,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn each;\n\t\t\t});\n\n\t\tif (changed) {\n\t\t\tthis.clearThreeCanvas();\n\t\t\tthis.setState({\n\t\t\t\tchartConfig: newChartConfig\n\t\t\t});\n\t\t}\n\t}\n\tshouldComponentUpdate() {\n\t\t// console.log(\"Happneing.....\", !this.panInProgress)\n\t\treturn !this.panInProgress;\n\t}\n\trender() {\n\n\t\tconst { type, height, width, margin, className, zIndex, defaultFocus, ratio, mouseMoveEvent, panEvent, zoomEvent } = this.props;\n\t\tconst { useCrossHairStyleCursor, onSelect } = this.props;\n\n\t\tconst { plotData, xScale, xAccessor, chartConfig } = this.state;\n\t\tconst dimensions = getDimensions(this.props);\n\n\t\tconst interaction = isInteractionEnabled(xScale, xAccessor, plotData);\n\n\t\tconst cursorStyle = useCrossHairStyleCursor && interaction;\n\t\tconst cursor = getCursorStyle();\n\t\treturn (\n\t\t\t<div style={{ position: \"relative\", width, height }} className={className} onClick={onSelect}>\n\t\t\t\t<CanvasContainer ref={this.saveCanvasContainerNode}\n\t\t\t\t\ttype={type}\n\t\t\t\t\tratio={ratio}\n\t\t\t\t\twidth={width} height={height} zIndex={zIndex}/>\n\t\t\t\t<svg className={className} width={width} height={height} style={{ position: \"absolute\", zIndex: (zIndex + 5) }}>\n\t\t\t\t\t{cursor}\n\t\t\t\t\t<defs>\n\t\t\t\t\t\t<clipPath id=\"chart-area-clip\">\n\t\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width={dimensions.width} height={dimensions.height} />\n\t\t\t\t\t\t</clipPath>\n\t\t\t\t\t\t{chartConfig\n\t\t\t\t\t\t\t.map((each, idx) => <clipPath key={idx} id={`chart-area-clip-${each.id}`}>\n\t\t\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width={each.width} height={each.height} />\n\t\t\t\t\t\t\t</clipPath>)}\n\t\t\t\t\t</defs>\n\t\t\t\t\t<g transform={`translate(${margin.left + 0.5}, ${margin.top + 0.5})`}>\n\t\t\t\t\t\t<EventCapture\n\t\t\t\t\t\t\tref={this.saveEventCaptureNode}\n\t\t\t\t\t\t\tuseCrossHairStyleCursor={cursorStyle}\n\t\t\t\t\t\t\tmouseMove={mouseMoveEvent && interaction}\n\t\t\t\t\t\t\tzoom={zoomEvent && interaction}\n\t\t\t\t\t\t\tpan={panEvent && interaction}\n\n\t\t\t\t\t\t\twidth={dimensions.width}\n\t\t\t\t\t\t\theight={dimensions.height}\n\t\t\t\t\t\t\tchartConfig={chartConfig}\n\t\t\t\t\t\t\txScale={xScale}\n\t\t\t\t\t\t\txAccessor={xAccessor}\n\t\t\t\t\t\t\tfocus={defaultFocus}\n\t\t\t\t\t\t\tdisableInteraction={this.props.disableInteraction}\n\n\t\t\t\t\t\t\tgetAllPanConditions={this.getAllPanConditions}\n\t\t\t\t\t\t\tonContextMenu={this.handleContextMenu}\n\t\t\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\t\t\tonDoubleClick={this.handleDoubleClick}\n\t\t\t\t\t\t\tonMouseDown={this.handleMouseDown}\n\t\t\t\t\t\t\tonMouseMove={this.handleMouseMove}\n\t\t\t\t\t\t\tonMouseEnter={this.handleMouseEnter}\n\t\t\t\t\t\t\tonMouseLeave={this.handleMouseLeave}\n\n\t\t\t\t\t\t\tonDragStart={this.handleDragStart}\n\t\t\t\t\t\t\tonDrag={this.handleDrag}\n\t\t\t\t\t\t\tonDragComplete={this.handleDragEnd}\n\n\t\t\t\t\t\t\tonZoom={this.handleZoom}\n\t\t\t\t\t\t\tonPinchZoom={this.handlePinchZoom}\n\t\t\t\t\t\t\tonPinchZoomEnd={this.handlePinchZoomEnd}\n\t\t\t\t\t\t\tonPan={this.handlePan}\n\t\t\t\t\t\t\tonPanEnd={this.handlePanEnd}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<g className=\"react-stockcharts-avoid-interaction\">\n\t\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t\t</g>\n\t\t\t\t\t</g>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction isInteractionEnabled(xScale, xAccessor, data) {\n\tconst interaction = !isNaN(xScale(xAccessor(head(data)))) && isDefined(xScale.invert);\n\treturn interaction;\n}\n\nChartCanvas.propTypes = {\n\twidth: PropTypes.number.isRequired,\n\theight: PropTypes.number.isRequired,\n\tmargin: PropTypes.object,\n\tratio: PropTypes.number.isRequired,\n\t// interval: PropTypes.oneOf([\"D\", \"W\", \"M\"]), // ,\"m1\", \"m5\", \"m15\", \"W\", \"M\"\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]),\n\tpointsPerPxThreshold: PropTypes.number,\n\tminPointsPerPxThreshold: PropTypes.number,\n\tdata: PropTypes.array.isRequired,\n\t// initialDisplay: PropTypes.number,\n\txAccessor: PropTypes.func,\n\txExtents: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.func\n\t]),\n\tzoomAnchor: PropTypes.func,\n\n\tclassName: PropTypes.string,\n\tseriesName: PropTypes.string.isRequired,\n\tzIndex: PropTypes.number,\n\tchildren: PropTypes.node.isRequired,\n\txScale: PropTypes.func.isRequired,\n\tpostCalculator: PropTypes.func,\n\tflipXScale: PropTypes.bool,\n\tuseCrossHairStyleCursor: PropTypes.bool,\n\tpadding: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.shape({\n\t\t\tleft: PropTypes.number,\n\t\t\tright: PropTypes.number,\n\t\t})\n\t]),\n\tdefaultFocus: PropTypes.bool,\n\tzoomMultiplier: PropTypes.number,\n\tonLoadMore: PropTypes.func,\n\tdisplayXAccessor: function(props, propName/* , componentName */) {\n\t\tif (isNotDefined(props[propName])) {\n\t\t\tconsole.warn(\"`displayXAccessor` is not defined,\"\n\t\t\t\t+ \" will use the value from `xAccessor` as `displayXAccessor`.\"\n\t\t\t\t+ \" This might be ok if you do not use a discontinuous scale\"\n\t\t\t\t+ \" but if you do, provide a `displayXAccessor` prop to `ChartCanvas`\");\n\t\t} else if (typeof props[propName] !== \"function\") {\n\t\t\treturn new Error(\"displayXAccessor has to be a function\");\n\t\t}\n\t},\n\tmouseMoveEvent: PropTypes.bool,\n\tpanEvent: PropTypes.bool,\n\tclamp: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]),\n\tzoomEvent: PropTypes.bool,\n\tonSelect: PropTypes.func,\n\tmaintainPointsPerPixelOnResize: PropTypes.bool,\n\tdisableInteraction: PropTypes.bool,\n};\n\nChartCanvas.defaultProps = {\n\tmargin: { top: 20, right: 30, bottom: 30, left: 80 },\n\ttype: \"hybrid\",\n\tpointsPerPxThreshold: 2,\n\tminPointsPerPxThreshold: 1 / 100,\n\tclassName: \"react-stockchart\",\n\tzIndex: 1,\n\txExtents: [min, max],\n\tpostCalculator: identity,\n\tpadding: 0,\n\txAccessor: identity,\n\tflipXScale: false,\n\tuseCrossHairStyleCursor: true,\n\tdefaultFocus: true,\n\tonLoadMore: noop,\n\tonSelect: noop,\n\tmouseMoveEvent: true,\n\tpanEvent: true,\n\tzoomEvent: true,\n\tzoomMultiplier: 1.1,\n\tclamp: false,\n\tzoomAnchor: mouseBasedZoomAnchor,\n\tmaintainPointsPerPixelOnResize: true,\n\t// ratio: 2,\n\tdisableInteraction: false,\n};\n\nChartCanvas.childContextTypes = {\n\tplotData: PropTypes.array,\n\tfullData: PropTypes.array,\n\tchartConfig: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\t\t\torigin: PropTypes.arrayOf(PropTypes.number).isRequired,\n\t\t\tpadding: PropTypes.oneOfType([\n\t\t\t\tPropTypes.number,\n\t\t\t\tPropTypes.shape({\n\t\t\t\t\ttop: PropTypes.number,\n\t\t\t\t\tbottom: PropTypes.number,\n\t\t\t\t})\n\t\t\t]),\n\t\t\tyExtents: PropTypes.arrayOf(PropTypes.func),\n\t\t\tyExtentsProvider: PropTypes.func,\n\t\t\tyScale: PropTypes.func.isRequired,\n\t\t\tmouseCoordinates: PropTypes.shape({\n\t\t\t\tat: PropTypes.string,\n\t\t\t\tformat: PropTypes.func\n\t\t\t}),\n\t\t\twidth: PropTypes.number.isRequired,\n\t\t\theight: PropTypes.number.isRequired,\n\t\t})\n\t).isRequired,\n\txScale: PropTypes.func.isRequired,\n\txAccessor: PropTypes.func.isRequired,\n\tdisplayXAccessor: PropTypes.func.isRequired,\n\twidth: PropTypes.number.isRequired,\n\theight: PropTypes.number.isRequired,\n\tchartCanvasType: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n\tmargin: PropTypes.object.isRequired,\n\tratio: PropTypes.number.isRequired,\n\tgetCanvasContexts: PropTypes.func,\n\txAxisZoom: PropTypes.func,\n\tyAxisZoom: PropTypes.func,\n\tamIOnTop: PropTypes.func,\n\tredraw: PropTypes.func,\n\tsubscribe: PropTypes.func,\n\tunsubscribe: PropTypes.func,\n\tsetCursorClass: PropTypes.func,\n\tgenerateSubscriptionId: PropTypes.func,\n\tgetMutableState: PropTypes.func,\n};\n\nChartCanvas.ohlcv = d => ({ date: d.date, open: d.open, high: d.high, low: d.low, close: d.close, volume: d.volume });\n\nexport default ChartCanvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}