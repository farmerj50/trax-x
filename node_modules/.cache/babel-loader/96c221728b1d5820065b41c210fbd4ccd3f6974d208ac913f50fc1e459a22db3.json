{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabby\\\\trax-x\\\\src\\\\components\\\\CandlestickChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { createChart } from \"lightweight-charts\";\nimport \"./CandlestickChart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CandlestickChart = ({\n  ticker,\n  entryPoint,\n  exitPoint,\n  additionalData\n}) => {\n  _s();\n  const chartContainerRef = useRef(null);\n  useEffect(() => {\n    // Initialize the chart\n    const chart = createChart(chartContainerRef.current, {\n      width: chartContainerRef.current.clientWidth || 700,\n      height: 400,\n      layout: {\n        backgroundColor: \"#ffffff\",\n        textColor: \"#000000\"\n      },\n      grid: {\n        vertLines: {\n          color: \"#eeeeee\"\n        },\n        horzLines: {\n          color: \"#eeeeee\"\n        }\n      },\n      priceScale: {\n        borderColor: \"#cccccc\"\n      },\n      timeScale: {\n        borderColor: \"#cccccc\"\n      }\n    });\n\n    // Add candlestick series\n    const candlestickSeries = chart.addCandlestickSeries();\n    fetch(`http://localhost:5000/api/candlestick?ticker=${ticker}`).then(response => response.json()).then(data => {\n      if (data.dates && data.open && data.high && data.low && data.close) {\n        var _formattedData$, _formattedData;\n        const formattedData = data.dates.map((date, index) => ({\n          time: date,\n          open: data.open[index],\n          high: data.high[index],\n          low: data.low[index],\n          close: data.close[index]\n        }));\n        candlestickSeries.setData(formattedData);\n\n        // Add entry and exit points as markers\n        candlestickSeries.setMarkers([{\n          time: (_formattedData$ = formattedData[0]) === null || _formattedData$ === void 0 ? void 0 : _formattedData$.time,\n          position: \"belowBar\",\n          color: \"green\",\n          shape: \"arrowUp\",\n          text: `Entry: ${entryPoint.toFixed(2)}`\n        }, {\n          time: (_formattedData = formattedData[formattedData.length - 1]) === null || _formattedData === void 0 ? void 0 : _formattedData.time,\n          position: \"aboveBar\",\n          color: \"red\",\n          shape: \"arrowDown\",\n          text: `Exit: ${exitPoint.toFixed(2)}`\n        }]);\n\n        // Add current price line\n        const currentPrice = formattedData[formattedData.length - 1].close;\n        candlestickSeries.createPriceLine({\n          price: currentPrice,\n          color: \"blue\",\n          lineWidth: 2,\n          lineStyle: 1,\n          // 0 = Solid, 1 = Dotted, 2 = Dashed\n          axisLabelVisible: true,\n          title: `Current: ${currentPrice.toFixed(2)}`\n        });\n      }\n    }).catch(err => console.error(\"Failed to fetch candlestick data:\", err));\n\n    // Resize the chart on window resize\n    const handleResize = () => {\n      chart.applyOptions({\n        width: chartContainerRef.current.clientWidth\n      });\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n      chart.remove();\n    };\n  }, [ticker, entryPoint, exitPoint]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"chart-title\",\n      children: ticker\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chartContainerRef,\n      className: \"chart-wrapper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: additionalData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Entry Point:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), \" $\", entryPoint.toFixed(2), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 66\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Exit Point:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), \" $\", exitPoint.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(CandlestickChart, \"ZI1LdXO604IZpmh0kAttG3FSLiA=\");\n_c = CandlestickChart;\nexport default CandlestickChart;\nvar _c;\n$RefreshReg$(_c, \"CandlestickChart\");","map":{"version":3,"names":["React","useEffect","useRef","createChart","jsxDEV","_jsxDEV","CandlestickChart","ticker","entryPoint","exitPoint","additionalData","_s","chartContainerRef","chart","current","width","clientWidth","height","layout","backgroundColor","textColor","grid","vertLines","color","horzLines","priceScale","borderColor","timeScale","candlestickSeries","addCandlestickSeries","fetch","then","response","json","data","dates","open","high","low","close","_formattedData$","_formattedData","formattedData","map","date","index","time","setData","setMarkers","position","shape","text","toFixed","length","currentPrice","createPriceLine","price","lineWidth","lineStyle","axisLabelVisible","title","catch","err","console","error","handleResize","applyOptions","window","addEventListener","removeEventListener","remove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/gabby/trax-x/src/components/CandlestickChart.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { createChart } from \"lightweight-charts\";\r\nimport \"./CandlestickChart.css\";\r\n\r\nconst CandlestickChart = ({ ticker, entryPoint, exitPoint, additionalData }) => {\r\n  const chartContainerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Initialize the chart\r\n    const chart = createChart(chartContainerRef.current, {\r\n      width: chartContainerRef.current.clientWidth || 700,\r\n      height: 400,\r\n      layout: {\r\n        backgroundColor: \"#ffffff\",\r\n        textColor: \"#000000\",\r\n      },\r\n      grid: {\r\n        vertLines: { color: \"#eeeeee\" },\r\n        horzLines: { color: \"#eeeeee\" },\r\n      },\r\n      priceScale: { borderColor: \"#cccccc\" },\r\n      timeScale: { borderColor: \"#cccccc\" },\r\n    });\r\n\r\n    // Add candlestick series\r\n    const candlestickSeries = chart.addCandlestickSeries();\r\n\r\n    fetch(`http://localhost:5000/api/candlestick?ticker=${ticker}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.dates && data.open && data.high && data.low && data.close) {\r\n          const formattedData = data.dates.map((date, index) => ({\r\n            time: date,\r\n            open: data.open[index],\r\n            high: data.high[index],\r\n            low: data.low[index],\r\n            close: data.close[index],\r\n          }));\r\n          candlestickSeries.setData(formattedData);\r\n\r\n          // Add entry and exit points as markers\r\n          candlestickSeries.setMarkers([\r\n            {\r\n              time: formattedData[0]?.time,\r\n              position: \"belowBar\",\r\n              color: \"green\",\r\n              shape: \"arrowUp\",\r\n              text: `Entry: ${entryPoint.toFixed(2)}`,\r\n            },\r\n            {\r\n              time: formattedData[formattedData.length - 1]?.time,\r\n              position: \"aboveBar\",\r\n              color: \"red\",\r\n              shape: \"arrowDown\",\r\n              text: `Exit: ${exitPoint.toFixed(2)}`,\r\n            },\r\n          ]);\r\n\r\n          // Add current price line\r\n          const currentPrice = formattedData[formattedData.length - 1].close;\r\n          candlestickSeries.createPriceLine({\r\n            price: currentPrice,\r\n            color: \"blue\",\r\n            lineWidth: 2,\r\n            lineStyle: 1, // 0 = Solid, 1 = Dotted, 2 = Dashed\r\n            axisLabelVisible: true,\r\n            title: `Current: ${currentPrice.toFixed(2)}`,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => console.error(\"Failed to fetch candlestick data:\", err));\r\n\r\n    // Resize the chart on window resize\r\n    const handleResize = () => {\r\n      chart.applyOptions({ width: chartContainerRef.current.clientWidth });\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n      chart.remove();\r\n    };\r\n  }, [ticker, entryPoint, exitPoint]);\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <h3 className=\"chart-title\">{ticker}</h3>\r\n      <div ref={chartContainerRef} className=\"chart-wrapper\"></div>\r\n      <div className=\"chart-info\">\r\n        <p>{additionalData}</p>\r\n        <p>\r\n          <strong>Entry Point:</strong> ${entryPoint.toFixed(2)} <br />\r\n          <strong>Exit Point:</strong> ${exitPoint.toFixed(2)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CandlestickChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}