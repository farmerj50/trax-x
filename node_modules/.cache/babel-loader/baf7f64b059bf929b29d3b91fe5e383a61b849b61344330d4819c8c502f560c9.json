{"ast":null,"code":"import * as React from \"react\";\nimport { LineSeries } from \"./LineSeries\";\nimport { StraightLine } from \"./StraightLine\";\n/**\n * The Stochastic Oscillator is a momentum indicator that shows the location of the close relative to the high-low range over a set number of periods.\n */\nexport class StochasticSeries extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.yAccessorForK = d => {\n      const {\n        yAccessor\n      } = this.props;\n      return yAccessor(d) && yAccessor(d).K;\n    };\n    this.yAccessorForD = d => {\n      const {\n        yAccessor\n      } = this.props;\n      return yAccessor(d) && yAccessor(d).D;\n    };\n  }\n  render() {\n    const {\n      className,\n      strokeStyle = StochasticSeries.defaultProps.strokeStyle,\n      overSold,\n      middle,\n      overBought\n    } = this.props;\n    return React.createElement(\"g\", {\n      className: className\n    }, React.createElement(LineSeries, {\n      yAccessor: this.yAccessorForD,\n      strokeStyle: strokeStyle.dLine\n    }), React.createElement(LineSeries, {\n      yAccessor: this.yAccessorForK,\n      strokeStyle: strokeStyle.kLine\n    }), React.createElement(StraightLine, {\n      strokeStyle: strokeStyle.top,\n      yValue: overSold\n    }), React.createElement(StraightLine, {\n      strokeStyle: strokeStyle.middle,\n      yValue: middle\n    }), React.createElement(StraightLine, {\n      strokeStyle: strokeStyle.bottom,\n      yValue: overBought\n    }));\n  }\n}\nStochasticSeries.defaultProps = {\n  className: \"react-financial-charts-stochastic-series\",\n  strokeStyle: {\n    top: \"rgba(150, 75, 0, 0.3)\",\n    middle: \"rgba(0, 0, 0, 0.3)\",\n    bottom: \"rgba(150, 75, 0, 0.3)\",\n    dLine: \"#EA2BFF\",\n    kLine: \"#74D400\"\n  },\n  overSold: 80,\n  middle: 50,\n  overBought: 20\n};","map":{"version":3,"names":["React","LineSeries","StraightLine","StochasticSeries","Component","constructor","yAccessorForK","d","yAccessor","props","K","yAccessorForD","D","render","className","strokeStyle","defaultProps","overSold","middle","overBought","createElement","dLine","kLine","top","yValue","bottom"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\series\\src\\StochasticSeries.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport { LineSeries } from \"./LineSeries\";\nimport { StraightLine } from \"./StraightLine\";\n\nexport interface StochasticSeriesProps {\n    readonly className?: string;\n    readonly overBought?: number;\n    readonly overSold?: number;\n    readonly middle?: number;\n    readonly strokeStyle?: {\n        top: string;\n        middle: string;\n        bottom: string;\n        dLine: string;\n        kLine: string;\n    };\n    readonly yAccessor: (data: any) => { K: number; D: number };\n}\n\n/**\n * The Stochastic Oscillator is a momentum indicator that shows the location of the close relative to the high-low range over a set number of periods.\n */\nexport class StochasticSeries extends React.Component<StochasticSeriesProps> {\n    public static defaultProps = {\n        className: \"react-financial-charts-stochastic-series\",\n        strokeStyle: {\n            top: \"rgba(150, 75, 0, 0.3)\",\n            middle: \"rgba(0, 0, 0, 0.3)\",\n            bottom: \"rgba(150, 75, 0, 0.3)\",\n            dLine: \"#EA2BFF\",\n            kLine: \"#74D400\",\n        },\n        overSold: 80,\n        middle: 50,\n        overBought: 20,\n    };\n\n    public render() {\n        const {\n            className,\n            strokeStyle = StochasticSeries.defaultProps.strokeStyle,\n            overSold,\n            middle,\n            overBought,\n        } = this.props;\n\n        return (\n            <g className={className}>\n                <LineSeries yAccessor={this.yAccessorForD} strokeStyle={strokeStyle.dLine} />\n                <LineSeries yAccessor={this.yAccessorForK} strokeStyle={strokeStyle.kLine} />\n                <StraightLine strokeStyle={strokeStyle.top} yValue={overSold} />\n                <StraightLine strokeStyle={strokeStyle.middle} yValue={middle} />\n                <StraightLine strokeStyle={strokeStyle.bottom} yValue={overBought} />\n            </g>\n        );\n    }\n\n    private readonly yAccessorForK = (d: any) => {\n        const { yAccessor } = this.props;\n\n        return yAccessor(d) && yAccessor(d).K;\n    };\n\n    private readonly yAccessorForD = (d: any) => {\n        const { yAccessor } = this.props;\n\n        return yAccessor(d) && yAccessor(d).D;\n    };\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,YAAY,QAAQ,gBAAgB;AAiB7C;;;AAGA,OAAM,MAAOC,gBAAiB,SAAQH,KAAK,CAACI,SAAgC;EAA5EC,YAAA;;IAmCqB,KAAAC,aAAa,GAAIC,CAAM,IAAI;MACxC,MAAM;QAAEC;MAAS,CAAE,GAAG,IAAI,CAACC,KAAK;MAEhC,OAAOD,SAAS,CAACD,CAAC,CAAC,IAAIC,SAAS,CAACD,CAAC,CAAC,CAACG,CAAC;IACzC,CAAC;IAEgB,KAAAC,aAAa,GAAIJ,CAAM,IAAI;MACxC,MAAM;QAAEC;MAAS,CAAE,GAAG,IAAI,CAACC,KAAK;MAEhC,OAAOD,SAAS,CAACD,CAAC,CAAC,IAAIC,SAAS,CAACD,CAAC,CAAC,CAACK,CAAC;IACzC,CAAC;EACL;EA/BWC,MAAMA,CAAA;IACT,MAAM;MACFC,SAAS;MACTC,WAAW,GAAGZ,gBAAgB,CAACa,YAAY,CAACD,WAAW;MACvDE,QAAQ;MACRC,MAAM;MACNC;IAAU,CACb,GAAG,IAAI,CAACV,KAAK;IAEd,OACIT,KAAA,CAAAoB,aAAA;MAAGN,SAAS,EAAEA;IAAS,GACnBd,KAAA,CAAAoB,aAAA,CAACnB,UAAU;MAACO,SAAS,EAAE,IAAI,CAACG,aAAa;MAAEI,WAAW,EAAEA,WAAW,CAACM;IAAK,EAAI,EAC7ErB,KAAA,CAAAoB,aAAA,CAACnB,UAAU;MAACO,SAAS,EAAE,IAAI,CAACF,aAAa;MAAES,WAAW,EAAEA,WAAW,CAACO;IAAK,EAAI,EAC7EtB,KAAA,CAAAoB,aAAA,CAAClB,YAAY;MAACa,WAAW,EAAEA,WAAW,CAACQ,GAAG;MAAEC,MAAM,EAAEP;IAAQ,EAAI,EAChEjB,KAAA,CAAAoB,aAAA,CAAClB,YAAY;MAACa,WAAW,EAAEA,WAAW,CAACG,MAAM;MAAEM,MAAM,EAAEN;IAAM,EAAI,EACjElB,KAAA,CAAAoB,aAAA,CAAClB,YAAY;MAACa,WAAW,EAAEA,WAAW,CAACU,MAAM;MAAED,MAAM,EAAEL;IAAU,EAAI,CACrE;EAEZ;;AAhCchB,gBAAA,CAAAa,YAAY,GAAG;EACzBF,SAAS,EAAE,0CAA0C;EACrDC,WAAW,EAAE;IACTQ,GAAG,EAAE,uBAAuB;IAC5BL,MAAM,EAAE,oBAAoB;IAC5BO,MAAM,EAAE,uBAAuB;IAC/BJ,KAAK,EAAE,SAAS;IAChBC,KAAK,EAAE;GACV;EACDL,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE,EAAE;EACVC,UAAU,EAAE;CACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}