{"ast":null,"code":"import { isDefined, isNotDefined, mapObject } from \"@react-financial-charts/core\";\nexport function getValueFromOverride(override, index, key, defaultValue) {\n  if (isDefined(override) && override.index === index) {\n    return override[key];\n  }\n  return defaultValue;\n}\nexport function terminate() {\n  // @ts-ignore\n  this.setState({\n    current: null,\n    override: null\n  });\n}\nexport function saveNodeType(type) {\n  return node => {\n    // @ts-ignore\n    if (isDefined(this.nodes)) {\n      // @ts-ignore\n      if (isNotDefined(node) && isDefined(this.nodes[type])) {\n        // @ts-ignore\n        delete this.nodes[type];\n      } else {\n        // @ts-ignore\n        this.nodes[type] = node;\n      }\n    } else {\n      // @ts-ignore\n      this.nodes = [];\n    }\n  };\n}\nexport function isHoverForInteractiveType(interactiveType) {\n  return function (moreProps) {\n    // this has to be function as it is bound to this\n    // @ts-ignore\n    if (isDefined(this.nodes)) {\n      // @ts-ignore\n      const selecedNodes = this.nodes.map(node => node.isHover(moreProps));\n      // @ts-ignore\n      const interactive = this.props[interactiveType].map((t, idx) => {\n        return Object.assign(Object.assign({}, t), {\n          selected: selecedNodes[idx]\n        });\n      });\n      return interactive;\n    }\n  };\n}\nexport function isHover(moreProps) {\n  // @ts-ignore\n  const hovering = mapObject(this.nodes, node => node.isHover(moreProps)).reduce((a, b) => {\n    return a || b;\n  });\n  return hovering;\n}\nfunction getMouseXY(moreProps, [ox, oy]) {\n  if (Array.isArray(moreProps.mouseXY)) {\n    const {\n      mouseXY: [x, y]\n    } = moreProps;\n    const mouseXY = [x - ox, y - oy];\n    return mouseXY;\n  }\n  return moreProps.mouseXY;\n}\nexport function getMorePropsForChart(moreProps, chartId) {\n  const {\n    chartConfig: chartConfigList\n  } = moreProps;\n  const chartConfig = chartConfigList.find(each => each.id === chartId);\n  const {\n    origin\n  } = chartConfig;\n  const mouseXY = getMouseXY(moreProps, origin);\n  return Object.assign(Object.assign({}, moreProps), {\n    chartConfig,\n    mouseXY\n  });\n}\nexport function getSelected(interactives) {\n  const selected = interactives.map(each => {\n    const objects = each.objects.filter(obj => {\n      return obj.selected;\n    });\n    return Object.assign(Object.assign({}, each), {\n      objects\n    });\n  }).filter(each => each.objects.length > 0);\n  return selected;\n}","map":{"version":3,"names":["isDefined","isNotDefined","mapObject","getValueFromOverride","override","index","key","defaultValue","terminate","setState","current","saveNodeType","type","node","nodes","isHoverForInteractiveType","interactiveType","moreProps","selecedNodes","map","isHover","interactive","props","t","idx","Object","assign","selected","hovering","reduce","a","b","getMouseXY","ox","oy","Array","isArray","mouseXY","x","y","getMorePropsForChart","chartId","chartConfig","chartConfigList","find","each","id","origin","getSelected","interactives","objects","filter","obj","length"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\interactive\\src\\utils.ts"],"sourcesContent":["import { isDefined, isNotDefined, mapObject } from \"@react-financial-charts/core\";\n\nexport function getValueFromOverride(override: any, index: any, key: any, defaultValue: any) {\n    if (isDefined(override) && override.index === index) {\n        return override[key];\n    }\n    return defaultValue;\n}\n\nexport function terminate() {\n    // @ts-ignore\n    this.setState({\n        current: null,\n        override: null,\n    });\n}\n\nexport function saveNodeType(type: any) {\n    return (node: any) => {\n        // @ts-ignore\n        if (isDefined(this.nodes)) {\n            // @ts-ignore\n            if (isNotDefined(node) && isDefined(this.nodes[type])) {\n                // @ts-ignore\n                delete this.nodes[type];\n            } else {\n                // @ts-ignore\n                this.nodes[type] = node;\n            }\n        } else {\n            // @ts-ignore\n            this.nodes = [];\n        }\n    };\n}\nexport function isHoverForInteractiveType(interactiveType: any) {\n    return function (moreProps: any) {\n        // this has to be function as it is bound to this\n\n        // @ts-ignore\n        if (isDefined(this.nodes)) {\n            // @ts-ignore\n            const selecedNodes = this.nodes.map((node) => node.isHover(moreProps));\n            // @ts-ignore\n            const interactive = this.props[interactiveType].map((t, idx) => {\n                return {\n                    ...t,\n                    selected: selecedNodes[idx],\n                };\n            });\n            return interactive;\n        }\n    };\n}\n\nexport function isHover(moreProps: any) {\n    // @ts-ignore\n    const hovering = mapObject(this.nodes, (node) => node.isHover(moreProps)).reduce((a, b) => {\n        return a || b;\n    });\n    return hovering;\n}\n\nfunction getMouseXY(moreProps: any, [ox, oy]: any) {\n    if (Array.isArray(moreProps.mouseXY)) {\n        const {\n            mouseXY: [x, y],\n        } = moreProps;\n        const mouseXY = [x - ox, y - oy];\n        return mouseXY;\n    }\n    return moreProps.mouseXY;\n}\n\nexport function getMorePropsForChart(moreProps: any, chartId: any) {\n    const { chartConfig: chartConfigList } = moreProps;\n    const chartConfig = chartConfigList.find((each: any) => each.id === chartId);\n\n    const { origin } = chartConfig;\n    const mouseXY = getMouseXY(moreProps, origin);\n    return {\n        ...moreProps,\n        chartConfig,\n        mouseXY,\n    };\n}\n\nexport function getSelected(interactives: any) {\n    const selected = interactives\n        .map((each: any) => {\n            const objects = each.objects.filter((obj: any) => {\n                return obj.selected;\n            });\n            return {\n                ...each,\n                objects,\n            };\n        })\n        .filter((each: any) => each.objects.length > 0);\n    return selected;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}