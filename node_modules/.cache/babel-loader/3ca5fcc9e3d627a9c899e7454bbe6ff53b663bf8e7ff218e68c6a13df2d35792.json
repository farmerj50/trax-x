{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabby\\\\trax-x\\\\src\\\\components\\\\CandlestickChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { createChart } from \"lightweight-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CandlestickChart = ({\n  ticker\n}) => {\n  _s();\n  const chartContainerRef = useRef(null);\n  const chartRef = useRef(null);\n  const candlestickSeriesRef = useRef(null);\n  useEffect(() => {\n    const initializeChart = () => {\n      // Initialize chart\n      const chart = createChart(chartContainerRef.current, {\n        width: chartContainerRef.current.offsetWidth || 1200,\n        height: 400,\n        layout: {\n          backgroundColor: \"#ffffff\",\n          textColor: \"#000000\"\n        },\n        grid: {\n          vertLines: {\n            color: \"#eeeeee\"\n          },\n          horzLines: {\n            color: \"#eeeeee\"\n          }\n        },\n        priceScale: {\n          borderColor: \"#cccccc\"\n        },\n        timeScale: {\n          borderColor: \"#cccccc\"\n        }\n      });\n      candlestickSeriesRef.current = chart.addCandlestickSeries();\n      chartRef.current = chart;\n\n      // Fetch initial data\n      const fetchChartData = async () => {\n        try {\n          const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${ticker}`);\n          const data = await response.json();\n          if (data.dates) {\n            const formattedData = data.dates.map((date, index) => ({\n              time: date,\n              open: data.open[index],\n              high: data.high[index],\n              low: data.low[index],\n              close: data.close[index]\n            }));\n            candlestickSeriesRef.current.setData(formattedData);\n          }\n        } catch (error) {\n          console.error(\"Error fetching data:\", error);\n        }\n      };\n      fetchChartData();\n    };\n    const handleResize = () => {\n      if (chartRef.current && chartContainerRef.current) {\n        const newWidth = Math.min(chartContainerRef.current.clientWidth, 1200);\n        const newHeight = 400;\n        chartRef.current.applyOptions({\n          width: newWidth,\n          height: newHeight\n        });\n\n        // Manually update canvas dimensions\n        const canvasElements = chartContainerRef.current.querySelectorAll(\"canvas\");\n        canvasElements.forEach(canvas => {\n          canvas.style.width = `${newWidth}px`;\n          canvas.style.height = `${newHeight}px`;\n        });\n      }\n    };\n    initializeChart();\n\n    // Set up ResizeObserver\n    const resizeObserver = new ResizeObserver(() => {\n      handleResize();\n    });\n    resizeObserver.observe(chartContainerRef.current);\n\n    // Cleanup\n    return () => {\n      resizeObserver.disconnect();\n      if (chartRef.current) {\n        chartRef.current.remove();\n        chartRef.current = null;\n      }\n    };\n  }, [ticker]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    ref: chartContainerRef,\n    style: {\n      width: \"100%\",\n      maxWidth: \"1200px\",\n      height: \"400px\",\n      margin: \"0 auto\",\n      border: \"2px solid #ccc\",\n      borderRadius: \"5px\",\n      overflow: \"hidden\",\n      backgroundColor: \"#ffffff\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(CandlestickChart, \"wszWNPaPFygBveW5LnAyw5U/s10=\");\n_c = CandlestickChart;\nexport default CandlestickChart;\nvar _c;\n$RefreshReg$(_c, \"CandlestickChart\");","map":{"version":3,"names":["React","useEffect","useRef","createChart","jsxDEV","_jsxDEV","CandlestickChart","ticker","_s","chartContainerRef","chartRef","candlestickSeriesRef","initializeChart","chart","current","width","offsetWidth","height","layout","backgroundColor","textColor","grid","vertLines","color","horzLines","priceScale","borderColor","timeScale","addCandlestickSeries","fetchChartData","response","fetch","data","json","dates","formattedData","map","date","index","time","open","high","low","close","setData","error","console","handleResize","newWidth","Math","min","clientWidth","newHeight","applyOptions","canvasElements","querySelectorAll","forEach","canvas","style","resizeObserver","ResizeObserver","observe","disconnect","remove","className","ref","maxWidth","margin","border","borderRadius","overflow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gabby/trax-x/src/components/CandlestickChart.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { createChart } from \"lightweight-charts\";\r\n\r\nconst CandlestickChart = ({ ticker }) => {\r\n  const chartContainerRef = useRef(null);\r\n  const chartRef = useRef(null);\r\n  const candlestickSeriesRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const initializeChart = () => {\r\n      // Initialize chart\r\n      const chart = createChart(chartContainerRef.current, {\r\n        width: chartContainerRef.current.offsetWidth || 1200,\r\n        height: 400,\r\n        layout: { backgroundColor: \"#ffffff\", textColor: \"#000000\" },\r\n        grid: { vertLines: { color: \"#eeeeee\" }, horzLines: { color: \"#eeeeee\" } },\r\n        priceScale: { borderColor: \"#cccccc\" },\r\n        timeScale: { borderColor: \"#cccccc\" },\r\n      });\r\n\r\n      candlestickSeriesRef.current = chart.addCandlestickSeries();\r\n      chartRef.current = chart;\r\n\r\n      // Fetch initial data\r\n      const fetchChartData = async () => {\r\n        try {\r\n          const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${ticker}`);\r\n          const data = await response.json();\r\n\r\n          if (data.dates) {\r\n            const formattedData = data.dates.map((date, index) => ({\r\n              time: date,\r\n              open: data.open[index],\r\n              high: data.high[index],\r\n              low: data.low[index],\r\n              close: data.close[index],\r\n            }));\r\n            candlestickSeriesRef.current.setData(formattedData);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n        }\r\n      };\r\n\r\n      fetchChartData();\r\n    };\r\n\r\n    const handleResize = () => {\r\n      if (chartRef.current && chartContainerRef.current) {\r\n        const newWidth = Math.min(chartContainerRef.current.clientWidth, 1200);\r\n        const newHeight = 400;\r\n\r\n        chartRef.current.applyOptions({ width: newWidth, height: newHeight });\r\n\r\n        // Manually update canvas dimensions\r\n        const canvasElements = chartContainerRef.current.querySelectorAll(\"canvas\");\r\n        canvasElements.forEach((canvas) => {\r\n          canvas.style.width = `${newWidth}px`;\r\n          canvas.style.height = `${newHeight}px`;\r\n        });\r\n      }\r\n    };\r\n\r\n    initializeChart();\r\n\r\n    // Set up ResizeObserver\r\n    const resizeObserver = new ResizeObserver(() => {\r\n      handleResize();\r\n    });\r\n\r\n    resizeObserver.observe(chartContainerRef.current);\r\n\r\n    // Cleanup\r\n    return () => {\r\n      resizeObserver.disconnect();\r\n      if (chartRef.current) {\r\n        chartRef.current.remove();\r\n        chartRef.current = null;\r\n      }\r\n    };\r\n  }, [ticker]);\r\n\r\n  return (\r\n    <div\r\n      className=\"chart-container\"\r\n      ref={chartContainerRef}\r\n      style={{\r\n        width: \"100%\",\r\n        maxWidth: \"1200px\",\r\n        height: \"400px\",\r\n        margin: \"0 auto\",\r\n        border: \"2px solid #ccc\",\r\n        borderRadius: \"5px\",\r\n        overflow: \"hidden\",\r\n        backgroundColor: \"#ffffff\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CandlestickChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}