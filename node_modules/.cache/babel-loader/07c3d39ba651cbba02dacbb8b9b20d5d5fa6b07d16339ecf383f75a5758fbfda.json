{"ast":null,"code":"import { getCurrentItem } from \"../utils/ChartDataUtil\";\nimport { last } from \"../utils/index\";\nexport const mouseBasedZoomAnchor = options => {\n  const {\n    xScale,\n    xAccessor,\n    mouseXY,\n    plotData\n  } = options;\n  const currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n  return xAccessor(currentItem);\n};\nexport const lastVisibleItemBasedZoomAnchor = options => {\n  const {\n    xAccessor,\n    plotData\n  } = options;\n  const lastItem = last(plotData);\n  return xAccessor(lastItem);\n};\nexport const rightDomainBasedZoomAnchor = options => {\n  const {\n    xScale\n  } = options;\n  const [, end] = xScale.domain();\n  return end;\n};","map":{"version":3,"names":["getCurrentItem","last","mouseBasedZoomAnchor","options","xScale","xAccessor","mouseXY","plotData","currentItem","lastVisibleItemBasedZoomAnchor","lastItem","rightDomainBasedZoomAnchor","end","domain"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\core\\src\\zoom\\zoomBehavior.ts"],"sourcesContent":["import { ScaleContinuousNumeric, ScaleTime } from \"d3-scale\";\nimport { getCurrentItem } from \"../utils/ChartDataUtil\";\nimport { last } from \"../utils/index\";\n\nexport interface IZoomAnchorOptions<TData, TXAxis extends number | Date> {\n    readonly plotData: TData[];\n    readonly mouseXY: number[];\n    readonly xAccessor: (data: TData) => TXAxis;\n    readonly xScale: ScaleContinuousNumeric<number, number> | ScaleTime<number, number>;\n}\n\nexport const mouseBasedZoomAnchor = <TData, TXAxis extends number | Date>(\n    options: IZoomAnchorOptions<TData, TXAxis>,\n) => {\n    const { xScale, xAccessor, mouseXY, plotData } = options;\n    const currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n    return xAccessor(currentItem);\n};\n\nexport const lastVisibleItemBasedZoomAnchor = <TData, TXAxis extends number | Date>(\n    options: IZoomAnchorOptions<TData, TXAxis>,\n) => {\n    const { xAccessor, plotData } = options;\n    const lastItem = last(plotData);\n    return xAccessor(lastItem);\n};\n\nexport const rightDomainBasedZoomAnchor = <TData, TXAxis extends number | Date>(\n    options: IZoomAnchorOptions<TData, TXAxis>,\n) => {\n    const { xScale } = options;\n    const [, end] = xScale.domain();\n    return end;\n};\n"],"mappings":"AACA,SAASA,cAAc,QAAQ,wBAAwB;AACvD,SAASC,IAAI,QAAQ,gBAAgB;AASrC,OAAO,MAAMC,oBAAoB,GAC7BC,OAA0C,IAC1C;EACA,MAAM;IAAEC,MAAM;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAQ,CAAE,GAAGJ,OAAO;EACxD,MAAMK,WAAW,GAAGR,cAAc,CAACI,MAAM,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,CAAC;EACxE,OAAOF,SAAS,CAACG,WAAW,CAAC;AACjC,CAAC;AAED,OAAO,MAAMC,8BAA8B,GACvCN,OAA0C,IAC1C;EACA,MAAM;IAAEE,SAAS;IAAEE;EAAQ,CAAE,GAAGJ,OAAO;EACvC,MAAMO,QAAQ,GAAGT,IAAI,CAACM,QAAQ,CAAC;EAC/B,OAAOF,SAAS,CAACK,QAAQ,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMC,0BAA0B,GACnCR,OAA0C,IAC1C;EACA,MAAM;IAAEC;EAAM,CAAE,GAAGD,OAAO;EAC1B,MAAM,GAAGS,GAAG,CAAC,GAAGR,MAAM,CAACS,MAAM,EAAE;EAC/B,OAAOD,GAAG;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}