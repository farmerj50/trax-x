{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabby\\\\trax-x\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport StockScanner from \"./components/StockScanner\";\nimport SearchForm from \"./components/SearchForm\";\nimport TickerNewsWidget from \"./components/TickerNewsWidget\";\nimport SentimentChart from \"./components/SentimentChart\"; // Import the new SentimentChart component\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [tickers, setTickers] = useState([]);\n  const [selectedTicker, setSelectedTicker] = useState(null); // Track the selected ticker for sentiment analysis\n\n  const fetchStocks = async criteria => {\n    try {\n      const queryParams = new URLSearchParams({\n        min_price: criteria.minPrice,\n        max_price: criteria.maxPrice,\n        min_rsi: criteria.minRSI,\n        max_rsi: criteria.maxRSI,\n        volume_surge: criteria.volumeSurge\n      });\n      const response = await fetch(`http://localhost:5000/api/scan-stocks?${queryParams.toString()}`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch stocks.\");\n      }\n      const data = await response.json();\n      if (data.candidates && data.candidates.length > 0) {\n        setStocks(data.candidates);\n        setTickers(data.candidates.map(stock => stock.T));\n        setSelectedTicker(data.candidates[0].T); // Set the first ticker by default for sentiment analysis\n      } else {\n        setStocks([]);\n        setTickers([]);\n        setSelectedTicker(null);\n      }\n    } catch (err) {\n      console.error(\"Error fetching stocks:\", err);\n      setStocks([]);\n      setTickers([]);\n      setSelectedTicker(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: /*#__PURE__*/_jsxDEV(SearchForm, {\n          onSearch: fetchStocks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stock-results-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Stock Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(StockScanner, {\n          stocks: stocks,\n          onSelectTicker: setSelectedTicker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), selectedTicker && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sentiment-widget\",\n          children: /*#__PURE__*/_jsxDEV(SentimentChart, {\n            ticker: selectedTicker\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"news-widget\",\n          children: /*#__PURE__*/_jsxDEV(TickerNewsWidget, {\n            tickers: tickers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"fl+zVIB83tLCBG9IzK6Xgnb00sg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","StockScanner","SearchForm","TickerNewsWidget","SentimentChart","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","stocks","setStocks","tickers","setTickers","selectedTicker","setSelectedTicker","fetchStocks","criteria","queryParams","URLSearchParams","min_price","minPrice","max_price","maxPrice","min_rsi","minRSI","max_rsi","maxRSI","volume_surge","volumeSurge","response","fetch","toString","ok","Error","data","json","candidates","length","map","stock","T","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSearch","onSelectTicker","ticker","_c","$RefreshReg$"],"sources":["C:/Users/gabby/trax-x/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport StockScanner from \"./components/StockScanner\";\r\nimport SearchForm from \"./components/SearchForm\";\r\nimport TickerNewsWidget from \"./components/TickerNewsWidget\";\r\nimport SentimentChart from \"./components/SentimentChart\"; // Import the new SentimentChart component\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [stocks, setStocks] = useState([]);\r\n  const [tickers, setTickers] = useState([]);\r\n  const [selectedTicker, setSelectedTicker] = useState(null); // Track the selected ticker for sentiment analysis\r\n\r\n  const fetchStocks = async (criteria) => {\r\n    try {\r\n      const queryParams = new URLSearchParams({\r\n        min_price: criteria.minPrice,\r\n        max_price: criteria.maxPrice,\r\n        min_rsi: criteria.minRSI,\r\n        max_rsi: criteria.maxRSI,\r\n        volume_surge: criteria.volumeSurge,\r\n      });\r\n\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/scan-stocks?${queryParams.toString()}`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch stocks.\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.candidates && data.candidates.length > 0) {\r\n        setStocks(data.candidates);\r\n        setTickers(data.candidates.map((stock) => stock.T));\r\n        setSelectedTicker(data.candidates[0].T); // Set the first ticker by default for sentiment analysis\r\n      } else {\r\n        setStocks([]);\r\n        setTickers([]);\r\n        setSelectedTicker(null);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching stocks:\", err);\r\n      setStocks([]);\r\n      setTickers([]);\r\n      setSelectedTicker(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"app-layout\">\r\n        {/* Search Bar */}\r\n        <div className=\"search-bar\">\r\n          <SearchForm onSearch={fetchStocks} />\r\n        </div>\r\n\r\n        {/* Stock Results Header */}\r\n        <div className=\"stock-results-header\">\r\n          <h2>Stock Results</h2>\r\n        </div>\r\n\r\n        {/* Main Content */}\r\n        <div className=\"main-content\">\r\n          {/* Stock Scanner */}\r\n          <StockScanner stocks={stocks} onSelectTicker={setSelectedTicker} />\r\n\r\n          {/* Sentiment Chart */}\r\n          {selectedTicker && (\r\n            <div className=\"sentiment-widget\">\r\n              <SentimentChart ticker={selectedTicker} />\r\n            </div>\r\n          )}\r\n\r\n          {/* News Widget */}\r\n          <div className=\"news-widget\">\r\n            <TickerNewsWidget tickers={tickers} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}