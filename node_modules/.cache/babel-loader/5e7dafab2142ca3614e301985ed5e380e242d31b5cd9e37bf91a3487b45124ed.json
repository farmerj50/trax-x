{"ast":null,"code":"import { getStrokeDasharrayCanvas, getMouseCanvas, GenericChartComponent, noop } from \"@react-financial-charts/core\";\nimport * as React from \"react\";\nexport class InteractiveStraightLine extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.isHover = moreProps => {\n      const {\n        tolerance,\n        onHover\n      } = this.props;\n      if (onHover !== undefined) {\n        const {\n          x1Value,\n          x2Value,\n          y1Value,\n          y2Value,\n          type\n        } = this.props;\n        const {\n          mouseXY,\n          xScale\n        } = moreProps;\n        const {\n          chartConfig: {\n            yScale\n          }\n        } = moreProps;\n        const hovering = isHovering({\n          x1Value,\n          y1Value,\n          x2Value,\n          y2Value,\n          mouseXY,\n          type,\n          tolerance,\n          xScale,\n          yScale\n        });\n        return hovering;\n      }\n      return false;\n    };\n    this.drawOnCanvas = (ctx, moreProps) => {\n      const {\n        strokeWidth = InteractiveStraightLine.defaultProps.strokeWidth,\n        strokeDasharray,\n        strokeStyle\n      } = this.props;\n      const {\n        x1,\n        y1,\n        x2,\n        y2\n      } = helper(this.props, moreProps);\n      ctx.lineWidth = strokeWidth;\n      ctx.strokeStyle = strokeStyle;\n      const lineDash = getStrokeDasharrayCanvas(strokeDasharray);\n      ctx.setLineDash(lineDash);\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n    };\n  }\n  render() {\n    const {\n      selected,\n      interactiveCursorClass\n    } = this.props;\n    const {\n      onDragStart,\n      onDrag,\n      onDragComplete,\n      onHover,\n      onUnHover\n    } = this.props;\n    return React.createElement(GenericChartComponent, {\n      isHover: this.isHover,\n      canvasToDraw: getMouseCanvas,\n      canvasDraw: this.drawOnCanvas,\n      interactiveCursorClass: interactiveCursorClass,\n      selected: selected,\n      onDragStart: onDragStart,\n      onDrag: onDrag,\n      onDragComplete: onDragComplete,\n      onHover: onHover,\n      onUnHover: onUnHover,\n      drawOn: [\"mousemove\", \"pan\", \"drag\"]\n    });\n  }\n}\nInteractiveStraightLine.defaultProps = {\n  onEdge1Drag: noop,\n  onEdge2Drag: noop,\n  edgeStrokeWidth: 3,\n  edgeStroke: \"#000000\",\n  edgeFill: \"#FFFFFF\",\n  r: 10,\n  withEdge: false,\n  strokeWidth: 1,\n  strokeDasharray: \"Solid\",\n  children: noop,\n  tolerance: 7,\n  selected: false\n};\nexport function isHovering2(start, end, [mouseX, mouseY], tolerance) {\n  const m = getSlope(start, end);\n  if (m !== undefined) {\n    const b = getYIntercept(m, end);\n    const y = m * mouseX + b;\n    return mouseY < y + tolerance && mouseY > y - tolerance && mouseX > Math.min(start[0], end[0]) - tolerance && mouseX < Math.max(start[0], end[0]) + tolerance;\n  } else {\n    return mouseY >= Math.min(start[1], end[1]) && mouseY <= Math.max(start[1], end[1]) && mouseX < start[0] + tolerance && mouseX > start[0] - tolerance;\n  }\n}\nexport function isHovering({\n  x1Value,\n  y1Value,\n  x2Value,\n  y2Value,\n  mouseXY,\n  type,\n  tolerance,\n  xScale,\n  yScale\n}) {\n  const line = generateLine({\n    type,\n    start: [x1Value, y1Value],\n    end: [x2Value, y2Value],\n    xScale,\n    yScale\n  });\n  const start = [xScale(line.x1), yScale(line.y1)];\n  const end = [xScale(line.x2), yScale(line.y2)];\n  const m = getSlope(start, end);\n  const [mouseX, mouseY] = mouseXY;\n  if (m !== undefined) {\n    const b = getYIntercept(m, end);\n    const y = m * mouseX + b;\n    return mouseY < y + tolerance && mouseY > y - tolerance && mouseX > Math.min(start[0], end[0]) - tolerance && mouseX < Math.max(start[0], end[0]) + tolerance;\n  } else {\n    return mouseY >= Math.min(start[1], end[1]) && mouseY <= Math.max(start[1], end[1]) && mouseX < start[0] + tolerance && mouseX > start[0] - tolerance;\n  }\n}\nfunction helper(props, moreProps) {\n  const {\n    x1Value,\n    x2Value,\n    y1Value,\n    y2Value,\n    type\n  } = props;\n  const {\n    xScale,\n    chartConfig: {\n      yScale\n    }\n  } = moreProps;\n  const modLine = generateLine({\n    type,\n    start: [x1Value, y1Value],\n    end: [x2Value, y2Value],\n    xScale,\n    yScale\n  });\n  const x1 = xScale(modLine.x1);\n  const y1 = yScale(modLine.y1);\n  const x2 = xScale(modLine.x2);\n  const y2 = yScale(modLine.y2);\n  return {\n    x1,\n    y1,\n    x2,\n    y2\n  };\n}\nexport function getSlope(start, end) {\n  const m /* slope */ = end[0] === start[0] ? undefined : (end[1] - start[1]) / (end[0] - start[0]);\n  return m;\n}\nexport function getYIntercept(m, end) {\n  const b /* y intercept */ = -1 * m * end[0] + end[1];\n  return b;\n}\nexport function generateLine({\n  type,\n  start,\n  end,\n  xScale,\n  yScale\n}) {\n  const m /* slope */ = getSlope(start, end);\n  const b /* y intercept */ = getYIntercept(m, start);\n  switch (type) {\n    case \"XLINE\":\n      return getXLineCoordinates({\n        start,\n        end,\n        xScale,\n        yScale,\n        m,\n        b\n      });\n    case \"RAY\":\n      return getRayCoordinates({\n        start,\n        end,\n        xScale,\n        yScale,\n        m,\n        b\n      });\n    default:\n    case \"LINE\":\n      return getLineCoordinates({\n        start,\n        end\n      });\n  }\n}\nfunction getXLineCoordinates({\n  start,\n  end,\n  xScale,\n  yScale,\n  m,\n  b\n}) {\n  const [xBegin, xFinish] = xScale.domain();\n  const [yBegin, yFinish] = yScale.domain();\n  if (end[0] === start[0]) {\n    return {\n      x1: end[0],\n      y1: yBegin,\n      x2: end[0],\n      y2: yFinish\n    };\n  }\n  const [x1, x2] = end[0] > start[0] ? [xBegin, xFinish] : [xFinish, xBegin];\n  return {\n    x1,\n    y1: m * x1 + b,\n    x2,\n    y2: m * x2 + b\n  };\n}\nfunction getRayCoordinates({\n  start,\n  end,\n  xScale,\n  yScale,\n  m,\n  b\n}) {\n  const [xBegin, xFinish] = xScale.domain();\n  const [yBegin, yFinish] = yScale.domain();\n  const x1 = start[0];\n  if (end[0] === start[0]) {\n    return {\n      x1,\n      y1: start[1],\n      x2: x1,\n      y2: end[1] > start[1] ? yFinish : yBegin\n    };\n  }\n  const x2 = end[0] > start[0] ? xFinish : xBegin;\n  return {\n    x1,\n    y1: m * x1 + b,\n    x2,\n    y2: m * x2 + b\n  };\n}\nfunction getLineCoordinates({\n  start,\n  end\n}) {\n  const [x1, y1] = start;\n  const [x2, y2] = end;\n  if (end[0] === start[0]) {\n    return {\n      x1,\n      y1: start[1],\n      x2: x1,\n      y2: end[1]\n    };\n  }\n  return {\n    x1,\n    y1,\n    x2,\n    y2\n  };\n}","map":{"version":3,"names":["getStrokeDasharrayCanvas","getMouseCanvas","GenericChartComponent","noop","React","InteractiveStraightLine","Component","constructor","isHover","moreProps","tolerance","onHover","props","undefined","x1Value","x2Value","y1Value","y2Value","type","mouseXY","xScale","chartConfig","yScale","hovering","isHovering","drawOnCanvas","ctx","strokeWidth","defaultProps","strokeDasharray","strokeStyle","x1","y1","x2","y2","helper","lineWidth","lineDash","setLineDash","beginPath","moveTo","lineTo","stroke","render","selected","interactiveCursorClass","onDragStart","onDrag","onDragComplete","onUnHover","createElement","canvasToDraw","canvasDraw","drawOn","onEdge1Drag","onEdge2Drag","edgeStrokeWidth","edgeStroke","edgeFill","r","withEdge","children","isHovering2","start","end","mouseX","mouseY","m","getSlope","b","getYIntercept","y","Math","min","max","line","generateLine","modLine","getXLineCoordinates","getRayCoordinates","getLineCoordinates","xBegin","xFinish","domain","yBegin","yFinish"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\interactive\\src\\components\\InteractiveStraightLine.tsx"],"sourcesContent":["import {\n    getStrokeDasharrayCanvas,\n    getMouseCanvas,\n    GenericChartComponent,\n    noop,\n    strokeDashTypes,\n} from \"@react-financial-charts/core\";\nimport * as React from \"react\";\n\nexport interface StraightLineProps {\n    readonly x1Value: any;\n    readonly x2Value: any;\n    readonly y1Value: any;\n    readonly y2Value: any;\n    readonly interactiveCursorClass?: string;\n    readonly strokeStyle: string;\n    readonly strokeWidth?: number;\n    readonly strokeDasharray?: strokeDashTypes;\n    readonly type:\n        | \"XLINE\" // extends from -Infinity to +Infinity\n        | \"RAY\" // extends to +/-Infinity in one direction\n        | \"LINE\"; // extends between the set bounds\n    readonly onEdge1Drag?: any; // func\n    readonly onEdge2Drag?: any; // func\n    readonly onDragStart?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onDrag?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onDragComplete?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onHover?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onUnHover?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly defaultClassName?: string;\n    readonly r?: number;\n    readonly edgeFill?: string;\n    readonly edgeStroke?: string;\n    readonly edgeStrokeWidth?: number;\n    readonly withEdge?: boolean;\n    readonly tolerance?: number;\n    readonly selected?: boolean;\n}\n\nexport class InteractiveStraightLine extends React.Component<StraightLineProps> {\n    public static defaultProps = {\n        onEdge1Drag: noop,\n        onEdge2Drag: noop,\n        edgeStrokeWidth: 3,\n        edgeStroke: \"#000000\",\n        edgeFill: \"#FFFFFF\",\n        r: 10,\n        withEdge: false,\n        strokeWidth: 1,\n        strokeDasharray: \"Solid\",\n        children: noop,\n        tolerance: 7,\n        selected: false,\n    };\n\n    public render() {\n        const { selected, interactiveCursorClass } = this.props;\n        const { onDragStart, onDrag, onDragComplete, onHover, onUnHover } = this.props;\n\n        return (\n            <GenericChartComponent\n                isHover={this.isHover}\n                canvasToDraw={getMouseCanvas}\n                canvasDraw={this.drawOnCanvas}\n                interactiveCursorClass={interactiveCursorClass}\n                selected={selected}\n                onDragStart={onDragStart}\n                onDrag={onDrag}\n                onDragComplete={onDragComplete}\n                onHover={onHover}\n                onUnHover={onUnHover}\n                drawOn={[\"mousemove\", \"pan\", \"drag\"]}\n            />\n        );\n    }\n\n    private readonly isHover = (moreProps: any) => {\n        const { tolerance, onHover } = this.props;\n\n        if (onHover !== undefined) {\n            const { x1Value, x2Value, y1Value, y2Value, type } = this.props;\n            const { mouseXY, xScale } = moreProps;\n            const {\n                chartConfig: { yScale },\n            } = moreProps;\n\n            const hovering = isHovering({\n                x1Value,\n                y1Value,\n                x2Value,\n                y2Value,\n                mouseXY,\n                type,\n                tolerance,\n                xScale,\n                yScale,\n            });\n\n            return hovering;\n        }\n        return false;\n    };\n\n    private readonly drawOnCanvas = (ctx: CanvasRenderingContext2D, moreProps: any) => {\n        const {\n            strokeWidth = InteractiveStraightLine.defaultProps.strokeWidth,\n            strokeDasharray,\n            strokeStyle,\n        } = this.props;\n        const { x1, y1, x2, y2 } = helper(this.props, moreProps);\n\n        ctx.lineWidth = strokeWidth;\n        ctx.strokeStyle = strokeStyle;\n\n        const lineDash = getStrokeDasharrayCanvas(strokeDasharray);\n\n        ctx.setLineDash(lineDash);\n\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n    };\n}\n\nexport function isHovering2(start: any, end: any, [mouseX, mouseY]: any, tolerance: any) {\n    const m = getSlope(start, end);\n\n    if (m !== undefined) {\n        const b = getYIntercept(m, end);\n        const y = m * mouseX + b;\n        return (\n            mouseY < y + tolerance &&\n            mouseY > y - tolerance &&\n            mouseX > Math.min(start[0], end[0]) - tolerance &&\n            mouseX < Math.max(start[0], end[0]) + tolerance\n        );\n    } else {\n        return (\n            mouseY >= Math.min(start[1], end[1]) &&\n            mouseY <= Math.max(start[1], end[1]) &&\n            mouseX < start[0] + tolerance &&\n            mouseX > start[0] - tolerance\n        );\n    }\n}\n\nexport function isHovering({ x1Value, y1Value, x2Value, y2Value, mouseXY, type, tolerance, xScale, yScale }: any) {\n    const line = generateLine({\n        type,\n        start: [x1Value, y1Value],\n        end: [x2Value, y2Value],\n        xScale,\n        yScale,\n    });\n\n    const start = [xScale(line.x1), yScale(line.y1)];\n    const end = [xScale(line.x2), yScale(line.y2)];\n\n    const m = getSlope(start, end);\n    const [mouseX, mouseY] = mouseXY;\n\n    if (m !== undefined) {\n        const b = getYIntercept(m, end);\n        const y = m * mouseX + b;\n\n        return (\n            mouseY < y + tolerance &&\n            mouseY > y - tolerance &&\n            mouseX > Math.min(start[0], end[0]) - tolerance &&\n            mouseX < Math.max(start[0], end[0]) + tolerance\n        );\n    } else {\n        return (\n            mouseY >= Math.min(start[1], end[1]) &&\n            mouseY <= Math.max(start[1], end[1]) &&\n            mouseX < start[0] + tolerance &&\n            mouseX > start[0] - tolerance\n        );\n    }\n}\n\nfunction helper(props: any, moreProps: any) {\n    const { x1Value, x2Value, y1Value, y2Value, type } = props;\n\n    const {\n        xScale,\n        chartConfig: { yScale },\n    } = moreProps;\n\n    const modLine = generateLine({\n        type,\n        start: [x1Value, y1Value],\n        end: [x2Value, y2Value],\n        xScale,\n        yScale,\n    });\n\n    const x1 = xScale(modLine.x1);\n    const y1 = yScale(modLine.y1);\n    const x2 = xScale(modLine.x2);\n    const y2 = yScale(modLine.y2);\n\n    return {\n        x1,\n        y1,\n        x2,\n        y2,\n    };\n}\n\nexport function getSlope(start: any, end: any) {\n    const m /* slope */ = end[0] === start[0] ? undefined : (end[1] - start[1]) / (end[0] - start[0]);\n    return m;\n}\nexport function getYIntercept(m: any, end: any) {\n    const b /* y intercept */ = -1 * m * end[0] + end[1];\n    return b;\n}\n\nexport function generateLine({ type, start, end, xScale, yScale }: any) {\n    const m /* slope */ = getSlope(start, end);\n    const b /* y intercept */ = getYIntercept(m, start);\n\n    switch (type) {\n        case \"XLINE\":\n            return getXLineCoordinates({\n                start,\n                end,\n                xScale,\n                yScale,\n                m,\n                b,\n            });\n        case \"RAY\":\n            return getRayCoordinates({\n                start,\n                end,\n                xScale,\n                yScale,\n                m,\n                b,\n            });\n        default:\n        case \"LINE\":\n            return getLineCoordinates({\n                start,\n                end,\n            });\n    }\n}\n\nfunction getXLineCoordinates({ start, end, xScale, yScale, m, b }: any) {\n    const [xBegin, xFinish] = xScale.domain();\n    const [yBegin, yFinish] = yScale.domain();\n\n    if (end[0] === start[0]) {\n        return {\n            x1: end[0],\n            y1: yBegin,\n            x2: end[0],\n            y2: yFinish,\n        };\n    }\n    const [x1, x2] = end[0] > start[0] ? [xBegin, xFinish] : [xFinish, xBegin];\n\n    return {\n        x1,\n        y1: m * x1 + b,\n        x2,\n        y2: m * x2 + b,\n    };\n}\n\nfunction getRayCoordinates({ start, end, xScale, yScale, m, b }: any) {\n    const [xBegin, xFinish] = xScale.domain();\n    const [yBegin, yFinish] = yScale.domain();\n\n    const x1 = start[0];\n    if (end[0] === start[0]) {\n        return {\n            x1,\n            y1: start[1],\n            x2: x1,\n            y2: end[1] > start[1] ? yFinish : yBegin,\n        };\n    }\n\n    const x2 = end[0] > start[0] ? xFinish : xBegin;\n\n    return {\n        x1,\n        y1: m * x1 + b,\n        x2,\n        y2: m * x2 + b,\n    };\n}\n\nfunction getLineCoordinates({ start, end }: any) {\n    const [x1, y1] = start;\n    const [x2, y2] = end;\n    if (end[0] === start[0]) {\n        return {\n            x1,\n            y1: start[1],\n            x2: x1,\n            y2: end[1],\n        };\n    }\n\n    return {\n        x1,\n        y1,\n        x2,\n        y2,\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}