{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _react = require(\"react\");\nvar _react2 = _interopRequireDefault(_react);\nvar _propTypes = require(\"prop-types\");\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\nvar _GenericComponent = require(\"../GenericComponent\");\nvar _utils = require(\"../utils\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar PointAndFigureSeries = function (_Component) {\n  _inherits(PointAndFigureSeries, _Component);\n  function PointAndFigureSeries(props) {\n    _classCallCheck(this, PointAndFigureSeries);\n    var _this = _possibleConstructorReturn(this, (PointAndFigureSeries.__proto__ || Object.getPrototypeOf(PointAndFigureSeries)).call(this, props));\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    return _this;\n  }\n  _createClass(PointAndFigureSeries, [{\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var xAccessor = moreProps.xAccessor;\n      var xScale = moreProps.xScale,\n        yScale = moreProps.chartConfig.yScale,\n        plotData = moreProps.plotData;\n      var columns = getColumns(xScale, xAccessor, yScale, plotData);\n      _drawOnCanvas(ctx, this.props, columns);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var clip = this.props.clip;\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        clip: clip,\n        svgDraw: this.renderSVG,\n        canvasDraw: this.drawOnCanvas,\n        canvasToDraw: _GenericComponent.getAxisCanvas,\n        drawOn: [\"pan\"]\n      });\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var xAccessor = moreProps.xAccessor;\n      var xScale = moreProps.xScale,\n        yScale = moreProps.chartConfig.yScale,\n        plotData = moreProps.plotData;\n      var _props = this.props,\n        stroke = _props.stroke,\n        fill = _props.fill,\n        strokeWidth = _props.strokeWidth,\n        className = _props.className;\n      var columns = getColumns(xScale, xAccessor, yScale, plotData);\n      return _react2.default.createElement(\"g\", {\n        className: className\n      }, columns.map(function (col, idx) {\n        return _react2.default.createElement(\"g\", {\n          key: idx,\n          className: col.className,\n          transform: \"translate(\" + col.offset[0] + \", \" + col.offset[1] + \")\"\n        }, col.boxes.map(function (box, i) {\n          if (col.direction > 0) {\n            return _react2.default.createElement(\"g\", {\n              key: idx + \"-\" + i\n            }, _react2.default.createElement(\"line\", {\n              className: \"up\",\n              strokeWidth: strokeWidth,\n              stroke: stroke.up,\n              fill: fill.up,\n              x1: 0,\n              y1: box.open,\n              x2: box.columnWidth,\n              y2: box.close\n            }), _react2.default.createElement(\"line\", {\n              className: \"up\",\n              strokeWidth: strokeWidth,\n              stroke: stroke.up,\n              fill: fill.up,\n              x1: 0,\n              y1: box.close,\n              x2: box.columnWidth,\n              y2: box.open\n            }));\n          }\n          return _react2.default.createElement(\"ellipse\", {\n            key: idx + \"-\" + i,\n            className: \"down\",\n            strokeWidth: strokeWidth,\n            stroke: stroke.down,\n            fill: fill.down,\n            cx: box.columnWidth / 2,\n            cy: (box.open + box.close) / 2,\n            rx: box.columnWidth / 2,\n            ry: box.boxHeight / 2\n          });\n        }));\n      }));\n    }\n  }]);\n  return PointAndFigureSeries;\n}(_react.Component);\nPointAndFigureSeries.propTypes = {\n  className: _propTypes2.default.string,\n  strokeWidth: _propTypes2.default.number.isRequired,\n  stroke: _propTypes2.default.object.isRequired,\n  fill: _propTypes2.default.object.isRequired,\n  clip: _propTypes2.default.bool.isRequired\n};\nPointAndFigureSeries.defaultProps = {\n  className: \"react-stockcharts-point-and-figure\",\n  strokeWidth: 1,\n  stroke: {\n    up: \"#6BA583\",\n    down: \"#FF0000\"\n  },\n  fill: {\n    up: \"none\",\n    down: \"none\"\n  },\n  clip: true\n};\nfunction _drawOnCanvas(ctx, props, columns) {\n  var stroke = props.stroke,\n    fill = props.fill,\n    strokeWidth = props.strokeWidth;\n  ctx.lineWidth = strokeWidth;\n  columns.forEach(function (col) {\n    var _col$offset = _slicedToArray(col.offset, 2),\n      offsetX = _col$offset[0],\n      offsetY = _col$offset[1];\n    col.boxes.forEach(function (box) {\n      if (col.direction > 0) {\n        ctx.fillStyle = fill.up;\n        ctx.strokeStyle = stroke.up;\n        ctx.beginPath();\n        ctx.moveTo(offsetX, offsetY + box.open);\n        ctx.lineTo(offsetX + box.columnWidth, offsetY + box.close);\n        ctx.moveTo(offsetX, offsetY + box.close);\n        ctx.lineTo(offsetX + box.columnWidth, offsetY + box.open);\n        ctx.stroke();\n      } else {\n        ctx.fillStyle = fill.down;\n        ctx.strokeStyle = stroke.down;\n        ctx.beginPath();\n        var x = offsetX + box.columnWidth / 2,\n          y = offsetY + box.open + box.boxHeight / 2;\n        var rx = box.columnWidth / 2,\n          ry = box.boxHeight / 2;\n        ctx.ellipse(x, y, rx, ry, 0, 0, 2 * Math.PI);\n        ctx.stroke();\n      }\n    });\n  });\n  ctx.stroke();\n}\nfunction getColumns(xScale, xAccessor, yScale, plotData) {\n  var width = xScale(xAccessor(plotData[plotData.length - 1])) - xScale(xAccessor(plotData[0]));\n  var columnWidth = width / (plotData.length - 1);\n  var anyBox = void 0,\n    j = 0;\n  while ((0, _utils.isNotDefined)(anyBox)) {\n    if ((0, _utils.isDefined)(plotData[j].close)) {\n      anyBox = plotData[j].boxes[0];\n    } else {\n      break;\n    }\n    j++;\n  }\n  var boxHeight = Math.abs(yScale(anyBox.open) - yScale(anyBox.close));\n  var columns = plotData.filter(function (d) {\n    return (0, _utils.isDefined)(d.close);\n  }).map(function (d) {\n    var boxes = d.boxes.map(function (box) {\n      return {\n        columnWidth: columnWidth,\n        boxHeight: boxHeight,\n        open: yScale(box.open),\n        close: yScale(box.close)\n      };\n    });\n    var xOffset = xScale(xAccessor(d)) - columnWidth / 2;\n    return {\n      boxes: boxes,\n      direction: d.direction,\n      offset: [xOffset, 0]\n    };\n  });\n  return columns;\n}\nexports.default = PointAndFigureSeries;","map":{"version":3,"names":["_react","require","_propTypes","_GenericChartComponent","_GenericComponent","_utils","PointAndFigureSeries","props","_classCallCheck","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","xScale","yScale","chartConfig","plotData","columns","getColumns","_drawOnCanvas","clip","_react2","default","createElement","_GenericChartComponent2","svgDraw","canvasDraw","canvasToDraw","getAxisCanvas","drawOn","_props","stroke","fill","strokeWidth","className","map","col","idx","key","transform","offset","boxes","box","i","direction","up","x1","y1","open","x2","columnWidth","y2","close","down","cx","cy","rx","ry","boxHeight","propTypes","_propTypes2","string","number","isRequired","object","bool","defaultProps","lineWidth","forEach","_col$offset","_slicedToArray","offsetX","offsetY","fillStyle","strokeStyle","beginPath","moveTo","lineTo","x","y","ellipse","Math","PI","width","length","anyBox","j","isNotDefined","isDefined","abs","filter","d","xOffset"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\src\\lib\\series\\PointAndFigureSeries.js"],"sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { isDefined, isNotDefined } from \"../utils\";\n\nclass PointAndFigureSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\t\tconst columns = getColumns(xScale, xAccessor, yScale, plotData);\n\n\t\tdrawOnCanvas(ctx, this.props, columns);\n\t}\n\trender() {\n\t\tconst { clip } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tclip={clip}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\t\tconst { stroke, fill, strokeWidth, className } = this.props;\n\n\t\tconst columns = getColumns(xScale, xAccessor, yScale, plotData);\n\n\t\treturn (\n\t\t\t<g className={className}>\n\t\t\t\t{columns.map((col, idx) => (\n\t\t\t\t\t<g key={idx} className={col.className} transform={`translate(${ col.offset[0] }, ${ col.offset[1] })`}>\n\t\t\t\t\t\t{col.boxes.map((box, i) => {\n\t\t\t\t\t\t\tif (col.direction > 0) {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<g key={`${ idx }-${ i }`}>\n\t\t\t\t\t\t\t\t\t\t<line className=\"up\" strokeWidth={strokeWidth} stroke={stroke.up} fill={fill.up}\n\t\t\t\t\t\t\t\t\t\t\tx1={0} y1={box.open} x2={box.columnWidth} y2={box.close} />\n\t\t\t\t\t\t\t\t\t\t<line className=\"up\" strokeWidth={strokeWidth} stroke={stroke.up} fill={fill.up}\n\t\t\t\t\t\t\t\t\t\t\tx1={0} y1={box.close} x2={box.columnWidth} y2={box.open} />\n\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ellipse key={`${ idx }-${ i }`}\n\t\t\t\t\t\t\t\t\tclassName=\"down\" strokeWidth={strokeWidth} stroke={stroke.down} fill={fill.down}\n\t\t\t\t\t\t\t\t\tcx={box.columnWidth / 2} cy={(box.open + box.close) / 2}\n\t\t\t\t\t\t\t\t\trx={box.columnWidth / 2} ry={box.boxHeight / 2} />\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</g>\n\t\t\t\t))}\n\t\t\t</g>\n\t\t);\n\t}\n}\n\nPointAndFigureSeries.propTypes = {\n\tclassName: PropTypes.string,\n\tstrokeWidth: PropTypes.number.isRequired,\n\tstroke: PropTypes.object.isRequired,\n\tfill: PropTypes.object.isRequired,\n\tclip: PropTypes.bool.isRequired,\n};\n\nPointAndFigureSeries.defaultProps = {\n\tclassName: \"react-stockcharts-point-and-figure\",\n\tstrokeWidth: 1,\n\tstroke: {\n\t\tup: \"#6BA583\",\n\t\tdown: \"#FF0000\"\n\t},\n\tfill: {\n\t\tup: \"none\",\n\t\tdown: \"none\"\n\t},\n\tclip: true,\n};\n\nfunction drawOnCanvas(ctx, props, columns) {\n\tconst { stroke, fill, strokeWidth } = props;\n\n\tctx.lineWidth = strokeWidth;\n\n\tcolumns.forEach(col => {\n\t\tconst [offsetX, offsetY] = col.offset;\n\t\tcol.boxes.forEach(box => {\n\t\t\tif (col.direction > 0) {\n\t\t\t\tctx.fillStyle = fill.up;\n\t\t\t\tctx.strokeStyle = stroke.up;\n\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tctx.moveTo(offsetX, offsetY + box.open);\n\t\t\t\tctx.lineTo(offsetX + box.columnWidth, offsetY + box.close);\n\t\t\t\tctx.moveTo(offsetX, offsetY + box.close);\n\t\t\t\tctx.lineTo(offsetX + box.columnWidth, offsetY + box.open);\n\n\t\t\t\tctx.stroke();\n\t\t\t} else {\n\t\t\t\tctx.fillStyle = fill.down;\n\t\t\t\tctx.strokeStyle = stroke.down;\n\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tconst [x, y] = [offsetX + box.columnWidth / 2, offsetY + box.open + box.boxHeight / 2];\n\t\t\t\tconst [rx, ry] = [box.columnWidth / 2, box.boxHeight / 2];\n\n\t\t\t\tctx.ellipse(x, y, rx, ry, 0, 0, 2 * Math.PI);\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t});\n\t});\n\n\tctx.stroke();\n}\n\nfunction getColumns(xScale, xAccessor, yScale, plotData) {\n\n\tconst width = xScale(xAccessor(plotData[plotData.length - 1]))\n\t\t- xScale(xAccessor(plotData[0]));\n\n\tconst columnWidth = (width / (plotData.length - 1));\n\n\tlet anyBox, j = 0;\n\twhile (isNotDefined(anyBox)) {\n\t\tif (isDefined(plotData[j].close)) {\n\t\t\tanyBox = plotData[j].boxes[0];\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\tj++;\n\t}\n\n\tconst boxHeight = Math.abs(yScale(anyBox.open) - yScale(anyBox.close));\n\n\tconst columns = plotData\n\t\t.filter(d => isDefined(d.close))\n\t\t.map(d => {\n\t\t\tconst boxes = d.boxes.map((box) => ({\n\t\t\t\tcolumnWidth: columnWidth,\n\t\t\t\tboxHeight: boxHeight,\n\t\t\t\topen: yScale(box.open),\n\t\t\t\tclose: yScale(box.close),\n\t\t\t}));\n\n\t\t\tconst xOffset = (xScale(xAccessor(d)) - (columnWidth / 2));\n\t\t\treturn {\n\t\t\t\tboxes: boxes,\n\t\t\t\tdirection: d.direction,\n\t\t\t\toffset: [xOffset, 0],\n\t\t\t};\n\t\t});\n\treturn columns;\n}\n\nexport default PointAndFigureSeries;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}