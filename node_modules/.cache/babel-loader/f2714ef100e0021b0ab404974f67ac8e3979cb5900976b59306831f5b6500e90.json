{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabby\\\\trax-x\\\\src\\\\components\\\\StocksPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ErrorBoundary from \"./ErrorBoundary\"; // Error Boundary for chart\nimport \"./StocksPage.css\"; // Include your custom CSS\nimport StockTracker from \"./StockTracker\"; // Real-time Stock Tracker Component\n\nimport { StockChartComponent, StockChartSeriesCollectionDirective, StockChartSeriesDirective, StockChartIndicatorsDirective, StockChartIndicatorDirective, Inject, DateTime, Tooltip, RangeTooltip, Crosshair, LineSeries, CandleSeries, Legend, Export, EmaIndicator, TmaIndicator, SmaIndicator, MomentumIndicator, AtrIndicator, AccumulationDistributionIndicator, BollingerBands, MacdIndicator, StochasticIndicator, RsiIndicator } from \"@syncfusion/ej2-react-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StocksPage = () => {\n  _s();\n  const [ticker, setTicker] = useState(\"\"); // Input for ticker search\n  const [selectedTicker, setSelectedTicker] = useState(\"AAPL\"); // Default ticker\n  const [chartData, setChartData] = useState([]); // Holds chart data\n  const [error, setError] = useState(\"\"); // Tracks errors during data fetching\n  const [selectedIndicator, setSelectedIndicator] = useState(\"\"); // Selected indicator\n  const [loading, setLoading] = useState(false); // Loading state\n\n  const indicatorTypes = [{\n    value: \"Ema\",\n    label: \"EMA\"\n  }, {\n    value: \"Sma\",\n    label: \"SMA\"\n  }, {\n    value: \"Tma\",\n    label: \"TMA\"\n  }, {\n    value: \"Rsi\",\n    label: \"RSI\"\n  }, {\n    value: \"Momentum\",\n    label: \"Momentum\"\n  }, {\n    value: \"Macd\",\n    label: \"MACD\"\n  }, {\n    value: \"Stochastic\",\n    label: \"Stochastic\"\n  }, {\n    value: \"BollingerBands\",\n    label: \"Bollinger Bands\"\n  }];\n  const fetchChartData = async tickerSymbol => {\n    setLoading(true);\n    try {\n      const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${tickerSymbol}`);\n      const data = await response.json();\n      if (data.dates) {\n        const formattedData = data.dates.map((date, index) => ({\n          x: new Date(date),\n          open: data.open[index],\n          high: data.high[index],\n          low: data.low[index],\n          close: data.close[index]\n        }));\n        setChartData(formattedData);\n        setError(\"\");\n      } else {\n        setChartData([]);\n        setError(\"No data available for the selected ticker.\");\n      }\n    } catch (err) {\n      console.error(\"Error fetching chart data:\", err);\n      setChartData([]); // Reset chart data in case of an error\n      setError(\"Failed to load chart data.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchChartData(selectedTicker);\n  }, [selectedTicker]);\n  const handleSearch = () => {\n    if (ticker.trim() !== \"\") {\n      setSelectedTicker(ticker.toUpperCase());\n    }\n  };\n  const periods = [{\n    intervalType: \"Months\",\n    interval: 1,\n    text: \"1M\"\n  }, {\n    intervalType: \"Months\",\n    interval: 3,\n    text: \"3M\"\n  }, {\n    intervalType: \"Months\",\n    interval: 6,\n    text: \"6M\"\n  }, {\n    intervalType: \"Years\",\n    interval: 1,\n    text: \"YTD\"\n  }, {\n    intervalType: \"Years\",\n    interval: 3,\n    text: \"All\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stocks-page\",\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-header\",\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\",\n          fontSize: \"24px\"\n        },\n        children: [selectedTicker, \" Stock Analysis\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"realtime-stock-tracker\",\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Real-Time Stock Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StockTracker, {\n        ticker: selectedTicker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-stock\",\n      style: {\n        marginBottom: \"20px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter stock ticker (e.g., AAPL)\",\n        value: ticker,\n        onChange: e => setTicker(e.target.value),\n        style: {\n          padding: \"10px\",\n          fontSize: \"16px\",\n          borderRadius: \"5px\",\n          border: \"1px solid #ccc\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        style: {\n          padding: \"10px 20px\",\n          fontSize: \"16px\",\n          borderRadius: \"5px\",\n          backgroundColor: \"#007bff\",\n          color: \"#fff\",\n          border: \"none\",\n          cursor: \"pointer\"\n        },\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedIndicator(e.target.value),\n        value: selectedIndicator,\n        style: {\n          padding: \"10px\",\n          fontSize: \"16px\",\n          borderRadius: \"5px\",\n          border: \"1px solid #ccc\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select Indicator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), indicatorTypes.map(indicator => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: indicator.value,\n          children: indicator.label\n        }, indicator.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chart-container\",\n      style: {\n        width: \"100%\",\n        height: \"600px\",\n        backgroundColor: \"#fff\",\n        borderRadius: \"8px\",\n        padding: \"10px\"\n      },\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\",\n          color: \"gray\"\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\",\n          textAlign: \"center\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n        children: /*#__PURE__*/_jsxDEV(StockChartComponent, {\n          id: \"stockchart\",\n          primaryXAxis: {\n            valueType: \"DateTime\",\n            labelFormat: \"MMM dd\",\n            majorGridLines: {\n              width: 0\n            },\n            intervalType: \"Days\"\n          },\n          primaryYAxis: {\n            labelFormat: \"${value}\",\n            majorGridLines: {\n              width: 0\n            },\n            rangePadding: \"None\"\n          },\n          legendSettings: {\n            visible: true\n          },\n          title: `${selectedTicker} Stock Analysis`,\n          toolbarSettings: {\n            visible: true,\n            items: [\"Indicator\"]\n          },\n          periods: periods,\n          height: \"100%\",\n          width: \"100%\",\n          children: [/*#__PURE__*/_jsxDEV(Inject, {\n            services: [DateTime, Tooltip, RangeTooltip, Crosshair, LineSeries, CandleSeries, Legend, Export, EmaIndicator, TmaIndicator, SmaIndicator, MomentumIndicator, AtrIndicator, AccumulationDistributionIndicator, BollingerBands, MacdIndicator, StochasticIndicator, RsiIndicator]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StockChartSeriesCollectionDirective, {\n            children: /*#__PURE__*/_jsxDEV(StockChartSeriesDirective, {\n              dataSource: chartData,\n              xName: \"x\",\n              open: \"open\",\n              high: \"high\",\n              low: \"low\",\n              close: \"close\",\n              type: \"Candle\",\n              animation: {\n                enable: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StockChartIndicatorsDirective, {\n            children: selectedIndicator && /*#__PURE__*/_jsxDEV(StockChartIndicatorDirective, {\n              type: selectedIndicator,\n              field: \"Close\",\n              seriesName: selectedTicker,\n              xName: \"x\",\n              open: \"open\",\n              high: \"high\",\n              low: \"low\",\n              close: \"close\",\n              fill: \"#606eff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(StocksPage, \"LkKGfhZmEnhfM4az/eR8WlnQLK0=\");\n_c = StocksPage;\nexport default StocksPage;\nvar _c;\n$RefreshReg$(_c, \"StocksPage\");","map":{"version":3,"names":["React","useState","useEffect","ErrorBoundary","StockTracker","StockChartComponent","StockChartSeriesCollectionDirective","StockChartSeriesDirective","StockChartIndicatorsDirective","StockChartIndicatorDirective","Inject","DateTime","Tooltip","RangeTooltip","Crosshair","LineSeries","CandleSeries","Legend","Export","EmaIndicator","TmaIndicator","SmaIndicator","MomentumIndicator","AtrIndicator","AccumulationDistributionIndicator","BollingerBands","MacdIndicator","StochasticIndicator","RsiIndicator","jsxDEV","_jsxDEV","StocksPage","_s","ticker","setTicker","selectedTicker","setSelectedTicker","chartData","setChartData","error","setError","selectedIndicator","setSelectedIndicator","loading","setLoading","indicatorTypes","value","label","fetchChartData","tickerSymbol","response","fetch","data","json","dates","formattedData","map","date","index","x","Date","open","high","low","close","err","console","handleSearch","trim","toUpperCase","periods","intervalType","interval","text","className","style","padding","children","marginBottom","textAlign","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","gap","type","placeholder","onChange","e","target","borderRadius","border","onClick","backgroundColor","color","cursor","disabled","indicator","id","width","height","primaryXAxis","valueType","labelFormat","majorGridLines","primaryYAxis","rangePadding","legendSettings","visible","title","toolbarSettings","items","services","dataSource","xName","animation","enable","field","seriesName","fill","_c","$RefreshReg$"],"sources":["C:/Users/gabby/trax-x/src/components/StocksPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ErrorBoundary from \"./ErrorBoundary\"; // Error Boundary for chart\r\nimport \"./StocksPage.css\"; // Include your custom CSS\r\nimport StockTracker from \"./StockTracker\"; // Real-time Stock Tracker Component\r\n\r\nimport {\r\n  StockChartComponent,\r\n  StockChartSeriesCollectionDirective,\r\n  StockChartSeriesDirective,\r\n  StockChartIndicatorsDirective,\r\n  StockChartIndicatorDirective,\r\n  Inject,\r\n  DateTime,\r\n  Tooltip,\r\n  RangeTooltip,\r\n  Crosshair,\r\n  LineSeries,\r\n  CandleSeries,\r\n  Legend,\r\n  Export,\r\n  EmaIndicator,\r\n  TmaIndicator,\r\n  SmaIndicator,\r\n  MomentumIndicator,\r\n  AtrIndicator,\r\n  AccumulationDistributionIndicator,\r\n  BollingerBands,\r\n  MacdIndicator,\r\n  StochasticIndicator,\r\n  RsiIndicator,\r\n} from \"@syncfusion/ej2-react-charts\";\r\n\r\nconst StocksPage = () => {\r\n  const [ticker, setTicker] = useState(\"\"); // Input for ticker search\r\n  const [selectedTicker, setSelectedTicker] = useState(\"AAPL\"); // Default ticker\r\n  const [chartData, setChartData] = useState([]); // Holds chart data\r\n  const [error, setError] = useState(\"\"); // Tracks errors during data fetching\r\n  const [selectedIndicator, setSelectedIndicator] = useState(\"\"); // Selected indicator\r\n  const [loading, setLoading] = useState(false); // Loading state\r\n\r\n  const indicatorTypes = [\r\n    { value: \"Ema\", label: \"EMA\" },\r\n    { value: \"Sma\", label: \"SMA\" },\r\n    { value: \"Tma\", label: \"TMA\" },\r\n    { value: \"Rsi\", label: \"RSI\" },\r\n    { value: \"Momentum\", label: \"Momentum\" },\r\n    { value: \"Macd\", label: \"MACD\" },\r\n    { value: \"Stochastic\", label: \"Stochastic\" },\r\n    { value: \"BollingerBands\", label: \"Bollinger Bands\" },\r\n  ];\r\n\r\n  const fetchChartData = async (tickerSymbol) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/candlestick?ticker=${tickerSymbol}`\r\n      );\r\n      const data = await response.json();\r\n      if (data.dates) {\r\n        const formattedData = data.dates.map((date, index) => ({\r\n          x: new Date(date),\r\n          open: data.open[index],\r\n          high: data.high[index],\r\n          low: data.low[index],\r\n          close: data.close[index],\r\n        }));\r\n        setChartData(formattedData);\r\n        setError(\"\");\r\n      } else {\r\n        setChartData([]);\r\n        setError(\"No data available for the selected ticker.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching chart data:\", err);\r\n      setChartData([]); // Reset chart data in case of an error\r\n      setError(\"Failed to load chart data.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchChartData(selectedTicker);\r\n  }, [selectedTicker]);\r\n\r\n  const handleSearch = () => {\r\n    if (ticker.trim() !== \"\") {\r\n      setSelectedTicker(ticker.toUpperCase());\r\n    }\r\n  };\r\n\r\n  const periods = [\r\n    { intervalType: \"Months\", interval: 1, text: \"1M\" },\r\n    { intervalType: \"Months\", interval: 3, text: \"3M\" },\r\n    { intervalType: \"Months\", interval: 6, text: \"6M\" },\r\n    { intervalType: \"Years\", interval: 1, text: \"YTD\" },\r\n    { intervalType: \"Years\", interval: 3, text: \"All\" },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"stocks-page\" style={{ padding: \"20px\" }}>\r\n      {/* Header Section */}\r\n      <div className=\"stock-header\" style={{ marginBottom: \"20px\" }}>\r\n        <h2 style={{ textAlign: \"center\", fontSize: \"24px\" }}>\r\n          {selectedTicker} Stock Analysis\r\n        </h2>\r\n      </div>\r\n\r\n      {/* Real-Time Stock Tracker */}\r\n      <div className=\"realtime-stock-tracker\" style={{ marginBottom: \"20px\" }}>\r\n        <h3 style={{ textAlign: \"center\" }}>Real-Time Stock Tracker</h3>\r\n        <StockTracker ticker={selectedTicker} />\r\n      </div>\r\n\r\n      {/* Search and Indicator Dropdown */}\r\n      <div\r\n        className=\"search-stock\"\r\n        style={{\r\n          marginBottom: \"20px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          gap: \"10px\",\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter stock ticker (e.g., AAPL)\"\r\n          value={ticker}\r\n          onChange={(e) => setTicker(e.target.value)}\r\n          style={{\r\n            padding: \"10px\",\r\n            fontSize: \"16px\",\r\n            borderRadius: \"5px\",\r\n            border: \"1px solid #ccc\",\r\n          }}\r\n        />\r\n        <button\r\n          onClick={handleSearch}\r\n          style={{\r\n            padding: \"10px 20px\",\r\n            fontSize: \"16px\",\r\n            borderRadius: \"5px\",\r\n            backgroundColor: \"#007bff\",\r\n            color: \"#fff\",\r\n            border: \"none\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Search\r\n        </button>\r\n        <select\r\n          onChange={(e) => setSelectedIndicator(e.target.value)}\r\n          value={selectedIndicator}\r\n          style={{\r\n            padding: \"10px\",\r\n            fontSize: \"16px\",\r\n            borderRadius: \"5px\",\r\n            border: \"1px solid #ccc\",\r\n          }}\r\n        >\r\n          <option value=\"\" disabled>\r\n            Select Indicator\r\n          </option>\r\n          {indicatorTypes.map((indicator) => (\r\n            <option key={indicator.value} value={indicator.value}>\r\n              {indicator.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {/* Chart Section */}\r\n      <div\r\n        id=\"chart-container\"\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"600px\",\r\n          backgroundColor: \"#fff\",\r\n          borderRadius: \"8px\",\r\n          padding: \"10px\",\r\n        }}\r\n      >\r\n        {loading ? (\r\n          <p style={{ textAlign: \"center\", color: \"gray\" }}>Loading...</p>\r\n        ) : error ? (\r\n          <p style={{ color: \"red\", textAlign: \"center\" }}>{error}</p>\r\n        ) : (\r\n          <ErrorBoundary>\r\n            <StockChartComponent\r\n              id=\"stockchart\"\r\n              primaryXAxis={{\r\n                valueType: \"DateTime\",\r\n                labelFormat: \"MMM dd\",\r\n                majorGridLines: { width: 0 },\r\n                intervalType: \"Days\",\r\n              }}\r\n              primaryYAxis={{\r\n                labelFormat: \"${value}\",\r\n                majorGridLines: { width: 0 },\r\n                rangePadding: \"None\",\r\n              }}\r\n              legendSettings={{ visible: true }}\r\n              title={`${selectedTicker} Stock Analysis`}\r\n              toolbarSettings={{\r\n                visible: true,\r\n                items: [\"Indicator\"],\r\n              }}\r\n              periods={periods}\r\n              height=\"100%\"\r\n              width=\"100%\"\r\n            >\r\n              <Inject\r\n                services={[\r\n                  DateTime,\r\n                  Tooltip,\r\n                  RangeTooltip,\r\n                  Crosshair,\r\n                  LineSeries,\r\n                  CandleSeries,\r\n                  Legend,\r\n                  Export,\r\n                  EmaIndicator,\r\n                  TmaIndicator,\r\n                  SmaIndicator,\r\n                  MomentumIndicator,\r\n                  AtrIndicator,\r\n                  AccumulationDistributionIndicator,\r\n                  BollingerBands,\r\n                  MacdIndicator,\r\n                  StochasticIndicator,\r\n                  RsiIndicator,\r\n                ]}\r\n              />\r\n              <StockChartSeriesCollectionDirective>\r\n                <StockChartSeriesDirective\r\n                  dataSource={chartData}\r\n                  xName=\"x\"\r\n                  open=\"open\"\r\n                  high=\"high\"\r\n                  low=\"low\"\r\n                  close=\"close\"\r\n                  type=\"Candle\"\r\n                  animation={{ enable: true }}\r\n                />\r\n              </StockChartSeriesCollectionDirective>\r\n              <StockChartIndicatorsDirective>\r\n                {selectedIndicator && (\r\n                  <StockChartIndicatorDirective\r\n                    type={selectedIndicator}\r\n                    field=\"Close\"\r\n                    seriesName={selectedTicker}\r\n                    xName=\"x\"\r\n                    open=\"open\"\r\n                    high=\"high\"\r\n                    low=\"low\"\r\n                    close=\"close\"\r\n                    fill=\"#606eff\"\r\n                  />\r\n                )}\r\n              </StockChartIndicatorsDirective>\r\n            </StockChartComponent>\r\n          </ErrorBoundary>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StocksPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}