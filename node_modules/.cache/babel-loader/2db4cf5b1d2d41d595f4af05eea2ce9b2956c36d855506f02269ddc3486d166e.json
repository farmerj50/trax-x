{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabby\\\\trax-x\\\\src\\\\components\\\\CandlestickChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { createChart } from \"lightweight-charts\";\nimport throttle from \"lodash/throttle\";\nimport StockPerformanceWidget from \"./StockPerformanceWidget\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CandlestickChart = ({\n  ticker,\n  entryPoint,\n  exitPoint,\n  additionalData,\n  buySellLogic\n}) => {\n  _s();\n  const chartContainerRef = useRef(null);\n  const priceLineRef = useRef({});\n  const candlestickSeriesRef = useRef(null);\n  const chartRef = useRef(null);\n  const isMounted = useRef(true);\n  useEffect(() => {\n    isMounted.current = true;\n    const chart = createChart(chartContainerRef.current, {\n      width: chartContainerRef.current.clientWidth || 700,\n      height: 400,\n      layout: {\n        backgroundColor: \"#ffffff\",\n        textColor: \"#000000\"\n      },\n      grid: {\n        vertLines: {\n          color: \"#eeeeee\"\n        },\n        horzLines: {\n          color: \"#eeeeee\"\n        }\n      },\n      priceScale: {\n        borderColor: \"#cccccc\"\n      },\n      timeScale: {\n        borderColor: \"#cccccc\"\n      }\n    });\n    const candlestickSeries = chart.addCandlestickSeries();\n    candlestickSeriesRef.current = candlestickSeries;\n    chartRef.current = chart;\n    const fetchInitialData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${ticker}`);\n        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n        const data = await response.json();\n        if (data.dates && data.open && data.high && data.low && data.close) {\n          const formattedData = data.dates.map((date, index) => ({\n            time: date,\n            open: data.open[index],\n            high: data.high[index],\n            low: data.low[index],\n            close: data.close[index]\n          }));\n          candlestickSeries.setData(formattedData);\n          const currentPrice = formattedData[formattedData.length - 1].close;\n          addOrUpdatePriceLine(\"currentPriceLine\", currentPrice, \"blue\", `Current: ${currentPrice.toFixed(2)}`);\n          addOrUpdatePriceLine(\"entryPriceLine\", entryPoint, \"green\", `Entry: ${entryPoint.toFixed(2)}`);\n          addOrUpdatePriceLine(\"exitPriceLine\", exitPoint, \"red\", `Exit: ${exitPoint.toFixed(2)}`);\n          const markers = generateBuySellMarkers(formattedData);\n          candlestickSeries.setMarkers(markers);\n        }\n      } catch (error) {\n        console.error(\"Error fetching initial data:\", error);\n      }\n    };\n    const generateBuySellMarkers = data => {\n      const markers = [];\n      for (let i = 1; i < data.length; i++) {\n        const current = data[i];\n        const prev = data[i - 1];\n        if (buySellLogic && buySellLogic.buy(current, prev)) {\n          markers.push({\n            time: current.time,\n            position: \"belowBar\",\n            color: \"green\",\n            shape: \"arrowUp\",\n            text: `Buy: ${current.close.toFixed(2)}`\n          });\n        }\n        if (buySellLogic && buySellLogic.sell(current, prev)) {\n          markers.push({\n            time: current.time,\n            position: \"aboveBar\",\n            color: \"red\",\n            shape: \"arrowDown\",\n            text: `Sell: ${current.close.toFixed(2)}`\n          });\n        }\n      }\n      return markers;\n    };\n    const addOrUpdatePriceLine = (key, price, color, title) => {\n      if (priceLineRef.current[key]) {\n        priceLineRef.current[key].applyOptions({\n          price,\n          color,\n          title\n        });\n      } else if (candlestickSeriesRef.current) {\n        priceLineRef.current[key] = candlestickSeriesRef.current.createPriceLine({\n          price,\n          color,\n          lineWidth: 2,\n          title\n        });\n      }\n    };\n    fetchInitialData();\n    const throttledUpdateChart = throttle(async () => {\n      if (!isMounted.current || !candlestickSeriesRef.current) return;\n      try {\n        const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${ticker}`);\n        if (!response.ok) throw new Error(`Failed to fetch data: ${response.status}`);\n        const data = await response.json();\n        if (data.dates && data.open && data.high && data.low && data.close) {\n          const latestData = {\n            time: data.dates[data.dates.length - 1],\n            open: data.open[data.open.length - 1],\n            high: data.high[data.high.length - 1],\n            low: data.low[data.low.length - 1],\n            close: data.close[data.close.length - 1]\n          };\n          candlestickSeriesRef.current.update(latestData);\n          const currentPrice = latestData.close;\n          addOrUpdatePriceLine(\"currentPriceLine\", currentPrice, \"blue\", `Current: ${currentPrice.toFixed(2)}`);\n        }\n      } catch (error) {\n        console.error(\"Error updating chart:\", error);\n      }\n    }, 5000);\n    const intervalId = setInterval(() => {\n      if (isMounted.current) throttledUpdateChart();\n    }, 5000);\n    const handleResize = () => {\n      if (chartRef.current) {\n        chartRef.current.applyOptions({\n          width: chartContainerRef.current.clientWidth\n        });\n      }\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      isMounted.current = false;\n      clearInterval(intervalId);\n      window.removeEventListener(\"resize\", handleResize);\n      if (chartRef.current) {\n        chartRef.current.remove();\n        chartRef.current = null;\n      }\n      candlestickSeriesRef.current = null;\n      priceLineRef.current = {};\n    };\n  }, [ticker, entryPoint, exitPoint, buySellLogic]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-wrapper\",\n      ref: chartContainerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"chart-title\",\n        children: ticker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Volatility:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 14\n          }, this), \" \", (additionalData === null || additionalData === void 0 ? void 0 : additionalData.volatility) || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Change:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 14\n          }, this), \" \", (additionalData === null || additionalData === void 0 ? void 0 : additionalData.change) || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"RSI:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 14\n          }, this), \" \", (additionalData === null || additionalData === void 0 ? void 0 : additionalData.rsi) || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"price-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Entry Point:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 14\n          }, this), \" $\", entryPoint.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Exit Point:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 14\n          }, this), \" $\", exitPoint.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Current Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 14\n          }, this), \" Displayed on chart\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StockPerformanceWidget, {\n        ticker: ticker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(CandlestickChart, \"xXIrKZ1iHaj0JUwmpQKyVPBhzPg=\");\n_c = CandlestickChart;\nexport default CandlestickChart;\nvar _c;\n$RefreshReg$(_c, \"CandlestickChart\");","map":{"version":3,"names":["React","useEffect","useRef","createChart","throttle","StockPerformanceWidget","jsxDEV","_jsxDEV","CandlestickChart","ticker","entryPoint","exitPoint","additionalData","buySellLogic","_s","chartContainerRef","priceLineRef","candlestickSeriesRef","chartRef","isMounted","current","chart","width","clientWidth","height","layout","backgroundColor","textColor","grid","vertLines","color","horzLines","priceScale","borderColor","timeScale","candlestickSeries","addCandlestickSeries","fetchInitialData","response","fetch","ok","Error","status","data","json","dates","open","high","low","close","formattedData","map","date","index","time","setData","currentPrice","length","addOrUpdatePriceLine","toFixed","markers","generateBuySellMarkers","setMarkers","error","console","i","prev","buy","push","position","shape","text","sell","key","price","title","applyOptions","createPriceLine","lineWidth","throttledUpdateChart","latestData","update","intervalId","setInterval","handleResize","window","addEventListener","clearInterval","removeEventListener","remove","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","volatility","change","rsi","_c","$RefreshReg$"],"sources":["C:/Users/gabby/trax-x/src/components/CandlestickChart.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { createChart } from \"lightweight-charts\";\r\nimport throttle from \"lodash/throttle\";\r\nimport StockPerformanceWidget from \"./StockPerformanceWidget\";\r\n\r\nconst CandlestickChart = ({ ticker, entryPoint, exitPoint, additionalData, buySellLogic }) => {\r\n  const chartContainerRef = useRef(null);\r\n  const priceLineRef = useRef({});\r\n  const candlestickSeriesRef = useRef(null);\r\n  const chartRef = useRef(null);\r\n  const isMounted = useRef(true);\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n\r\n    const chart = createChart(chartContainerRef.current, {\r\n      width: chartContainerRef.current.clientWidth || 700,\r\n      height: 400,\r\n      layout: { backgroundColor: \"#ffffff\", textColor: \"#000000\" },\r\n      grid: { vertLines: { color: \"#eeeeee\" }, horzLines: { color: \"#eeeeee\" } },\r\n      priceScale: { borderColor: \"#cccccc\" },\r\n      timeScale: { borderColor: \"#cccccc\" },\r\n    });\r\n\r\n    const candlestickSeries = chart.addCandlestickSeries();\r\n    candlestickSeriesRef.current = candlestickSeries;\r\n    chartRef.current = chart;\r\n\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${ticker}`);\r\n        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\r\n        const data = await response.json();\r\n\r\n        if (data.dates && data.open && data.high && data.low && data.close) {\r\n          const formattedData = data.dates.map((date, index) => ({\r\n            time: date,\r\n            open: data.open[index],\r\n            high: data.high[index],\r\n            low: data.low[index],\r\n            close: data.close[index],\r\n          }));\r\n          candlestickSeries.setData(formattedData);\r\n\r\n          const currentPrice = formattedData[formattedData.length - 1].close;\r\n          addOrUpdatePriceLine(\"currentPriceLine\", currentPrice, \"blue\", `Current: ${currentPrice.toFixed(2)}`);\r\n          addOrUpdatePriceLine(\"entryPriceLine\", entryPoint, \"green\", `Entry: ${entryPoint.toFixed(2)}`);\r\n          addOrUpdatePriceLine(\"exitPriceLine\", exitPoint, \"red\", `Exit: ${exitPoint.toFixed(2)}`);\r\n\r\n          const markers = generateBuySellMarkers(formattedData);\r\n          candlestickSeries.setMarkers(markers);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching initial data:\", error);\r\n      }\r\n    };\r\n\r\n    const generateBuySellMarkers = (data) => {\r\n      const markers = [];\r\n      for (let i = 1; i < data.length; i++) {\r\n        const current = data[i];\r\n        const prev = data[i - 1];\r\n\r\n        if (buySellLogic && buySellLogic.buy(current, prev)) {\r\n          markers.push({\r\n            time: current.time,\r\n            position: \"belowBar\",\r\n            color: \"green\",\r\n            shape: \"arrowUp\",\r\n            text: `Buy: ${current.close.toFixed(2)}`,\r\n          });\r\n        }\r\n\r\n        if (buySellLogic && buySellLogic.sell(current, prev)) {\r\n          markers.push({\r\n            time: current.time,\r\n            position: \"aboveBar\",\r\n            color: \"red\",\r\n            shape: \"arrowDown\",\r\n            text: `Sell: ${current.close.toFixed(2)}`,\r\n          });\r\n        }\r\n      }\r\n      return markers;\r\n    };\r\n\r\n    const addOrUpdatePriceLine = (key, price, color, title) => {\r\n      if (priceLineRef.current[key]) {\r\n        priceLineRef.current[key].applyOptions({ price, color, title });\r\n      } else if (candlestickSeriesRef.current) {\r\n        priceLineRef.current[key] = candlestickSeriesRef.current.createPriceLine({\r\n          price,\r\n          color,\r\n          lineWidth: 2,\r\n          title,\r\n        });\r\n      }\r\n    };\r\n\r\n    fetchInitialData();\r\n\r\n    const throttledUpdateChart = throttle(async () => {\r\n      if (!isMounted.current || !candlestickSeriesRef.current) return;\r\n\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${ticker}`);\r\n        if (!response.ok) throw new Error(`Failed to fetch data: ${response.status}`);\r\n        const data = await response.json();\r\n\r\n        if (data.dates && data.open && data.high && data.low && data.close) {\r\n          const latestData = {\r\n            time: data.dates[data.dates.length - 1],\r\n            open: data.open[data.open.length - 1],\r\n            high: data.high[data.high.length - 1],\r\n            low: data.low[data.low.length - 1],\r\n            close: data.close[data.close.length - 1],\r\n          };\r\n          candlestickSeriesRef.current.update(latestData);\r\n\r\n          const currentPrice = latestData.close;\r\n          addOrUpdatePriceLine(\"currentPriceLine\", currentPrice, \"blue\", `Current: ${currentPrice.toFixed(2)}`);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error updating chart:\", error);\r\n      }\r\n    }, 5000);\r\n\r\n    const intervalId = setInterval(() => {\r\n      if (isMounted.current) throttledUpdateChart();\r\n    }, 5000);\r\n\r\n    const handleResize = () => {\r\n      if (chartRef.current) {\r\n        chartRef.current.applyOptions({ width: chartContainerRef.current.clientWidth });\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      isMounted.current = false;\r\n      clearInterval(intervalId);\r\n      window.removeEventListener(\"resize\", handleResize);\r\n      if (chartRef.current) {\r\n        chartRef.current.remove();\r\n        chartRef.current = null;\r\n      }\r\n      candlestickSeriesRef.current = null;\r\n      priceLineRef.current = {};\r\n    };\r\n  }, [ticker, entryPoint, exitPoint, buySellLogic]);\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <div className=\"chart-wrapper\" ref={chartContainerRef}></div>\r\n      <div className=\"chart-info\">\r\n        <h3 className=\"chart-title\">{ticker}</h3>\r\n        <div className=\"chart-stats\">\r\n          <p><strong>Volatility:</strong> {additionalData?.volatility || \"N/A\"}</p>\r\n          <p><strong>Change:</strong> {additionalData?.change || \"N/A\"}</p>\r\n          <p><strong>RSI:</strong> {additionalData?.rsi || \"N/A\"}</p>\r\n        </div>\r\n        <div className=\"price-info\">\r\n          <p><strong>Entry Point:</strong> ${entryPoint.toFixed(2)}</p>\r\n          <p><strong>Exit Point:</strong> ${exitPoint.toFixed(2)}</p>\r\n          <p><strong>Current Price:</strong> Displayed on chart</p>\r\n        </div>\r\n        <StockPerformanceWidget ticker={ticker} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CandlestickChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}