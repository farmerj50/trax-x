{"ast":null,"code":"import { functor, merge, path } from \"../utils\";\nimport atr from \"./atr\";\nimport { Kagi as defaultOptions } from \"./defaultOptionsForComputation\";\nexport default function () {\n  let options = defaultOptions;\n  let dateAccessor = d => d.date;\n  let dateMutator = (d, date) => {\n    d.date = date;\n  };\n  const calculator = data => {\n    const {\n      reversalType,\n      windowSize,\n      reversal,\n      sourcePath\n    } = options;\n    const source = path(sourcePath);\n    let reversalThreshold;\n    if (reversalType === \"ATR\") {\n      const atrAlgorithm = atr().options({\n        windowSize\n      });\n      const atrCalculator = merge().algorithm(atrAlgorithm).merge((d, c) => {\n        d[\"atr\" + windowSize] = c;\n      });\n      atrCalculator(data);\n      reversalThreshold = d => d[\"atr\" + windowSize];\n    } else {\n      reversalThreshold = functor(reversal);\n    }\n    const kagiData = [];\n    let prevPeak;\n    let prevTrough;\n    let direction;\n    let line = {};\n    data.forEach(function (d) {\n      if (line.from === undefined) {\n        dateMutator(line, dateAccessor(d));\n        line.from = dateAccessor(d);\n        if (!line.open) {\n          line.open = d.open;\n        }\n        line.high = d.high;\n        line.low = d.low;\n        if (!line.close) {\n          line.close = source(d);\n        }\n        line.startOfYear = d.startOfYear;\n        line.startOfQuarter = d.startOfQuarter;\n        line.startOfMonth = d.startOfMonth;\n        line.startOfWeek = d.startOfWeek;\n      }\n      if (!line.startOfYear) {\n        line.startOfYear = d.startOfYear;\n        if (line.startOfYear) {\n          line.date = d.date;\n        }\n      }\n      if (!line.startOfQuarter) {\n        line.startOfQuarter = d.startOfQuarter;\n        if (line.startOfQuarter && !line.startOfYear) {\n          line.date = d.date;\n        }\n      }\n      if (!line.startOfMonth) {\n        line.startOfMonth = d.startOfMonth;\n        if (line.startOfMonth && !line.startOfQuarter) {\n          line.date = d.date;\n        }\n      }\n      if (!line.startOfWeek) {\n        line.startOfWeek = d.startOfWeek;\n        if (line.startOfWeek && !line.startOfMonth) {\n          line.date = d.date;\n        }\n      }\n      line.volume = (line.volume || 0) + d.volume;\n      // @ts-ignore\n      line.high = Math.max(line.high, d.high);\n      // @ts-ignore\n      line.low = Math.min(line.low, d.low);\n      line.to = dateAccessor(d);\n      // @ts-ignore\n      const priceMovement = source(d) - line.close;\n      if (\n      // @ts-ignore\n      line.close >= line.open /* going up */ && priceMovement > 0 /* and moving in same direction */ ||\n      // @ts-ignore\n      line.close < line.open /* going down */ && priceMovement < 0 /* and moving in same direction */) {\n        line.close = source(d);\n        // @ts-ignore\n        if (prevTrough && line.close < prevTrough) {\n          // going below the prevTrough, so change from yang to yin\n          // A yin line forms when a Kagi line breaks below the prior trough.\n          line.changePoint = prevTrough;\n          if (line.startAs !== \"yin\") {\n            line.changeTo = \"yin\";\n            // line.startAs = \"yang\";\n          }\n        }\n        // @ts-ignore\n        if (prevPeak && line.close > prevPeak) {\n          // going above the prevPeak, so change from yin to yang\n          // A yang line forms when a Kagi line breaks above the prior peak\n          line.changePoint = prevPeak;\n          if (line.startAs !== \"yang\") {\n            line.changeTo = \"yang\";\n            // line.startAs = \"yin\";\n          }\n        }\n      } else if (\n      // @ts-ignore\n      line.close >= line.open /* going up */ && priceMovement < 0 /* and moving in other direction */ && Math.abs(priceMovement) > reversalThreshold(d) /* and the movement is big enough for reversal */ ||\n      // @ts-ignore\n      line.close < line.open /* going down */ && priceMovement > 0 /* and moving in other direction */ && /* and the movement is big enough for reversal */\n      Math.abs(priceMovement) > reversalThreshold(d)) {\n        // reverse direction\n        const nextLineOpen = line.close;\n        // @ts-ignore\n        direction = (line.close - line.open) / Math.abs(line.close - line.open);\n        let nextChangePoint;\n        let nextChangeTo;\n        if (direction < 0 /* if direction so far has been -ve*/) {\n          // compare with line.close becomes prevTrough\n          if (prevPeak === undefined) {\n            prevPeak = line.open;\n          }\n          prevTrough = line.close;\n          if (source(d) > prevPeak) {\n            nextChangePoint = prevPeak;\n            nextChangeTo = \"yang\";\n          }\n        } else {\n          if (prevTrough === undefined) {\n            prevTrough = line.open;\n          }\n          prevPeak = line.close;\n          if (source(d) < prevTrough) {\n            nextChangePoint = prevTrough;\n            nextChangeTo = \"yin\";\n          }\n        }\n        if (line.startAs === undefined) {\n          line.startAs = direction > 0 ? \"yang\" : \"yin\";\n        }\n        const startAs = line.changeTo || line.startAs;\n        line.added = true;\n        kagiData.push(line);\n        direction = -1 * direction; // direction is reversed\n        line = Object.assign({}, line);\n        line.open = nextLineOpen;\n        line.close = source(d);\n        line.startAs = startAs;\n        line.changePoint = nextChangePoint;\n        line.changeTo = nextChangeTo;\n        line.added = false;\n        line.from = undefined;\n        line.volume = 0;\n      } else {\n        // console.log(\"MOVING IN REV DIR BUT..\", line.open, line.close, source(d));\n      }\n      line.current = source(d);\n      // @ts-ignore\n      let dir = line.close - line.open;\n      dir = dir === 0 ? 1 : dir / Math.abs(dir);\n      // @ts-ignore\n      line.reverseAt = dir > 0 ? line.close - reversalThreshold(d) : line.open - reversalThreshold(d);\n    });\n    if (!line.added) {\n      kagiData.push(line);\n    }\n    return kagiData;\n  };\n  calculator.options = newOptions => {\n    if (newOptions === undefined) {\n      return options;\n    }\n    options = Object.assign(Object.assign({}, defaultOptions), newOptions);\n    return calculator;\n  };\n  calculator.dateMutator = newDateMutator => {\n    if (newDateMutator === undefined) {\n      return dateMutator;\n    }\n    dateMutator = newDateMutator;\n    return calculator;\n  };\n  calculator.dateAccessor = newDateAccessor => {\n    if (newDateAccessor === undefined) {\n      return dateAccessor;\n    }\n    dateAccessor = newDateAccessor;\n    return calculator;\n  };\n  return calculator;\n}","map":{"version":3,"names":["functor","merge","path","atr","Kagi","defaultOptions","options","dateAccessor","d","date","dateMutator","calculator","data","reversalType","windowSize","reversal","sourcePath","source","reversalThreshold","atrAlgorithm","atrCalculator","algorithm","c","kagiData","prevPeak","prevTrough","direction","line","forEach","from","undefined","open","high","low","close","startOfYear","startOfQuarter","startOfMonth","startOfWeek","volume","Math","max","min","to","priceMovement","changePoint","startAs","changeTo","abs","nextLineOpen","nextChangePoint","nextChangeTo","added","push","Object","assign","current","dir","reverseAt","newOptions","newDateMutator","newDateAccessor"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\indicators\\src\\calculator\\kagi.ts"],"sourcesContent":["import { functor, merge, path } from \"../utils\";\nimport atr from \"./atr\";\nimport { Kagi as defaultOptions } from \"./defaultOptionsForComputation\";\n\nexport default function () {\n    let options = defaultOptions;\n    let dateAccessor = (d: any) => d.date;\n    let dateMutator = (d: any, date: any) => {\n        d.date = date;\n    };\n\n    const calculator = (data: any[]) => {\n        const { reversalType, windowSize, reversal, sourcePath } = options;\n\n        const source = path(sourcePath);\n\n        let reversalThreshold: any;\n\n        if (reversalType === \"ATR\") {\n            const atrAlgorithm = atr().options({ windowSize });\n\n            const atrCalculator = merge()\n                .algorithm(atrAlgorithm)\n                .merge((d: any, c: any) => {\n                    d[\"atr\" + windowSize] = c;\n                });\n\n            atrCalculator(data);\n            reversalThreshold = (d: any) => d[\"atr\" + windowSize];\n        } else {\n            reversalThreshold = functor(reversal);\n        }\n\n        const kagiData: any[] = [];\n\n        let prevPeak: any;\n        let prevTrough: any;\n        let direction: any;\n\n        let line: {\n            added?: any;\n            date?: any;\n            from?: any;\n            to?: any;\n            open?: number;\n            high?: number;\n            low?: number;\n            close?: number;\n            current?: any;\n            changePoint?: any;\n            changeTo?: any;\n            volume?: number;\n            reverseAt?: any;\n            startAs?: any;\n            startOfYear?: any;\n            startOfQuarter?: any;\n            startOfMonth?: any;\n            startOfWeek?: any;\n        } = {};\n\n        data.forEach(function (d) {\n            if (line.from === undefined) {\n                dateMutator(line, dateAccessor(d));\n                line.from = dateAccessor(d);\n\n                if (!line.open) {\n                    line.open = d.open;\n                }\n                line.high = d.high;\n                line.low = d.low;\n                if (!line.close) {\n                    line.close = source(d);\n                }\n                line.startOfYear = d.startOfYear;\n                line.startOfQuarter = d.startOfQuarter;\n                line.startOfMonth = d.startOfMonth;\n                line.startOfWeek = d.startOfWeek;\n            }\n\n            if (!line.startOfYear) {\n                line.startOfYear = d.startOfYear;\n                if (line.startOfYear) {\n                    line.date = d.date;\n                }\n            }\n\n            if (!line.startOfQuarter) {\n                line.startOfQuarter = d.startOfQuarter;\n                if (line.startOfQuarter && !line.startOfYear) {\n                    line.date = d.date;\n                }\n            }\n\n            if (!line.startOfMonth) {\n                line.startOfMonth = d.startOfMonth;\n                if (line.startOfMonth && !line.startOfQuarter) {\n                    line.date = d.date;\n                }\n            }\n            if (!line.startOfWeek) {\n                line.startOfWeek = d.startOfWeek;\n                if (line.startOfWeek && !line.startOfMonth) {\n                    line.date = d.date;\n                }\n            }\n            line.volume = (line.volume || 0) + d.volume;\n            // @ts-ignore\n            line.high = Math.max(line.high, d.high);\n            // @ts-ignore\n            line.low = Math.min(line.low, d.low);\n            line.to = dateAccessor(d);\n\n            // @ts-ignore\n            const priceMovement = source(d) - line.close;\n\n            if (\n                // @ts-ignore\n                (line.close >= line.open /* going up */ && priceMovement > 0) /* and moving in same direction */ ||\n                // @ts-ignore\n                (line.close < line.open /* going down */ && priceMovement < 0) /* and moving in same direction */\n            ) {\n                line.close = source(d);\n                // @ts-ignore\n                if (prevTrough && line.close < prevTrough) {\n                    // going below the prevTrough, so change from yang to yin\n                    // A yin line forms when a Kagi line breaks below the prior trough.\n                    line.changePoint = prevTrough;\n                    if (line.startAs !== \"yin\") {\n                        line.changeTo = \"yin\";\n                        // line.startAs = \"yang\";\n                    }\n                }\n\n                // @ts-ignore\n                if (prevPeak && line.close > prevPeak) {\n                    // going above the prevPeak, so change from yin to yang\n                    // A yang line forms when a Kagi line breaks above the prior peak\n                    line.changePoint = prevPeak;\n                    if (line.startAs !== \"yang\") {\n                        line.changeTo = \"yang\";\n                        // line.startAs = \"yin\";\n                    }\n                }\n            } else if (\n                // @ts-ignore\n                (line.close >= line.open /* going up */ &&\n                    priceMovement < 0 /* and moving in other direction */ &&\n                    Math.abs(priceMovement) > reversalThreshold(d)) /* and the movement is big enough for reversal */ ||\n                // @ts-ignore\n                (line.close < line.open /* going down */ &&\n                    priceMovement > 0 /* and moving in other direction */ &&\n                    /* and the movement is big enough for reversal */\n                    Math.abs(priceMovement) > reversalThreshold(d))\n            ) {\n                // reverse direction\n                const nextLineOpen = line.close;\n\n                // @ts-ignore\n                direction = (line.close - line.open) / Math.abs(line.close - line.open);\n\n                let nextChangePoint;\n                let nextChangeTo;\n                if (direction < 0 /* if direction so far has been -ve*/) {\n                    // compare with line.close becomes prevTrough\n                    if (prevPeak === undefined) {\n                        prevPeak = line.open;\n                    }\n                    prevTrough = line.close;\n                    if (source(d) > prevPeak) {\n                        nextChangePoint = prevPeak;\n                        nextChangeTo = \"yang\";\n                    }\n                } else {\n                    if (prevTrough === undefined) {\n                        prevTrough = line.open;\n                    }\n                    prevPeak = line.close;\n                    if (source(d) < prevTrough) {\n                        nextChangePoint = prevTrough;\n                        nextChangeTo = \"yin\";\n                    }\n                }\n                if (line.startAs === undefined) {\n                    line.startAs = direction > 0 ? \"yang\" : \"yin\";\n                }\n\n                const startAs = line.changeTo || line.startAs;\n                line.added = true;\n                kagiData.push(line);\n                direction = -1 * direction; // direction is reversed\n\n                line = { ...line };\n                line.open = nextLineOpen;\n                line.close = source(d);\n                line.startAs = startAs;\n                line.changePoint = nextChangePoint;\n                line.changeTo = nextChangeTo;\n                line.added = false;\n                line.from = undefined;\n                line.volume = 0;\n            } else {\n                // console.log(\"MOVING IN REV DIR BUT..\", line.open, line.close, source(d));\n            }\n            line.current = source(d);\n            // @ts-ignore\n            let dir = line.close - line.open;\n            dir = dir === 0 ? 1 : dir / Math.abs(dir);\n            // @ts-ignore\n            line.reverseAt = dir > 0 ? line.close - reversalThreshold(d) : line.open - reversalThreshold(d);\n        });\n        if (!line.added) {\n            kagiData.push(line);\n        }\n\n        return kagiData;\n    };\n\n    calculator.options = (newOptions?: any) => {\n        if (newOptions === undefined) {\n            return options;\n        }\n\n        options = { ...defaultOptions, ...newOptions };\n\n        return calculator;\n    };\n\n    calculator.dateMutator = (newDateMutator?: any) => {\n        if (newDateMutator === undefined) {\n            return dateMutator;\n        }\n\n        dateMutator = newDateMutator;\n\n        return calculator;\n    };\n\n    calculator.dateAccessor = (newDateAccessor?: any) => {\n        if (newDateAccessor === undefined) {\n            return dateAccessor;\n        }\n\n        dateAccessor = newDateAccessor;\n\n        return calculator;\n    };\n\n    return calculator;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}