{"ast":null,"code":"import { functor, GenericChartComponent, last } from \"@react-financial-charts/core\";\nimport { format } from \"d3-format\";\nimport * as React from \"react\";\nimport { ToolTipText } from \"./ToolTipText\";\nimport { ToolTipTSpanLabel } from \"./ToolTipTSpanLabel\";\nexport class MACDTooltip extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.renderSVG = moreProps => {\n      var _a;\n      const {\n        onClick,\n        displayInit,\n        fontFamily,\n        fontSize,\n        fontWeight,\n        displayValuesFor,\n        displayFormat,\n        className,\n        yAccessor,\n        options,\n        origin: originProp,\n        appearance,\n        labelFill,\n        labelFontWeight\n      } = this.props;\n      const {\n        chartConfig: {\n          width,\n          height\n        },\n        fullData\n      } = moreProps;\n      const currentItem = (_a = displayValuesFor(this.props, moreProps)) !== null && _a !== void 0 ? _a : last(fullData);\n      const macdValue = currentItem && yAccessor(currentItem);\n      const macd = (macdValue === null || macdValue === void 0 ? void 0 : macdValue.macd) && displayFormat(macdValue.macd) || displayInit;\n      const signal = (macdValue === null || macdValue === void 0 ? void 0 : macdValue.signal) && displayFormat(macdValue.signal) || displayInit;\n      const divergence = (macdValue === null || macdValue === void 0 ? void 0 : macdValue.divergence) && displayFormat(macdValue.divergence) || displayInit;\n      const origin = functor(originProp);\n      const [x, y] = origin(width, height);\n      return React.createElement(\"g\", {\n        className: className,\n        transform: `translate(${x}, ${y})`,\n        onClick: onClick\n      }, React.createElement(ToolTipText, {\n        x: 0,\n        y: 0,\n        fontFamily: fontFamily,\n        fontSize: fontSize,\n        fontWeight: fontWeight\n      }, React.createElement(ToolTipTSpanLabel, {\n        fill: labelFill,\n        fontWeight: labelFontWeight\n      }, \"MACD (\"), React.createElement(\"tspan\", {\n        fill: appearance.strokeStyle.macd\n      }, options.slow), React.createElement(ToolTipTSpanLabel, {\n        fill: labelFill,\n        fontWeight: labelFontWeight\n      }, \",\", \" \"), React.createElement(\"tspan\", {\n        fill: appearance.strokeStyle.macd\n      }, options.fast), React.createElement(ToolTipTSpanLabel, {\n        fill: labelFill,\n        fontWeight: labelFontWeight\n      }, \"):\", \" \"), React.createElement(\"tspan\", {\n        fill: appearance.strokeStyle.macd\n      }, macd), React.createElement(ToolTipTSpanLabel, {\n        fill: labelFill,\n        fontWeight: labelFontWeight\n      }, \" \", \"Signal (\"), React.createElement(\"tspan\", {\n        fill: appearance.strokeStyle.signal\n      }, options.signal), React.createElement(ToolTipTSpanLabel, {\n        fill: labelFill,\n        fontWeight: labelFontWeight\n      }, \"):\", \" \"), React.createElement(\"tspan\", {\n        fill: appearance.strokeStyle.signal\n      }, signal), React.createElement(ToolTipTSpanLabel, {\n        fill: labelFill,\n        fontWeight: labelFontWeight\n      }, \" \", \"Divergence:\", \" \"), React.createElement(\"tspan\", {\n        fill: appearance.fillStyle.divergence\n      }, divergence)));\n    };\n  }\n  render() {\n    return React.createElement(GenericChartComponent, {\n      clip: false,\n      svgDraw: this.renderSVG,\n      drawOn: [\"mousemove\"]\n    });\n  }\n}\nMACDTooltip.defaultProps = {\n  className: \"react-financial-charts-tooltip\",\n  displayFormat: format(\".2f\"),\n  displayInit: \"n/a\",\n  displayValuesFor: (_, props) => props.currentItem,\n  origin: [0, 0]\n};","map":{"version":3,"names":["functor","GenericChartComponent","last","format","React","ToolTipText","ToolTipTSpanLabel","MACDTooltip","Component","constructor","renderSVG","moreProps","onClick","displayInit","fontFamily","fontSize","fontWeight","displayValuesFor","displayFormat","className","yAccessor","options","origin","originProp","appearance","labelFill","labelFontWeight","props","chartConfig","width","height","fullData","currentItem","_a","macdValue","macd","signal","divergence","x","y","createElement","transform","fill","strokeStyle","slow","fast","fillStyle","render","clip","svgDraw","drawOn","defaultProps","_"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\tooltip\\src\\MACDTooltip.tsx"],"sourcesContent":["import { functor, GenericChartComponent, last } from \"@react-financial-charts/core\";\nimport { format } from \"d3-format\";\nimport * as React from \"react\";\nimport { ToolTipText } from \"./ToolTipText\";\nimport { ToolTipTSpanLabel } from \"./ToolTipTSpanLabel\";\n\nexport interface MACDTooltipProps {\n    readonly origin: number[] | ((width: number, height: number) => [number, number]);\n    readonly className?: string;\n    readonly fontFamily?: string;\n    readonly fontSize?: number;\n    readonly fontWeight?: number;\n    readonly labelFill?: string;\n    readonly labelFontWeight?: number;\n    readonly onClick?: (event: React.MouseEvent) => void;\n    readonly options: {\n        slow: number;\n        fast: number;\n        signal: number;\n    };\n    readonly appearance: {\n        strokeStyle: {\n            macd: string;\n            signal: string;\n        };\n        fillStyle: {\n            divergence: string;\n        };\n    };\n    readonly displayFormat: (value: number) => string;\n    readonly displayInit?: string;\n    readonly displayValuesFor: (props: MACDTooltipProps, moreProps: any) => any | undefined;\n    readonly yAccessor: (data: any) => { macd: number; signal: number; divergence: number };\n}\n\nexport class MACDTooltip extends React.Component<MACDTooltipProps> {\n    public static defaultProps = {\n        className: \"react-financial-charts-tooltip\",\n        displayFormat: format(\".2f\"),\n        displayInit: \"n/a\",\n        displayValuesFor: (_: any, props: any) => props.currentItem,\n        origin: [0, 0],\n    };\n\n    public render() {\n        return <GenericChartComponent clip={false} svgDraw={this.renderSVG} drawOn={[\"mousemove\"]} />;\n    }\n\n    private readonly renderSVG = (moreProps: any) => {\n        const {\n            onClick,\n            displayInit,\n            fontFamily,\n            fontSize,\n            fontWeight,\n            displayValuesFor,\n            displayFormat,\n            className,\n            yAccessor,\n            options,\n            origin: originProp,\n            appearance,\n            labelFill,\n            labelFontWeight,\n        } = this.props;\n\n        const {\n            chartConfig: { width, height },\n            fullData,\n        } = moreProps;\n\n        const currentItem = displayValuesFor(this.props, moreProps) ?? last(fullData);\n\n        const macdValue = currentItem && yAccessor(currentItem);\n\n        const macd = (macdValue?.macd && displayFormat(macdValue.macd)) || displayInit;\n        const signal = (macdValue?.signal && displayFormat(macdValue.signal)) || displayInit;\n        const divergence = (macdValue?.divergence && displayFormat(macdValue.divergence)) || displayInit;\n\n        const origin = functor(originProp);\n        const [x, y] = origin(width, height);\n\n        return (\n            <g className={className} transform={`translate(${x}, ${y})`} onClick={onClick}>\n                <ToolTipText x={0} y={0} fontFamily={fontFamily} fontSize={fontSize} fontWeight={fontWeight}>\n                    <ToolTipTSpanLabel fill={labelFill} fontWeight={labelFontWeight}>\n                        MACD (\n                    </ToolTipTSpanLabel>\n                    <tspan fill={appearance.strokeStyle.macd}>{options.slow}</tspan>\n                    <ToolTipTSpanLabel fill={labelFill} fontWeight={labelFontWeight}>\n                        ,{\" \"}\n                    </ToolTipTSpanLabel>\n                    <tspan fill={appearance.strokeStyle.macd}>{options.fast}</tspan>\n                    <ToolTipTSpanLabel fill={labelFill} fontWeight={labelFontWeight}>\n                        ):{\" \"}\n                    </ToolTipTSpanLabel>\n                    <tspan fill={appearance.strokeStyle.macd}>{macd}</tspan>\n                    <ToolTipTSpanLabel fill={labelFill} fontWeight={labelFontWeight}>\n                        {\" \"}\n                        Signal (\n                    </ToolTipTSpanLabel>\n                    <tspan fill={appearance.strokeStyle.signal}>{options.signal}</tspan>\n                    <ToolTipTSpanLabel fill={labelFill} fontWeight={labelFontWeight}>\n                        ):{\" \"}\n                    </ToolTipTSpanLabel>\n                    <tspan fill={appearance.strokeStyle.signal}>{signal}</tspan>\n                    <ToolTipTSpanLabel fill={labelFill} fontWeight={labelFontWeight}>\n                        {\" \"}\n                        Divergence:{\" \"}\n                    </ToolTipTSpanLabel>\n                    <tspan fill={appearance.fillStyle.divergence}>{divergence}</tspan>\n                </ToolTipText>\n            </g>\n        );\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}