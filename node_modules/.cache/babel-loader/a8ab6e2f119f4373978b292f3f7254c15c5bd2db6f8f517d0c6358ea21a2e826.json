{"ast":null,"code":"import { sum } from \"d3-array\";\nimport { slidingWindow } from \"../utils\";\nimport { ATR as defaultOptions } from \"./defaultOptionsForComputation\";\nexport default function () {\n  let options = defaultOptions;\n  let source = d => ({\n    open: d.open,\n    high: d.high,\n    low: d.low,\n    close: d.close\n  });\n  const calculator = data => {\n    const {\n      windowSize\n    } = options;\n    const trueRangeAlgorithm = slidingWindow().windowSize(2).source(source).undefinedValue(d => d.high - d.low) // the first TR value is simply the High minus the Low\n    .accumulator(values => {\n      const prev = values[0];\n      const d = values[1];\n      return Math.max(d.high - d.low, d.high - prev.close, d.low - prev.close);\n    });\n    let prevATR;\n    const atrAlgorithm = slidingWindow().skipInitial(1) // trueRange starts from index 1 so ATR starts from 1\n    .windowSize(windowSize).accumulator(values => {\n      const tr = values[values.length - 1];\n      const atr = prevATR !== undefined ? (prevATR * (windowSize - 1) + tr) / windowSize : sum(values) / windowSize;\n      prevATR = atr;\n      return atr;\n    });\n    const newData = atrAlgorithm(trueRangeAlgorithm(data));\n    return newData;\n  };\n  calculator.undefinedLength = () => {\n    const {\n      windowSize\n    } = options;\n    return windowSize - 1;\n  };\n  calculator.options = newOptions => {\n    if (newOptions === undefined) {\n      return options;\n    }\n    options = Object.assign(Object.assign({}, defaultOptions), newOptions);\n    return calculator;\n  };\n  calculator.source = newSource => {\n    if (newSource === undefined) {\n      return source;\n    }\n    source = newSource;\n    return calculator;\n  };\n  return calculator;\n}","map":{"version":3,"names":["sum","slidingWindow","ATR","defaultOptions","options","source","d","open","high","low","close","calculator","data","windowSize","trueRangeAlgorithm","undefinedValue","accumulator","values","prev","Math","max","prevATR","atrAlgorithm","skipInitial","tr","length","atr","undefined","newData","undefinedLength","newOptions","Object","assign","newSource"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\indicators\\src\\calculator\\atr.ts"],"sourcesContent":["import { sum } from \"d3-array\";\nimport { slidingWindow } from \"../utils\";\nimport { ATR as defaultOptions } from \"./defaultOptionsForComputation\";\n\nexport interface ATROptions {\n    readonly windowSize: number;\n}\n\nexport interface ATRSource {\n    readonly close: number;\n    readonly high: number;\n    readonly low: number;\n    readonly open: number;\n}\n\nexport interface ATRCalculator {\n    (data: any[]): any;\n    undefinedLength(): number;\n    options(): ATROptions;\n    options(newOptions: ATROptions): ATRCalculator;\n    source(): (d: any) => ATRSource;\n    source(newSource: (d: any) => ATRSource): ATRCalculator;\n}\n\nexport default function () {\n    let options: ATROptions = defaultOptions;\n    let source = (d: any) => ({ open: d.open, high: d.high, low: d.low, close: d.close });\n\n    const calculator = (data: any[]) => {\n        const { windowSize } = options;\n\n        const trueRangeAlgorithm = slidingWindow()\n            .windowSize(2)\n            .source(source)\n            .undefinedValue((d: any) => d.high - d.low) // the first TR value is simply the High minus the Low\n            .accumulator((values: any) => {\n                const prev = values[0];\n                const d = values[1];\n                return Math.max(d.high - d.low, d.high - prev.close, d.low - prev.close);\n            });\n\n        let prevATR: number | undefined;\n\n        const atrAlgorithm = slidingWindow()\n            .skipInitial(1) // trueRange starts from index 1 so ATR starts from 1\n            .windowSize(windowSize)\n            .accumulator((values: any[]) => {\n                const tr = values[values.length - 1];\n                const atr =\n                    prevATR !== undefined ? (prevATR * (windowSize - 1) + tr) / windowSize : sum(values) / windowSize;\n\n                prevATR = atr;\n                return atr;\n            });\n\n        const newData = atrAlgorithm(trueRangeAlgorithm(data));\n\n        return newData;\n    };\n\n    calculator.undefinedLength = () => {\n        const { windowSize } = options;\n\n        return windowSize - 1;\n    };\n\n    calculator.options = (newOptions?: ATROptions) => {\n        if (newOptions === undefined) {\n            return options;\n        }\n\n        options = { ...defaultOptions, ...newOptions };\n\n        return calculator;\n    };\n\n    calculator.source = (newSource?: (d: any) => ATRSource) => {\n        if (newSource === undefined) {\n            return source;\n        }\n\n        source = newSource;\n\n        return calculator;\n    };\n\n    return calculator as ATRCalculator;\n}\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,UAAU;AAC9B,SAASC,aAAa,QAAQ,UAAU;AACxC,SAASC,GAAG,IAAIC,cAAc,QAAQ,gCAAgC;AAsBtE,eAAc;EACV,IAAIC,OAAO,GAAeD,cAAc;EACxC,IAAIE,MAAM,GAAIC,CAAM,KAAM;IAAEC,IAAI,EAAED,CAAC,CAACC,IAAI;IAAEC,IAAI,EAAEF,CAAC,CAACE,IAAI;IAAEC,GAAG,EAAEH,CAAC,CAACG,GAAG;IAAEC,KAAK,EAAEJ,CAAC,CAACI;EAAK,CAAE,CAAC;EAErF,MAAMC,UAAU,GAAIC,IAAW,IAAI;IAC/B,MAAM;MAAEC;IAAU,CAAE,GAAGT,OAAO;IAE9B,MAAMU,kBAAkB,GAAGb,aAAa,EAAE,CACrCY,UAAU,CAAC,CAAC,CAAC,CACbR,MAAM,CAACA,MAAM,CAAC,CACdU,cAAc,CAAET,CAAM,IAAKA,CAAC,CAACE,IAAI,GAAGF,CAAC,CAACG,GAAG,CAAC,CAAC;IAAA,CAC3CO,WAAW,CAAEC,MAAW,IAAI;MACzB,MAAMC,IAAI,GAAGD,MAAM,CAAC,CAAC,CAAC;MACtB,MAAMX,CAAC,GAAGW,MAAM,CAAC,CAAC,CAAC;MACnB,OAAOE,IAAI,CAACC,GAAG,CAACd,CAAC,CAACE,IAAI,GAAGF,CAAC,CAACG,GAAG,EAAEH,CAAC,CAACE,IAAI,GAAGU,IAAI,CAACR,KAAK,EAAEJ,CAAC,CAACG,GAAG,GAAGS,IAAI,CAACR,KAAK,CAAC;IAC5E,CAAC,CAAC;IAEN,IAAIW,OAA2B;IAE/B,MAAMC,YAAY,GAAGrB,aAAa,EAAE,CAC/BsB,WAAW,CAAC,CAAC,CAAC,CAAC;IAAA,CACfV,UAAU,CAACA,UAAU,CAAC,CACtBG,WAAW,CAAEC,MAAa,IAAI;MAC3B,MAAMO,EAAE,GAAGP,MAAM,CAACA,MAAM,CAACQ,MAAM,GAAG,CAAC,CAAC;MACpC,MAAMC,GAAG,GACLL,OAAO,KAAKM,SAAS,GAAG,CAACN,OAAO,IAAIR,UAAU,GAAG,CAAC,CAAC,GAAGW,EAAE,IAAIX,UAAU,GAAGb,GAAG,CAACiB,MAAM,CAAC,GAAGJ,UAAU;MAErGQ,OAAO,GAAGK,GAAG;MACb,OAAOA,GAAG;IACd,CAAC,CAAC;IAEN,MAAME,OAAO,GAAGN,YAAY,CAACR,kBAAkB,CAACF,IAAI,CAAC,CAAC;IAEtD,OAAOgB,OAAO;EAClB,CAAC;EAEDjB,UAAU,CAACkB,eAAe,GAAG,MAAK;IAC9B,MAAM;MAAEhB;IAAU,CAAE,GAAGT,OAAO;IAE9B,OAAOS,UAAU,GAAG,CAAC;EACzB,CAAC;EAEDF,UAAU,CAACP,OAAO,GAAI0B,UAAuB,IAAI;IAC7C,IAAIA,UAAU,KAAKH,SAAS,EAAE;MAC1B,OAAOvB,OAAO;;IAGlBA,OAAO,GAAA2B,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAQ7B,cAAc,GAAK2B,UAAU,CAAE;IAE9C,OAAOnB,UAAU;EACrB,CAAC;EAEDA,UAAU,CAACN,MAAM,GAAI4B,SAAiC,IAAI;IACtD,IAAIA,SAAS,KAAKN,SAAS,EAAE;MACzB,OAAOtB,MAAM;;IAGjBA,MAAM,GAAG4B,SAAS;IAElB,OAAOtB,UAAU;EACrB,CAAC;EAED,OAAOA,UAA2B;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}