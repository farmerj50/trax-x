{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { extend, Browser, remove, ChildProperty, Property, Complex } from '@syncfusion/ej2-base';\nimport { ChartLocation, Point3D } from '../../common/utils/helper';\nimport { Rect } from '@syncfusion/ej2-svg-base';\nimport { BaseTooltip } from '../../common/user-interaction/tooltip';\nimport { tooltipRender } from '../../common/model/constants';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Border, Font } from '../../common/model/base';\nimport { Location } from '../../common/model/base';\nimport { valueToCoefficients } from '../utils/chart3dRender';\n/**\n * Configures the ToolTips in the chart.\n *\n * @public\n */\nvar Chart3DTooltipSettings = /** @class */function (_super) {\n  __extends(Chart3DTooltipSettings, _super);\n  function Chart3DTooltipSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property(false)], Chart3DTooltipSettings.prototype, \"enable\", void 0);\n  __decorate([Property(true)], Chart3DTooltipSettings.prototype, \"enableMarker\", void 0);\n  __decorate([Property(null)], Chart3DTooltipSettings.prototype, \"fill\", void 0);\n  __decorate([Property(null)], Chart3DTooltipSettings.prototype, \"header\", void 0);\n  __decorate([Property(null)], Chart3DTooltipSettings.prototype, \"opacity\", void 0);\n  __decorate([Complex({\n    fontFamily: null,\n    size: '12px',\n    fontStyle: 'Normal',\n    fontWeight: null,\n    color: null\n  }, Font)], Chart3DTooltipSettings.prototype, \"textStyle\", void 0);\n  __decorate([Property(null)], Chart3DTooltipSettings.prototype, \"format\", void 0);\n  __decorate([Property(null)], Chart3DTooltipSettings.prototype, \"template\", void 0);\n  __decorate([Property(true)], Chart3DTooltipSettings.prototype, \"enableAnimation\", void 0);\n  __decorate([Property(300)], Chart3DTooltipSettings.prototype, \"duration\", void 0);\n  __decorate([Property(1000)], Chart3DTooltipSettings.prototype, \"fadeOutDuration\", void 0);\n  __decorate([Property('Move')], Chart3DTooltipSettings.prototype, \"fadeOutMode\", void 0);\n  __decorate([Property(false)], Chart3DTooltipSettings.prototype, \"enableTextWrap\", void 0);\n  __decorate([Complex({\n    color: null,\n    width: null\n  }, Border)], Chart3DTooltipSettings.prototype, \"border\", void 0);\n  __decorate([Complex({\n    x: null,\n    y: null\n  }, Location)], Chart3DTooltipSettings.prototype, \"location\", void 0);\n  return Chart3DTooltipSettings;\n}(ChildProperty);\nexport { Chart3DTooltipSettings };\n/**\n * The `Tooltip` module is used to render the tooltip for chart series.\n */\nvar Tooltip3D = /** @class */function (_super) {\n  __extends(Tooltip3D, _super);\n  /**\n   * Constructor for tooltip module.\n   *\n   * @param {Chart3D} chart - Specifies the chart instance\n   * @private\n   */\n  function Tooltip3D(chart) {\n    var _this = _super.call(this, chart) || this;\n    _this.chart3D = chart;\n    _this.commonXvalues = [];\n    _this.addEventListener();\n    return _this;\n  }\n  /**\n   * Adds event listeners for handling mouse and touch events on the chart.\n   *\n   * @returns {void}\n   * @private\n   */\n  Tooltip3D.prototype.addEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n    var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n    this.chart.on(cancelEvent, this.mouseLeaveHandler, this);\n    this.chart.on('tapHold', this.longPress, this);\n    this.chart.on(Browser.touchMoveEvent, this.mouseMoveHandler, this);\n    this.chart.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n  };\n  /**\n   * Unbinding events for selection module.\n   *\n   * @returns {void}\n   */\n  Tooltip3D.prototype.removeEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n    this.chart.off('pointerleave' || 'mouseleave', this.mouseLeaveHandler);\n    this.chart.off('tapHold', this.longPress);\n    this.chart.off(Browser.touchMoveEvent, this.mouseLeaveHandler);\n    this.chart.off(Browser.touchMoveEvent, this.mouseMoveHandler);\n    this.chart.off(Browser.touchEndEvent, this.mouseUpHandler);\n  };\n  /**\n   * Handles the mouse up event for the 3D chart.\n   *\n   * @param {MouseEvent | PointerEvent | TouchEvent} event - The mouse or touch event.\n   * @returns {void}\n   * @private\n   */\n  Tooltip3D.prototype.mouseUpHandler = function (event) {\n    var _this = this;\n    var chart = this.control;\n    var data = this.get3dData(event);\n    if (chart.isTouch) {\n      this.tooltip(event);\n      if (chart.tooltip.fadeOutMode === 'Move') {\n        this.removeTooltip(chart.tooltip.fadeOutDuration);\n        clearTimeout(this.timerId);\n        this.timerId = +setTimeout(function () {\n          _this.removeBlurEffect();\n        }, 500);\n      }\n      if (chart.startMove && chart.tooltip.fadeOutMode === 'Move') {\n        this.removeTooltip(2000);\n        this.removeBlurEffect();\n      }\n    } else if (!this.findData(data, this.previousPoints[0]) && chart.tooltip.fadeOutMode === 'Click') {\n      this.removeTooltip(0);\n      this.removeBlurEffect();\n    }\n  };\n  /**\n   * Handles the mouse leave event for the 3D chart.\n   *\n   * @returns {void}\n   * @private\n   */\n  Tooltip3D.prototype.mouseLeaveHandler = function () {\n    this.removeTooltip(this.chart.tooltip.fadeOutDuration);\n    this.removeBlurEffect();\n  };\n  /**\n   * Handles the mouse move event for the 3D chart.\n   *\n   * @param {MouseEvent | PointerEvent | TouchEvent} event - The mouse move event.\n   * @returns {void}\n   * @public\n   */\n  Tooltip3D.prototype.mouseMoveHandler = function (event) {\n    var chart = this.chart3D;\n    chart.mouseX = chart.mouseX / chart.scaleX;\n    chart.mouseY = chart.mouseY / chart.scaleY;\n    // Tooltip for chart series.\n    if (!chart.disableTrackTooltip && !chart.rotateActivate) {\n      if (!chart.isTouch || chart.startMove) {\n        this.tooltip(event);\n      }\n    }\n  };\n  /**\n   * Handles the long press on chart.\n   *\n   * @returns {boolean} false\n   * @private\n   */\n  Tooltip3D.prototype.longPress = function () {\n    return false;\n  };\n  /**\n   * To create Tooltip styles for series\n   *\n   * @returns {void}\n   */\n  Tooltip3D.prototype.seriesStyles = function () {\n    if (!this.styleAdded) {\n      var style = document.createElement('style');\n      style.setAttribute('id', this.element.id + '_ej2_chart_tooltip');\n      style.innerText += ' .' + this.element.id + '_ej2_tooltipDeselected { opacity:' + 0.2 + ';} ';\n      document.body.appendChild(style);\n      this.styleAdded = true;\n    }\n  };\n  /**\n   * Handles the tooltip display for the 3D chart.\n   *\n   * @param {MouseEvent | PointerEvent | TouchEvent | KeyboardEvent} e - The event triggering the tooltip display.\n   * @returns {void}\n   * @public\n   */\n  Tooltip3D.prototype.tooltip = function (e) {\n    var elementId = this.element.id + '_tooltip_svg';\n    var svgElement = this.getElement(elementId);\n    var isTooltip = svgElement && parseInt(svgElement.getAttribute('opacity'), 10) > 0;\n    var tooltipDiv = this.getTooltipElement(isTooltip);\n    if (this.chart3D.tooltip3DModule) {\n      this.renderSeriesTooltip(this.chart3D, !isTooltip, tooltipDiv, e);\n    }\n  };\n  /**\n   * Finds the header for the tooltip based on the provided Point3D.\n   *\n   * @param {Point3D} data - The Point3D used to find the header.\n   * @returns {string} - The header for the tooltip.\n   * @private\n   */\n  Tooltip3D.prototype.findHeader = function (data) {\n    if (this.header === '') {\n      return '';\n    }\n    this.header = this.parseTemplate(data.point, data.series, this.header, data.series.xAxis, data.series.yAxis);\n    if (this.header.replace(/<b>/g, '').replace(/<\\/b>/g, '').trim() !== '') {\n      return this.header;\n    }\n    return '';\n  };\n  /**\n   * Renders the tooltip for the series in the 3D chart.\n   *\n   * @param {Chart3D} chart - The 3D chart instance.\n   * @param {boolean} isFirst - A boolean indicating whether it is the first series.\n   * @param {HTMLDivElement} tooltipDiv - The tooltip div element.\n   * @param {MouseEvent | PointerEvent | TouchEvent | KeyboardEvent} e - The event that triggered the tooltip.\n   * @returns {void}\n   * @private\n   */\n  Tooltip3D.prototype.renderSeriesTooltip = function (chart, isFirst, tooltipDiv, e) {\n    var data = this.get3dData(e);\n    this.currentPoints = [];\n    if (this.findData(data, this.previousPoints[0]) && (this.previousPoints[0] && !(this.previousPoints[0].point.index === data.point.index && this.previousPoints[0].series.index === data.series.index && this.chart3D.isRemove) || !this.previousPoints[0])) {\n      if (this.pushData(data, isFirst, tooltipDiv, true)) {\n        this.triggerTooltipRender(data, isFirst, this.getTooltipText(data), this.findHeader(data));\n      }\n    } else if (!data.point && this.chart3D.isRemove && chart.tooltip.fadeOutMode === 'Move') {\n      this.removeTooltip(this.chart.tooltip.fadeOutDuration);\n      this.removeBlurEffect();\n      this.chart3D.isRemove = false;\n    }\n    if (data && data.point) {\n      this.findMouseValue(data, chart);\n    }\n  };\n  /**\n   * Triggers the rendering of the tooltip with the specified point and text information.\n   *\n   * @param {Point3D} point - The data point for which the tooltip is triggered.\n   * @param {boolean} isFirst - A boolean indicating whether it is the first series.\n   * @param {string} textCollection - The text information to be displayed in the tooltip.\n   * @param {string} headerText - The header text for the tooltip.\n   * @returns {void}\n   * @private\n   */\n  Tooltip3D.prototype.triggerTooltipRender = function (point, isFirst, textCollection, headerText) {\n    var _this = this;\n    var tooltipTemplate;\n    var argsData = {\n      cancel: false,\n      text: textCollection,\n      headerText: headerText,\n      template: tooltipTemplate,\n      textStyle: this.textStyle,\n      data: {\n        pointX: point.point.x,\n        pointY: point.point.y,\n        seriesIndex: point.series.index,\n        seriesName: point.series.name,\n        pointIndex: point.point.index,\n        pointText: point.point.text\n      }\n    };\n    var borderWidth = this.chart.border.width;\n    var padding = 3;\n    var chartTooltipSuccess = function (argsData) {\n      if (!argsData.cancel) {\n        _this.headerText = argsData.headerText;\n        _this.formattedText = _this.formattedText.concat(argsData.text);\n        _this.text = _this.formattedText;\n        _this.createTooltip(_this.chart, isFirst, _this.getSymbolLocation(point), point.series.clipRect, point.point, _this.chart3D.tooltip.enableMarker ? ['Circle'] : [], 0, new Rect(borderWidth, borderWidth, _this.chart.availableSize.width - padding - borderWidth * 2, _this.chart.availableSize.height - padding - borderWidth * 2), false, null, _this.getTemplateText(point), _this.template ? argsData.template : '');\n        _this.blurEffect(_this.chart3D.visibleSeries, point.series);\n      } else {\n        _this.removeHighlight();\n        remove(_this.getElement(_this.element.id + '_tooltip'));\n      }\n      _this.chart3D.isRemove = true;\n    };\n    chartTooltipSuccess.bind(this, point);\n    this.chart.trigger(tooltipRender, argsData, chartTooltipSuccess);\n  };\n  /**\n   * Applies a blur effect to the specified series while removing the effect from others.\n   *\n   * @param {Chart3DSeries[]} visibleSeries - The array of visible series in the 3D chart.\n   * @param {Chart3DSeries} tooltipSeries - The series associated with the tooltip.\n   * @returns {void}\n   * @private\n   */\n  Tooltip3D.prototype.blurEffect = function (visibleSeries, tooltipSeries) {\n    if (!this.chart3D.highlight3DModule || this.chart3D.legendSettings.enableHighlight && this.chart3D.highlightMode === 'None') {\n      var pointElements_1 = [];\n      for (var _i = 0, visibleSeries_1 = visibleSeries; _i < visibleSeries_1.length; _i++) {\n        var series = visibleSeries_1[_i];\n        if (series.visible && series.index !== tooltipSeries.index) {\n          var elements = document.querySelectorAll(\"[id*=\\\"region-series-\" + series.index + \"\\\"]\");\n          elements.forEach(function (el) {\n            pointElements_1.push(el);\n          });\n        } else if (series.visible) {\n          var tooltipElements = document.querySelectorAll(\"[id*=\\\"region-series-\" + series.index + \"\\\"]\");\n          for (var i = 0; i < tooltipElements.length; i++) {\n            var element = tooltipElements[i];\n            var elementClassName = element.getAttribute('class') || '';\n            if (elementClassName.indexOf(this.element.id + '_ej2_tooltipDeselected') > -1) {\n              element.setAttribute('class', elementClassName.replace(this.element.id + '_ej2_tooltipDeselected', ''));\n            }\n            this.chart3D.stopElementAnimation(element, series.index);\n          }\n        }\n      }\n      for (var i = 0; i < pointElements_1.length; i++) {\n        if (pointElements_1[i]) {\n          var elementClassName = pointElements_1[i].getAttribute('class') || '';\n          elementClassName += elementClassName !== '' ? ' ' : '';\n          if (elementClassName.indexOf('_selection_') === -1 && elementClassName.indexOf(this.element.id + '_ej2_tooltipDeselected') === -1) {\n            pointElements_1[i].setAttribute('class', elementClassName + this.element.id + '_ej2_tooltipDeselected');\n          }\n        }\n      }\n    }\n  };\n  Tooltip3D.prototype.removeBlurEffect = function () {\n    if (!this.chart3D.highlight3DModule || this.chart3D.legendSettings.enableHighlight && this.chart3D.highlightMode === 'None') {\n      var elements = document.getElementsByClassName(this.element.id + '_ej2_tooltipDeselected');\n      while (elements.length > 0) {\n        var element = elements[0];\n        var elementClassName = element.getAttribute('class') || '';\n        if (elementClassName.indexOf(this.element.id + '_ej2_tooltipDeselected') > -1) {\n          element.setAttribute('class', elementClassName.replace(this.element.id + '_ej2_tooltipDeselected', ''));\n          var index = parseFloat(element.id.split('-series-')[1].split('-point-')[0]);\n          this.chart3D.highlightAnimation(element, index, 700, 0.2);\n        }\n      }\n    }\n  };\n  /**\n   * Gets the location of the symbol based on the current mouse position in the chart.\n   *\n   * @param {Point3D} point - The tooltip point.\n   * @returns {ChartLocation} - The location of the tooltip.\n   * @private\n   */\n  Tooltip3D.prototype.getSymbolLocation = function (point) {\n    var rect = document.getElementById(this.element.id + '_svg').getBoundingClientRect();\n    var upperElement;\n    if (point.series.columnFacet === 'Cylinder') {\n      upperElement = document.querySelectorAll('[id*=\"' + this.element.id + '-svg-' + (point.series.type.indexOf('Column') === -1 ? '0' : '1') + '-region-series-' + point.series.index + '-point-' + point.point.index + '\"]');\n    } else {\n      upperElement = document.querySelectorAll('[id*=\"' + this.element.id + '-svg-' + (point.series.type.indexOf('Column') === -1 ? '5' : '2') + '-region-series-' + point.series.index + '-point-' + point.point.index + '\"]');\n    }\n    var tooltipElement;\n    if (upperElement) {\n      if (upperElement.length === 1) {\n        tooltipElement = upperElement[0].getBoundingClientRect();\n      } else {\n        for (var i = 0; i < upperElement.length; i++) {\n          var element = upperElement[i];\n          if (element.id.indexOf('-' + point.point.index + '-back-front') !== -1 || element.id.indexOf('-' + point.point.index + '-front-back') !== -1) {\n            tooltipElement = element.getBoundingClientRect();\n            break;\n          }\n        }\n      }\n      if (upperElement.length !== 0 && !tooltipElement) {\n        tooltipElement = upperElement[0].getBoundingClientRect();\n      }\n    }\n    var location = new ChartLocation(this.chart3D.tooltip.location.x !== null ? this.chart3D.tooltip.location.x : tooltipElement.left - rect.left + tooltipElement.width / 2, this.chart3D.tooltip.location.y !== null ? this.chart3D.tooltip.location.y : tooltipElement.top - rect.top + tooltipElement.height / 2);\n    return location;\n  };\n  /**\n   * Gets the tooltip text based on the provided point data.\n   *\n   * @param {Point3D} pointData - The data of the point for which the tooltip is generated.\n   * @returns {string} - The tooltip text.\n   * @private\n   */\n  Tooltip3D.prototype.getTooltipText = function (pointData) {\n    return this.parseTemplate(pointData.point, pointData.series, this.getFormat(this.chart3D, pointData.series), pointData.series.xAxis, pointData.series.yAxis);\n  };\n  /**\n   * Gets the template text based on the provided data.\n   *\n   * @param {Point3D} data - The data object for which the template text is generated.\n   * @returns {Chart3DPoint | Chart3DPoint[]} - The template text.\n   * @private\n   */\n  Tooltip3D.prototype.getTemplateText = function (data) {\n    if (this.template) {\n      var point = extend({}, data.point);\n      point.x = this.formatPointValue(data.point, data.series.xAxis, 'x', true, false);\n      point.y = this.formatPointValue(data.point, data.series.yAxis, 'y', false, true);\n      return point;\n    } else {\n      return data.point;\n    }\n  };\n  /**\n   * Finds the mouse value based on the provided data and chart.\n   *\n   * @param {Point3D} data - The data object containing information about the point.\n   * @param {Chart3D} chart - The Chart3D instance.\n   * @returns {void}\n   * @private\n   */\n  Tooltip3D.prototype.findMouseValue = function (data, chart) {\n    if (!chart.requireInvertedAxis) {\n      this.valueX = valueToCoefficients(data.point.xValue, data.series.xAxis) * data.series.xAxis.rect.width + data.series.xAxis.rect.x;\n      this.valueY = chart.mouseY;\n    } else {\n      this.valueY = (1 - valueToCoefficients(data.point.xValue, data.series.xAxis)) * data.series.xAxis.rect.height + data.series.xAxis.rect.y;\n      this.valueX = chart.mouseX;\n    }\n  };\n  /**\n   * Parses the template using the provided point, series, format, xAxis, and yAxis information.\n   *\n   * @param {Chart3DPoint} point - The point for which the template needs to be parsed.\n   * @param {Chart3DSeries} series - The series associated with the point.\n   * @param {string} format - The format string.\n   * @param {Chart3DAxis} xAxis - The X-axis of the chart.\n   * @param {Chart3DAxis} yAxis - The Y-axis of the chart.\n   * @returns {string} - The parsed template string.\n   * @private\n   */\n  Tooltip3D.prototype.parseTemplate = function (point, series, format, xAxis, yAxis) {\n    var val;\n    var textValue;\n    var regExp = RegExp;\n    for (var _i = 0, _a = Object.keys(point); _i < _a.length; _i++) {\n      var dataValue = _a[_i];\n      val = new regExp('${point' + '.' + dataValue + '}', 'gm');\n      format = format.replace(val.source, this.formatPointValue(point, val.source === '${point.x}' ? xAxis : yAxis, dataValue, val.source === '${point.x}', val.source === '${point.y}'));\n    }\n    for (var _b = 0, _c = Object.keys(Object.getPrototypeOf(series)); _b < _c.length; _b++) {\n      var dataValue = _c[_b];\n      val = new regExp('${series' + '.' + dataValue + '}', 'gm');\n      textValue = series[dataValue];\n      format = format.replace(val.source, textValue);\n    }\n    return format;\n  };\n  /**\n   * Formats the point value based on the provided point, axis, dataValue, and other flags.\n   *\n   * @param {Chart3DPoint} point - The point for which the value needs to be formatted.\n   * @param {Chart3DAxis} axis - The axis associated with the point.\n   * @param {string} dataValue - The data value to be formatted.\n   * @param {boolean} isXPoint - Indicates whether the point is on the X-axis.\n   * @param {boolean} isYPoint - Indicates whether the point is on the Y-axis.\n   * @returns {string} - The formatted point value.\n   * @private\n   */\n  Tooltip3D.prototype.formatPointValue = function (point, axis, dataValue, isXPoint, isYPoint) {\n    var textValue;\n    var customLabelFormat;\n    var value;\n    if (axis.valueType !== 'Category' && isXPoint) {\n      customLabelFormat = axis.labelFormat && axis.labelFormat.match('{value}') !== null;\n      textValue = customLabelFormat ? axis.labelFormat.replace('{value}', axis.format(point[dataValue])) : axis.format(point[dataValue]);\n    } else if (isYPoint && !isNullOrUndefined(point[dataValue])) {\n      customLabelFormat = axis.labelFormat && axis.labelFormat.match('{value}') !== null;\n      value = axis.format(point[dataValue]);\n      textValue = customLabelFormat ? axis.labelFormat.replace('{value}', value) : value;\n    } else {\n      textValue = point[dataValue];\n    }\n    return textValue;\n  };\n  /**\n   * Gets the format for the tooltip based on the provided chart and series.\n   *\n   * @param {Chart3D} chart - The 3D chart instance.\n   * @param {Chart3DSeries} series - The 3D series for which the tooltip format is needed.\n   * @returns {string} - The tooltip format.\n   * @private\n   */\n  Tooltip3D.prototype.getFormat = function (chart, series) {\n    if (series.tooltipFormat) {\n      return series.tooltipFormat;\n    }\n    if (!series.tooltipFormat && chart.tooltip.format) {\n      return chart.tooltip.format;\n    }\n    var textX = '${point.x}';\n    var format = textX;\n    return format + ' : ' + (chart.theme.indexOf('Tailwind3') > -1 ? '${point.y}' : '<b>${point.y}</b>');\n  };\n  /**\n   * Gets the 3D data (point and series) associated with the provided event in the chart.\n   *\n   * @param {MouseEvent | PointerEvent | TouchEvent | KeyboardEvent} event - The event for which to retrieve 3D data.\n   * @returns {Point3D} - The 3D data object containing the point and series information.\n   * @private\n   */\n  Tooltip3D.prototype.get3dData = function (event) {\n    var chart = this.chart3D;\n    var point = null;\n    var series = null;\n    var currentX = this.chart3D.mouseX;\n    var currentY = this.chart3D.mouseY;\n    var rect = this.chart3D.chartAxisLayoutPanel.seriesClipRect;\n    var index;\n    var pointIndex;\n    var seriesIndex;\n    var targetElement = event.target;\n    if (targetElement && currentX > rect.x && currentX < rect.x + rect.width && currentY > rect.y && currentY < rect.y + rect.height) {\n      var nodeName = targetElement.nodeName;\n      if ((nodeName === 'shape' || nodeName === 'path') && targetElement.id.indexOf('region') > 1) {\n        index = targetElement.id.match(/(\\d+)/g);\n        pointIndex = parseInt(index[index.length - 1].toString(), 10);\n        seriesIndex = parseInt(index[index.length - 2].toString(), 10);\n      }\n    }\n    if (!isNullOrUndefined(seriesIndex)) {\n      series = chart.visibleSeries[seriesIndex];\n    }\n    if (series) {\n      if (series.visible) {\n        point = series.points[pointIndex];\n      }\n      if (point) {\n        return new Point3D(point, series);\n      }\n    }\n    return new Point3D(point, series);\n  };\n  /**\n   * Finds data based on the provided 3D data and the previous 3D data.\n   *\n   * @param {Point3D} data - The current 3D data.\n   * @param {Point3D} previous - The previous 3D data.\n   * @returns {boolean} - Returns true if the data is found based on the conditions.\n   * @private\n   */\n  Tooltip3D.prototype.findData = function (data, previous) {\n    return data.point && (!previous || previous.point !== data.point || previous.point === data.point);\n  };\n  /**\n   * Gets the module name.\n   *\n   * @returns {string} - The module name.\n   */\n  Tooltip3D.prototype.getModuleName = function () {\n    /**\n     * Returns the module name\n     */\n    return 'Tooltip3D';\n  };\n  /**\n   * To destroy the tooltip.\n   *\n   * @returns {void}\n   * @private\n   */\n  Tooltip3D.prototype.destroy = function () {\n    /**\n     * Destroy method performed here\n     */\n    this.removeEventListener();\n  };\n  return Tooltip3D;\n}(BaseTooltip);\nexport { Tooltip3D };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","extend","Browser","remove","ChildProperty","Property","Complex","ChartLocation","Point3D","Rect","BaseTooltip","tooltipRender","isNullOrUndefined","Border","Font","Location","valueToCoefficients","Chart3DTooltipSettings","_super","apply","fontFamily","size","fontStyle","fontWeight","color","width","x","y","Tooltip3D","chart","_this","call","chart3D","commonXvalues","addEventListener","isDestroyed","cancelEvent","isPointer","on","mouseLeaveHandler","longPress","touchMoveEvent","mouseMoveHandler","touchEndEvent","mouseUpHandler","removeEventListener","off","event","control","data","get3dData","isTouch","tooltip","fadeOutMode","removeTooltip","fadeOutDuration","clearTimeout","timerId","setTimeout","removeBlurEffect","startMove","findData","previousPoints","mouseX","scaleX","mouseY","scaleY","disableTrackTooltip","rotateActivate","seriesStyles","styleAdded","style","document","createElement","setAttribute","element","id","innerText","body","appendChild","e","elementId","svgElement","getElement","isTooltip","parseInt","getAttribute","tooltipDiv","getTooltipElement","tooltip3DModule","renderSeriesTooltip","findHeader","header","parseTemplate","point","series","xAxis","yAxis","replace","trim","isFirst","currentPoints","index","isRemove","pushData","triggerTooltipRender","getTooltipText","findMouseValue","textCollection","headerText","tooltipTemplate","argsData","cancel","text","template","textStyle","pointX","pointY","seriesIndex","seriesName","name","pointIndex","pointText","borderWidth","border","padding","chartTooltipSuccess","formattedText","concat","createTooltip","getSymbolLocation","clipRect","enableMarker","availableSize","height","getTemplateText","blurEffect","visibleSeries","removeHighlight","bind","trigger","tooltipSeries","highlight3DModule","legendSettings","enableHighlight","highlightMode","pointElements_1","_i","visibleSeries_1","visible","elements","querySelectorAll","forEach","el","push","tooltipElements","elementClassName","indexOf","stopElementAnimation","getElementsByClassName","parseFloat","split","highlightAnimation","rect","getElementById","getBoundingClientRect","upperElement","columnFacet","type","tooltipElement","location","left","top","pointData","getFormat","formatPointValue","requireInvertedAxis","valueX","xValue","valueY","format","val","textValue","regExp","RegExp","_a","keys","dataValue","source","_b","_c","getPrototypeOf","axis","isXPoint","isYPoint","customLabelFormat","value","valueType","labelFormat","match","tooltipFormat","textX","theme","currentX","currentY","chartAxisLayoutPanel","seriesClipRect","targetElement","nodeName","toString","points","previous","getModuleName","destroy"],"sources":["C:/Users/gabby/trax-x/node_modules/@syncfusion/ej2-charts/src/chart3d/user-interaction/tooltip.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { extend, Browser, remove, ChildProperty, Property, Complex } from '@syncfusion/ej2-base';\nimport { ChartLocation, Point3D } from '../../common/utils/helper';\nimport { Rect } from '@syncfusion/ej2-svg-base';\nimport { BaseTooltip } from '../../common/user-interaction/tooltip';\nimport { tooltipRender } from '../../common/model/constants';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Border, Font } from '../../common/model/base';\nimport { Location } from '../../common/model/base';\nimport { valueToCoefficients } from '../utils/chart3dRender';\n/**\n * Configures the ToolTips in the chart.\n *\n * @public\n */\nvar Chart3DTooltipSettings = /** @class */ (function (_super) {\n    __extends(Chart3DTooltipSettings, _super);\n    function Chart3DTooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], Chart3DTooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(true)\n    ], Chart3DTooltipSettings.prototype, \"enableMarker\", void 0);\n    __decorate([\n        Property(null)\n    ], Chart3DTooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(null)\n    ], Chart3DTooltipSettings.prototype, \"header\", void 0);\n    __decorate([\n        Property(null)\n    ], Chart3DTooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({ fontFamily: null, size: '12px', fontStyle: 'Normal', fontWeight: null, color: null }, Font)\n    ], Chart3DTooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Chart3DTooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], Chart3DTooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Chart3DTooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property(300)\n    ], Chart3DTooltipSettings.prototype, \"duration\", void 0);\n    __decorate([\n        Property(1000)\n    ], Chart3DTooltipSettings.prototype, \"fadeOutDuration\", void 0);\n    __decorate([\n        Property('Move')\n    ], Chart3DTooltipSettings.prototype, \"fadeOutMode\", void 0);\n    __decorate([\n        Property(false)\n    ], Chart3DTooltipSettings.prototype, \"enableTextWrap\", void 0);\n    __decorate([\n        Complex({ color: null, width: null }, Border)\n    ], Chart3DTooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ x: null, y: null }, Location)\n    ], Chart3DTooltipSettings.prototype, \"location\", void 0);\n    return Chart3DTooltipSettings;\n}(ChildProperty));\nexport { Chart3DTooltipSettings };\n/**\n * The `Tooltip` module is used to render the tooltip for chart series.\n */\nvar Tooltip3D = /** @class */ (function (_super) {\n    __extends(Tooltip3D, _super);\n    /**\n     * Constructor for tooltip module.\n     *\n     * @param {Chart3D} chart - Specifies the chart instance\n     * @private\n     */\n    function Tooltip3D(chart) {\n        var _this = _super.call(this, chart) || this;\n        _this.chart3D = chart;\n        _this.commonXvalues = [];\n        _this.addEventListener();\n        return _this;\n    }\n    /**\n     * Adds event listeners for handling mouse and touch events on the chart.\n     *\n     * @returns {void}\n     * @private\n     */\n    Tooltip3D.prototype.addEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        this.chart.on(cancelEvent, this.mouseLeaveHandler, this);\n        this.chart.on('tapHold', this.longPress, this);\n        this.chart.on(Browser.touchMoveEvent, this.mouseMoveHandler, this);\n        this.chart.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * Unbinding events for selection module.\n     *\n     * @returns {void}\n     */\n    Tooltip3D.prototype.removeEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.off('pointerleave' || 'mouseleave', this.mouseLeaveHandler);\n        this.chart.off('tapHold', this.longPress);\n        this.chart.off(Browser.touchMoveEvent, this.mouseLeaveHandler);\n        this.chart.off(Browser.touchMoveEvent, this.mouseMoveHandler);\n        this.chart.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Handles the mouse up event for the 3D chart.\n     *\n     * @param {MouseEvent | PointerEvent | TouchEvent} event - The mouse or touch event.\n     * @returns {void}\n     * @private\n     */\n    Tooltip3D.prototype.mouseUpHandler = function (event) {\n        var _this = this;\n        var chart = this.control;\n        var data = this.get3dData(event);\n        if (chart.isTouch) {\n            this.tooltip(event);\n            if (chart.tooltip.fadeOutMode === 'Move') {\n                this.removeTooltip(chart.tooltip.fadeOutDuration);\n                clearTimeout(this.timerId);\n                this.timerId = +setTimeout(function () {\n                    _this.removeBlurEffect();\n                }, 500);\n            }\n            if (chart.startMove && chart.tooltip.fadeOutMode === 'Move') {\n                this.removeTooltip(2000);\n                this.removeBlurEffect();\n            }\n        }\n        else if (!this.findData(data, this.previousPoints[0]) && chart.tooltip.fadeOutMode === 'Click') {\n            this.removeTooltip(0);\n            this.removeBlurEffect();\n        }\n    };\n    /**\n     * Handles the mouse leave event for the 3D chart.\n     *\n     * @returns {void}\n     * @private\n     */\n    Tooltip3D.prototype.mouseLeaveHandler = function () {\n        this.removeTooltip(this.chart.tooltip.fadeOutDuration);\n        this.removeBlurEffect();\n    };\n    /**\n     * Handles the mouse move event for the 3D chart.\n     *\n     * @param {MouseEvent | PointerEvent | TouchEvent} event - The mouse move event.\n     * @returns {void}\n     * @public\n     */\n    Tooltip3D.prototype.mouseMoveHandler = function (event) {\n        var chart = this.chart3D;\n        chart.mouseX = chart.mouseX / chart.scaleX;\n        chart.mouseY = chart.mouseY / chart.scaleY;\n        // Tooltip for chart series.\n        if (!chart.disableTrackTooltip && !chart.rotateActivate) {\n            if (!chart.isTouch || (chart.startMove)) {\n                this.tooltip(event);\n            }\n        }\n    };\n    /**\n     * Handles the long press on chart.\n     *\n     * @returns {boolean} false\n     * @private\n     */\n    Tooltip3D.prototype.longPress = function () {\n        return false;\n    };\n    /**\n     * To create Tooltip styles for series\n     *\n     * @returns {void}\n     */\n    Tooltip3D.prototype.seriesStyles = function () {\n        if (!this.styleAdded) {\n            var style = document.createElement('style');\n            style.setAttribute('id', this.element.id + '_ej2_chart_tooltip');\n            style.innerText += ' .' + this.element.id + '_ej2_tooltipDeselected { opacity:' + (0.2) + ';} ';\n            document.body.appendChild(style);\n            this.styleAdded = true;\n        }\n    };\n    /**\n     * Handles the tooltip display for the 3D chart.\n     *\n     * @param {MouseEvent | PointerEvent | TouchEvent | KeyboardEvent} e - The event triggering the tooltip display.\n     * @returns {void}\n     * @public\n     */\n    Tooltip3D.prototype.tooltip = function (e) {\n        var elementId = this.element.id + '_tooltip_svg';\n        var svgElement = this.getElement(elementId);\n        var isTooltip = (svgElement && parseInt(svgElement.getAttribute('opacity'), 10) > 0);\n        var tooltipDiv = this.getTooltipElement(isTooltip);\n        if (this.chart3D.tooltip3DModule) {\n            this.renderSeriesTooltip(this.chart3D, !isTooltip, tooltipDiv, e);\n        }\n    };\n    /**\n     * Finds the header for the tooltip based on the provided Point3D.\n     *\n     * @param {Point3D} data - The Point3D used to find the header.\n     * @returns {string} - The header for the tooltip.\n     * @private\n     */\n    Tooltip3D.prototype.findHeader = function (data) {\n        if (this.header === '') {\n            return '';\n        }\n        this.header = this.parseTemplate(data.point, data.series, this.header, data.series.xAxis, data.series.yAxis);\n        if (this.header.replace(/<b>/g, '').replace(/<\\/b>/g, '').trim() !== '') {\n            return this.header;\n        }\n        return '';\n    };\n    /**\n     * Renders the tooltip for the series in the 3D chart.\n     *\n     * @param {Chart3D} chart - The 3D chart instance.\n     * @param {boolean} isFirst - A boolean indicating whether it is the first series.\n     * @param {HTMLDivElement} tooltipDiv - The tooltip div element.\n     * @param {MouseEvent | PointerEvent | TouchEvent | KeyboardEvent} e - The event that triggered the tooltip.\n     * @returns {void}\n     * @private\n     */\n    Tooltip3D.prototype.renderSeriesTooltip = function (chart, isFirst, tooltipDiv, e) {\n        var data = this.get3dData(e);\n        this.currentPoints = [];\n        if (this.findData(data, this.previousPoints[0]) &&\n            ((this.previousPoints[0] && !((this.previousPoints[0].point.index === data.point.index && this.previousPoints[0].series.index\n                === data.series.index) && this.chart3D.isRemove)) || !this.previousPoints[0])) {\n            if (this.pushData(data, isFirst, tooltipDiv, true)) {\n                this.triggerTooltipRender(data, isFirst, this.getTooltipText(data), this.findHeader(data));\n            }\n        }\n        else if (!data.point && this.chart3D.isRemove && chart.tooltip.fadeOutMode === 'Move') {\n            this.removeTooltip(this.chart.tooltip.fadeOutDuration);\n            this.removeBlurEffect();\n            this.chart3D.isRemove = false;\n        }\n        if (data && data.point) {\n            this.findMouseValue(data, chart);\n        }\n    };\n    /**\n     * Triggers the rendering of the tooltip with the specified point and text information.\n     *\n     * @param {Point3D} point - The data point for which the tooltip is triggered.\n     * @param {boolean} isFirst - A boolean indicating whether it is the first series.\n     * @param {string} textCollection - The text information to be displayed in the tooltip.\n     * @param {string} headerText - The header text for the tooltip.\n     * @returns {void}\n     * @private\n     */\n    Tooltip3D.prototype.triggerTooltipRender = function (point, isFirst, textCollection, headerText) {\n        var _this = this;\n        var tooltipTemplate;\n        var argsData = {\n            cancel: false, text: textCollection, headerText: headerText, template: tooltipTemplate,\n            textStyle: this.textStyle,\n            data: {\n                pointX: point.point.x, pointY: point.point.y, seriesIndex: point.series.index, seriesName: point.series.name,\n                pointIndex: point.point.index, pointText: point.point.text\n            }\n        };\n        var borderWidth = this.chart.border.width;\n        var padding = 3;\n        var chartTooltipSuccess = function (argsData) {\n            if (!argsData.cancel) {\n                _this.headerText = argsData.headerText;\n                _this.formattedText = _this.formattedText.concat(argsData.text);\n                _this.text = _this.formattedText;\n                _this.createTooltip(_this.chart, isFirst, _this.getSymbolLocation(point), point.series.clipRect, point.point, _this.chart3D.tooltip.enableMarker ? ['Circle'] : [], 0, new Rect(borderWidth, borderWidth, _this.chart.availableSize.width - padding - borderWidth * 2, _this.chart.availableSize.height - padding - borderWidth * 2), false, null, _this.getTemplateText(point), _this.template ? argsData.template : '');\n                _this.blurEffect(_this.chart3D.visibleSeries, point.series);\n            }\n            else {\n                _this.removeHighlight();\n                remove(_this.getElement(_this.element.id + '_tooltip'));\n            }\n            _this.chart3D.isRemove = true;\n        };\n        chartTooltipSuccess.bind(this, point);\n        this.chart.trigger(tooltipRender, argsData, chartTooltipSuccess);\n    };\n    /**\n     * Applies a blur effect to the specified series while removing the effect from others.\n     *\n     * @param {Chart3DSeries[]} visibleSeries - The array of visible series in the 3D chart.\n     * @param {Chart3DSeries} tooltipSeries - The series associated with the tooltip.\n     * @returns {void}\n     * @private\n     */\n    Tooltip3D.prototype.blurEffect = function (visibleSeries, tooltipSeries) {\n        if (!this.chart3D.highlight3DModule || (this.chart3D.legendSettings.enableHighlight && this.chart3D.highlightMode === 'None')) {\n            var pointElements_1 = [];\n            for (var _i = 0, visibleSeries_1 = visibleSeries; _i < visibleSeries_1.length; _i++) {\n                var series = visibleSeries_1[_i];\n                if (series.visible && series.index !== tooltipSeries.index) {\n                    var elements = document.querySelectorAll(\"[id*=\\\"region-series-\" + series.index + \"\\\"]\");\n                    elements.forEach(function (el) {\n                        pointElements_1.push(el);\n                    });\n                }\n                else if (series.visible) {\n                    var tooltipElements = document.querySelectorAll(\"[id*=\\\"region-series-\" + series.index + \"\\\"]\");\n                    for (var i = 0; i < tooltipElements.length; i++) {\n                        var element = tooltipElements[i];\n                        var elementClassName = element.getAttribute('class') || '';\n                        if (elementClassName.indexOf(this.element.id + '_ej2_tooltipDeselected') > -1) {\n                            element.setAttribute('class', elementClassName.replace(this.element.id + '_ej2_tooltipDeselected', ''));\n                        }\n                        this.chart3D.stopElementAnimation(element, series.index);\n                    }\n                }\n            }\n            for (var i = 0; i < pointElements_1.length; i++) {\n                if (pointElements_1[i]) {\n                    var elementClassName = pointElements_1[i].getAttribute('class') || '';\n                    elementClassName += ((elementClassName !== '') ? ' ' : '');\n                    if (elementClassName.indexOf('_selection_') === -1 && elementClassName.indexOf(this.element.id + '_ej2_tooltipDeselected') === -1) {\n                        pointElements_1[i].setAttribute('class', elementClassName + this.element.id + '_ej2_tooltipDeselected');\n                    }\n                }\n            }\n        }\n    };\n    Tooltip3D.prototype.removeBlurEffect = function () {\n        if (!this.chart3D.highlight3DModule || (this.chart3D.legendSettings.enableHighlight && this.chart3D.highlightMode === 'None')) {\n            var elements = document.getElementsByClassName(this.element.id + '_ej2_tooltipDeselected');\n            while (elements.length > 0) {\n                var element = elements[0];\n                var elementClassName = element.getAttribute('class') || '';\n                if (elementClassName.indexOf(this.element.id + '_ej2_tooltipDeselected') > -1) {\n                    element.setAttribute('class', elementClassName.replace(this.element.id + '_ej2_tooltipDeselected', ''));\n                    var index = parseFloat(element.id.split('-series-')[1].split('-point-')[0]);\n                    this.chart3D.highlightAnimation(element, index, 700, 0.2);\n                }\n            }\n        }\n    };\n    /**\n     * Gets the location of the symbol based on the current mouse position in the chart.\n     *\n     * @param {Point3D} point - The tooltip point.\n     * @returns {ChartLocation} - The location of the tooltip.\n     * @private\n     */\n    Tooltip3D.prototype.getSymbolLocation = function (point) {\n        var rect = document.getElementById(this.element.id + '_svg').getBoundingClientRect();\n        var upperElement;\n        if (point.series.columnFacet === 'Cylinder') {\n            upperElement = document.querySelectorAll('[id*=\"' + this.element.id + '-svg-' + (point.series.type.indexOf('Column') === -1 ? '0' : '1') + '-region-series-' + point.series.index + '-point-' + point.point.index + '\"]');\n        }\n        else {\n            upperElement = document.querySelectorAll('[id*=\"' + this.element.id + '-svg-' + (point.series.type.indexOf('Column') === -1 ? '5' : '2') + '-region-series-' + point.series.index + '-point-' + point.point.index + '\"]');\n        }\n        var tooltipElement;\n        if (upperElement) {\n            if (upperElement.length === 1) {\n                tooltipElement = upperElement[0].getBoundingClientRect();\n            }\n            else {\n                for (var i = 0; i < upperElement.length; i++) {\n                    var element = upperElement[i];\n                    if (element.id.indexOf('-' + point.point.index + '-back-front') !== -1 || element.id.indexOf('-' + point.point.index + '-front-back') !== -1) {\n                        tooltipElement = element.getBoundingClientRect();\n                        break;\n                    }\n                }\n            }\n            if (upperElement.length !== 0 && !tooltipElement) {\n                tooltipElement = upperElement[0].getBoundingClientRect();\n            }\n        }\n        var location = new ChartLocation((this.chart3D.tooltip.location.x !== null) ? this.chart3D.tooltip.location.x :\n            tooltipElement.left - rect.left + (tooltipElement.width / 2), (this.chart3D.tooltip.location.y !== null) ?\n            this.chart3D.tooltip.location.y : tooltipElement.top - rect.top + (tooltipElement.height / 2));\n        return location;\n    };\n    /**\n     * Gets the tooltip text based on the provided point data.\n     *\n     * @param {Point3D} pointData - The data of the point for which the tooltip is generated.\n     * @returns {string} - The tooltip text.\n     * @private\n     */\n    Tooltip3D.prototype.getTooltipText = function (pointData) {\n        return this.parseTemplate(pointData.point, pointData.series, this.getFormat(this.chart3D, pointData.series), pointData.series.xAxis, pointData.series.yAxis);\n    };\n    /**\n     * Gets the template text based on the provided data.\n     *\n     * @param {Point3D} data - The data object for which the template text is generated.\n     * @returns {Chart3DPoint | Chart3DPoint[]} - The template text.\n     * @private\n     */\n    Tooltip3D.prototype.getTemplateText = function (data) {\n        if (this.template) {\n            var point = extend({}, data.point);\n            point.x = this.formatPointValue(data.point, data.series.xAxis, 'x', true, false);\n            point.y = this.formatPointValue(data.point, data.series.yAxis, 'y', false, true);\n            return point;\n        }\n        else {\n            return data.point;\n        }\n    };\n    /**\n     * Finds the mouse value based on the provided data and chart.\n     *\n     * @param {Point3D} data - The data object containing information about the point.\n     * @param {Chart3D} chart - The Chart3D instance.\n     * @returns {void}\n     * @private\n     */\n    Tooltip3D.prototype.findMouseValue = function (data, chart) {\n        if (!chart.requireInvertedAxis) {\n            this.valueX = valueToCoefficients(data.point.xValue, data.series.xAxis) *\n                data.series.xAxis.rect.width + data.series.xAxis.rect.x;\n            this.valueY = chart.mouseY;\n        }\n        else {\n            this.valueY = (1 - valueToCoefficients(data.point.xValue, data.series.xAxis)) * data.series.xAxis.rect.height\n                + data.series.xAxis.rect.y;\n            this.valueX = chart.mouseX;\n        }\n    };\n    /**\n     * Parses the template using the provided point, series, format, xAxis, and yAxis information.\n     *\n     * @param {Chart3DPoint} point - The point for which the template needs to be parsed.\n     * @param {Chart3DSeries} series - The series associated with the point.\n     * @param {string} format - The format string.\n     * @param {Chart3DAxis} xAxis - The X-axis of the chart.\n     * @param {Chart3DAxis} yAxis - The Y-axis of the chart.\n     * @returns {string} - The parsed template string.\n     * @private\n     */\n    Tooltip3D.prototype.parseTemplate = function (point, series, format, xAxis, yAxis) {\n        var val;\n        var textValue;\n        var regExp = RegExp;\n        for (var _i = 0, _a = Object.keys(point); _i < _a.length; _i++) {\n            var dataValue = _a[_i];\n            val = new regExp('${point' + '.' + dataValue + '}', 'gm');\n            format = format.replace(val.source, this.formatPointValue(point, val.source === '${point.x}' ? xAxis : yAxis, dataValue, val.source === '${point.x}', (val.source === '${point.y}')));\n        }\n        for (var _b = 0, _c = Object.keys(Object.getPrototypeOf(series)); _b < _c.length; _b++) {\n            var dataValue = _c[_b];\n            val = new regExp('${series' + '.' + dataValue + '}', 'gm');\n            textValue = series[dataValue];\n            format = format.replace(val.source, textValue);\n        }\n        return format;\n    };\n    /**\n     * Formats the point value based on the provided point, axis, dataValue, and other flags.\n     *\n     * @param {Chart3DPoint} point - The point for which the value needs to be formatted.\n     * @param {Chart3DAxis} axis - The axis associated with the point.\n     * @param {string} dataValue - The data value to be formatted.\n     * @param {boolean} isXPoint - Indicates whether the point is on the X-axis.\n     * @param {boolean} isYPoint - Indicates whether the point is on the Y-axis.\n     * @returns {string} - The formatted point value.\n     * @private\n     */\n    Tooltip3D.prototype.formatPointValue = function (point, axis, dataValue, isXPoint, isYPoint) {\n        var textValue;\n        var customLabelFormat;\n        var value;\n        if (axis.valueType !== 'Category' && isXPoint) {\n            customLabelFormat = axis.labelFormat && axis.labelFormat.match('{value}') !== null;\n            textValue = customLabelFormat ? axis.labelFormat.replace('{value}', axis.format(point[dataValue])) :\n                axis.format(point[dataValue]);\n        }\n        else if (isYPoint && !isNullOrUndefined(point[dataValue])) {\n            customLabelFormat = axis.labelFormat && axis.labelFormat.match('{value}') !== null;\n            value = axis.format(point[dataValue]);\n            textValue = customLabelFormat ? axis.labelFormat.replace('{value}', value) : value;\n        }\n        else {\n            textValue = point[dataValue];\n        }\n        return textValue;\n    };\n    /**\n     * Gets the format for the tooltip based on the provided chart and series.\n     *\n     * @param {Chart3D} chart - The 3D chart instance.\n     * @param {Chart3DSeries} series - The 3D series for which the tooltip format is needed.\n     * @returns {string} - The tooltip format.\n     * @private\n     */\n    Tooltip3D.prototype.getFormat = function (chart, series) {\n        if (series.tooltipFormat) {\n            return series.tooltipFormat;\n        }\n        if (!series.tooltipFormat && chart.tooltip.format) {\n            return chart.tooltip.format;\n        }\n        var textX = '${point.x}';\n        var format = textX;\n        return format + ' : ' + (chart.theme.indexOf('Tailwind3') > -1 ? '${point.y}' : '<b>${point.y}</b>');\n    };\n    /**\n     * Gets the 3D data (point and series) associated with the provided event in the chart.\n     *\n     * @param {MouseEvent | PointerEvent | TouchEvent | KeyboardEvent} event - The event for which to retrieve 3D data.\n     * @returns {Point3D} - The 3D data object containing the point and series information.\n     * @private\n     */\n    Tooltip3D.prototype.get3dData = function (event) {\n        var chart = this.chart3D;\n        var point = null;\n        var series = null;\n        var currentX = this.chart3D.mouseX;\n        var currentY = this.chart3D.mouseY;\n        var rect = this.chart3D.chartAxisLayoutPanel.seriesClipRect;\n        var index;\n        var pointIndex;\n        var seriesIndex;\n        var targetElement = event.target;\n        if (targetElement && currentX > rect.x && currentX < (rect.x + rect.width) &&\n            currentY > rect.y && currentY < (rect.y + rect.height)) {\n            var nodeName = targetElement.nodeName;\n            if ((nodeName === 'shape' || nodeName === 'path') && targetElement.id.indexOf('region') > 1) {\n                index = targetElement.id.match(/(\\d+)/g);\n                pointIndex = parseInt(index[index.length - 1].toString(), 10);\n                seriesIndex = parseInt(index[index.length - 2].toString(), 10);\n            }\n        }\n        if (!isNullOrUndefined(seriesIndex)) {\n            series = chart.visibleSeries[seriesIndex];\n        }\n        if (series) {\n            if (series.visible) {\n                point = series.points[pointIndex];\n            }\n            if (point) {\n                return new Point3D(point, series);\n            }\n        }\n        return new Point3D(point, series);\n    };\n    /**\n     * Finds data based on the provided 3D data and the previous 3D data.\n     *\n     * @param {Point3D} data - The current 3D data.\n     * @param {Point3D} previous - The previous 3D data.\n     * @returns {boolean} - Returns true if the data is found based on the conditions.\n     * @private\n     */\n    Tooltip3D.prototype.findData = function (data, previous) {\n        return data.point && ((!previous || (previous.point !== data.point)) || (previous.point === data.point));\n    };\n    /**\n     * Gets the module name.\n     *\n     * @returns {string} - The module name.\n     */\n    Tooltip3D.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Tooltip3D';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @returns {void}\n     * @private\n     */\n    Tooltip3D.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return Tooltip3D;\n}(BaseTooltip));\nexport { Tooltip3D };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}