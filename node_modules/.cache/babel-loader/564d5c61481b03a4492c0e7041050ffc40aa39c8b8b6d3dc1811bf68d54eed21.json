{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { select, event as d3Event, mouse, touches } from \"d3-selection\";\nimport { isDefined, mousePosition, touchPosition, getTouchProps, d3Window, MOUSEMOVE, MOUSEUP, MOUSEENTER, MOUSELEAVE, TOUCHMOVE, TOUCHEND, noop } from \"./utils\";\nimport { getCurrentCharts } from \"./utils/ChartDataUtil\";\n// import { clearTimeout, setTimeout } from \"timers\";\n\nvar EventCapture = function (_Component) {\n  _inherits(EventCapture, _Component);\n  function EventCapture(props) {\n    _classCallCheck(this, EventCapture);\n    var _this = _possibleConstructorReturn(this, (EventCapture.__proto__ || Object.getPrototypeOf(EventCapture)).call(this, props));\n    _this.handleEnter = _this.handleEnter.bind(_this);\n    _this.handleLeave = _this.handleLeave.bind(_this);\n    _this.handleWheel = _this.handleWheel.bind(_this);\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handlePanEnd = _this.handlePanEnd.bind(_this);\n    _this.handlePan = _this.handlePan.bind(_this);\n    _this.handleTouchStart = _this.handleTouchStart.bind(_this);\n    _this.handleTouchMove = _this.handleTouchMove.bind(_this);\n    _this.handlePinchZoom = _this.handlePinchZoom.bind(_this);\n    _this.handlePinchZoomEnd = _this.handlePinchZoomEnd.bind(_this);\n    _this.handleClick = _this.handleClick.bind(_this);\n    _this.handleRightClick = _this.handleRightClick.bind(_this);\n    _this.handleDrag = _this.handleDrag.bind(_this);\n    _this.handleDragEnd = _this.handleDragEnd.bind(_this);\n    _this.shouldPan = _this.shouldPan.bind(_this);\n    _this.canPan = _this.canPan.bind(_this);\n    _this.setCursorClass = _this.setCursorClass.bind(_this);\n    _this.saveNode = _this.saveNode.bind(_this);\n    _this.mouseInside = false;\n    _this.mouseInteraction = true;\n    _this.state = {\n      panInProgress: false\n    };\n    return _this;\n  }\n  _createClass(EventCapture, [{\n    key: \"saveNode\",\n    value: function saveNode(node) {\n      this.node = node;\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.focus = this.props.focus;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.node) {\n        select(this.node).on(MOUSEENTER, this.handleEnter).on(MOUSELEAVE, this.handleLeave);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.componentDidMount();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.node) {\n        select(this.node).on(MOUSEENTER, null).on(MOUSELEAVE, null);\n        var win = d3Window(this.node);\n        select(win).on(MOUSEMOVE, null);\n      }\n    }\n  }, {\n    key: \"handleEnter\",\n    value: function handleEnter() {\n      var e = d3Event;\n      var onMouseEnter = this.props.onMouseEnter;\n      this.mouseInside = true;\n      if (!this.state.panInProgress && !this.state.dragInProgress) {\n        var win = d3Window(this.node);\n        select(win).on(MOUSEMOVE, this.handleMouseMove);\n      }\n      onMouseEnter(e);\n    }\n  }, {\n    key: \"handleLeave\",\n    value: function handleLeave(e) {\n      var onMouseLeave = this.props.onMouseLeave;\n      this.mouseInside = false;\n      if (!this.state.panInProgress && !this.state.dragInProgress) {\n        var win = d3Window(this.node);\n        select(win).on(MOUSEMOVE, null);\n      }\n      onMouseLeave(e);\n    }\n  }, {\n    key: \"handleWheel\",\n    value: function handleWheel(e) {\n      var _props = this.props,\n        zoom = _props.zoom,\n        onZoom = _props.onZoom;\n      var panInProgress = this.state.panInProgress;\n      var yZoom = Math.abs(e.deltaY) > Math.abs(e.deltaX) && Math.abs(e.deltaY) > 0;\n      // const xPan = Math.abs(e.deltaY) < Math.abs(e.deltaX) && Math.abs(e.deltaX) > 0;\n      var mouseXY = mousePosition(e);\n      e.preventDefault();\n      if (zoom && this.focus && yZoom && !panInProgress) {\n        var zoomDir = e.deltaY > 0 ? 1 : -1;\n        onZoom(zoomDir, mouseXY, e);\n      } else if (this.focus) {\n        if (this.shouldPan()) {\n          // console.log(\"Do pan now...\")\n          // pan already in progress\n          var _state$panStart = this.state.panStart,\n            panStartXScale = _state$panStart.panStartXScale,\n            chartsToPan = _state$panStart.chartsToPan;\n          this.lastNewPos = mouseXY;\n          this.panHappened = true;\n          this.dx += e.deltaX;\n          this.dy += e.deltaY;\n          var dxdy = {\n            dx: this.dx,\n            dy: this.dy\n          };\n          this.props.onPan(mouseXY, panStartXScale, dxdy, chartsToPan, e);\n        } else {\n          // console.log(\"Pan start...\")\n          // pan start\n\n          var _props2 = this.props,\n            xScale = _props2.xScale,\n            chartConfig = _props2.chartConfig;\n          var currentCharts = getCurrentCharts(chartConfig, mouseXY);\n          this.dx = 0;\n          this.dy = 0;\n          this.setState({\n            panInProgress: true,\n            panStart: {\n              panStartXScale: xScale,\n              panOrigin: mouseXY,\n              chartsToPan: currentCharts\n            }\n          });\n        }\n        this.queuePanEnd();\n      }\n    }\n  }, {\n    key: \"queuePanEnd\",\n    value: function queuePanEnd() {\n      var _this2 = this;\n      if (isDefined(this.panEndTimeout)) {\n        clearTimeout(this.panEndTimeout);\n      }\n      this.panEndTimeout = setTimeout(function () {\n        _this2.handlePanEnd();\n      }, 100);\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove() {\n      var e = d3Event;\n      var _props3 = this.props,\n        onMouseMove = _props3.onMouseMove,\n        mouseMove = _props3.mouseMove;\n      if (this.mouseInteraction && mouseMove && !this.state.panInProgress) {\n        var newPos = mouse(this.node);\n        onMouseMove(newPos, \"mouse\", e);\n      }\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(e) {\n      var _this3 = this;\n      var mouseXY = mousePosition(e);\n      var _props4 = this.props,\n        onClick = _props4.onClick,\n        onDoubleClick = _props4.onDoubleClick;\n      if (!this.panHappened && !this.dragHappened) {\n        if (this.clicked) {\n          onDoubleClick(mouseXY, e);\n          this.clicked = false;\n        } else {\n          onClick(mouseXY, e);\n          this.clicked = true;\n          setTimeout(function () {\n            if (_this3.clicked) {\n              _this3.clicked = false;\n            }\n          }, 400);\n        }\n      }\n    }\n  }, {\n    key: \"handleRightClick\",\n    value: function handleRightClick(e) {\n      e.stopPropagation();\n      e.preventDefault();\n      var _props5 = this.props,\n        onContextMenu = _props5.onContextMenu,\n        onPanEnd = _props5.onPanEnd;\n      var mouseXY = mousePosition(e, this.node.getBoundingClientRect());\n      if (isDefined(this.state.panStart)) {\n        var _state$panStart2 = this.state.panStart,\n          panStartXScale = _state$panStart2.panStartXScale,\n          panOrigin = _state$panStart2.panOrigin,\n          chartsToPan = _state$panStart2.chartsToPan;\n        if (this.panHappened) {\n          onPanEnd(mouseXY, panStartXScale, panOrigin, chartsToPan, e);\n        }\n        var win = d3Window(this.node);\n        select(win).on(MOUSEMOVE, null).on(MOUSEUP, null);\n        this.setState({\n          panInProgress: false,\n          panStart: null\n        });\n      }\n      onContextMenu(mouseXY, e);\n    }\n  }, {\n    key: \"handleDrag\",\n    value: function handleDrag() {\n      var e = d3Event;\n      if (this.props.onDrag) {\n        this.dragHappened = true;\n        var mouseXY = mouse(this.node);\n        this.props.onDrag({\n          startPos: this.state.dragStartPosition,\n          mouseXY: mouseXY\n        }, e);\n      }\n    }\n  }, {\n    key: \"cancelDrag\",\n    value: function cancelDrag() {\n      var win = d3Window(this.node);\n      select(win).on(MOUSEMOVE, this.mouseInside ? this.handleMouseMove : null).on(MOUSEUP, null);\n      this.setState({\n        dragInProgress: false\n      });\n      this.mouseInteraction = true;\n    }\n  }, {\n    key: \"handleDragEnd\",\n    value: function handleDragEnd() {\n      var e = d3Event;\n      var mouseXY = mouse(this.node);\n      var win = d3Window(this.node);\n      select(win).on(MOUSEMOVE, this.mouseInside ? this.handleMouseMove : null).on(MOUSEUP, null);\n      if (this.dragHappened) {\n        this.props.onDragComplete({\n          mouseXY: mouseXY\n        }, e);\n      }\n      this.setState({\n        dragInProgress: false\n      });\n      this.mouseInteraction = true;\n    }\n  }, {\n    key: \"canPan\",\n    value: function canPan() {\n      var getAllPanConditions = this.props.getAllPanConditions;\n      var initialPanEnabled = this.props.pan;\n      var _getAllPanConditions$ = getAllPanConditions().reduce(function (returnObj, a) {\n          return {\n            draggable: returnObj.draggable || a.draggable,\n            panEnabled: returnObj.panEnabled && a.panEnabled\n          };\n        }, {\n          draggable: false,\n          panEnabled: initialPanEnabled\n        }),\n        panEnabled = _getAllPanConditions$.panEnabled,\n        somethingSelected = _getAllPanConditions$.draggable;\n      return {\n        panEnabled: panEnabled,\n        somethingSelected: somethingSelected\n      };\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(e) {\n      if (e.button !== 0) {\n        return;\n      }\n      var _props6 = this.props,\n        xScale = _props6.xScale,\n        chartConfig = _props6.chartConfig,\n        onMouseDown = _props6.onMouseDown;\n      this.panHappened = false;\n      this.dragHappened = false;\n      this.focus = true;\n      if (!this.state.panInProgress && this.mouseInteraction) {\n        var mouseXY = mousePosition(e);\n        var currentCharts = getCurrentCharts(chartConfig, mouseXY);\n        var _canPan = this.canPan(),\n          panEnabled = _canPan.panEnabled,\n          somethingSelected = _canPan.somethingSelected;\n        var pan = panEnabled && !somethingSelected;\n        if (pan) {\n          this.setState({\n            panInProgress: pan,\n            panStart: {\n              panStartXScale: xScale,\n              panOrigin: mouseXY,\n              chartsToPan: currentCharts\n            }\n          });\n          var win = d3Window(this.node);\n          select(win).on(MOUSEMOVE, this.handlePan).on(MOUSEUP, this.handlePanEnd);\n        } else if (somethingSelected) {\n          this.setState({\n            panInProgress: false,\n            dragInProgress: true,\n            panStart: null,\n            dragStartPosition: mouseXY\n          });\n          this.props.onDragStart({\n            startPos: mouseXY\n          }, e);\n          // this.mouseInteraction = false;\n\n          var _win = d3Window(this.node);\n          select(_win).on(MOUSEMOVE, this.handleDrag).on(MOUSEUP, this.handleDragEnd);\n        }\n        onMouseDown(mouseXY, currentCharts, e);\n      }\n      e.preventDefault();\n    }\n  }, {\n    key: \"shouldPan\",\n    value: function shouldPan() {\n      var _props7 = this.props,\n        panEnabled = _props7.pan,\n        onPan = _props7.onPan;\n      return panEnabled && onPan && isDefined(this.state.panStart);\n    }\n  }, {\n    key: \"handlePan\",\n    value: function handlePan() {\n      var e = d3Event;\n      if (this.shouldPan()) {\n        this.panHappened = true;\n        var _state$panStart3 = this.state.panStart,\n          panStartXScale = _state$panStart3.panStartXScale,\n          panOrigin = _state$panStart3.panOrigin,\n          chartsToPan = _state$panStart3.chartsToPan;\n        var mouseXY = this.mouseInteraction ? mouse(this.node) : touches(this.node)[0];\n        this.lastNewPos = mouseXY;\n        var dx = mouseXY[0] - panOrigin[0];\n        var dy = mouseXY[1] - panOrigin[1];\n        this.dx = dx;\n        this.dy = dy;\n        this.props.onPan(mouseXY, panStartXScale, {\n          dx: dx,\n          dy: dy\n        }, chartsToPan, e);\n      }\n    }\n  }, {\n    key: \"handlePanEnd\",\n    value: function handlePanEnd() {\n      var e = d3Event;\n      var _props8 = this.props,\n        panEnabled = _props8.pan,\n        onPanEnd = _props8.onPanEnd;\n      if (isDefined(this.state.panStart)) {\n        var _state$panStart4 = this.state.panStart,\n          panStartXScale = _state$panStart4.panStartXScale,\n          chartsToPan = _state$panStart4.chartsToPan;\n        var win = d3Window(this.node);\n        select(win).on(MOUSEMOVE, this.mouseInside ? this.handleMouseMove : null).on(MOUSEUP, null).on(TOUCHMOVE, null).on(TOUCHEND, null);\n        if (this.panHappened\n        // && !this.contextMenuClicked\n        && panEnabled && onPanEnd) {\n          var dx = this.dx,\n            dy = this.dy;\n\n          // console.log(dx, dy)\n\n          delete this.dx;\n          delete this.dy;\n          onPanEnd(this.lastNewPos, panStartXScale, {\n            dx: dx,\n            dy: dy\n          }, chartsToPan, e);\n        }\n        this.setState({\n          panInProgress: false,\n          panStart: null\n        });\n      }\n    }\n  }, {\n    key: \"handleTouchMove\",\n    value: function handleTouchMove(e) {\n      var onMouseMove = this.props.onMouseMove;\n      var touchXY = touchPosition(getTouchProps(e.touches[0]), e);\n      onMouseMove(touchXY, \"touch\", e);\n    }\n  }, {\n    key: \"handleTouchStart\",\n    value: function handleTouchStart(e) {\n      this.mouseInteraction = false;\n      var _props9 = this.props,\n        panEnabled = _props9.pan,\n        chartConfig = _props9.chartConfig,\n        onMouseMove = _props9.onMouseMove;\n      var _props10 = this.props,\n        xScale = _props10.xScale,\n        onPanEnd = _props10.onPanEnd;\n      if (e.touches.length === 1) {\n        this.panHappened = false;\n        var touchXY = touchPosition(getTouchProps(e.touches[0]), e);\n        onMouseMove(touchXY, \"touch\", e);\n        if (panEnabled) {\n          var currentCharts = getCurrentCharts(chartConfig, touchXY);\n          this.setState({\n            panInProgress: true,\n            panStart: {\n              panStartXScale: xScale,\n              panOrigin: touchXY,\n              chartsToPan: currentCharts\n            }\n          });\n          var win = d3Window(this.node);\n          select(win).on(TOUCHMOVE, this.handlePan, false).on(TOUCHEND, this.handlePanEnd, false);\n        }\n      } else if (e.touches.length === 2) {\n        // pinch zoom begin\n        // do nothing pinch zoom is handled in handleTouchMove\n        var _state = this.state,\n          panInProgress = _state.panInProgress,\n          panStart = _state.panStart;\n        if (panInProgress && panEnabled && onPanEnd) {\n          var panStartXScale = panStart.panStartXScale,\n            panOrigin = panStart.panOrigin,\n            chartsToPan = panStart.chartsToPan;\n          var _win2 = d3Window(this.node);\n          select(_win2).on(MOUSEMOVE, this.mouseInside ? this.handleMouseMove : null).on(MOUSEUP, null).on(TOUCHMOVE, this.handlePinchZoom, false).on(TOUCHEND, this.handlePinchZoomEnd, false);\n          var touch1Pos = touchPosition(getTouchProps(e.touches[0]), e);\n          var touch2Pos = touchPosition(getTouchProps(e.touches[1]), e);\n          if (this.panHappened\n          // && !this.contextMenuClicked\n          && panEnabled && onPanEnd) {\n            onPanEnd(this.lastNewPos, panStartXScale, panOrigin, chartsToPan, e);\n          }\n          this.setState({\n            panInProgress: false,\n            pinchZoomStart: {\n              xScale: xScale,\n              touch1Pos: touch1Pos,\n              touch2Pos: touch2Pos,\n              range: xScale.range(),\n              chartsToPan: chartsToPan\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: \"handlePinchZoom\",\n    value: function handlePinchZoom() {\n      var e = d3Event;\n      var _touches = touches(this.node),\n        _touches2 = _slicedToArray(_touches, 2),\n        touch1Pos = _touches2[0],\n        touch2Pos = _touches2[1];\n      var _props11 = this.props,\n        xScale = _props11.xScale,\n        zoomEnabled = _props11.zoom,\n        onPinchZoom = _props11.onPinchZoom;\n\n      // eslint-disable-next-line no-unused-vars\n\n      var _state$pinchZoomStart = this.state.pinchZoomStart,\n        chartsToPan = _state$pinchZoomStart.chartsToPan,\n        initialPinch = _objectWithoutProperties(_state$pinchZoomStart, [\"chartsToPan\"]);\n      if (zoomEnabled && onPinchZoom) {\n        onPinchZoom(initialPinch, {\n          touch1Pos: touch1Pos,\n          touch2Pos: touch2Pos,\n          xScale: xScale\n        }, e);\n      }\n    }\n  }, {\n    key: \"handlePinchZoomEnd\",\n    value: function handlePinchZoomEnd() {\n      var e = d3Event;\n      var win = d3Window(this.node);\n      select(win).on(TOUCHMOVE, null).on(TOUCHEND, null);\n      var _props12 = this.props,\n        zoomEnabled = _props12.zoom,\n        onPinchZoomEnd = _props12.onPinchZoomEnd;\n\n      // eslint-disable-next-line no-unused-vars\n\n      var _state$pinchZoomStart2 = this.state.pinchZoomStart,\n        chartsToPan = _state$pinchZoomStart2.chartsToPan,\n        initialPinch = _objectWithoutProperties(_state$pinchZoomStart2, [\"chartsToPan\"]);\n      if (zoomEnabled && onPinchZoomEnd) {\n        onPinchZoomEnd(initialPinch, e);\n      }\n      this.setState({\n        pinchZoomStart: null\n      });\n    }\n  }, {\n    key: \"setCursorClass\",\n    value: function setCursorClass(cursorOverrideClass) {\n      if (cursorOverrideClass !== this.state.cursorOverrideClass) {\n        this.setState({\n          cursorOverrideClass: cursorOverrideClass\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props13 = this.props,\n        height = _props13.height,\n        width = _props13.width,\n        disableInteraction = _props13.disableInteraction,\n        useCrossHairStyleCursor = _props13.useCrossHairStyleCursor;\n      var className = this.state.cursorOverrideClass != null ? this.state.cursorOverrideClass : !useCrossHairStyleCursor ? \"\" : this.state.panInProgress ? \"react-stockcharts-grabbing-cursor\" : \"react-stockcharts-crosshair-cursor\";\n      var interactionProps = disableInteraction || {\n        onWheel: this.handleWheel,\n        onMouseDown: this.handleMouseDown,\n        onClick: this.handleClick,\n        onContextMenu: this.handleRightClick,\n        onTouchStart: this.handleTouchStart,\n        onTouchMove: this.handleTouchMove\n      };\n      return React.createElement(\"rect\", _extends({\n        ref: this.saveNode,\n        className: className,\n        width: width,\n        height: height,\n        style: {\n          opacity: 0\n        }\n      }, interactionProps));\n    }\n  }]);\n  return EventCapture;\n}(Component);\n\n// \t\t\t\tonMouseEnter={this.handleEnter}\n//\t\t\t\tonMouseLeave={this.handleLeave}\n\nEventCapture.propTypes = {\n  mouseMove: PropTypes.bool.isRequired,\n  zoom: PropTypes.bool.isRequired,\n  pan: PropTypes.bool.isRequired,\n  panSpeedMultiplier: PropTypes.number.isRequired,\n  focus: PropTypes.bool.isRequired,\n  useCrossHairStyleCursor: PropTypes.bool.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  chartConfig: PropTypes.array,\n  xScale: PropTypes.func.isRequired,\n  xAccessor: PropTypes.func.isRequired,\n  disableInteraction: PropTypes.bool.isRequired,\n  getAllPanConditions: PropTypes.func.isRequired,\n  onMouseMove: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onZoom: PropTypes.func,\n  onPinchZoom: PropTypes.func,\n  onPinchZoomEnd: PropTypes.func.isRequired,\n  onPan: PropTypes.func,\n  onPanEnd: PropTypes.func,\n  onDragStart: PropTypes.func,\n  onDrag: PropTypes.func,\n  onDragComplete: PropTypes.func,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  children: PropTypes.node\n};\nEventCapture.defaultProps = {\n  mouseMove: false,\n  zoom: false,\n  pan: false,\n  panSpeedMultiplier: 1,\n  focus: false,\n  onDragComplete: noop,\n  disableInteraction: false\n};\nexport default EventCapture;","map":{"version":3,"names":["React","Component","PropTypes","select","event","d3Event","mouse","touches","isDefined","mousePosition","touchPosition","getTouchProps","d3Window","MOUSEMOVE","MOUSEUP","MOUSEENTER","MOUSELEAVE","TOUCHMOVE","TOUCHEND","noop","getCurrentCharts","EventCapture","props","_classCallCheck","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","handleEnter","bind","handleLeave","handleWheel","handleMouseMove","handleMouseDown","handlePanEnd","handlePan","handleTouchStart","handleTouchMove","handlePinchZoom","handlePinchZoomEnd","handleClick","handleRightClick","handleDrag","handleDragEnd","shouldPan","canPan","setCursorClass","saveNode","mouseInside","mouseInteraction","state","panInProgress","node","focus","on","componentDidMount","win","e","onMouseEnter","dragInProgress","onMouseLeave","_props","zoom","onZoom","yZoom","Math","abs","deltaY","deltaX","mouseXY","preventDefault","zoomDir","_state$panStart","panStart","panStartXScale","chartsToPan","lastNewPos","panHappened","dx","dy","dxdy","onPan","_props2","xScale","chartConfig","currentCharts","setState","panOrigin","queuePanEnd","_this2","panEndTimeout","clearTimeout","setTimeout","_props3","onMouseMove","mouseMove","newPos","_this3","_props4","onClick","onDoubleClick","dragHappened","clicked","stopPropagation","_props5","onContextMenu","onPanEnd","getBoundingClientRect","_state$panStart2","onDrag","startPos","dragStartPosition","onDragComplete","getAllPanConditions","initialPanEnabled","pan","_getAllPanConditions$","reduce","returnObj","a","draggable","panEnabled","somethingSelected","button","_props6","onMouseDown","_canPan","onDragStart","_win","_props7","_state$panStart3","_props8","_state$panStart4","touchXY","_props9","_props10","length","_state","_win2","touch1Pos","touch2Pos","pinchZoomStart","range","_touches","_touches2","_slicedToArray","_props11","zoomEnabled","onPinchZoom","_state$pinchZoomStart","initialPinch","_objectWithoutProperties","_props12","onPinchZoomEnd","_state$pinchZoomStart2","cursorOverrideClass","_props13","height","width","disableInteraction","useCrossHairStyleCursor","className","interactionProps","onWheel","onTouchStart","onTouchMove","createElement","_extends","ref","style","opacity","propTypes","bool","isRequired","panSpeedMultiplier","number","array","func","xAccessor","children","defaultProps"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\src\\lib\\EventCapture.js"],"sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { select, event as d3Event, mouse, touches } from \"d3-selection\";\n\nimport {\n\tisDefined, mousePosition, touchPosition, getTouchProps,\n\td3Window,\n\tMOUSEMOVE, MOUSEUP,\n\tMOUSEENTER, MOUSELEAVE,\n\tTOUCHMOVE, TOUCHEND,\n\tnoop\n} from \"./utils\";\nimport { getCurrentCharts } from \"./utils/ChartDataUtil\";\n// import { clearTimeout, setTimeout } from \"timers\";\n\nclass EventCapture extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleEnter = this.handleEnter.bind(this);\n\t\tthis.handleLeave = this.handleLeave.bind(this);\n\t\tthis.handleWheel = this.handleWheel.bind(this);\n\t\tthis.handleMouseMove = this.handleMouseMove.bind(this);\n\t\tthis.handleMouseDown = this.handleMouseDown.bind(this);\n\t\tthis.handlePanEnd = this.handlePanEnd.bind(this);\n\t\tthis.handlePan = this.handlePan.bind(this);\n\t\tthis.handleTouchStart = this.handleTouchStart.bind(this);\n\t\tthis.handleTouchMove = this.handleTouchMove.bind(this);\n\t\tthis.handlePinchZoom = this.handlePinchZoom.bind(this);\n\t\tthis.handlePinchZoomEnd = this.handlePinchZoomEnd.bind(this);\n\n\t\tthis.handleClick = this.handleClick.bind(this);\n\n\t\tthis.handleRightClick = this.handleRightClick.bind(this);\n\t\tthis.handleDrag = this.handleDrag.bind(this);\n\t\tthis.handleDragEnd = this.handleDragEnd.bind(this);\n\n\t\tthis.shouldPan = this.shouldPan.bind(this);\n\t\tthis.canPan = this.canPan.bind(this);\n\n\t\tthis.setCursorClass = this.setCursorClass.bind(this);\n\t\tthis.saveNode = this.saveNode.bind(this);\n\n\t\tthis.mouseInside = false;\n\n\t\tthis.mouseInteraction = true;\n\t\tthis.state = {\n\t\t\tpanInProgress: false,\n\t\t};\n\t}\n\tsaveNode(node) {\n\t\tthis.node = node;\n\t}\n\tcomponentWillMount() {\n\t\tthis.focus = this.props.focus;\n\t}\n\tcomponentDidMount() {\n\t\tif (this.node) {\n\t\t\tselect(this.node)\n\t\t\t\t.on(MOUSEENTER, this.handleEnter)\n\t\t\t\t.on(MOUSELEAVE, this.handleLeave);\n\t\t}\n\t}\n\tcomponentDidUpdate() {\n\t\tthis.componentDidMount();\n\t}\n\tcomponentWillUnmount() {\n\t\tif (this.node) {\n\t\t\tselect(this.node)\n\t\t\t\t.on(MOUSEENTER, null)\n\t\t\t\t.on(MOUSELEAVE, null);\n\t\t\tconst win = d3Window(this.node);\n\t\t\tselect(win)\n\t\t\t\t.on(MOUSEMOVE, null);\n\t\t}\n\t}\n\thandleEnter() {\n\t\tconst e = d3Event;\n\n\t\tconst { onMouseEnter } = this.props;\n\t\tthis.mouseInside = true;\n\t\tif (!this.state.panInProgress\n\t\t\t\t&& !this.state.dragInProgress) {\n\t\t\tconst win = d3Window(this.node);\n\t\t\tselect(win)\n\t\t\t\t.on(MOUSEMOVE, this.handleMouseMove);\n\t\t}\n\t\tonMouseEnter(e);\n\t}\n\thandleLeave(e) {\n\t\tconst { onMouseLeave } = this.props;\n\t\tthis.mouseInside = false;\n\t\tif (!this.state.panInProgress\n\t\t\t\t&& !this.state.dragInProgress) {\n\t\t\tconst win = d3Window(this.node);\n\t\t\tselect(win)\n\t\t\t\t.on(MOUSEMOVE, null);\n\t\t}\n\t\tonMouseLeave(e);\n\t}\n\thandleWheel(e) {\n\t\tconst { zoom, onZoom } = this.props;\n\t\tconst { panInProgress } = this.state;\n\n\t\tconst yZoom = Math.abs(e.deltaY) > Math.abs(e.deltaX) && Math.abs(e.deltaY) > 0;\n\t\t// const xPan = Math.abs(e.deltaY) < Math.abs(e.deltaX) && Math.abs(e.deltaX) > 0;\n\t\tconst mouseXY = mousePosition(e);\n\t\te.preventDefault();\n\n\t\tif (zoom && this.focus && yZoom && !panInProgress) {\n\t\t\tconst zoomDir = e.deltaY > 0 ? 1 : -1;\n\n\t\t\tonZoom(zoomDir, mouseXY, e);\n\t\t} else if (this.focus) {\n\t\t\tif (this.shouldPan()) {\n\t\t\t\t// console.log(\"Do pan now...\")\n\t\t\t\t// pan already in progress\n\t\t\t\tconst {\n\t\t\t\t\tpanStartXScale,\n\t\t\t\t\tchartsToPan\n\t\t\t\t} = this.state.panStart;\n\t\t\t\tthis.lastNewPos = mouseXY;\n\t\t\t\tthis.panHappened = true;\n\n\t\t\t\tthis.dx += e.deltaX;\n\t\t\t\tthis.dy += e.deltaY;\n\t\t\t\tconst dxdy = { dx: this.dx, dy: this.dy };\n\n\t\t\t\tthis.props.onPan(mouseXY, panStartXScale, dxdy, chartsToPan, e);\n\t\t\t} else {\n\t\t\t\t// console.log(\"Pan start...\")\n\t\t\t\t// pan start\n\n\t\t\t\tconst { xScale, chartConfig } = this.props;\n\t\t\t\tconst currentCharts = getCurrentCharts(chartConfig, mouseXY);\n\n\t\t\t\tthis.dx = 0;\n\t\t\t\tthis.dy = 0;\n\t\t\t\tthis.setState({\n\t\t\t\t\tpanInProgress: true,\n\t\t\t\t\tpanStart: {\n\t\t\t\t\t\tpanStartXScale: xScale,\n\t\t\t\t\t\tpanOrigin: mouseXY,\n\t\t\t\t\t\tchartsToPan: currentCharts\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.queuePanEnd();\n\t\t}\n\t}\n\tqueuePanEnd() {\n\t\tif (isDefined(this.panEndTimeout)) {\n\t\t\tclearTimeout(this.panEndTimeout);\n\t\t}\n\t\tthis.panEndTimeout = setTimeout(() => {\n\t\t\tthis.handlePanEnd();\n\t\t}, 100);\n\t}\n\thandleMouseMove() {\n\t\tconst e = d3Event;\n\n\t\tconst { onMouseMove, mouseMove } = this.props;\n\n\t\tif (this.mouseInteraction\n\t\t\t\t&& mouseMove\n\t\t\t\t&& !this.state.panInProgress) {\n\n\t\t\tconst newPos = mouse(this.node);\n\n\t\t\tonMouseMove(newPos, \"mouse\", e);\n\t\t}\n\t}\n\thandleClick(e) {\n\t\tconst mouseXY = mousePosition(e);\n\t\tconst { onClick, onDoubleClick } = this.props;\n\n\t\tif (!this.panHappened && !this.dragHappened) {\n\t\t\tif (this.clicked) {\n\t\t\t\tonDoubleClick(mouseXY, e);\n\t\t\t\tthis.clicked = false;\n\t\t\t} else {\n\t\t\t\tonClick(mouseXY, e);\n\t\t\t\tthis.clicked = true;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (this.clicked) {\n\t\t\t\t\t\tthis.clicked = false;\n\t\t\t\t\t}\n\t\t\t\t}, 400);\n\t\t\t}\n\t\t}\n\t}\n\thandleRightClick(e) {\n\t\te.stopPropagation();\n\t\te.preventDefault();\n\t\tconst { onContextMenu, onPanEnd } = this.props;\n\n\t\tconst mouseXY = mousePosition(e, this.node.getBoundingClientRect());\n\n\t\tif (isDefined(this.state.panStart)) {\n\t\t\tconst { panStartXScale, panOrigin, chartsToPan } = this.state.panStart;\n\t\t\tif (this.panHappened) {\n\t\t\t\tonPanEnd(mouseXY, panStartXScale, panOrigin, chartsToPan, e);\n\t\t\t}\n\t\t\tconst win = d3Window(this.node);\n\t\t\tselect(win)\n\t\t\t\t.on(MOUSEMOVE, null)\n\t\t\t\t.on(MOUSEUP, null);\n\n\t\t\tthis.setState({\n\t\t\t\tpanInProgress: false,\n\t\t\t\tpanStart: null,\n\t\t\t});\n\t\t}\n\n\t\tonContextMenu(mouseXY, e);\n\t}\n\n\thandleDrag() {\n\t\tconst e = d3Event;\n\t\tif (this.props.onDrag) {\n\t\t\tthis.dragHappened = true;\n\t\t\tconst mouseXY = mouse(this.node);\n\t\t\tthis.props.onDrag({\n\t\t\t\tstartPos: this.state.dragStartPosition,\n\t\t\t\tmouseXY\n\t\t\t}, e);\n\t\t}\n\t}\n\tcancelDrag() {\n\t\tconst win = d3Window(this.node);\n\t\tselect(win)\n\t\t\t.on(MOUSEMOVE, this.mouseInside ? this.handleMouseMove : null)\n\t\t\t.on(MOUSEUP, null);\n\n\t\tthis.setState({\n\t\t\tdragInProgress: false,\n\t\t});\n\t\tthis.mouseInteraction = true;\n\t}\n\thandleDragEnd() {\n\t\tconst e = d3Event;\n\t\tconst mouseXY = mouse(this.node);\n\n\t\tconst win = d3Window(this.node);\n\t\tselect(win)\n\t\t\t.on(MOUSEMOVE, this.mouseInside ? this.handleMouseMove : null)\n\t\t\t.on(MOUSEUP, null);\n\n\t\tif (this.dragHappened) {\n\t\t\tthis.props.onDragComplete({\n\t\t\t\tmouseXY\n\t\t\t}, e);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tdragInProgress: false,\n\t\t});\n\t\tthis.mouseInteraction = true;\n\t}\n\tcanPan() {\n\t\tconst { getAllPanConditions } = this.props;\n\t\tconst { pan: initialPanEnabled } = this.props;\n\n\t\tconst {\n\t\t\tpanEnabled,\n\t\t\tdraggable: somethingSelected\n\t\t} = getAllPanConditions()\n\t\t\t.reduce((returnObj, a) => {\n\t\t\t\treturn {\n\t\t\t\t\tdraggable: returnObj.draggable || a.draggable,\n\t\t\t\t\tpanEnabled: returnObj.panEnabled && a.panEnabled,\n\t\t\t\t};\n\t\t\t}, {\n\t\t\t\tdraggable: false,\n\t\t\t\tpanEnabled: initialPanEnabled,\n\t\t\t});\n\n\t\treturn {\n\t\t\tpanEnabled,\n\t\t\tsomethingSelected\n\t\t};\n\t}\n\thandleMouseDown(e) {\n\t\tif (e.button !== 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst { xScale, chartConfig, onMouseDown } = this.props;\n\n\t\tthis.panHappened = false;\n\t\tthis.dragHappened = false;\n\t\tthis.focus = true;\n\n\t\tif (!this.state.panInProgress\n\t\t\t&& this.mouseInteraction\n\t\t) {\n\n\t\t\tconst mouseXY = mousePosition(e);\n\t\t\tconst currentCharts = getCurrentCharts(chartConfig, mouseXY);\n\t\t\tconst {\n\t\t\t\tpanEnabled, somethingSelected\n\t\t\t} = this.canPan();\n\t\t\tconst pan = panEnabled && !somethingSelected;\n\n\t\t\tif (pan) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tpanInProgress: pan,\n\t\t\t\t\tpanStart: {\n\t\t\t\t\t\tpanStartXScale: xScale,\n\t\t\t\t\t\tpanOrigin: mouseXY,\n\t\t\t\t\t\tchartsToPan: currentCharts\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tconst win = d3Window(this.node);\n\t\t\t\tselect(win)\n\t\t\t\t\t.on(MOUSEMOVE, this.handlePan)\n\t\t\t\t\t.on(MOUSEUP, this.handlePanEnd);\n\n\t\t\t} else if (somethingSelected) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tpanInProgress: false,\n\t\t\t\t\tdragInProgress: true,\n\t\t\t\t\tpanStart: null,\n\t\t\t\t\tdragStartPosition: mouseXY,\n\t\t\t\t});\n\t\t\t\tthis.props.onDragStart({ startPos: mouseXY }, e);\n\t\t\t\t// this.mouseInteraction = false;\n\n\t\t\t\tconst win = d3Window(this.node);\n\t\t\t\tselect(win)\n\t\t\t\t\t.on(MOUSEMOVE, this.handleDrag)\n\t\t\t\t\t.on(MOUSEUP, this.handleDragEnd);\n\t\t\t}\n\n\t\t\tonMouseDown(mouseXY, currentCharts, e);\n\t\t}\n\t\te.preventDefault();\n\t}\n\tshouldPan() {\n\t\tconst { pan: panEnabled, onPan } = this.props;\n\t\treturn panEnabled\n\t\t\t&& onPan\n\t\t\t&& isDefined(this.state.panStart);\n\t}\n\thandlePan() {\n\t\tconst e = d3Event;\n\n\t\tif (this.shouldPan()) {\n\t\t\tthis.panHappened = true;\n\n\t\t\tconst { panStartXScale, panOrigin, chartsToPan } = this.state.panStart;\n\n\t\t\tconst mouseXY = this.mouseInteraction\n\t\t\t\t? mouse(this.node)\n\t\t\t\t: touches(this.node)[0];\n\n\t\t\tthis.lastNewPos = mouseXY;\n\t\t\tconst dx = mouseXY[0] - panOrigin[0];\n\t\t\tconst dy = mouseXY[1] - panOrigin[1];\n\n\t\t\tthis.dx = dx;\n\t\t\tthis.dy = dy;\n\n\t\t\tthis.props.onPan(\n\t\t\t\tmouseXY, panStartXScale, { dx, dy }, chartsToPan, e\n\t\t\t);\n\t\t}\n\t}\n\thandlePanEnd() {\n\t\tconst e = d3Event;\n\t\tconst { pan: panEnabled, onPanEnd } = this.props;\n\n\t\tif (isDefined(this.state.panStart)) {\n\t\t\tconst { panStartXScale, chartsToPan } = this.state.panStart;\n\n\t\t\tconst win = d3Window(this.node);\n\t\t\tselect(win)\n\t\t\t\t.on(MOUSEMOVE, this.mouseInside ? this.handleMouseMove : null)\n\t\t\t\t.on(MOUSEUP, null)\n\t\t\t\t.on(TOUCHMOVE, null)\n\t\t\t\t.on(TOUCHEND, null);\n\n\t\t\tif (this.panHappened\n\t\t\t\t\t// && !this.contextMenuClicked\n\t\t\t\t\t&& panEnabled\n\t\t\t\t\t&& onPanEnd) {\n\t\t\t\tconst { dx, dy } = this;\n\n\t\t\t\t// console.log(dx, dy)\n\t\t\t\tdelete this.dx;\n\t\t\t\tdelete this.dy;\n\t\t\t\tonPanEnd(this.lastNewPos, panStartXScale, { dx, dy }, chartsToPan, e);\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tpanInProgress: false,\n\t\t\t\tpanStart: null,\n\t\t\t});\n\t\t}\n\t}\n\thandleTouchMove(e) {\n\t\tconst { onMouseMove } = this.props;\n\t\tconst touchXY = touchPosition(getTouchProps(e.touches[0]), e);\n\t\tonMouseMove(touchXY, \"touch\", e);\n\t}\n\thandleTouchStart(e) {\n\t\tthis.mouseInteraction = false;\n\n\t\tconst { pan: panEnabled, chartConfig, onMouseMove } = this.props;\n\t\tconst { xScale, onPanEnd } = this.props;\n\n\t\tif (e.touches.length === 1) {\n\n\t\t\tthis.panHappened = false;\n\t\t\tconst touchXY = touchPosition(getTouchProps(e.touches[0]), e);\n\t\t\tonMouseMove(touchXY, \"touch\", e);\n\n\t\t\tif (panEnabled) {\n\t\t\t\tconst currentCharts = getCurrentCharts(chartConfig, touchXY);\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tpanInProgress: true,\n\t\t\t\t\tpanStart: {\n\t\t\t\t\t\tpanStartXScale: xScale,\n\t\t\t\t\t\tpanOrigin: touchXY,\n\t\t\t\t\t\tchartsToPan: currentCharts,\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tconst win = d3Window(this.node);\n\t\t\t\tselect(win)\n\t\t\t\t\t.on(TOUCHMOVE, this.handlePan, false)\n\t\t\t\t\t.on(TOUCHEND, this.handlePanEnd, false);\n\n\t\t\t}\n\t\t} else if (e.touches.length === 2) {\n\t\t\t// pinch zoom begin\n\t\t\t// do nothing pinch zoom is handled in handleTouchMove\n\t\t\tconst { panInProgress, panStart } = this.state;\n\n\t\t\tif (panInProgress && panEnabled && onPanEnd) {\n\t\t\t\tconst { panStartXScale, panOrigin, chartsToPan } = panStart;\n\n\t\t\t\tconst win = d3Window(this.node);\n\t\t\t\tselect(win)\n\t\t\t\t\t.on(MOUSEMOVE, this.mouseInside ? this.handleMouseMove : null)\n\t\t\t\t\t.on(MOUSEUP, null)\n\t\t\t\t\t.on(TOUCHMOVE, this.handlePinchZoom, false)\n\t\t\t\t\t.on(TOUCHEND, this.handlePinchZoomEnd, false);\n\n\t\t\t\tconst touch1Pos = touchPosition(getTouchProps(e.touches[0]), e);\n\t\t\t\tconst touch2Pos = touchPosition(getTouchProps(e.touches[1]), e);\n\n\t\t\t\tif (this.panHappened\n\t\t\t\t\t\t// && !this.contextMenuClicked\n\t\t\t\t\t\t&& panEnabled\n\t\t\t\t\t\t&& onPanEnd) {\n\n\t\t\t\t\tonPanEnd(this.lastNewPos, panStartXScale, panOrigin, chartsToPan, e);\n\t\t\t\t}\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tpanInProgress: false,\n\t\t\t\t\tpinchZoomStart: {\n\t\t\t\t\t\txScale,\n\t\t\t\t\t\ttouch1Pos,\n\t\t\t\t\t\ttouch2Pos,\n\t\t\t\t\t\trange: xScale.range(),\n\t\t\t\t\t\tchartsToPan,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\thandlePinchZoom() {\n\t\tconst e = d3Event;\n\t\tconst [touch1Pos, touch2Pos] = touches(this.node);\n\t\tconst { xScale, zoom: zoomEnabled, onPinchZoom } = this.props;\n\n\t\t// eslint-disable-next-line no-unused-vars\n\t\tconst { chartsToPan, ...initialPinch } = this.state.pinchZoomStart;\n\n\t\tif (zoomEnabled && onPinchZoom) {\n\t\t\tonPinchZoom(initialPinch, {\n\t\t\t\ttouch1Pos,\n\t\t\t\ttouch2Pos,\n\t\t\t\txScale,\n\t\t\t}, e);\n\t\t}\n\t}\n\thandlePinchZoomEnd() {\n\t\tconst e = d3Event;\n\n\t\tconst win = d3Window(this.node);\n\t\tselect(win)\n\t\t\t.on(TOUCHMOVE, null)\n\t\t\t.on(TOUCHEND, null);\n\n\t\tconst { zoom: zoomEnabled, onPinchZoomEnd } = this.props;\n\n\t\t// eslint-disable-next-line no-unused-vars\n\t\tconst { chartsToPan, ...initialPinch } = this.state.pinchZoomStart;\n\n\t\tif (zoomEnabled && onPinchZoomEnd) {\n\t\t\tonPinchZoomEnd(initialPinch, e);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tpinchZoomStart: null\n\t\t});\n\t}\n\tsetCursorClass(cursorOverrideClass) {\n\t\tif (cursorOverrideClass !== this.state.cursorOverrideClass) {\n\t\t\tthis.setState({\n\t\t\t\tcursorOverrideClass\n\t\t\t});\n\t\t}\n\t}\n\trender() {\n\t\tconst { height, width, disableInteraction, useCrossHairStyleCursor } = this.props;\n\t\tconst className = this.state.cursorOverrideClass != null\n\t\t\t? this.state.cursorOverrideClass\n\t\t\t: !useCrossHairStyleCursor ? \"\" : this.state.panInProgress\n\t\t\t\t? \"react-stockcharts-grabbing-cursor\"\n\t\t\t\t: \"react-stockcharts-crosshair-cursor\";\n\n\t\tconst interactionProps = disableInteraction || {\n\t\t\tonWheel: this.handleWheel,\n\t\t\tonMouseDown: this.handleMouseDown,\n\t\t\tonClick: this.handleClick,\n\t\t\tonContextMenu: this.handleRightClick,\n\t\t\tonTouchStart: this.handleTouchStart,\n\t\t\tonTouchMove: this.handleTouchMove,\n\t\t};\n\n\t\treturn (\n\t\t\t<rect ref={this.saveNode}\n\t\t\t\tclassName={className}\n\t\t\t\twidth={width}\n\t\t\t\theight={height}\n\t\t\t\tstyle={{ opacity: 0 }}\n\t\t\t\t{...interactionProps}\n\t\t\t/>\n\t\t);\n\t}\n}\n\n// \t\t\t\tonMouseEnter={this.handleEnter}\n//\t\t\t\tonMouseLeave={this.handleLeave}\n\n\nEventCapture.propTypes = {\n\tmouseMove: PropTypes.bool.isRequired,\n\tzoom: PropTypes.bool.isRequired,\n\tpan: PropTypes.bool.isRequired,\n\tpanSpeedMultiplier: PropTypes.number.isRequired,\n\tfocus: PropTypes.bool.isRequired,\n\tuseCrossHairStyleCursor: PropTypes.bool.isRequired,\n\n\twidth: PropTypes.number.isRequired,\n\theight: PropTypes.number.isRequired,\n\tchartConfig: PropTypes.array,\n\txScale: PropTypes.func.isRequired,\n\txAccessor: PropTypes.func.isRequired,\n\tdisableInteraction: PropTypes.bool.isRequired,\n\n\tgetAllPanConditions: PropTypes.func.isRequired,\n\n\tonMouseMove: PropTypes.func,\n\tonMouseEnter: PropTypes.func,\n\tonMouseLeave: PropTypes.func,\n\tonZoom: PropTypes.func,\n\tonPinchZoom: PropTypes.func,\n\tonPinchZoomEnd: PropTypes.func.isRequired,\n\tonPan: PropTypes.func,\n\tonPanEnd: PropTypes.func,\n\tonDragStart: PropTypes.func,\n\tonDrag: PropTypes.func,\n\tonDragComplete: PropTypes.func,\n\n\tonClick: PropTypes.func,\n\tonDoubleClick: PropTypes.func,\n\tonContextMenu: PropTypes.func,\n\tonMouseDown: PropTypes.func,\n\tchildren: PropTypes.node,\n};\n\nEventCapture.defaultProps = {\n\tmouseMove: false,\n\tzoom: false,\n\tpan: false,\n\tpanSpeedMultiplier: 1,\n\tfocus: false,\n\tonDragComplete: noop,\n\tdisableInteraction: false,\n};\n\nexport default EventCapture;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}