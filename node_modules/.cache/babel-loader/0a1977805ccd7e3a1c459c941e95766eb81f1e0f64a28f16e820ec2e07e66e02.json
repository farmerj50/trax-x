{"ast":null,"code":"import { format } from \"d3-format\";\nimport * as React from \"react\";\nimport { getAxisCanvas, GenericChartComponent, functor } from \"@react-financial-charts/core\";\nimport { drawOnCanvas } from \"./EdgeCoordinateV3\";\nexport class PriceCoordinate extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.drawOnCanvas = (ctx, moreProps) => {\n      const props = this.helper(this.props, moreProps);\n      drawOnCanvas(ctx, props);\n    };\n    this.helper = (props, moreProps) => {\n      const {\n        chartConfig: {\n          yScale\n        },\n        width\n      } = moreProps;\n      const [lowerYValue, upperYValue] = yScale.domain();\n      const {\n        price,\n        stroke,\n        strokeDasharray,\n        strokeOpacity,\n        strokeWidth\n      } = props;\n      const {\n        orient,\n        at,\n        rectWidth,\n        rectHeight,\n        displayFormat,\n        dx\n      } = props;\n      const {\n        fill,\n        opacity,\n        fontFamily,\n        fontSize,\n        textFill,\n        arrowWidth,\n        lineOpacity,\n        lineStroke\n      } = props;\n      const x1 = 0;\n      const x2 = width;\n      const edgeAt = at === \"right\" ? width : 0;\n      const type = \"horizontal\";\n      const y = yScale(price);\n      const show = price <= upperYValue && price >= lowerYValue;\n      const coordinate = displayFormat(yScale.invert(y));\n      const hideLine = false;\n      const coordinateProps = {\n        coordinate,\n        show,\n        type,\n        orient,\n        edgeAt,\n        hideLine,\n        lineOpacity,\n        lineStroke,\n        lineStrokeDasharray: strokeDasharray,\n        stroke,\n        strokeOpacity,\n        strokeWidth,\n        fill: functor(fill)(price),\n        textFill: functor(textFill)(price),\n        opacity,\n        fontFamily,\n        fontSize,\n        rectWidth,\n        rectHeight,\n        arrowWidth,\n        dx,\n        x1,\n        x2,\n        y1: y,\n        y2: y\n      };\n      return coordinateProps;\n    };\n  }\n  render() {\n    return React.createElement(GenericChartComponent, {\n      clip: false,\n      canvasDraw: this.drawOnCanvas,\n      canvasToDraw: getAxisCanvas,\n      drawOn: [\"pan\"]\n    });\n  }\n}\nPriceCoordinate.defaultProps = {\n  displayFormat: format(\".2f\"),\n  yAxisPad: 0,\n  rectWidth: 50,\n  rectHeight: 20,\n  orient: \"left\",\n  at: \"left\",\n  price: 0,\n  dx: 0,\n  arrowWidth: 0,\n  fill: \"#BAB8b8\",\n  opacity: 1,\n  lineOpacity: 0.2,\n  lineStroke: \"#000000\",\n  fontFamily: \"-apple-system, system-ui, Roboto, 'Helvetica Neue', Ubuntu, sans-serif\",\n  fontSize: 13,\n  textFill: \"#FFFFFF\",\n  strokeOpacity: 1,\n  strokeWidth: 1,\n  strokeDasharray: \"Solid\"\n};","map":{"version":3,"names":["format","React","getAxisCanvas","GenericChartComponent","functor","drawOnCanvas","PriceCoordinate","Component","constructor","ctx","moreProps","props","helper","chartConfig","yScale","width","lowerYValue","upperYValue","domain","price","stroke","strokeDasharray","strokeOpacity","strokeWidth","orient","at","rectWidth","rectHeight","displayFormat","dx","fill","opacity","fontFamily","fontSize","textFill","arrowWidth","lineOpacity","lineStroke","x1","x2","edgeAt","type","y","show","coordinate","invert","hideLine","coordinateProps","lineStrokeDasharray","y1","y2","render","createElement","clip","canvasDraw","canvasToDraw","drawOn","defaultProps","yAxisPad"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\coordinates\\src\\PriceCoordinate.tsx"],"sourcesContent":["import { format } from \"d3-format\";\nimport * as React from \"react\";\nimport { getAxisCanvas, GenericChartComponent, functor, strokeDashTypes } from \"@react-financial-charts/core\";\nimport { drawOnCanvas } from \"./EdgeCoordinateV3\";\n\ninterface PriceCoordinateProps {\n    readonly arrowWidth?: number;\n    readonly at?: \"bottom\" | \"top\" | \"left\" | \"right\";\n    readonly displayFormat: (n: number) => string;\n    readonly dx?: number;\n    readonly fontFamily?: string;\n    readonly fontSize?: number;\n    readonly fill?: string | ((price: number) => string);\n    readonly lineOpacity?: number;\n    readonly lineStroke?: string;\n    readonly opacity?: number;\n    readonly orient?: \"bottom\" | \"top\" | \"left\" | \"right\";\n    readonly price: number;\n    readonly rectWidth?: number;\n    readonly rectHeight?: number;\n    readonly strokeDasharray?: strokeDashTypes;\n    readonly stroke?: string;\n    readonly strokeOpacity?: number;\n    readonly strokeWidth?: number;\n    readonly textFill?: string | ((price: number) => string);\n    readonly yAxisPad?: number;\n}\n\nexport class PriceCoordinate extends React.Component<PriceCoordinateProps> {\n    public static defaultProps = {\n        displayFormat: format(\".2f\"),\n        yAxisPad: 0,\n        rectWidth: 50,\n        rectHeight: 20,\n        orient: \"left\",\n        at: \"left\",\n        price: 0,\n        dx: 0,\n        arrowWidth: 0,\n        fill: \"#BAB8b8\",\n        opacity: 1,\n        lineOpacity: 0.2,\n        lineStroke: \"#000000\",\n        fontFamily: \"-apple-system, system-ui, Roboto, 'Helvetica Neue', Ubuntu, sans-serif\",\n        fontSize: 13,\n        textFill: \"#FFFFFF\",\n        strokeOpacity: 1,\n        strokeWidth: 1,\n        strokeDasharray: \"Solid\",\n    };\n\n    public render() {\n        return (\n            <GenericChartComponent\n                clip={false}\n                canvasDraw={this.drawOnCanvas}\n                canvasToDraw={getAxisCanvas}\n                drawOn={[\"pan\"]}\n            />\n        );\n    }\n\n    private readonly drawOnCanvas = (ctx: CanvasRenderingContext2D, moreProps: any) => {\n        const props = this.helper(this.props, moreProps);\n\n        drawOnCanvas(ctx, props);\n    };\n\n    private readonly helper = (props: PriceCoordinateProps, moreProps: any) => {\n        const {\n            chartConfig: { yScale },\n            width,\n        } = moreProps;\n        const [lowerYValue, upperYValue] = yScale.domain();\n\n        const { price, stroke, strokeDasharray, strokeOpacity, strokeWidth } = props;\n        const { orient, at, rectWidth, rectHeight, displayFormat, dx } = props;\n        const { fill, opacity, fontFamily, fontSize, textFill, arrowWidth, lineOpacity, lineStroke } = props;\n\n        const x1 = 0;\n        const x2 = width;\n        const edgeAt = at === \"right\" ? width : 0;\n\n        const type = \"horizontal\";\n\n        const y = yScale(price);\n        const show = price <= upperYValue && price >= lowerYValue;\n\n        const coordinate = displayFormat(yScale.invert(y));\n        const hideLine = false;\n\n        const coordinateProps = {\n            coordinate,\n            show,\n            type,\n            orient,\n            edgeAt,\n            hideLine,\n            lineOpacity,\n            lineStroke,\n            lineStrokeDasharray: strokeDasharray,\n            stroke,\n            strokeOpacity,\n            strokeWidth,\n            fill: functor(fill)(price),\n            textFill: functor(textFill)(price),\n            opacity,\n            fontFamily,\n            fontSize,\n            rectWidth,\n            rectHeight,\n            arrowWidth,\n            dx,\n            x1,\n            x2,\n            y1: y,\n            y2: y,\n        };\n        return coordinateProps;\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}