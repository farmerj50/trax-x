{"ast":null,"code":"import { sum } from \"d3-array\";\nimport { slidingWindow } from \"../utils\";\nimport { WMA as defaultOptions } from \"./defaultOptionsForComputation\";\nexport default function () {\n  let options = defaultOptions;\n  const calculator = data => {\n    const {\n      windowSize,\n      sourcePath\n    } = options;\n    const weight = windowSize * (windowSize + 1) / 2;\n    const waverage = slidingWindow().windowSize(windowSize).sourcePath(sourcePath).accumulator(values => {\n      const total = sum(values, (v, i) => {\n        return (i + 1) * v;\n      });\n      return total / weight;\n    });\n    return waverage(data);\n  };\n  calculator.undefinedLength = () => {\n    const {\n      windowSize\n    } = options;\n    return windowSize - 1;\n  };\n  calculator.options = newOptions => {\n    if (newOptions === undefined) {\n      return options;\n    }\n    options = Object.assign(Object.assign({}, defaultOptions), newOptions);\n    return calculator;\n  };\n  return calculator;\n}","map":{"version":3,"names":["sum","slidingWindow","WMA","defaultOptions","options","calculator","data","windowSize","sourcePath","weight","waverage","accumulator","values","total","v","i","undefinedLength","newOptions","undefined","Object","assign"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\indicators\\src\\calculator\\wma.ts"],"sourcesContent":["import { sum } from \"d3-array\";\nimport { slidingWindow } from \"../utils\";\nimport { WMA as defaultOptions } from \"./defaultOptionsForComputation\";\n\nexport interface WMAOptions {\n    sourcePath?: string;\n    windowSize: number;\n}\n\nexport default function () {\n    let options = defaultOptions;\n\n    const calculator = (data: any[]) => {\n        const { windowSize, sourcePath } = options;\n\n        const weight = (windowSize * (windowSize + 1)) / 2;\n\n        const waverage = slidingWindow()\n            .windowSize(windowSize)\n            .sourcePath(sourcePath)\n            .accumulator((values: number[]) => {\n                const total = sum(values, (v, i) => {\n                    return (i + 1) * v;\n                });\n\n                return total / weight;\n            });\n\n        return waverage(data);\n    };\n\n    calculator.undefinedLength = () => {\n        const { windowSize } = options;\n\n        return windowSize - 1;\n    };\n\n    calculator.options = (newOptions?: WMAOptions) => {\n        if (newOptions === undefined) {\n            return options;\n        }\n\n        options = { ...defaultOptions, ...newOptions };\n\n        return calculator;\n    };\n\n    return calculator;\n}\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,UAAU;AAC9B,SAASC,aAAa,QAAQ,UAAU;AACxC,SAASC,GAAG,IAAIC,cAAc,QAAQ,gCAAgC;AAOtE,eAAc;EACV,IAAIC,OAAO,GAAGD,cAAc;EAE5B,MAAME,UAAU,GAAIC,IAAW,IAAI;IAC/B,MAAM;MAAEC,UAAU;MAAEC;IAAU,CAAE,GAAGJ,OAAO;IAE1C,MAAMK,MAAM,GAAIF,UAAU,IAAIA,UAAU,GAAG,CAAC,CAAC,GAAI,CAAC;IAElD,MAAMG,QAAQ,GAAGT,aAAa,EAAE,CAC3BM,UAAU,CAACA,UAAU,CAAC,CACtBC,UAAU,CAACA,UAAU,CAAC,CACtBG,WAAW,CAAEC,MAAgB,IAAI;MAC9B,MAAMC,KAAK,GAAGb,GAAG,CAACY,MAAM,EAAE,CAACE,CAAC,EAAEC,CAAC,KAAI;QAC/B,OAAO,CAACA,CAAC,GAAG,CAAC,IAAID,CAAC;MACtB,CAAC,CAAC;MAEF,OAAOD,KAAK,GAAGJ,MAAM;IACzB,CAAC,CAAC;IAEN,OAAOC,QAAQ,CAACJ,IAAI,CAAC;EACzB,CAAC;EAEDD,UAAU,CAACW,eAAe,GAAG,MAAK;IAC9B,MAAM;MAAET;IAAU,CAAE,GAAGH,OAAO;IAE9B,OAAOG,UAAU,GAAG,CAAC;EACzB,CAAC;EAEDF,UAAU,CAACD,OAAO,GAAIa,UAAuB,IAAI;IAC7C,IAAIA,UAAU,KAAKC,SAAS,EAAE;MAC1B,OAAOd,OAAO;;IAGlBA,OAAO,GAAAe,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAQjB,cAAc,GAAKc,UAAU,CAAE;IAE9C,OAAOZ,UAAU;EACrB,CAAC;EAED,OAAOA,UAAU;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}