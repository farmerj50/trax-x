{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { ChartContext } from \"@react-financial-charts/core\";\nimport * as React from \"react\";\nimport { Axis } from \"./Axis\";\nexport class XAxis extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.axisZoomCallback = newXDomain => {\n      const {\n        xAxisZoom\n      } = this.context;\n      xAxisZoom(newXDomain);\n    };\n    this.helper = () => {\n      const {\n        axisAt,\n        xZoomHeight = XAxis.defaultProps.xZoomHeight,\n        orient,\n        ticks\n      } = this.props;\n      const {\n        chartConfig: {\n          width,\n          height\n        }\n      } = this.context;\n      let axisLocation;\n      const x = 0;\n      const w = width;\n      const h = xZoomHeight;\n      switch (axisAt) {\n        case \"top\":\n          axisLocation = 0;\n          break;\n        case \"bottom\":\n          axisLocation = height;\n          break;\n        case \"middle\":\n          axisLocation = height / 2;\n          break;\n        default:\n          axisLocation = axisAt;\n      }\n      const y = orient === \"top\" ? -xZoomHeight : 0;\n      return {\n        transform: [0, axisLocation],\n        range: [0, width],\n        getScale: this.getXScale,\n        bg: {\n          x,\n          y,\n          h,\n          w\n        },\n        ticks: ticks !== null && ticks !== void 0 ? ticks : this.getXTicks(width)\n      };\n    };\n    this.getXTicks = width => {\n      if (width < 400) {\n        return 2;\n      }\n      if (width < 500) {\n        return 6;\n      }\n      return 8;\n    };\n    this.getXScale = moreProps => {\n      const {\n        xScale: scale,\n        width\n      } = moreProps;\n      if (scale.invert) {\n        const trueRange = [0, width];\n        const trueDomain = trueRange.map(scale.invert);\n        return scale.copy().domain(trueDomain).range(trueRange);\n      }\n      return scale;\n    };\n  }\n  render() {\n    const _a = this.props,\n      {\n        getMouseDelta = XAxis.defaultProps.getMouseDelta,\n        outerTickSize = XAxis.defaultProps.outerTickSize,\n        showTicks,\n        strokeStyle = XAxis.defaultProps.strokeStyle,\n        strokeWidth = XAxis.defaultProps.strokeWidth,\n        zoomEnabled\n      } = _a,\n      rest = __rest(_a, [\"getMouseDelta\", \"outerTickSize\", \"showTicks\", \"strokeStyle\", \"strokeWidth\", \"zoomEnabled\"]);\n    const moreProps = __rest(this.helper(), []);\n    return React.createElement(Axis, Object.assign({}, rest, moreProps, {\n      getMouseDelta: getMouseDelta,\n      outerTickSize: outerTickSize,\n      showTicks: showTicks,\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      zoomEnabled: zoomEnabled && showTicks,\n      axisZoomCallback: this.axisZoomCallback\n    }));\n  }\n}\nXAxis.defaultProps = {\n  axisAt: \"bottom\",\n  className: \"react-financial-charts-x-axis\",\n  domainClassName: \"react-financial-charts-axis-domain\",\n  fontFamily: \"-apple-system, system-ui, Roboto, 'Helvetica Neue', Ubuntu, sans-serif\",\n  fontSize: 12,\n  fontWeight: 400,\n  getMouseDelta: (startXY, mouseXY) => startXY[0] - mouseXY[0],\n  gridLinesStrokeStyle: \"#E2E4EC\",\n  gridLinesStrokeWidth: 1,\n  orient: \"bottom\",\n  outerTickSize: 0,\n  innerTickSize: 4,\n  showDomain: true,\n  showGridLines: false,\n  showTicks: true,\n  showTickLabel: true,\n  strokeStyle: \"#000000\",\n  strokeWidth: 1,\n  tickPadding: 4,\n  tickLabelFill: \"#000000\",\n  tickStrokeStyle: \"#000000\",\n  xZoomHeight: 25,\n  zoomEnabled: true,\n  zoomCursorClassName: \"react-financial-charts-ew-resize-cursor\"\n};\nXAxis.contextType = ChartContext;","map":{"version":3,"names":["ChartContext","React","Axis","XAxis","Component","constructor","axisZoomCallback","newXDomain","xAxisZoom","context","helper","axisAt","xZoomHeight","defaultProps","orient","ticks","props","chartConfig","width","height","axisLocation","x","w","h","y","transform","range","getScale","getXScale","bg","getXTicks","moreProps","xScale","scale","invert","trueRange","trueDomain","map","copy","domain","render","_a","getMouseDelta","outerTickSize","showTicks","strokeStyle","strokeWidth","zoomEnabled","rest","__rest","createElement","Object","assign","className","domainClassName","fontFamily","fontSize","fontWeight","startXY","mouseXY","gridLinesStrokeStyle","gridLinesStrokeWidth","innerTickSize","showDomain","showGridLines","showTickLabel","tickPadding","tickLabelFill","tickStrokeStyle","zoomCursorClassName","contextType"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\axes\\src\\XAxis.tsx"],"sourcesContent":["import { ChartContext, strokeDashTypes } from \"@react-financial-charts/core\";\nimport * as React from \"react\";\nimport { Axis } from \"./Axis\";\n\nexport interface XAxisProps<T extends number | Date> {\n    readonly axisAt?: number | \"top\" | \"bottom\" | \"middle\";\n    readonly className?: string;\n    readonly domainClassName?: string;\n    readonly fontFamily?: string;\n    readonly fontSize?: number;\n    readonly fontWeight?: number;\n    readonly getMouseDelta?: (startXY: [number, number], mouseXY: [number, number]) => number;\n    readonly gridLinesStrokeStyle?: string;\n    readonly gridLinesStrokeWidth?: number;\n    readonly gridLinesStrokeDasharray?: strokeDashTypes;\n    readonly innerTickSize?: number;\n    readonly onContextMenu?: (e: React.MouseEvent, mousePosition: [number, number]) => void;\n    readonly onDoubleClick?: (e: React.MouseEvent, mousePosition: [number, number]) => void;\n    readonly orient?: \"top\" | \"bottom\";\n    readonly outerTickSize?: number;\n    readonly showDomain?: boolean;\n    readonly showGridLines?: boolean;\n    readonly showTicks?: boolean;\n    readonly showTickLabel?: boolean;\n    readonly strokeStyle?: string;\n    readonly strokeWidth?: number;\n    readonly tickFormat?: (value: T) => string;\n    readonly tickPadding?: number;\n    readonly tickSize?: number;\n    readonly tickLabelFill?: string;\n    readonly ticks?: number;\n    readonly tickStrokeStyle?: string;\n    readonly tickStrokeWidth?: number;\n    readonly tickStrokeDasharray?: strokeDashTypes;\n    readonly tickValues?: number[];\n    readonly xZoomHeight?: number;\n    readonly zoomEnabled?: boolean;\n    readonly zoomCursorClassName?: string;\n}\n\nexport class XAxis<T extends number | Date> extends React.Component<XAxisProps<T>> {\n    public static defaultProps = {\n        axisAt: \"bottom\",\n        className: \"react-financial-charts-x-axis\",\n        domainClassName: \"react-financial-charts-axis-domain\",\n        fontFamily: \"-apple-system, system-ui, Roboto, 'Helvetica Neue', Ubuntu, sans-serif\",\n        fontSize: 12,\n        fontWeight: 400,\n        getMouseDelta: (startXY: [number, number], mouseXY: [number, number]) => startXY[0] - mouseXY[0],\n        gridLinesStrokeStyle: \"#E2E4EC\",\n        gridLinesStrokeWidth: 1,\n        orient: \"bottom\",\n        outerTickSize: 0,\n        innerTickSize: 4,\n        showDomain: true,\n        showGridLines: false,\n        showTicks: true,\n        showTickLabel: true,\n        strokeStyle: \"#000000\",\n        strokeWidth: 1,\n        tickPadding: 4,\n        tickLabelFill: \"#000000\",\n        tickStrokeStyle: \"#000000\",\n        xZoomHeight: 25,\n        zoomEnabled: true,\n        zoomCursorClassName: \"react-financial-charts-ew-resize-cursor\",\n    };\n\n    public static contextType = ChartContext;\n\n    public render() {\n        const {\n            getMouseDelta = XAxis.defaultProps.getMouseDelta,\n            outerTickSize = XAxis.defaultProps.outerTickSize,\n            showTicks,\n            strokeStyle = XAxis.defaultProps.strokeStyle,\n            strokeWidth = XAxis.defaultProps.strokeWidth,\n            zoomEnabled,\n            ...rest\n        } = this.props;\n\n        const { ...moreProps } = this.helper();\n\n        return (\n            <Axis\n                {...rest}\n                {...moreProps}\n                getMouseDelta={getMouseDelta}\n                outerTickSize={outerTickSize}\n                showTicks={showTicks}\n                strokeStyle={strokeStyle}\n                strokeWidth={strokeWidth}\n                zoomEnabled={zoomEnabled && showTicks}\n                axisZoomCallback={this.axisZoomCallback}\n            />\n        );\n    }\n\n    private readonly axisZoomCallback = (newXDomain: number[]) => {\n        const { xAxisZoom } = this.context;\n\n        xAxisZoom(newXDomain);\n    };\n\n    private readonly helper = () => {\n        const { axisAt, xZoomHeight = XAxis.defaultProps.xZoomHeight, orient, ticks } = this.props;\n        const {\n            chartConfig: { width, height },\n        } = this.context;\n\n        let axisLocation;\n        const x = 0;\n        const w = width;\n        const h = xZoomHeight;\n\n        switch (axisAt) {\n            case \"top\":\n                axisLocation = 0;\n                break;\n            case \"bottom\":\n                axisLocation = height;\n                break;\n            case \"middle\":\n                axisLocation = height / 2;\n                break;\n            default:\n                axisLocation = axisAt;\n        }\n\n        const y = orient === \"top\" ? -xZoomHeight : 0;\n\n        return {\n            transform: [0, axisLocation],\n            range: [0, width],\n            getScale: this.getXScale,\n            bg: { x, y, h, w },\n            ticks: ticks ?? this.getXTicks(width),\n        };\n    };\n\n    private readonly getXTicks = (width: number) => {\n        if (width < 400) {\n            return 2;\n        }\n\n        if (width < 500) {\n            return 6;\n        }\n\n        return 8;\n    };\n\n    private readonly getXScale = (moreProps: any) => {\n        const { xScale: scale, width } = moreProps;\n\n        if (scale.invert) {\n            const trueRange = [0, width];\n            const trueDomain = trueRange.map(scale.invert);\n            return scale.copy().domain(trueDomain).range(trueRange);\n        }\n\n        return scale;\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}