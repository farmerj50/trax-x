{"ast":null,"code":"import { Tooltip as SVGTooltip } from '@syncfusion/ej2-svg-base';\nimport { getElement, createTemplate, firstToLowerCase } from '../../common/utils/helper';\nimport { stopTimer } from '../../common/utils/helper';\nimport { measureText } from '@syncfusion/ej2-svg-base';\nimport { createElement } from '@syncfusion/ej2-base';\n/**\n * `Tooltip` module is used to render the tooltip for chart series.\n */\nvar RangeTooltip = /** @class */function () {\n  /**\n   * Constructor for tooltip module.\n   *\n   * @param {RangeNavigator} range - The RangeNavigator control.\n   * @private\n   */\n  function RangeTooltip(range) {\n    this.control = range;\n    this.elementId = range.element.id;\n  }\n  /**\n   * Left tooltip method called here.\n   *\n   * @param {RangeSlider} rangeSlider - RangeSlider\n   * @returns {void}\n   */\n  RangeTooltip.prototype.renderLeftTooltip = function (rangeSlider) {\n    this.fadeOutTooltip();\n    var content = this.getTooltipContent(rangeSlider.currentStart);\n    var contentWidth = this.getContentSize(content);\n    var rect = this.control.enableRtl ? rangeSlider.rightRect : rangeSlider.leftRect;\n    if (contentWidth > rect.width) {\n      rect = rangeSlider.midRect;\n    }\n    this.leftTooltip = this.renderTooltip(rect, this.createElement('_leftTooltip'), rangeSlider.startX, content);\n  };\n  /**\n   * get the content size.\n   *\n   * @param {string[]} value - The array of values.\n   * @returns {number} - The content size.\n   */\n  RangeTooltip.prototype.getContentSize = function (value) {\n    var width;\n    var font = this.control.tooltip.textStyle;\n    if (this.control.tooltip.template) {\n      width = createTemplate(createElement('div', {\n        id: 'measureElement',\n        styles: 'position: absolute;'\n      }), 0, this.control.tooltip.template, this.control).getBoundingClientRect().width;\n    } else {\n      // 20 for tooltip padding\n      width = measureText(value[0], font, this.control.themeStyle.tooltipLabelFont).width + 20;\n    }\n    return width;\n  };\n  /**\n   * Right tooltip method called here.\n   *\n   * @param {RangeSlider} rangeSlider - RangeSlider\n   * @returns {void}\n   */\n  RangeTooltip.prototype.renderRightTooltip = function (rangeSlider) {\n    this.fadeOutTooltip();\n    var content = this.getTooltipContent(rangeSlider.currentEnd);\n    var contentWidth = this.getContentSize(content);\n    var rect = this.control.enableRtl ? rangeSlider.leftRect : rangeSlider.rightRect;\n    if (contentWidth > rect.width) {\n      rect = rangeSlider.midRect;\n      rect.x = !this.control.series.length ? rect.x : 0;\n    }\n    this.rightTooltip = this.renderTooltip(rect, this.createElement('_rightTooltip'), rangeSlider.endX, content);\n  };\n  /**\n   * Tooltip element creation.\n   *\n   * @param {string} id - The element id.\n   * @returns {Element} - The created tooltip element.\n   */\n  RangeTooltip.prototype.createElement = function (id) {\n    if (getElement(this.elementId + id)) {\n      return getElement(this.elementId + id);\n    } else {\n      var element = document.createElement('div');\n      element.id = this.elementId + id;\n      element.className = 'ejSVGTooltip';\n      element.style.cssText = 'pointer-events:none; position:absolute;z-index: 1';\n      if (!this.control.stockChart) {\n        getElement(this.elementId + '_Secondary_Element').appendChild(element);\n      } else {\n        var stockChart = this.control.stockChart;\n        getElement(stockChart.element.id + '_Secondary_Element').appendChild(element);\n        element.style.transform = 'translateY(' + (stockChart.availableSize.height - stockChart.toolbarHeight - 51 + stockChart.toolbarHeight + stockChart.titleSize.height) + 'px)';\n      }\n      return element;\n    }\n  };\n  /**\n   * Tooltip render called here.\n   *\n   * @param {Rect} bounds - bounds\n   * @param {Element} parent - parent\n   * @param {number} pointX - pointX\n   * @param {string[]} content - content\n   * @returns {SVGTooltip} - SVGTooltip\n   */\n  RangeTooltip.prototype.renderTooltip = function (bounds, parent, pointX, content) {\n    var control = this.control;\n    var tooltip = control.tooltip;\n    var argsData = {\n      cancel: false,\n      name: 'tooltipRender',\n      text: content,\n      textStyle: tooltip.textStyle\n    };\n    argsData.textStyle.fontWeight = tooltip.textStyle.fontWeight || this.control.themeStyle.tooltipLabelFont.fontWeight;\n    this.control.trigger('tooltipRender', argsData);\n    var left = control.svgObject.getBoundingClientRect().left - control.element.getBoundingClientRect().left;\n    if (!argsData.cancel) {\n      return new SVGTooltip({\n        location: {\n          x: pointX,\n          y: control.rangeSlider.sliderY\n        },\n        content: argsData.text,\n        marginX: 2,\n        enableShadow: false,\n        marginY: 2,\n        arrowPadding: 8,\n        rx: 4,\n        ry: 4,\n        inverted: control.series.length > 0,\n        areaBounds: bounds,\n        fill: tooltip.fill ? tooltip.fill : this.control.themeStyle.tooltipBackground,\n        theme: this.control.theme,\n        clipBounds: {\n          x: left\n        },\n        border: tooltip.border,\n        opacity: tooltip.opacity ? tooltip.opacity : this.control.theme === 'Material3' || this.control.theme === 'Material3Dark' || this.control.theme.indexOf('Bootstrap5') > -1 ? 1 : 0.75,\n        template: tooltip.template,\n        textStyle: argsData.textStyle,\n        availableSize: control.availableSize,\n        controlName: 'RangeNavigator',\n        data: {\n          'start': this.getTooltipContent(this.control.startValue)[0],\n          'end': this.getTooltipContent(this.control.endValue)[0],\n          'value': content[0]\n        }\n      }, parent);\n    } else {\n      return null;\n    }\n  };\n  /**\n   * Tooltip content processed here.\n   *\n   * @param {number} value - The tooltip value.\n   * @returns {string[]} - An array containing the processed tooltip content.\n   */\n  RangeTooltip.prototype.getTooltipContent = function (value) {\n    var control = this.control;\n    var tooltip = control.tooltip;\n    var xAxis = control.chartSeries.xAxis;\n    var text;\n    var format = tooltip.format || xAxis.labelFormat;\n    var isCustom = format.match('{value}') !== null;\n    var valueType = xAxis.valueType;\n    value = valueType === 'DateTimeCategory' ? parseInt(xAxis.labels[Math.floor(value)], 10) : value;\n    if (valueType.indexOf('DateTime') > -1) {\n      text = control.intl.getDateFormat({\n        format: format || 'MM/dd/yyyy',\n        type: firstToLowerCase(control.skeletonType),\n        skeleton: valueType === 'DateTime' ? control.dateTimeModule.getSkeleton(xAxis, null, null) : control.dateTimeCategoryModule.getSkeleton(xAxis, null, null)\n      })(new Date(value));\n    } else {\n      xAxis.format = control.intl.getNumberFormat({\n        format: isCustom ? '' : format,\n        useGrouping: control.useGroupingSeparator\n      });\n      text = control.doubleModule.formatValue(xAxis, isCustom, format, valueType === 'Logarithmic' ? Math.pow(xAxis.logBase, value) : value);\n    }\n    return [text];\n  };\n  /**\n   * Fadeout animation performed here.\n   *\n   * @returns {void}\n   */\n  RangeTooltip.prototype.fadeOutTooltip = function () {\n    var _this = this;\n    var tooltip = this.control.tooltip;\n    if (tooltip.displayMode === 'OnDemand') {\n      stopTimer(this.toolTipInterval);\n      if (this.rightTooltip) {\n        this.toolTipInterval = +setTimeout(function () {\n          _this.leftTooltip.fadeOut();\n          _this.rightTooltip.fadeOut();\n        }, 1000);\n      }\n    }\n  };\n  /**\n   * Get module name.\n   *\n   * @returns {string} - The name of the module.\n   */\n  RangeTooltip.prototype.getModuleName = function () {\n    return 'RangeTooltip';\n  };\n  /**\n   * To destroy the tooltip.\n   *\n   * @returns {void}\n   * @private\n   */\n  RangeTooltip.prototype.destroy = function () {\n    // Destroy method called here\n  };\n  return RangeTooltip;\n}();\nexport { RangeTooltip };","map":{"version":3,"names":["Tooltip","SVGTooltip","getElement","createTemplate","firstToLowerCase","stopTimer","measureText","createElement","RangeTooltip","range","control","elementId","element","id","prototype","renderLeftTooltip","rangeSlider","fadeOutTooltip","content","getTooltipContent","currentStart","contentWidth","getContentSize","rect","enableRtl","rightRect","leftRect","width","midRect","leftTooltip","renderTooltip","startX","value","font","tooltip","textStyle","template","styles","getBoundingClientRect","themeStyle","tooltipLabelFont","renderRightTooltip","currentEnd","x","series","length","rightTooltip","endX","document","className","style","cssText","stockChart","appendChild","transform","availableSize","height","toolbarHeight","titleSize","bounds","parent","pointX","argsData","cancel","name","text","fontWeight","trigger","left","svgObject","location","y","sliderY","marginX","enableShadow","marginY","arrowPadding","rx","ry","inverted","areaBounds","fill","tooltipBackground","theme","clipBounds","border","opacity","indexOf","controlName","data","startValue","endValue","xAxis","chartSeries","format","labelFormat","isCustom","match","valueType","parseInt","labels","Math","floor","intl","getDateFormat","type","skeletonType","skeleton","dateTimeModule","getSkeleton","dateTimeCategoryModule","Date","getNumberFormat","useGrouping","useGroupingSeparator","doubleModule","formatValue","pow","logBase","_this","displayMode","toolTipInterval","setTimeout","fadeOut","getModuleName","destroy"],"sources":["C:/Users/gabby/trax-x/node_modules/@syncfusion/ej2-charts/src/range-navigator/user-interaction/tooltip.js"],"sourcesContent":["import { Tooltip as SVGTooltip } from '@syncfusion/ej2-svg-base';\nimport { getElement, createTemplate, firstToLowerCase } from '../../common/utils/helper';\nimport { stopTimer } from '../../common/utils/helper';\nimport { measureText } from '@syncfusion/ej2-svg-base';\nimport { createElement } from '@syncfusion/ej2-base';\n/**\n * `Tooltip` module is used to render the tooltip for chart series.\n */\nvar RangeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for tooltip module.\n     *\n     * @param {RangeNavigator} range - The RangeNavigator control.\n     * @private\n     */\n    function RangeTooltip(range) {\n        this.control = range;\n        this.elementId = range.element.id;\n    }\n    /**\n     * Left tooltip method called here.\n     *\n     * @param {RangeSlider} rangeSlider - RangeSlider\n     * @returns {void}\n     */\n    RangeTooltip.prototype.renderLeftTooltip = function (rangeSlider) {\n        this.fadeOutTooltip();\n        var content = this.getTooltipContent(rangeSlider.currentStart);\n        var contentWidth = this.getContentSize(content);\n        var rect = this.control.enableRtl ? rangeSlider.rightRect : rangeSlider.leftRect;\n        if (contentWidth > rect.width) {\n            rect = rangeSlider.midRect;\n        }\n        this.leftTooltip = this.renderTooltip(rect, this.createElement('_leftTooltip'), rangeSlider.startX, content);\n    };\n    /**\n     * get the content size.\n     *\n     * @param {string[]} value - The array of values.\n     * @returns {number} - The content size.\n     */\n    RangeTooltip.prototype.getContentSize = function (value) {\n        var width;\n        var font = this.control.tooltip.textStyle;\n        if (this.control.tooltip.template) {\n            width = createTemplate(createElement('div', {\n                id: 'measureElement',\n                styles: 'position: absolute;'\n            }), 0, this.control.tooltip.template, this.control).getBoundingClientRect().width;\n        }\n        else {\n            // 20 for tooltip padding\n            width = measureText(value[0], font, this.control.themeStyle.tooltipLabelFont).width + 20;\n        }\n        return width;\n    };\n    /**\n     * Right tooltip method called here.\n     *\n     * @param {RangeSlider} rangeSlider - RangeSlider\n     * @returns {void}\n     */\n    RangeTooltip.prototype.renderRightTooltip = function (rangeSlider) {\n        this.fadeOutTooltip();\n        var content = this.getTooltipContent(rangeSlider.currentEnd);\n        var contentWidth = this.getContentSize(content);\n        var rect = this.control.enableRtl ? rangeSlider.leftRect : rangeSlider.rightRect;\n        if (contentWidth > rect.width) {\n            rect = rangeSlider.midRect;\n            rect.x = !this.control.series.length ? rect.x : 0;\n        }\n        this.rightTooltip = this.renderTooltip(rect, this.createElement('_rightTooltip'), rangeSlider.endX, content);\n    };\n    /**\n     * Tooltip element creation.\n     *\n     * @param {string} id - The element id.\n     * @returns {Element} - The created tooltip element.\n     */\n    RangeTooltip.prototype.createElement = function (id) {\n        if (getElement(this.elementId + id)) {\n            return getElement(this.elementId + id);\n        }\n        else {\n            var element = document.createElement('div');\n            element.id = this.elementId + id;\n            element.className = 'ejSVGTooltip';\n            element.style.cssText = 'pointer-events:none; position:absolute;z-index: 1';\n            if (!this.control.stockChart) {\n                getElement(this.elementId + '_Secondary_Element').appendChild(element);\n            }\n            else {\n                var stockChart = this.control.stockChart;\n                getElement(stockChart.element.id + '_Secondary_Element').appendChild(element);\n                element.style.transform = 'translateY(' + (((stockChart.availableSize.height - stockChart.toolbarHeight - 51) +\n                    stockChart.toolbarHeight) + stockChart.titleSize.height) + 'px)';\n            }\n            return element;\n        }\n    };\n    /**\n     * Tooltip render called here.\n     *\n     * @param {Rect} bounds - bounds\n     * @param {Element} parent - parent\n     * @param {number} pointX - pointX\n     * @param {string[]} content - content\n     * @returns {SVGTooltip} - SVGTooltip\n     */\n    RangeTooltip.prototype.renderTooltip = function (bounds, parent, pointX, content) {\n        var control = this.control;\n        var tooltip = control.tooltip;\n        var argsData = {\n            cancel: false, name: 'tooltipRender', text: content,\n            textStyle: tooltip.textStyle\n        };\n        argsData.textStyle.fontWeight = tooltip.textStyle.fontWeight || this.control.themeStyle.tooltipLabelFont.fontWeight;\n        this.control.trigger('tooltipRender', argsData);\n        var left = control.svgObject.getBoundingClientRect().left -\n            control.element.getBoundingClientRect().left;\n        if (!argsData.cancel) {\n            return new SVGTooltip({\n                location: { x: pointX, y: control.rangeSlider.sliderY },\n                content: argsData.text, marginX: 2,\n                enableShadow: false,\n                marginY: 2, arrowPadding: 8, rx: 4, ry: 4,\n                inverted: control.series.length > 0,\n                areaBounds: bounds, fill: tooltip.fill ? tooltip.fill : this.control.themeStyle.tooltipBackground,\n                theme: this.control.theme,\n                clipBounds: { x: left },\n                border: tooltip.border, opacity: tooltip.opacity ? tooltip.opacity : ((this.control.theme === 'Material3' || this.control.theme === 'Material3Dark' || this.control.theme.indexOf('Bootstrap5') > -1) ? 1 : 0.75),\n                template: tooltip.template,\n                textStyle: argsData.textStyle,\n                availableSize: control.availableSize,\n                controlName: 'RangeNavigator',\n                data: {\n                    'start': this.getTooltipContent(this.control.startValue)[0],\n                    'end': this.getTooltipContent(this.control.endValue)[0],\n                    'value': content[0]\n                }\n            }, parent);\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Tooltip content processed here.\n     *\n     * @param {number} value - The tooltip value.\n     * @returns {string[]} - An array containing the processed tooltip content.\n     */\n    RangeTooltip.prototype.getTooltipContent = function (value) {\n        var control = this.control;\n        var tooltip = control.tooltip;\n        var xAxis = control.chartSeries.xAxis;\n        var text;\n        var format = tooltip.format || xAxis.labelFormat;\n        var isCustom = format.match('{value}') !== null;\n        var valueType = xAxis.valueType;\n        value = (valueType === 'DateTimeCategory' ? parseInt(xAxis.labels[Math.floor(value)], 10) : value);\n        if (valueType.indexOf('DateTime') > -1) {\n            text = (control.intl.getDateFormat({\n                format: format || 'MM/dd/yyyy',\n                type: firstToLowerCase(control.skeletonType),\n                skeleton: valueType === 'DateTime' ? control.dateTimeModule.getSkeleton(xAxis, null, null) : control.dateTimeCategoryModule.getSkeleton(xAxis, null, null)\n            }))(new Date(value));\n        }\n        else {\n            xAxis.format = control.intl.getNumberFormat({\n                format: isCustom ? '' : format,\n                useGrouping: control.useGroupingSeparator\n            });\n            text = control.doubleModule.formatValue(xAxis, isCustom, format, valueType === 'Logarithmic' ? Math.pow(xAxis.logBase, value) : value);\n        }\n        return [text];\n    };\n    /**\n     * Fadeout animation performed here.\n     *\n     * @returns {void}\n     */\n    RangeTooltip.prototype.fadeOutTooltip = function () {\n        var _this = this;\n        var tooltip = this.control.tooltip;\n        if (tooltip.displayMode === 'OnDemand') {\n            stopTimer(this.toolTipInterval);\n            if (this.rightTooltip) {\n                this.toolTipInterval = +setTimeout(function () {\n                    _this.leftTooltip.fadeOut();\n                    _this.rightTooltip.fadeOut();\n                }, 1000);\n            }\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - The name of the module.\n     */\n    RangeTooltip.prototype.getModuleName = function () {\n        return 'RangeTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @returns {void}\n     * @private\n     */\n    RangeTooltip.prototype.destroy = function () {\n        // Destroy method called here\n    };\n    return RangeTooltip;\n}());\nexport { RangeTooltip };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}