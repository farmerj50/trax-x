{"ast":null,"code":"import * as React from \"react\";\nimport { getMouseCanvas, GenericChartComponent } from \"@react-financial-charts/core\";\nexport class ClickableCircle extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.drawOnCanvas = (ctx, moreProps) => {\n      const {\n        strokeStyle,\n        strokeWidth,\n        fillStyle,\n        r\n      } = this.props;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fillStyle;\n      ctx.strokeStyle = strokeStyle;\n      const [x, y] = this.helper(moreProps);\n      ctx.beginPath();\n      ctx.arc(x, y, r, 0, 2 * Math.PI, false);\n      ctx.fill();\n      ctx.stroke();\n    };\n    this.isHover = moreProps => {\n      const {\n        mouseXY\n      } = moreProps;\n      const r = this.props.r + 7;\n      const [x, y] = this.helper(moreProps);\n      const [mx, my] = mouseXY;\n      const hover = x - r < mx && mx < x + r && y - r < my && my < y + r;\n      return hover;\n    };\n    this.helper = moreProps => {\n      const {\n        xyProvider,\n        cx,\n        cy\n      } = this.props;\n      if (xyProvider !== undefined) {\n        return xyProvider(moreProps);\n      }\n      const {\n        xScale,\n        chartConfig: {\n          yScale\n        }\n      } = moreProps;\n      const x = xScale(cx);\n      const y = yScale(cy);\n      return [x, y];\n    };\n  }\n  render() {\n    const {\n      interactiveCursorClass,\n      onDragStart,\n      onDrag,\n      onDragComplete,\n      show\n    } = this.props;\n    if (!show) {\n      return null;\n    }\n    return React.createElement(GenericChartComponent, {\n      interactiveCursorClass: interactiveCursorClass,\n      selected: true,\n      isHover: this.isHover,\n      onDragStart: onDragStart,\n      onDrag: onDrag,\n      onDragComplete: onDragComplete,\n      canvasDraw: this.drawOnCanvas,\n      canvasToDraw: getMouseCanvas,\n      drawOn: [\"pan\", \"mousemove\", \"drag\"]\n    });\n  }\n}\nClickableCircle.defaultProps = {\n  className: \"react-financial-charts-interactive-line-edge\",\n  show: false\n};","map":{"version":3,"names":["React","getMouseCanvas","GenericChartComponent","ClickableCircle","Component","constructor","drawOnCanvas","ctx","moreProps","strokeStyle","strokeWidth","fillStyle","r","props","lineWidth","x","y","helper","beginPath","arc","Math","PI","fill","stroke","isHover","mouseXY","mx","my","hover","xyProvider","cx","cy","undefined","xScale","chartConfig","yScale","render","interactiveCursorClass","onDragStart","onDrag","onDragComplete","show","createElement","selected","canvasDraw","canvasToDraw","drawOn","defaultProps","className"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\interactive\\src\\components\\ClickableCircle.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport { getMouseCanvas, GenericChartComponent } from \"@react-financial-charts/core\";\n\nexport interface ClickableCircleProps {\n    readonly onDragStart?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onDrag?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onDragComplete?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly strokeWidth: number;\n    readonly strokeStyle: string;\n    readonly fillStyle: string;\n    readonly r: number;\n    readonly cx?: number;\n    readonly cy?: number;\n    readonly className: string;\n    readonly show: boolean;\n    readonly interactiveCursorClass?: string;\n    readonly xyProvider?: (moreProps: any) => number[];\n}\n\nexport class ClickableCircle extends React.Component<ClickableCircleProps> {\n    public static defaultProps = {\n        className: \"react-financial-charts-interactive-line-edge\",\n        show: false,\n    };\n\n    public render() {\n        const { interactiveCursorClass, onDragStart, onDrag, onDragComplete, show } = this.props;\n\n        if (!show) {\n            return null;\n        }\n\n        return (\n            <GenericChartComponent\n                interactiveCursorClass={interactiveCursorClass}\n                selected\n                isHover={this.isHover}\n                onDragStart={onDragStart}\n                onDrag={onDrag}\n                onDragComplete={onDragComplete}\n                canvasDraw={this.drawOnCanvas}\n                canvasToDraw={getMouseCanvas}\n                drawOn={[\"pan\", \"mousemove\", \"drag\"]}\n            />\n        );\n    }\n\n    private readonly drawOnCanvas = (ctx: CanvasRenderingContext2D, moreProps: any) => {\n        const { strokeStyle, strokeWidth, fillStyle, r } = this.props;\n\n        ctx.lineWidth = strokeWidth;\n        ctx.fillStyle = fillStyle;\n        ctx.strokeStyle = strokeStyle;\n\n        const [x, y] = this.helper(moreProps);\n\n        ctx.beginPath();\n        ctx.arc(x, y, r, 0, 2 * Math.PI, false);\n        ctx.fill();\n        ctx.stroke();\n    };\n\n    private readonly isHover = (moreProps: any) => {\n        const { mouseXY } = moreProps;\n        const r = this.props.r + 7;\n        const [x, y] = this.helper(moreProps);\n\n        const [mx, my] = mouseXY;\n        const hover = x - r < mx && mx < x + r && y - r < my && my < y + r;\n\n        return hover;\n    };\n\n    private readonly helper = (moreProps: any) => {\n        const { xyProvider, cx, cy } = this.props;\n\n        if (xyProvider !== undefined) {\n            return xyProvider(moreProps);\n        }\n\n        const {\n            xScale,\n            chartConfig: { yScale },\n        } = moreProps;\n\n        const x = xScale(cx);\n        const y = yScale(cy);\n        return [x, y];\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}