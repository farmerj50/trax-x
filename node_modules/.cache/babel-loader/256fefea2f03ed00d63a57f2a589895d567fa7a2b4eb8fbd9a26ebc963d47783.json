{"ast":null,"code":"import { mappedSlidingWindow } from \"../utils\";\nexport default function () {\n  let source = x => x;\n  const calculator = data => {\n    const algorithm = mappedSlidingWindow().windowSize(2).undefinedValue(({\n      open,\n      high,\n      low,\n      close\n    }) => {\n      close = (open + high + low + close) / 4;\n      return {\n        open,\n        high,\n        low,\n        close\n      };\n    }).accumulator(([prev, now]) => {\n      const {\n        date,\n        volume\n      } = now;\n      const close = (now.open + now.high + now.low + now.close) / 4;\n      const open = (prev.open + prev.close) / 2;\n      const high = Math.max(open, now.high, close);\n      const low = Math.min(open, now.low, close);\n      return {\n        date,\n        open,\n        high,\n        low,\n        close,\n        volume\n      };\n    });\n    return algorithm(data);\n  };\n  calculator.source = newSource => {\n    if (newSource === undefined) {\n      return source;\n    }\n    source = newSource;\n    return calculator;\n  };\n  return calculator;\n}","map":{"version":3,"names":["mappedSlidingWindow","source","x","calculator","data","algorithm","windowSize","undefinedValue","open","high","low","close","accumulator","prev","now","date","volume","Math","max","min","newSource","undefined"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\indicators\\src\\calculator\\heikinAshi.ts"],"sourcesContent":["import { mappedSlidingWindow } from \"../utils\";\n\nexport default function () {\n    let source = (x: any) => x;\n\n    const calculator = (data: any[]) => {\n        const algorithm = mappedSlidingWindow()\n            .windowSize(2)\n            .undefinedValue(\n                ({ open, high, low, close }: { open: number; high: number; low: number; close: number }) => {\n                    close = (open + high + low + close) / 4;\n                    return { open, high, low, close };\n                },\n            )\n            .accumulator(([prev, now]: any) => {\n                const { date, volume } = now;\n                const close = (now.open + now.high + now.low + now.close) / 4;\n                const open = (prev.open + prev.close) / 2;\n                const high = Math.max(open, now.high, close);\n                const low = Math.min(open, now.low, close);\n                return { date, open, high, low, close, volume };\n            });\n\n        return algorithm(data);\n    };\n\n    calculator.source = (newSource?: any) => {\n        if (newSource === undefined) {\n            return source;\n        }\n\n        source = newSource;\n\n        return calculator;\n    };\n\n    return calculator;\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,UAAU;AAE9C,eAAc;EACV,IAAIC,MAAM,GAAIC,CAAM,IAAKA,CAAC;EAE1B,MAAMC,UAAU,GAAIC,IAAW,IAAI;IAC/B,MAAMC,SAAS,GAAGL,mBAAmB,EAAE,CAClCM,UAAU,CAAC,CAAC,CAAC,CACbC,cAAc,CACX,CAAC;MAAEC,IAAI;MAAEC,IAAI;MAAEC,GAAG;MAAEC;IAAK,CAA8D,KAAI;MACvFA,KAAK,GAAG,CAACH,IAAI,GAAGC,IAAI,GAAGC,GAAG,GAAGC,KAAK,IAAI,CAAC;MACvC,OAAO;QAAEH,IAAI;QAAEC,IAAI;QAAEC,GAAG;QAAEC;MAAK,CAAE;IACrC,CAAC,CACJ,CACAC,WAAW,CAAC,CAAC,CAACC,IAAI,EAAEC,GAAG,CAAM,KAAI;MAC9B,MAAM;QAAEC,IAAI;QAAEC;MAAM,CAAE,GAAGF,GAAG;MAC5B,MAAMH,KAAK,GAAG,CAACG,GAAG,CAACN,IAAI,GAAGM,GAAG,CAACL,IAAI,GAAGK,GAAG,CAACJ,GAAG,GAAGI,GAAG,CAACH,KAAK,IAAI,CAAC;MAC7D,MAAMH,IAAI,GAAG,CAACK,IAAI,CAACL,IAAI,GAAGK,IAAI,CAACF,KAAK,IAAI,CAAC;MACzC,MAAMF,IAAI,GAAGQ,IAAI,CAACC,GAAG,CAACV,IAAI,EAAEM,GAAG,CAACL,IAAI,EAAEE,KAAK,CAAC;MAC5C,MAAMD,GAAG,GAAGO,IAAI,CAACE,GAAG,CAACX,IAAI,EAAEM,GAAG,CAACJ,GAAG,EAAEC,KAAK,CAAC;MAC1C,OAAO;QAAEI,IAAI;QAAEP,IAAI;QAAEC,IAAI;QAAEC,GAAG;QAAEC,KAAK;QAAEK;MAAM,CAAE;IACnD,CAAC,CAAC;IAEN,OAAOX,SAAS,CAACD,IAAI,CAAC;EAC1B,CAAC;EAEDD,UAAU,CAACF,MAAM,GAAImB,SAAe,IAAI;IACpC,IAAIA,SAAS,KAAKC,SAAS,EAAE;MACzB,OAAOpB,MAAM;;IAGjBA,MAAM,GAAGmB,SAAS;IAElB,OAAOjB,UAAU;EACrB,CAAC;EAED,OAAOA,UAAU;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}