{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabby\\\\trax-x\\\\src\\\\components\\\\CandlestickChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { createChart } from \"lightweight-charts\";\nimport \"./CandlestickChart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CandlestickChart = ({\n  ticker,\n  entryPoint,\n  exitPoint,\n  additionalData\n}) => {\n  _s();\n  const chartContainerRef = useRef(null);\n  const chartRef = useRef(null);\n  const candlestickSeriesRef = useRef(null);\n  const intervalRef = useRef(null);\n  useEffect(() => {\n    const chart = createChart(chartContainerRef.current, {\n      width: chartContainerRef.current.clientWidth || 700,\n      height: 400,\n      layout: {\n        backgroundColor: \"#ffffff\",\n        textColor: \"#000000\"\n      }\n    });\n    chartRef.current = chart;\n    const candlestickSeries = chart.addCandlestickSeries();\n    candlestickSeriesRef.current = candlestickSeries;\n    const fetchInitialData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${ticker}`);\n        const data = await response.json();\n        if (data.dates) {\n          const formattedData = data.dates.map((date, i) => ({\n            time: date,\n            open: data.open[i],\n            high: data.high[i],\n            low: data.low[i],\n            close: data.close[i]\n          }));\n          candlestickSeries.setData(formattedData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching initial data:\", error);\n      }\n    };\n    fetchInitialData();\n    let isUpdating = false;\n    const updateChart = async () => {\n      if (isUpdating) return;\n      isUpdating = true;\n      try {\n        const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${ticker}`);\n        const data = await response.json();\n        if (data.dates) {\n          const latestData = {\n            time: data.dates[data.dates.length - 1],\n            open: data.open[data.open.length - 1],\n            high: data.high[data.high.length - 1],\n            low: data.low[data.low.length - 1],\n            close: data.close[data.close.length - 1]\n          };\n          candlestickSeries.update(latestData);\n        }\n      } catch (error) {\n        console.error(\"Error updating chart:\", error);\n      } finally {\n        isUpdating = false;\n      }\n    };\n    intervalRef.current = setInterval(updateChart, 5000);\n    return () => {\n      clearInterval(intervalRef.current);\n      chart.remove();\n    };\n  }, [ticker]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chartContainerRef,\n      className: \"chart-wrapper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(CandlestickChart, \"YfMm0n6E5vP9u17nCDGxTHZ8p40=\");\n_c = CandlestickChart;\nexport default CandlestickChart;\nvar _c;\n$RefreshReg$(_c, \"CandlestickChart\");","map":{"version":3,"names":["React","useEffect","useRef","createChart","jsxDEV","_jsxDEV","CandlestickChart","ticker","entryPoint","exitPoint","additionalData","_s","chartContainerRef","chartRef","candlestickSeriesRef","intervalRef","chart","current","width","clientWidth","height","layout","backgroundColor","textColor","candlestickSeries","addCandlestickSeries","fetchInitialData","response","fetch","data","json","dates","formattedData","map","date","i","time","open","high","low","close","setData","error","console","isUpdating","updateChart","latestData","length","update","setInterval","clearInterval","remove","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gabby/trax-x/src/components/CandlestickChart.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { createChart } from \"lightweight-charts\";\r\nimport \"./CandlestickChart.css\";\r\n\r\nconst CandlestickChart = ({ ticker, entryPoint, exitPoint, additionalData }) => {\r\n  const chartContainerRef = useRef(null);\r\n  const chartRef = useRef(null);\r\n  const candlestickSeriesRef = useRef(null);\r\n  const intervalRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const chart = createChart(chartContainerRef.current, {\r\n      width: chartContainerRef.current.clientWidth || 700,\r\n      height: 400,\r\n      layout: { backgroundColor: \"#ffffff\", textColor: \"#000000\" },\r\n    });\r\n\r\n    chartRef.current = chart;\r\n    const candlestickSeries = chart.addCandlestickSeries();\r\n    candlestickSeriesRef.current = candlestickSeries;\r\n\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:5000/api/candlestick?ticker=${ticker}`\r\n        );\r\n        const data = await response.json();\r\n        if (data.dates) {\r\n          const formattedData = data.dates.map((date, i) => ({\r\n            time: date,\r\n            open: data.open[i],\r\n            high: data.high[i],\r\n            low: data.low[i],\r\n            close: data.close[i],\r\n          }));\r\n          candlestickSeries.setData(formattedData);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching initial data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchInitialData();\r\n\r\n    let isUpdating = false;\r\n\r\n    const updateChart = async () => {\r\n      if (isUpdating) return;\r\n      isUpdating = true;\r\n\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:5000/api/candlestick?ticker=${ticker}`\r\n        );\r\n        const data = await response.json();\r\n        if (data.dates) {\r\n          const latestData = {\r\n            time: data.dates[data.dates.length - 1],\r\n            open: data.open[data.open.length - 1],\r\n            high: data.high[data.high.length - 1],\r\n            low: data.low[data.low.length - 1],\r\n            close: data.close[data.close.length - 1],\r\n          };\r\n          candlestickSeries.update(latestData);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error updating chart:\", error);\r\n      } finally {\r\n        isUpdating = false;\r\n      }\r\n    };\r\n\r\n    intervalRef.current = setInterval(updateChart, 5000);\r\n\r\n    return () => {\r\n      clearInterval(intervalRef.current);\r\n      chart.remove();\r\n    };\r\n  }, [ticker]);\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <div ref={chartContainerRef} className=\"chart-wrapper\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CandlestickChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}