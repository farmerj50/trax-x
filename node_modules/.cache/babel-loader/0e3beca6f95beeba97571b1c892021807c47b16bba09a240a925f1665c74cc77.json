{"ast":null,"code":"import * as React from \"react\";\nimport { AreaSeries } from \"./AreaSeries\";\nimport { SVGComponent } from \"./SVGComponent\";\n/**\n * `AlternatingFillAreaSeries` component is similar to a `AreaSeries` but with different colors above and below the base.\n */\nexport class AlternatingFillAreaSeries extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.clipPathId1 = `alternating-area-clip-${String(Math.round(Math.random() * 10000 * 10000))}`;\n    this.clipPathId2 = `alternating-area-clip-${String(Math.round(Math.random() * 10000 * 10000))}`;\n    this.baseAt = yScale => {\n      return yScale(this.props.baseAt);\n    };\n    this.renderClip = moreProps => {\n      const {\n        chartConfig\n      } = moreProps;\n      const {\n        baseAt\n      } = this.props;\n      const {\n        yScale,\n        width,\n        height\n      } = chartConfig;\n      return React.createElement(\"defs\", null, React.createElement(\"clipPath\", {\n        id: this.clipPathId1\n      }, React.createElement(\"rect\", {\n        x: 0,\n        y: 0,\n        width: width,\n        height: yScale(baseAt)\n      })), React.createElement(\"clipPath\", {\n        id: this.clipPathId2\n      }, React.createElement(\"rect\", {\n        x: 0,\n        y: yScale(baseAt),\n        width: width,\n        height: height - yScale(baseAt)\n      })));\n    };\n    this.bottomClip = (ctx, moreProps) => {\n      const {\n        chartConfig\n      } = moreProps;\n      const {\n        baseAt\n      } = this.props;\n      const {\n        yScale,\n        width,\n        height\n      } = chartConfig;\n      ctx.beginPath();\n      ctx.rect(0, yScale(baseAt), width, height - yScale(baseAt));\n      ctx.clip();\n    };\n    this.topClip = (ctx, moreProps) => {\n      const {\n        chartConfig\n      } = moreProps;\n      const {\n        baseAt\n      } = this.props;\n      const {\n        yScale,\n        width\n      } = chartConfig;\n      ctx.beginPath();\n      ctx.rect(0, 0, width, yScale(baseAt));\n      ctx.clip();\n    };\n  }\n  render() {\n    const {\n      connectNulls,\n      yAccessor,\n      curve,\n      strokeStyle = AlternatingFillAreaSeries.defaultProps.strokeStyle,\n      strokeWidth = AlternatingFillAreaSeries.defaultProps.strokeWidth,\n      strokeDasharray = AlternatingFillAreaSeries.defaultProps.strokeDasharray,\n      fillStyle = AlternatingFillAreaSeries.defaultProps.fillStyle\n    } = this.props;\n    return React.createElement(\"g\", null, React.createElement(SVGComponent, null, this.renderClip), React.createElement(AreaSeries, {\n      canvasClip: this.topClip,\n      connectNulls: connectNulls,\n      yAccessor: yAccessor,\n      curve: curve,\n      baseAt: this.baseAt,\n      fillStyle: fillStyle.top,\n      strokeStyle: strokeStyle.top,\n      strokeDasharray: strokeDasharray.top,\n      strokeWidth: strokeWidth.top\n    }), React.createElement(AreaSeries, {\n      canvasClip: this.bottomClip,\n      connectNulls: connectNulls,\n      yAccessor: yAccessor,\n      curve: curve,\n      baseAt: this.baseAt,\n      fillStyle: fillStyle.bottom,\n      strokeStyle: strokeStyle.bottom,\n      strokeDasharray: strokeDasharray.bottom,\n      strokeWidth: strokeWidth.bottom\n    }));\n  }\n}\nAlternatingFillAreaSeries.defaultProps = {\n  connectNulls: false,\n  fillStyle: {\n    top: \"rgba(38, 166, 154, 0.1)\",\n    bottom: \"rgba(239, 83, 80, 0.1)\"\n  },\n  strokeStyle: {\n    top: \"#26a69a\",\n    bottom: \"#ef5350\"\n  },\n  strokeWidth: {\n    top: 2,\n    bottom: 2\n  },\n  strokeDasharray: {\n    top: \"Solid\",\n    bottom: \"Solid\"\n  }\n};","map":{"version":3,"names":["React","AreaSeries","SVGComponent","AlternatingFillAreaSeries","Component","constructor","clipPathId1","String","Math","round","random","clipPathId2","baseAt","yScale","props","renderClip","moreProps","chartConfig","width","height","createElement","id","x","y","bottomClip","ctx","beginPath","rect","clip","topClip","render","connectNulls","yAccessor","curve","strokeStyle","defaultProps","strokeWidth","strokeDasharray","fillStyle","canvasClip","top","bottom"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\series\\src\\AlternatingFillAreaSeries.tsx"],"sourcesContent":["import { strokeDashTypes } from \"@react-financial-charts/core\";\nimport { ScaleContinuousNumeric } from \"d3-scale\";\nimport { CurveFactory } from \"d3-shape\";\nimport * as React from \"react\";\nimport { AreaSeries } from \"./AreaSeries\";\nimport { SVGComponent } from \"./SVGComponent\";\n\nexport interface AlternatingFillAreaSeriesProps {\n    readonly baseAt: number;\n    /**\n     * Wether to connect the area between undefined data points.\n     */\n    readonly connectNulls?: boolean;\n    /**\n     * Color, gradient, or pattern to use for fill.\n     */\n    readonly fillStyle?: {\n        top: string;\n        bottom: string;\n    };\n    /**\n     * A factory for a curve generator for the area and line.\n     */\n    readonly curve?: CurveFactory;\n    /**\n     * Color, gradient, or pattern to use for the stroke.\n     */\n    readonly strokeStyle?: {\n        top: string;\n        bottom: string;\n    };\n    /**\n     * Stroke dash.\n     */\n    readonly strokeDasharray?: {\n        top: strokeDashTypes;\n        bottom: strokeDashTypes;\n    };\n    /**\n     * Stroke width.\n     */\n    readonly strokeWidth?: {\n        top: number;\n        bottom: number;\n    };\n    /**\n     * Selector for data to plot.\n     */\n    readonly yAccessor: (data: any) => number | undefined;\n}\n\n/**\n * `AlternatingFillAreaSeries` component is similar to a `AreaSeries` but with different colors above and below the base.\n */\nexport class AlternatingFillAreaSeries extends React.Component<AlternatingFillAreaSeriesProps> {\n    public static defaultProps = {\n        connectNulls: false,\n        fillStyle: {\n            top: \"rgba(38, 166, 154, 0.1)\",\n            bottom: \"rgba(239, 83, 80, 0.1)\",\n        },\n        strokeStyle: {\n            top: \"#26a69a\",\n            bottom: \"#ef5350\",\n        },\n        strokeWidth: {\n            top: 2,\n            bottom: 2,\n        },\n        strokeDasharray: {\n            top: \"Solid\" as strokeDashTypes,\n            bottom: \"Solid\" as strokeDashTypes,\n        },\n    };\n\n    private clipPathId1 = `alternating-area-clip-${String(Math.round(Math.random() * 10000 * 10000))}`;\n    private clipPathId2 = `alternating-area-clip-${String(Math.round(Math.random() * 10000 * 10000))}`;\n\n    public render() {\n        const {\n            connectNulls,\n            yAccessor,\n            curve,\n            strokeStyle = AlternatingFillAreaSeries.defaultProps.strokeStyle,\n            strokeWidth = AlternatingFillAreaSeries.defaultProps.strokeWidth,\n            strokeDasharray = AlternatingFillAreaSeries.defaultProps.strokeDasharray,\n            fillStyle = AlternatingFillAreaSeries.defaultProps.fillStyle,\n        } = this.props;\n\n        return (\n            <g>\n                <SVGComponent>{this.renderClip}</SVGComponent>\n                <AreaSeries\n                    canvasClip={this.topClip}\n                    connectNulls={connectNulls}\n                    yAccessor={yAccessor}\n                    curve={curve}\n                    baseAt={this.baseAt}\n                    fillStyle={fillStyle.top}\n                    strokeStyle={strokeStyle.top}\n                    strokeDasharray={strokeDasharray.top}\n                    strokeWidth={strokeWidth.top}\n                />\n                <AreaSeries\n                    canvasClip={this.bottomClip}\n                    connectNulls={connectNulls}\n                    yAccessor={yAccessor}\n                    curve={curve}\n                    baseAt={this.baseAt}\n                    fillStyle={fillStyle.bottom}\n                    strokeStyle={strokeStyle.bottom}\n                    strokeDasharray={strokeDasharray.bottom}\n                    strokeWidth={strokeWidth.bottom}\n                />\n            </g>\n        );\n    }\n\n    private readonly baseAt = (yScale: ScaleContinuousNumeric<number, number>) => {\n        return yScale(this.props.baseAt);\n    };\n\n    private readonly renderClip = (moreProps: any) => {\n        const { chartConfig } = moreProps;\n        const { baseAt } = this.props;\n        const { yScale, width, height } = chartConfig;\n\n        return (\n            <defs>\n                <clipPath id={this.clipPathId1}>\n                    <rect x={0} y={0} width={width} height={yScale(baseAt)} />\n                </clipPath>\n                <clipPath id={this.clipPathId2}>\n                    <rect x={0} y={yScale(baseAt)} width={width} height={height - yScale(baseAt)} />\n                </clipPath>\n            </defs>\n        );\n    };\n\n    private readonly bottomClip = (ctx: CanvasRenderingContext2D, moreProps: any) => {\n        const { chartConfig } = moreProps;\n        const { baseAt } = this.props;\n        const { yScale, width, height } = chartConfig;\n\n        ctx.beginPath();\n        ctx.rect(0, yScale(baseAt), width, height - yScale(baseAt));\n        ctx.clip();\n    };\n\n    private readonly topClip = (ctx: CanvasRenderingContext2D, moreProps: any) => {\n        const { chartConfig } = moreProps;\n        const { baseAt } = this.props;\n        const { yScale, width } = chartConfig;\n\n        ctx.beginPath();\n        ctx.rect(0, 0, width, yScale(baseAt));\n        ctx.clip();\n    };\n}\n"],"mappings":"AAGA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,YAAY,QAAQ,gBAAgB;AA8C7C;;;AAGA,OAAM,MAAOC,yBAA0B,SAAQH,KAAK,CAACI,SAAyC;EAA9FC,YAAA;;IAqBY,KAAAC,WAAW,GAAG,yBAAyBC,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC,EAAE;IAC1F,KAAAC,WAAW,GAAG,yBAAyBJ,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC,EAAE;IA0CjF,KAAAE,MAAM,GAAIC,MAA8C,IAAI;MACzE,OAAOA,MAAM,CAAC,IAAI,CAACC,KAAK,CAACF,MAAM,CAAC;IACpC,CAAC;IAEgB,KAAAG,UAAU,GAAIC,SAAc,IAAI;MAC7C,MAAM;QAAEC;MAAW,CAAE,GAAGD,SAAS;MACjC,MAAM;QAAEJ;MAAM,CAAE,GAAG,IAAI,CAACE,KAAK;MAC7B,MAAM;QAAED,MAAM;QAAEK,KAAK;QAAEC;MAAM,CAAE,GAAGF,WAAW;MAE7C,OACIjB,KAAA,CAAAoB,aAAA,eACIpB,KAAA,CAAAoB,aAAA;QAAUC,EAAE,EAAE,IAAI,CAACf;MAAW,GAC1BN,KAAA,CAAAoB,aAAA;QAAME,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC;QAAEL,KAAK,EAAEA,KAAK;QAAEC,MAAM,EAAEN,MAAM,CAACD,MAAM;MAAC,EAAI,CACnD,EACXZ,KAAA,CAAAoB,aAAA;QAAUC,EAAE,EAAE,IAAI,CAACV;MAAW,GAC1BX,KAAA,CAAAoB,aAAA;QAAME,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAEV,MAAM,CAACD,MAAM,CAAC;QAAEM,KAAK,EAAEA,KAAK;QAAEC,MAAM,EAAEA,MAAM,GAAGN,MAAM,CAACD,MAAM;MAAC,EAAI,CACzE,CACR;IAEf,CAAC;IAEgB,KAAAY,UAAU,GAAG,CAACC,GAA6B,EAAET,SAAc,KAAI;MAC5E,MAAM;QAAEC;MAAW,CAAE,GAAGD,SAAS;MACjC,MAAM;QAAEJ;MAAM,CAAE,GAAG,IAAI,CAACE,KAAK;MAC7B,MAAM;QAAED,MAAM;QAAEK,KAAK;QAAEC;MAAM,CAAE,GAAGF,WAAW;MAE7CQ,GAAG,CAACC,SAAS,EAAE;MACfD,GAAG,CAACE,IAAI,CAAC,CAAC,EAAEd,MAAM,CAACD,MAAM,CAAC,EAAEM,KAAK,EAAEC,MAAM,GAAGN,MAAM,CAACD,MAAM,CAAC,CAAC;MAC3Da,GAAG,CAACG,IAAI,EAAE;IACd,CAAC;IAEgB,KAAAC,OAAO,GAAG,CAACJ,GAA6B,EAAET,SAAc,KAAI;MACzE,MAAM;QAAEC;MAAW,CAAE,GAAGD,SAAS;MACjC,MAAM;QAAEJ;MAAM,CAAE,GAAG,IAAI,CAACE,KAAK;MAC7B,MAAM;QAAED,MAAM;QAAEK;MAAK,CAAE,GAAGD,WAAW;MAErCQ,GAAG,CAACC,SAAS,EAAE;MACfD,GAAG,CAACE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAET,KAAK,EAAEL,MAAM,CAACD,MAAM,CAAC,CAAC;MACrCa,GAAG,CAACG,IAAI,EAAE;IACd,CAAC;EACL;EAhFWE,MAAMA,CAAA;IACT,MAAM;MACFC,YAAY;MACZC,SAAS;MACTC,KAAK;MACLC,WAAW,GAAG/B,yBAAyB,CAACgC,YAAY,CAACD,WAAW;MAChEE,WAAW,GAAGjC,yBAAyB,CAACgC,YAAY,CAACC,WAAW;MAChEC,eAAe,GAAGlC,yBAAyB,CAACgC,YAAY,CAACE,eAAe;MACxEC,SAAS,GAAGnC,yBAAyB,CAACgC,YAAY,CAACG;IAAS,CAC/D,GAAG,IAAI,CAACxB,KAAK;IAEd,OACId,KAAA,CAAAoB,aAAA,YACIpB,KAAA,CAAAoB,aAAA,CAAClB,YAAY,QAAE,IAAI,CAACa,UAAU,CAAgB,EAC9Cf,KAAA,CAAAoB,aAAA,CAACnB,UAAU;MACPsC,UAAU,EAAE,IAAI,CAACV,OAAO;MACxBE,YAAY,EAAEA,YAAY;MAC1BC,SAAS,EAAEA,SAAS;MACpBC,KAAK,EAAEA,KAAK;MACZrB,MAAM,EAAE,IAAI,CAACA,MAAM;MACnB0B,SAAS,EAAEA,SAAS,CAACE,GAAG;MACxBN,WAAW,EAAEA,WAAW,CAACM,GAAG;MAC5BH,eAAe,EAAEA,eAAe,CAACG,GAAG;MACpCJ,WAAW,EAAEA,WAAW,CAACI;IAAG,EAC9B,EACFxC,KAAA,CAAAoB,aAAA,CAACnB,UAAU;MACPsC,UAAU,EAAE,IAAI,CAACf,UAAU;MAC3BO,YAAY,EAAEA,YAAY;MAC1BC,SAAS,EAAEA,SAAS;MACpBC,KAAK,EAAEA,KAAK;MACZrB,MAAM,EAAE,IAAI,CAACA,MAAM;MACnB0B,SAAS,EAAEA,SAAS,CAACG,MAAM;MAC3BP,WAAW,EAAEA,WAAW,CAACO,MAAM;MAC/BJ,eAAe,EAAEA,eAAe,CAACI,MAAM;MACvCL,WAAW,EAAEA,WAAW,CAACK;IAAM,EACjC,CACF;EAEZ;;AA7DctC,yBAAA,CAAAgC,YAAY,GAAG;EACzBJ,YAAY,EAAE,KAAK;EACnBO,SAAS,EAAE;IACPE,GAAG,EAAE,yBAAyB;IAC9BC,MAAM,EAAE;GACX;EACDP,WAAW,EAAE;IACTM,GAAG,EAAE,SAAS;IACdC,MAAM,EAAE;GACX;EACDL,WAAW,EAAE;IACTI,GAAG,EAAE,CAAC;IACNC,MAAM,EAAE;GACX;EACDJ,eAAe,EAAE;IACbG,GAAG,EAAE,OAA0B;IAC/BC,MAAM,EAAE;;CAEf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}