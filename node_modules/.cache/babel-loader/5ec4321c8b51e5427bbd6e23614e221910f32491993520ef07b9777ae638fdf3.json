{"ast":null,"code":"import { EventHandler, Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getRectLocation, minMax, getElement, ChartLocation, RectOption } from '../../common/utils/helper';\nimport { Rect, measureText } from '@syncfusion/ej2-svg-base';\nimport { Toolkit } from './zooming-toolkit';\nimport { zoomComplete, onZooming } from '../../common/model/constants';\nimport { withInBounds } from '../../common/utils/helper';\n/**\n * The `Zooming` module handles zooming functionality for charts.\n */\nvar Zoom = /** @class */function () {\n  /**\n   * Constructor for Zooming module.\n   *\n   * @private\n   */\n  function Zoom(chart) {\n    this.zoomCompleteEvtCollection = [];\n    /** @private */\n    this.startPanning = false;\n    this.chart = chart;\n    this.isPointer = Browser.isPointer;\n    this.browserName = Browser.info.name;\n    this.wheelEvent = this.browserName === 'mozilla' ? this.isPointer ? 'mousewheel' : 'DOMMouseScroll' : 'mousewheel';\n    this.cancelEvent = this.isPointer ? 'pointerleave' : 'mouseleave';\n    this.addEventListener();\n    this.isDevice = Browser.isDevice;\n    var zooming = chart.zoomSettings;\n    this.toolkit = new Toolkit(chart);\n    this.zooming = zooming;\n    this.elementId = chart.element.id;\n    this.zoomingRect = new Rect(0, 0, 0, 0);\n    this.zoomAxes = [];\n    this.zoomkitOpacity = 1;\n    this.isIOS = Browser.isIos || Browser.isIos7;\n    this.isZoomed = this.performedUI = this.zooming.enablePan || this.chart.primaryXAxis.zoomFactor < 1 && this.chart.primaryXAxis.zoomPosition > 0 || this.chart.primaryYAxis.zoomFactor < 1 && this.chart.primaryYAxis.zoomPosition > 0 || this.isAxisZoomed(this.chart.axes);\n    if (zooming.enableScrollbar) {\n      chart.scrollElement = createElement('div', {\n        id: chart.element.id + '_scrollElement'\n      });\n    }\n  }\n  /**\n   * Renders the zooming functionality for the chart.\n   *\n   * @param {PointerEvent | TouchEvent} e - The pointer or touch event.\n   * @param {Chart} chart - The chart instance.\n   * @param {boolean} isTouch - Indicates whether the event is a touch event.\n   * @returns {void}\n   * @private\n   */\n  Zoom.prototype.renderZooming = function (e, chart, isTouch) {\n    this.calculateZoomAxesRange(chart);\n    if (this.zooming.enableSelectionZooming && (!isTouch || chart.isDoubleTap && this.touchStartList.length === 1) && (!this.isPanning || chart.isDoubleTap)) {\n      this.isPanning = this.isDevice ? true : this.isPanning;\n      this.performedUI = true;\n      this.drawZoomingRectangle(chart);\n    } else if (this.isPanning && chart.isChartDrag) {\n      if (!isTouch || isTouch && this.touchStartList.length === 1) {\n        this.pinchTarget = isTouch ? e.target : null;\n        this.doPan(chart, chart.axisCollections);\n      }\n    }\n  };\n  // Zooming rectangle drawn here\n  Zoom.prototype.drawZoomingRectangle = function (chart) {\n    var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n    var startLocation = new ChartLocation(chart.previousMouseMoveX, chart.previousMouseMoveY);\n    var endLocation = new ChartLocation(chart.mouseX, chart.mouseY);\n    var rect = this.zoomingRect = getRectLocation(startLocation, endLocation, areaBounds);\n    if (rect.width > 0 && rect.height > 0) {\n      this.isZoomed = true;\n      chart.disableTrackTooltip = true;\n      chart.svgObject.setAttribute('cursor', 'crosshair');\n      if (this.zooming.mode === 'X') {\n        rect.height = areaBounds.height;\n        rect.y = areaBounds.y;\n      } else if (this.zooming.mode === 'Y') {\n        rect.width = areaBounds.width;\n        rect.x = areaBounds.x;\n      }\n      if (chart.tooltipModule) {\n        chart.tooltipModule.removeTooltip(0);\n        for (var _i = 0, _a = chart.visibleSeries; _i < _a.length; _i++) {\n          var series = _a[_i];\n          if (!isNullOrUndefined(series) && (series.marker.visible || chart.tooltip.shared)) {\n            chart.markerRender.removeHighlightedMarker(series, null, true);\n          }\n        }\n      }\n      if (chart.crosshairModule) {\n        chart.crosshairModule.removeCrosshair(0);\n      }\n      var svg = chart.svgObject;\n      if (this.chart.enableCanvas) {\n        var secondaryElement = document.getElementById(this.chart.element.id + '_Secondary_Element');\n        svg = this.chart.svgRenderer.createSvg({\n          id: this.chart.element.id + '_zoomRect_svg',\n          width: this.chart.availableSize.width,\n          height: this.chart.availableSize.height\n        });\n        svg.style.cssText = 'position: absolute; display:block; pointer-events: none';\n        secondaryElement.appendChild(svg);\n      }\n      svg.appendChild(chart.svgRenderer.drawRectangle(new RectOption(this.elementId + '_ZoomArea', chart.themeStyle.selectionRectFill, {\n        color: chart.themeStyle.selectionRectStroke,\n        width: 1\n      }, 1, rect, 0, 0, '', '3')));\n    }\n  };\n  // Panning performed here\n  Zoom.prototype.doPan = function (chart, axes, xDifference, yDifference) {\n    var _this = this;\n    if (xDifference === void 0) {\n      xDifference = 0;\n    }\n    if (yDifference === void 0) {\n      yDifference = 0;\n    }\n    if (chart.startMove && chart.crosshair.enable) {\n      return null;\n    }\n    var currentScale;\n    var offset;\n    this.isZoomed = true;\n    this.startPanning = true;\n    this.offset = !chart.delayRedraw ? chart.chartAxisLayoutPanel.seriesClipRect : this.offset;\n    chart.delayRedraw = true;\n    this.zoomCompleteEvtCollection = [];\n    chart.disableTrackTooltip = true;\n    var argsData;\n    var zoomedAxisCollection = [];\n    for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      argsData = {\n        cancel: false,\n        name: zoomComplete,\n        axis: axis,\n        previousZoomFactor: axis.zoomFactor,\n        previousZoomPosition: axis.zoomPosition,\n        currentZoomFactor: axis.zoomFactor,\n        currentZoomPosition: axis.zoomPosition,\n        previousVisibleRange: axis.visibleRange,\n        currentVisibleRange: null\n      };\n      currentScale = Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1);\n      if (axis.orientation === 'Horizontal') {\n        offset = (xDifference !== 0 ? xDifference : chart.previousMouseMoveX - chart.mouseX) / axis.rect.width / currentScale;\n        argsData.currentZoomPosition = minMax(axis.zoomPosition + offset, 0, 1 - axis.zoomFactor);\n      } else {\n        offset = (yDifference !== 0 ? yDifference : chart.previousMouseMoveY - chart.mouseY) / axis.rect.height / currentScale;\n        argsData.currentZoomPosition = minMax(axis.zoomPosition - offset, 0, 1 - axis.zoomFactor);\n      }\n      if (!argsData.cancel) {\n        axis.zoomFactor = argsData.currentZoomFactor;\n        axis.zoomPosition = argsData.currentZoomPosition;\n        this.zoomCompleteEvtCollection.push(argsData);\n      }\n      zoomedAxisCollection.push({\n        zoomFactor: axis.zoomFactor,\n        zoomPosition: axis.zoomFactor,\n        axisName: axis.name,\n        axisRange: axis.visibleRange\n      });\n    }\n    if (chart.tooltipModule) {\n      var tooltipElement = getElement(chart.element.id + '_tooltip');\n      if (tooltipElement) {\n        tooltipElement.remove();\n      }\n      for (var _b = 0, _c = chart.visibleSeries; _b < _c.length; _b++) {\n        var series = _c[_b];\n        if (!isNullOrUndefined(series) && (series.marker.visible || chart.tooltip.shared || series.type === 'Scatter' || series.type === 'Bubble')) {\n          chart.markerRender.removeHighlightedMarker(series, null, true);\n        }\n      }\n    }\n    var zoomingEventArgs = {\n      cancel: false,\n      axisCollection: zoomedAxisCollection,\n      name: onZooming\n    };\n    if (!zoomingEventArgs.cancel && this.chart.isBlazor) {\n      this.chart.trigger(onZooming, zoomingEventArgs, function () {\n        if (zoomingEventArgs.cancel) {\n          _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\n        } else {\n          _this.performDefferedZoom(chart);\n        }\n      });\n    } else {\n      this.chart.trigger(onZooming, zoomingEventArgs, function () {\n        if (zoomingEventArgs.cancel) {\n          _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\n        } else {\n          _this.performDefferedZoom(chart);\n          _this.redrawOnZooming(chart, false);\n        }\n      });\n    }\n  };\n  Zoom.prototype.performDefferedZoom = function (chart) {\n    var translateX;\n    var translateY;\n    if (this.zooming.enableDeferredZooming) {\n      translateX = chart.mouseX - chart.mouseDownX;\n      translateY = chart.mouseY - chart.mouseDownY;\n      switch (this.zooming.mode) {\n        case 'X':\n          translateY = 0;\n          break;\n        case 'Y':\n          translateX = 0;\n          break;\n      }\n      this.setTransform(translateX, translateY, null, null, chart, false);\n      this.refreshAxis(chart.chartAxisLayoutPanel, chart, chart.axisCollections);\n      if (chart.enableCanvas) {\n        this.performZoomRedraw(chart);\n      }\n    } else {\n      this.performZoomRedraw(chart);\n    }\n    chart.previousMouseMoveX = chart.mouseX;\n    chart.previousMouseMoveY = chart.mouseY;\n  };\n  /**\n   * Redraw the chart on zooming.\n   *\n   * @param {Chart} chart - The chart instance.\n   * @returns {void}\n   * @private\n   */\n  Zoom.prototype.performZoomRedraw = function (chart) {\n    var rect = this.zoomingRect;\n    chart.animateSeries = false;\n    if (this.isZoomed) {\n      if (rect.width > 0 && rect.height > 0) {\n        this.performedUI = true;\n        chart.svgObject.setAttribute('cursor', 'auto');\n        this.doZoom(chart, chart.axisCollections, chart.chartAxisLayoutPanel.seriesClipRect);\n        chart.isDoubleTap = false;\n      } else if (chart.disableTrackTooltip) {\n        chart.disableTrackTooltip = false;\n        chart.delayRedraw = false;\n        if (chart.enableCanvas) {\n          chart.createChartSvg();\n        } else {\n          var zoomArea = getElement(chart.element.id + '_ZoomArea');\n          if (zoomArea) {\n            zoomArea.remove();\n          }\n          var zoomToolBar = getElement(chart.element.id + '_Zooming_KitCollection');\n          if (zoomToolBar) {\n            zoomToolBar.remove();\n          }\n          if (chart.tooltipModule) {\n            if (getElement(chart.element.id + '_tooltip')) {\n              getElement(chart.element.id + '_tooltip').remove();\n            }\n            for (var _i = 0, _a = chart.visibleSeries; _i < _a.length; _i++) {\n              var series = _a[_i];\n              if (!isNullOrUndefined(series) && (series.marker.visible || chart.tooltip.shared || series.type === 'Scatter' || series.type === 'Bubble')) {\n                chart.markerRender.removeHighlightedMarker(series, null, true);\n              }\n            }\n          }\n        }\n        var chartDuration = chart.duration;\n        if (!(this.isPanning && (chart.isChartDrag || this.startPanning)) && !chart.enableCanvas) {\n          chart.duration = 600;\n          chart.redraw = this.zooming.enableAnimation;\n          chart.zoomRedraw = this.zooming.enableAnimation;\n        }\n        var highlightDataIndexes = [];\n        if (chart.highlightModule && (chart.legendSettings.enableHighlight || chart.highlightMode !== 'None') && chart.highlightModule.highlightDataIndexes) {\n          highlightDataIndexes = chart.highlightModule.highlightDataIndexes;\n        }\n        // chart.enableCanvas ? chart.createChartSvg() : chart.removeSvg();\n        chart.refreshAxis();\n        chart.refreshBound();\n        if (chart.highlightModule && (chart.legendSettings.enableHighlight || chart.highlightMode !== 'None') && highlightDataIndexes) {\n          chart.highlightModule.highlightDataIndexes = highlightDataIndexes;\n        }\n        if (!this.isZoomed) {\n          chart.zoomRedraw = this.zooming.enableAnimation;\n        }\n        this.startPanning = false;\n        chart.redraw = false;\n        chart.duration = chartDuration;\n        if (this.toolkit.isZoomed) {\n          chart.zoomRedraw = false;\n          this.toolkit.isZoomed = false;\n        }\n      }\n    }\n  };\n  Zoom.prototype.refreshAxis = function (layout, chart, axes) {\n    var mode = chart.zoomSettings.mode;\n    layout.measureAxis(new Rect(chart.initialClipRect.x, chart.initialClipRect.y, chart.initialClipRect.width, chart.initialClipRect.height));\n    axes.map(function (axis, index) {\n      if (axis.orientation === 'Horizontal' && mode !== 'Y') {\n        layout.drawXAxisLabels(axis, index, null, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n      }\n      if (axis.orientation === 'Vertical' && mode !== 'X') {\n        layout.drawYAxisLabels(axis, index, null, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n      }\n    });\n  };\n  // Rectangular zoom calculated here performed here\n  Zoom.prototype.doZoom = function (chart, axes, bounds) {\n    var _this = this;\n    var zoomRect = this.zoomingRect;\n    var mode = this.zooming.mode;\n    var argsData;\n    this.isPanning = chart.zoomSettings.enablePan || this.isPanning;\n    var zoomedAxisCollections = [];\n    this.zoomCompleteEvtCollection = [];\n    for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      argsData = {\n        cancel: false,\n        name: zoomComplete,\n        axis: axis,\n        previousZoomFactor: axis.zoomFactor,\n        previousZoomPosition: axis.zoomPosition,\n        currentZoomFactor: axis.zoomFactor,\n        currentZoomPosition: axis.zoomPosition,\n        previousVisibleRange: axis.visibleRange,\n        currentVisibleRange: null\n      };\n      if (axis.orientation === 'Horizontal') {\n        if (mode !== 'Y') {\n          argsData.currentZoomPosition += Math.abs((zoomRect.x - bounds.x) / bounds.width) * axis.zoomFactor;\n          argsData.currentZoomFactor *= zoomRect.width / bounds.width;\n        }\n      } else {\n        if (mode !== 'X') {\n          argsData.currentZoomPosition += (1 - Math.abs((zoomRect.height + (zoomRect.y - bounds.y)) / bounds.height)) * axis.zoomFactor;\n          argsData.currentZoomFactor *= zoomRect.height / bounds.height;\n        }\n      }\n      if (parseFloat(argsData.currentZoomFactor.toFixed(3)) <= 0.001) {\n        argsData.currentZoomFactor = argsData.previousZoomFactor;\n        argsData.currentZoomPosition = argsData.previousZoomPosition;\n      }\n      if (!argsData.cancel) {\n        axis.zoomFactor = argsData.currentZoomFactor;\n        axis.zoomPosition = argsData.currentZoomPosition;\n        chart.zoomRedraw = this.zooming.enableAnimation;\n        this.zoomCompleteEvtCollection.push(argsData);\n      }\n      zoomedAxisCollections.push({\n        zoomFactor: axis.zoomFactor,\n        zoomPosition: axis.zoomFactor,\n        axisName: axis.name,\n        axisRange: axis.visibleRange\n      });\n    }\n    var onZoomingEventArg = {\n      cancel: false,\n      axisCollection: zoomedAxisCollections,\n      name: onZooming\n    };\n    if (!onZoomingEventArg.cancel && this.chart.isBlazor) {\n      this.chart.trigger(onZooming, onZoomingEventArg, function () {\n        if (onZoomingEventArg.cancel) {\n          _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\n        } else {\n          _this.zoomingRect = new Rect(0, 0, 0, 0);\n          _this.performZoomRedraw(chart);\n        }\n      });\n    } else {\n      this.chart.trigger(onZooming, onZoomingEventArg, function () {\n        if (onZoomingEventArg.cancel) {\n          _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\n        } else {\n          _this.zoomingRect = new Rect(0, 0, 0, 0);\n          _this.redrawOnZooming(chart);\n        }\n      });\n    }\n  };\n  /**\n   * Redraws the chart on zooming.\n   *\n   * @param {Chart} chart - The chart instance.\n   * @param {boolean} [isRedraw=true] - Indicates whether to redraw the chart.\n   * @param {boolean} [isMouseUp=false] - Indicates whether the mouse button is released.\n   * @returns {void}\n   */\n  Zoom.prototype.redrawOnZooming = function (chart, isRedraw, isMouseUp) {\n    if (isRedraw === void 0) {\n      isRedraw = true;\n    }\n    if (isMouseUp === void 0) {\n      isMouseUp = false;\n    }\n    var zoomCompleteCollection = isMouseUp ? this.toolkit.zoomCompleteEvtCollection : this.zoomCompleteEvtCollection;\n    if (isRedraw) {\n      this.performZoomRedraw(chart);\n    }\n    var argsData;\n    for (var i = 0; i < zoomCompleteCollection.length; i++) {\n      if (!zoomCompleteCollection[i].cancel) {\n        argsData = {\n          cancel: false,\n          name: zoomComplete,\n          axis: chart.axisCollections[i],\n          previousZoomFactor: zoomCompleteCollection[i].previousZoomFactor,\n          previousZoomPosition: zoomCompleteCollection[i].previousZoomPosition,\n          currentZoomFactor: chart.axisCollections[i].zoomFactor,\n          currentZoomPosition: chart.axisCollections[i].zoomPosition,\n          currentVisibleRange: chart.axisCollections[i].visibleRange,\n          previousVisibleRange: zoomCompleteCollection[i].previousVisibleRange\n        };\n        chart.trigger(zoomComplete, argsData);\n      }\n    }\n  };\n  /**\n   * Performs mouse wheel zooming on the chart.\n   *\n   * @param {WheelEvent} e - The wheel event.\n   * @param {number} mouseX - The X-coordinate of the mouse pointer.\n   * @param {number} mouseY - The Y-coordinate of the mouse pointer.\n   * @param {Chart} chart - The chart instance.\n   * @param {AxisModel[]} axes - The axes in the chart.\n   * @returns {void}\n   * @private\n   */\n  Zoom.prototype.performMouseWheelZooming = function (e, mouseX, mouseY, chart, axes) {\n    var _this = this;\n    var direction = this.browserName === 'mozilla' && !this.isPointer ? -e.detail / 3 > 0 ? 1 : -1 : e['wheelDelta'] > 0 ? 1 : -1;\n    var mode = this.zooming.mode;\n    var origin = 0.5;\n    var cumulative;\n    var zoomFactor;\n    var zoomPosition;\n    this.isZoomed = true;\n    this.calculateZoomAxesRange(chart);\n    chart.disableTrackTooltip = true;\n    this.performedUI = true;\n    this.isPanning = chart.zoomSettings.enablePan || this.isPanning;\n    this.zoomCompleteEvtCollection = [];\n    var argsData;\n    var zoomedAxisCollection = [];\n    for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      argsData = {\n        cancel: false,\n        name: zoomComplete,\n        axis: axis,\n        previousZoomFactor: axis.zoomFactor,\n        previousZoomPosition: axis.zoomPosition,\n        currentZoomFactor: axis.zoomFactor,\n        currentZoomPosition: axis.zoomPosition,\n        currentVisibleRange: null,\n        previousVisibleRange: axis.visibleRange\n      };\n      if (axis.orientation === 'Vertical' && mode !== 'X' || axis.orientation === 'Horizontal' && mode !== 'Y') {\n        cumulative = Math.max(Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1) + 0.25 * direction, 1);\n        cumulative = cumulative > 50000000000 ? 50000000000 : cumulative;\n        if (cumulative >= 1) {\n          origin = axis.orientation === 'Horizontal' ? mouseX / axis.rect.width : 1 - mouseY / axis.rect.height;\n          origin = origin > 1 ? 1 : origin < 0 ? 0 : origin;\n          zoomFactor = cumulative === 1 ? 1 : minMax((direction > 0 ? 0.9 : 1.1) / cumulative, 0, 1);\n          zoomPosition = cumulative === 1 ? 0 : axis.zoomPosition + (axis.zoomFactor - zoomFactor) * origin;\n          if (axis.zoomPosition !== zoomPosition || axis.zoomFactor !== zoomFactor) {\n            zoomFactor = zoomPosition + zoomFactor > 1 ? 1 - zoomPosition : zoomFactor;\n          }\n          if (parseFloat(argsData.currentZoomFactor.toFixed(3)) <= 0.001) {\n            argsData.currentZoomFactor = argsData.previousZoomFactor;\n            argsData.currentZoomPosition = argsData.previousZoomPosition;\n          } else {\n            argsData.currentZoomFactor = zoomFactor;\n            argsData.currentZoomPosition = zoomPosition;\n          }\n        }\n        if (argsData.currentZoomFactor === argsData.previousZoomFactor && argsData.currentZoomPosition === argsData.previousZoomPosition) {\n          chart.disableTrackTooltip = false;\n        }\n        if (!argsData.cancel) {\n          axis.zoomFactor = argsData.currentZoomFactor;\n          axis.zoomPosition = argsData.currentZoomPosition;\n          chart.zoomRedraw = this.zooming.enableAnimation;\n          this.zoomCompleteEvtCollection.push(argsData);\n        }\n      }\n      zoomedAxisCollection.push({\n        zoomFactor: axis.zoomFactor,\n        zoomPosition: axis.zoomFactor,\n        axisName: axis.name,\n        axisRange: axis.visibleRange\n      });\n    }\n    var onZoomingEventArgs = {\n      cancel: false,\n      axisCollection: zoomedAxisCollection,\n      name: onZooming\n    };\n    if (!onZoomingEventArgs.cancel && this.chart.isBlazor) {\n      this.chart.trigger(onZooming, onZoomingEventArgs, function () {\n        if (onZoomingEventArgs.cancel) {\n          _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\n        } else {\n          _this.performZoomRedraw(chart);\n        }\n      });\n    } else {\n      this.chart.trigger(onZooming, onZoomingEventArgs, function () {\n        if (onZoomingEventArgs.cancel) {\n          _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\n        } else {\n          _this.redrawOnZooming(chart);\n        }\n      });\n    }\n  };\n  /**\n   * Performs pinch zooming on the chart.\n   *\n   * @param {TouchEvent} e - The touch event.\n   * @param {Chart} chart - The chart instance.\n   * @returns {boolean} - Indicates whether pinch zooming is performed.\n   * @private\n   */\n  Zoom.prototype.performPinchZooming = function (e, chart) {\n    if (this.zoomingRect.width > 0 && this.zoomingRect.height > 0 || chart.startMove && chart.crosshair.enable) {\n      return false;\n    }\n    this.calculateZoomAxesRange(chart);\n    this.isZoomed = true;\n    this.isPanning = true;\n    this.performedUI = true;\n    this.offset = !chart.delayRedraw ? chart.chartAxisLayoutPanel.seriesClipRect : this.offset;\n    chart.delayRedraw = true;\n    chart.disableTrackTooltip = true;\n    var elementOffset = chart.element.getBoundingClientRect();\n    var touchDown = this.touchStartList;\n    var touchMove = this.touchMoveList;\n    var touch0StartX = touchDown[0].pageX - elementOffset.left;\n    var touch0StartY = touchDown[0].pageY - elementOffset.top;\n    var touch0EndX = touchMove[0].pageX - elementOffset.left;\n    var touch0EndY = touchMove[0].pageY - elementOffset.top;\n    var touch1StartX = touchDown[1].pageX - elementOffset.left;\n    var touch1StartY = touchDown[1].pageY - elementOffset.top;\n    var touch1EndX = touchMove[1].pageX - elementOffset.left;\n    var touch1EndY = touchMove[1].pageY - elementOffset.top;\n    var scaleX = Math.abs(touch0EndX - touch1EndX) / Math.abs(touch0StartX - touch1StartX);\n    var scaleY = Math.abs(touch0EndY - touch1EndY) / Math.abs(touch0StartY - touch1StartY);\n    var clipX = (this.offset.x - touch0EndX) / scaleX + touch0StartX;\n    var clipY = (this.offset.y - touch0EndY) / scaleY + touch0StartY;\n    var pinchRect = new Rect(clipX, clipY, this.offset.width / scaleX, this.offset.height / scaleY);\n    var translateXValue = touch0EndX - scaleX * touch0StartX;\n    var translateYValue = touch0EndY - scaleY * touch0StartY;\n    if (!isNaN(scaleX - scaleX) && !isNaN(scaleY - scaleY)) {\n      switch (this.zooming.mode) {\n        case 'XY':\n          this.setTransform(translateXValue, translateYValue, scaleX, scaleY, chart, true);\n          break;\n        case 'X':\n          this.setTransform(translateXValue, 0, scaleX, 1, chart, true);\n          break;\n        case 'Y':\n          this.setTransform(0, translateYValue, 1, scaleY, chart, true);\n          break;\n      }\n    }\n    if (!this.calculatePinchZoomFactor(chart, pinchRect)) {\n      this.refreshAxis(chart.chartAxisLayoutPanel, chart, chart.axisCollections);\n      this.redrawOnZooming(chart, false);\n    }\n    return true;\n  };\n  Zoom.prototype.calculatePinchZoomFactor = function (chart, pinchRect) {\n    var mode = this.zooming.mode;\n    var selectionMin;\n    var selectionMax;\n    var rangeMin;\n    var rangeMax;\n    var value;\n    var axisTrans;\n    var argsData;\n    var currentZF;\n    var currentZP;\n    var zoomedAxisCollection = [];\n    this.zoomCompleteEvtCollection = [];\n    for (var index = 0; index < chart.axisCollections.length; index++) {\n      var axis = chart.axisCollections[index];\n      if (axis.orientation === 'Horizontal' && mode !== 'Y' || axis.orientation === 'Vertical' && mode !== 'X') {\n        currentZF = axis.zoomFactor;\n        currentZP = axis.zoomPosition;\n        argsData = {\n          cancel: false,\n          name: zoomComplete,\n          axis: axis,\n          previousZoomFactor: axis.zoomFactor,\n          previousZoomPosition: axis.zoomPosition,\n          currentZoomFactor: currentZF,\n          currentZoomPosition: currentZP,\n          previousVisibleRange: axis.visibleRange,\n          currentVisibleRange: null\n        };\n        if (axis.orientation === 'Horizontal') {\n          value = pinchRect.x - this.offset.x;\n          axisTrans = axis.rect.width / this.zoomAxes[index].delta;\n          rangeMin = value / axisTrans + this.zoomAxes[index].min;\n          value = pinchRect.x + pinchRect.width - this.offset.x;\n          rangeMax = value / axisTrans + this.zoomAxes[index].min;\n        } else {\n          value = pinchRect.y - this.offset.y;\n          axisTrans = axis.rect.height / this.zoomAxes[index].delta;\n          rangeMin = (value * -1 + axis.rect.height) / axisTrans + this.zoomAxes[index].min;\n          value = pinchRect.y + pinchRect.height - this.offset.y;\n          rangeMax = (value * -1 + axis.rect.height) / axisTrans + this.zoomAxes[index].min;\n        }\n        selectionMin = Math.min(rangeMin, rangeMax);\n        selectionMax = Math.max(rangeMin, rangeMax);\n        currentZP = (selectionMin - this.zoomAxes[index].actualMin) / this.zoomAxes[index].actualDelta;\n        currentZF = (selectionMax - selectionMin) / this.zoomAxes[index].actualDelta;\n        argsData.currentZoomPosition = currentZP < 0 ? 0 : currentZP;\n        argsData.currentZoomFactor = currentZF > 1 ? 1 : currentZF < 0.03 ? 0.03 : currentZF;\n        if (!argsData.cancel) {\n          axis.zoomFactor = argsData.currentZoomFactor;\n          axis.zoomPosition = argsData.currentZoomPosition;\n          chart.zoomRedraw = this.zooming.enableAnimation;\n          this.zoomCompleteEvtCollection.push(argsData);\n        }\n        zoomedAxisCollection.push({\n          zoomFactor: axis.zoomFactor,\n          zoomPosition: axis.zoomFactor,\n          axisName: axis.name,\n          axisRange: axis.visibleRange\n        });\n      }\n    }\n    var onZoomingEventArgs = {\n      cancel: false,\n      axisCollection: zoomedAxisCollection,\n      name: onZooming\n    };\n    if (!onZoomingEventArgs.cancel) {\n      this.chart.trigger(onZooming, onZoomingEventArgs);\n      if (onZoomingEventArgs.cancel) {\n        this.zoomCancel(chart.axisCollections, this.zoomCompleteEvtCollection);\n        return true;\n      }\n    }\n    return false;\n  };\n  // Series transformation style applied here.\n  Zoom.prototype.setTransform = function (transX, transY, scaleX, scaleY, chart, isPinch) {\n    if (!chart.enableCanvas) {\n      chart.seriesElements.setAttribute('clip-path', 'url(#' + this.elementId + '_ChartAreaClipRect_)');\n    }\n    if (chart.indicatorElements) {\n      chart.indicatorElements.setAttribute('clip-path', 'url(#' + this.elementId + '_ChartAreaClipRect_)');\n    }\n    var translate;\n    var xAxisLoc;\n    var yAxisLoc;\n    var element;\n    if (transX !== null && transY !== null) {\n      for (var _i = 0, _a = chart.visibleSeries; _i < _a.length; _i++) {\n        var value = _a[_i];\n        xAxisLoc = chart.requireInvertedAxis ? value.yAxis.rect.x : value.xAxis.rect.x;\n        yAxisLoc = chart.requireInvertedAxis ? value.xAxis.rect.y : value.yAxis.rect.y;\n        translate = 'translate(' + (transX + (isPinch ? scaleX * xAxisLoc : xAxisLoc)) + ',' + (transY + (isPinch ? scaleY * yAxisLoc : yAxisLoc)) + ')';\n        translate = scaleX || scaleY ? translate + ' scale(' + scaleX + ' ' + scaleY + ')' : translate;\n        if (value.visible) {\n          if (value.category === 'Indicator') {\n            value.seriesElement.parentNode.setAttribute('transform', translate);\n          } else {\n            if (!chart.enableCanvas) {\n              value.seriesElement.setAttribute('transform', translate);\n            }\n          }\n          element = getElement(chart.element.id + '_Series_' + value.index + '_DataLabelCollections');\n          if (value.errorBarElement) {\n            value.errorBarElement.setAttribute('transform', translate);\n          }\n          if (value.symbolElement) {\n            value.symbolElement.setAttribute('transform', translate);\n          }\n          if (value.textElement) {\n            value.textElement.setAttribute('visibility', 'hidden');\n            value.shapeElement.setAttribute('visibility', 'hidden');\n          }\n          if (element) {\n            element.style.visibility = 'hidden';\n          }\n        }\n      }\n    }\n  };\n  Zoom.prototype.calculateZoomAxesRange = function (chart) {\n    var range;\n    var axisRange;\n    for (var index = 0; index < chart.axisCollections.length; index++) {\n      var axis = chart.axisCollections[index];\n      axisRange = axis.visibleRange;\n      if (this.zoomAxes[index]) {\n        if (!chart.delayRedraw) {\n          this.zoomAxes[index].min = axisRange.min;\n          this.zoomAxes[index].delta = axisRange.delta;\n        }\n      } else {\n        range = {\n          actualMin: axis.actualRange.min,\n          actualDelta: axis.actualRange.delta,\n          min: axisRange.min,\n          delta: axisRange.delta\n        };\n        this.zoomAxes[index] = range;\n      }\n    }\n  };\n  // Zooming Toolkit created here\n  Zoom.prototype.showZoomingToolkit = function (chart) {\n    var toolboxItems = this.zooming.toolbarItems;\n    var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n    var spacing = 10;\n    var render = chart.svgRenderer;\n    var length = this.isDevice ? toolboxItems.length === 0 ? 0 : 1 : toolboxItems.length;\n    var iconSize = this.isDevice ? measureText('Reset Zoom', {\n      size: '12px'\n    }, {\n      size: '12px',\n      fontStyle: 'Normal',\n      fontWeight: '400',\n      fontFamily: 'Segoe UI'\n    }).width : 16;\n    var height = this.isDevice ? measureText('Reset Zoom', {\n      size: '12px'\n    }, {\n      size: '12px',\n      fontStyle: 'Normal',\n      fontWeight: '400',\n      fontFamily: 'Segoe UI'\n    }).height : chart.theme.indexOf('Fluent2') > -1 || chart.theme.indexOf('Bootstrap5') > -1 ? 18 : 22;\n    var width = length * iconSize + (length + 1) * spacing + (length - 1) * spacing;\n    var toolbarPosition = this.zooming.toolbarPosition;\n    var transX;\n    var transY;\n    switch (toolbarPosition.horizontalAlignment) {\n      case 'Far':\n        transX = areaBounds.x + areaBounds.width - width - spacing;\n        break;\n      case 'Near':\n        transX = areaBounds.x + spacing;\n        break;\n      case 'Center':\n        transX = areaBounds.width / 2 - width / 2 + areaBounds.x;\n        break;\n    }\n    transX += toolbarPosition.x;\n    switch (toolbarPosition.verticalAlignment) {\n      case 'Bottom':\n        transY = areaBounds.height - areaBounds.y + height + spacing;\n        break;\n      case 'Top':\n        transY = areaBounds.y + spacing;\n        break;\n      case 'Middle':\n        transY = areaBounds.height / 2 - height / 2 + areaBounds.y;\n        break;\n    }\n    var toolkitShadowPadding = 2;\n    transY += toolbarPosition.y;\n    transX = this.toolkit.dragHorizontalRatio != null ? Math.min(Math.max(this.chart.border.width + toolkitShadowPadding, this.toolkit.dragHorizontalRatio * this.chart.availableSize.width), this.chart.availableSize.width - width - this.chart.border.width - toolkitShadowPadding) : transX;\n    transY = this.toolkit.dragVerticalRatio != null ? Math.min(Math.max(this.chart.border.width + toolkitShadowPadding, this.toolkit.dragVerticalRatio * this.chart.availableSize.height), this.chart.availableSize.height - height - this.chart.border.width - toolkitShadowPadding) : transY;\n    var xPosition = spacing;\n    var toolkit = this.toolkit;\n    var element;\n    var shadowElement = '<filter id=\"chart_shadow\" height=\"130%\"><feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"5\"/>';\n    shadowElement += '<feOffset dx=\"-3\" dy=\"4\" result=\"offsetblur\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"1\"/>';\n    shadowElement += '</feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge></filter>';\n    if (length === 0 || getElement(this.elementId + '_Zooming_KitCollection')) {\n      return false;\n    }\n    var defElement = render.createDefs();\n    toolboxItems = this.isDevice ? ['Reset'] : toolboxItems;\n    defElement.innerHTML = shadowElement;\n    this.toolkitElements = render.createGroup({\n      id: this.elementId + '_Zooming_KitCollection',\n      transform: 'translate(' + transX + ',' + transY + ')'\n    });\n    this.toolkitElements.appendChild(defElement);\n    var zoomFillColor = this.chart.theme === 'Tailwind3' ? '#F9FAFB' : this.chart.theme === 'Fluent' ? '#F3F2F1' : this.chart.theme === 'Material3' ? '#FFFFFF' : this.chart.theme === 'Material3Dark' ? '#1C1B1F' : this.chart.theme === 'Fluent2' ? '#F5F5F5' : this.chart.theme === 'Fluent2Dark' ? '#141414' : chart.theme === 'Fluent2HighContrast' ? '#000000' : chart.theme === 'Bootstrap5' ? '#E9ECEF' : chart.theme === 'Bootstrap5Dark' ? '#343A40' : chart.theme === 'Tailwind3Dark' && !this.isDevice ? '#1D2432' : this.chart.theme === 'Tailwind' ? '#F3F4F6' : '#fafafa';\n    this.toolkitElements.appendChild(render.drawRectangle(new RectOption(this.elementId + '_Zooming_Rect', zoomFillColor, {\n      color: 'transparent',\n      width: 1\n    }, 1, new Rect(0, 0, width, height + spacing * 2), this.chart.theme.indexOf('Bootstrap5') > -1 ? 1 : 4, this.chart.theme.indexOf('Bootstrap5') > -1 ? 1 : 4)));\n    var outerElement = render.drawRectangle(new RectOption(this.elementId + '_Zooming_Rect', zoomFillColor, {\n      color: 'transparent',\n      width: 1\n    }, 0.1, new Rect(0, 0, width, height + spacing * 2), 4, 4));\n    if (this.chart.theme === 'Tailwind' || this.chart.theme === 'TailwindDark') {\n      outerElement.setAttribute('box-shadow', '0px 1px 2px rgba(0, 0, 0, 0.06), 0px 1px 3px rgba(0, 0, 0, 0.1)');\n    } else if (this.chart.theme === 'Tailwind3Dark') {\n      outerElement.setAttribute('box-shadow', '0px 1px 2px rgba(0, 0, 0, 0.06), 0px 1px 3px rgba(0, 0, 0, 0.1)');\n    } else if (this.chart.theme === 'Material3' || this.chart.theme === 'Material3Dark' || this.chart.theme === 'Fluent2' || this.chart.theme === 'Fluent2Dark' || this.chart.theme.indexOf('Bootstrap5') > -1) {\n      outerElement.setAttribute('filter', 'drop-shadow(0px 1px 3px rgba(0, 0, 0, 0.15)) drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3))');\n      outerElement.setAttribute('fill', this.chart.theme === 'Material3' ? '#FFFFFF' : this.chart.theme === 'Fluent2' ? '#F5F5F5' : this.chart.theme === 'Bootstrap5' ? '#E9ECEF' : this.chart.theme === 'Bootstrap5Dark' ? '#343A40' : '#1C1B1F');\n      outerElement.setAttribute('rx', this.chart.theme.indexOf('Bootstrap5') > -1 ? '1px' : '4px');\n      outerElement.setAttribute('ry', this.chart.theme.indexOf('Bootstrap5') > -1 ? '1px' : '4px');\n      outerElement.setAttribute('opacity', '1');\n    } else {\n      if (chart.theme === 'Tailwind3') {\n        outerElement.setAttribute('fill', '#F9FAFB');\n      }\n      outerElement.setAttribute('filter', 'url(#chart_shadow)');\n    }\n    this.toolkitElements.appendChild(outerElement);\n    var currentItem;\n    var panIcon = false;\n    for (var i = 1; i <= length; i++) {\n      currentItem = toolboxItems[i - 1];\n      element = render.createGroup({\n        transform: 'translate(' + xPosition + ',' + (this.isDevice ? spacing : chart.theme.indexOf('Fluent2') > -1 || chart.theme.indexOf('Bootstrap5') > -1 ? spacing + 1 : spacing + 3) + ')'\n      });\n      // for desktop toolkit hight is 32 and top padding is 8 icon size 16\n      switch (currentItem) {\n        case 'Pan':\n          toolkit.createPanButton(element, this.toolkitElements);\n          panIcon = true;\n          break;\n        case 'Zoom':\n          toolkit.createZoomButton(element, this.toolkitElements);\n          break;\n        case 'ZoomIn':\n          toolkit.createZoomInButton(element, this.toolkitElements, chart);\n          break;\n        case 'ZoomOut':\n          toolkit.createZoomOutButton(element, this.toolkitElements, chart);\n          break;\n        case 'Reset':\n          toolkit.createResetButton(element, this.toolkitElements, chart, this.isDevice);\n          break;\n      }\n      xPosition += iconSize + spacing * 2;\n    }\n    this.toolkitElements.setAttribute('opacity', this.isDevice ? '1' : '' + this.zoomkitOpacity);\n    this.toolkitElements.setAttribute('cursor', 'auto');\n    if (chart.enableCanvas) {\n      var zoomDiv = document.createElement('div');\n      zoomDiv.id = chart.element.id + '_zoom';\n      zoomDiv.style.cssText = 'position:absolute; z-index:1';\n      var zoomheight = chart.availableSize.height / 2;\n      var svg = chart.svgRenderer.createSvg({\n        id: chart.element.id + '_zoomkit_svg',\n        width: chart.availableSize.width,\n        height: zoomheight\n      });\n      svg.style.position = 'absolute';\n      svg.appendChild(this.toolkitElements);\n      zoomDiv.appendChild(svg);\n      document.getElementById(this.elementId + '_Secondary_Element').appendChild(zoomDiv);\n    } else {\n      chart.svgObject.appendChild(this.toolkitElements);\n    }\n    if (!this.isDevice) {\n      EventHandler.add(this.toolkitElements, 'mousemove touchstart', this.zoomToolkitMove, this);\n      EventHandler.add(this.toolkitElements, 'mouseleave touchend', this.zoomToolkitLeave, this);\n      if (this.isPanning && panIcon) {\n        toolkit.pan();\n      }\n    }\n    return true;\n  };\n  /**\n   * Applies the zoom toolkit on the chart.\n   *\n   * @param {Chart} chart - The chart instance.\n   * @param {AxisModel[]} axes - The axis models.\n   * @returns {void}\n   * @private\n   */\n  Zoom.prototype.applyZoomToolkit = function (chart, axes) {\n    var showToolkit = this.isAxisZoomed(axes);\n    if (showToolkit) {\n      this.showZoomingToolkit(chart);\n      this.isZoomed = true;\n    } else if (chart.zoomSettings.showToolbar) {\n      this.isZoomed = showToolkit;\n      this.showZoomingToolkit(chart);\n    } else {\n      this.toolkit.removeTooltip();\n      this.isPanning = false;\n      this.isZoomed = false;\n      chart.isZoomed = false;\n      chart.svgObject.setAttribute('cursor', 'auto');\n    }\n  };\n  /**\n   * Cancels the zoom action.\n   *\n   * @param {AxisModel[]} axes - The axis models.\n   * @param {IZoomCompleteEventArgs[]} zoomCompleteEventCollection - The collection of zoom complete events.\n   * @returns {void}\n   * @private\n   */\n  Zoom.prototype.zoomCancel = function (axes, zoomCompleteEventCollection) {\n    for (var _i = 0, _a = zoomCompleteEventCollection; _i < _a.length; _i++) {\n      var zoomCompleteEvent = _a[_i];\n      for (var _b = 0, _c = axes; _b < _c.length; _b++) {\n        var axis = _c[_b];\n        if (axis.name === zoomCompleteEvent.axis.name) {\n          axis.zoomFactor = zoomCompleteEvent.previousZoomFactor;\n          axis.zoomPosition = zoomCompleteEvent.previousZoomPosition;\n          axis.visibleRange = zoomCompleteEvent.previousVisibleRange;\n          break;\n        }\n      }\n    }\n  };\n  /**\n   * Checks if any of the axes is zoomed.\n   *\n   * @param {AxisModel[]} axes - The axis models.\n   * @returns {boolean} - True if any axis is zoomed; otherwise, false.\n   * @private\n   */\n  Zoom.prototype.isAxisZoomed = function (axes) {\n    var showToolkit = false;\n    for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      showToolkit = showToolkit || axis.zoomFactor !== 1 || axis.zoomPosition !== 0;\n    }\n    return showToolkit;\n  };\n  Zoom.prototype.zoomToolkitMove = function () {\n    var element = this.toolkitElements;\n    this.zoomkitOpacity = 1;\n    element.setAttribute('opacity', '' + this.zoomkitOpacity);\n    return false;\n  };\n  Zoom.prototype.zoomToolkitLeave = function () {\n    var element = this.toolkitElements;\n    this.zoomkitOpacity = 1;\n    element.setAttribute('opacity', '' + this.zoomkitOpacity);\n    return false;\n  };\n  /**\n   * Adds event listeners for the chart.\n   *\n   * @returns {void}\n   * @private\n   */\n  Zoom.prototype.addEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n    this.chart.on('mousewheel', this.chartMouseWheel, this);\n    this.chart.on(Browser.touchMoveEvent, this.mouseMoveHandler, this);\n    this.chart.on(Browser.touchStartEvent, this.mouseDownHandler, this);\n    this.chart.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    this.chart.on(this.cancelEvent, this.mouseCancelHandler, this);\n  };\n  /**\n   * Remove event listeners for the chart.\n   *\n   * @returns {void}\n   * @private\n   */\n  Zoom.prototype.removeEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n    this.chart.off('mousewheel', this.chartMouseWheel);\n    this.chart.off(Browser.touchMoveEvent, this.mouseMoveHandler);\n    this.chart.off(Browser.touchStartEvent, this.mouseDownHandler);\n    this.chart.off(Browser.touchEndEvent, this.mouseUpHandler);\n    this.chart.off(this.cancelEvent, this.mouseCancelHandler);\n  };\n  /**\n   * Handles the mouse wheel event on the chart.\n   *\n   * @param {WheelEvent} e - The wheel event.\n   * @returns {boolean} - Returns false.\n   * @private\n   */\n  Zoom.prototype.chartMouseWheel = function (e) {\n    var chart = this.chart;\n    var offset = chart.element.getBoundingClientRect();\n    var svgRect = getElement(chart.svgId).getBoundingClientRect();\n    var mouseX = e.clientX - offset.left - Math.max(svgRect.left - offset.left, 0);\n    var mouseY = e.clientY - offset.top - Math.max(svgRect.top - offset.top, 0);\n    if (this.zooming.enableMouseWheelZooming && withInBounds(mouseX, mouseY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n      e.preventDefault();\n      this.performMouseWheelZooming(e, mouseX, mouseY, chart, chart.axisCollections);\n    }\n    return false;\n  };\n  /**\n   * Handles the mouse move event on the chart.\n   *\n   * @param {PointerEvent | TouchEvent} e - The mouse move event or touch event.\n   * @returns {void}\n   * @private\n   */\n  Zoom.prototype.mouseMoveHandler = function (e) {\n    //Zooming for chart\n    var chart = this.chart;\n    var touches = null;\n    if (e.type === 'touchmove') {\n      if (e.preventDefault && this.isIOS && (this.isPanning || chart.isDoubleTap || this.zooming.enablePinchZooming && this.touchStartList.length > 1)) {\n        e.preventDefault();\n      }\n      touches = e.touches;\n    }\n    if (chart.isChartDrag) {\n      if (chart.isTouch) {\n        this.touchMoveList = this.addTouchPointer(this.touchMoveList, e, touches);\n        if (this.zooming.enablePinchZooming && this.touchMoveList.length > 1 && this.touchStartList.length > 1) {\n          this.performPinchZooming(e, chart);\n        }\n      }\n      this.renderZooming(e, chart, chart.isTouch);\n    }\n  };\n  /**\n   * Handles the mouse down event on the chart.\n   *\n   * @param {PointerEvent} e - The mouse down event.\n   * @returns {void}\n   * @private\n   */\n  Zoom.prototype.mouseDownHandler = function (e) {\n    //Zooming for chart\n    var chart = this.chart;\n    var touches = null;\n    var target;\n    if (e.type === 'touchstart') {\n      touches = e.touches;\n      target = e.target;\n    } else {\n      target = e.target;\n    }\n    if (target.id.indexOf(chart.element.id + '_Zooming_') === -1 && (chart.zoomSettings.enablePinchZooming || chart.zoomSettings.enableSelectionZooming || this.chart.zoomModule.isPanning) && withInBounds(chart.previousMouseMoveX, chart.previousMouseMoveY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n      chart.isChartDrag = true;\n    }\n    if (chart.isTouch) {\n      this.touchStartList = this.addTouchPointer(this.touchStartList, e, touches);\n    }\n  };\n  /**\n   * Handles the mouse up event on the chart.\n   *\n   * @param {PointerEvent} e - The mouse up event.\n   * @returns {void}\n   * @private\n   */\n  Zoom.prototype.mouseUpHandler = function (e) {\n    var chart = this.chart;\n    var performZoomRedraw = e.target.id.indexOf(chart.element.id + '_ZoomOut_') === -1 || e.target.id.indexOf(chart.element.id + '_ZoomIn_') === -1;\n    if (chart.isChartDrag || performZoomRedraw) {\n      this.redrawOnZooming(chart, true, true);\n    }\n    if (chart.isTouch) {\n      if (chart.isDoubleTap && withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect) && this.touchStartList.length === 1 && this.isZoomed) {\n        this.toolkit.reset(e);\n      }\n      this.touchStartList = [];\n      chart.isDoubleTap = false;\n    }\n  };\n  /**\n   * Handles the mouse cancel event on the chart.\n   *\n   * @returns {void}\n   * @private\n   */\n  Zoom.prototype.mouseCancelHandler = function () {\n    if (this.isZoomed) {\n      this.performZoomRedraw(this.chart);\n    }\n    this.pinchTarget = null;\n    this.touchStartList = [];\n    this.touchMoveList = [];\n  };\n  /**\n   * Adds touch pointer to the touch list.\n   *\n   * @param {ITouches[]} touchList - The touch list.\n   * @param {PointerEvent} e - The pointer event.\n   * @param {TouchList} touches - The touch list.\n   * @returns {ITouches[]} - The updated touch list.\n   * @private\n   */\n  Zoom.prototype.addTouchPointer = function (touchList, e, touches) {\n    if (touches) {\n      touchList = [];\n      for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({\n          pageX: touches[i].clientX,\n          pageY: touches[i].clientY,\n          pointerId: null\n        });\n      }\n    } else {\n      touchList = touchList ? touchList : [];\n      if (touchList.length === 0) {\n        touchList.push({\n          pageX: e.clientX,\n          pageY: e.clientY,\n          pointerId: e.pointerId\n        });\n      } else {\n        for (var i = 0, length_2 = touchList.length; i < length_2; i++) {\n          if (touchList[i].pointerId === e.pointerId) {\n            touchList[i] = {\n              pageX: e.clientX,\n              pageY: e.clientY,\n              pointerId: e.pointerId\n            };\n          } else {\n            touchList.push({\n              pageX: e.clientX,\n              pageY: e.clientY,\n              pointerId: e.pointerId\n            });\n          }\n        }\n      }\n    }\n    return touchList;\n  };\n  /**\n   * Get module name.\n   *\n   * @returns {string} - Returns the module name.\n   */\n  Zoom.prototype.getModuleName = function () {\n    // Returns te module name\n    return 'Zoom';\n  };\n  /**\n   * To destroy the zooming.\n   *\n   * @returns {void}\n   * @private\n   */\n  Zoom.prototype.destroy = function () {\n    // Destroy method performed here.\n    this.removeEventListener();\n  };\n  return Zoom;\n}();\nexport { Zoom };","map":{"version":3,"names":["EventHandler","Browser","createElement","isNullOrUndefined","getRectLocation","minMax","getElement","ChartLocation","RectOption","Rect","measureText","Toolkit","zoomComplete","onZooming","withInBounds","Zoom","chart","zoomCompleteEvtCollection","startPanning","isPointer","browserName","info","name","wheelEvent","cancelEvent","addEventListener","isDevice","zooming","zoomSettings","toolkit","elementId","element","id","zoomingRect","zoomAxes","zoomkitOpacity","isIOS","isIos","isIos7","isZoomed","performedUI","enablePan","primaryXAxis","zoomFactor","zoomPosition","primaryYAxis","isAxisZoomed","axes","enableScrollbar","scrollElement","prototype","renderZooming","e","isTouch","calculateZoomAxesRange","enableSelectionZooming","isDoubleTap","touchStartList","length","isPanning","drawZoomingRectangle","isChartDrag","pinchTarget","target","doPan","axisCollections","areaBounds","chartAxisLayoutPanel","seriesClipRect","startLocation","previousMouseMoveX","previousMouseMoveY","endLocation","mouseX","mouseY","rect","width","height","disableTrackTooltip","svgObject","setAttribute","mode","y","x","tooltipModule","removeTooltip","_i","_a","visibleSeries","series","marker","visible","tooltip","shared","markerRender","removeHighlightedMarker","crosshairModule","removeCrosshair","svg","enableCanvas","secondaryElement","document","getElementById","svgRenderer","createSvg","availableSize","style","cssText","appendChild","drawRectangle","themeStyle","selectionRectFill","color","selectionRectStroke","xDifference","yDifference","_this","startMove","crosshair","enable","currentScale","offset","delayRedraw","argsData","zoomedAxisCollection","axis","cancel","previousZoomFactor","previousZoomPosition","currentZoomFactor","currentZoomPosition","previousVisibleRange","visibleRange","currentVisibleRange","Math","max","orientation","push","axisName","axisRange","tooltipElement","remove","_b","_c","type","zoomingEventArgs","axisCollection","isBlazor","trigger","zoomCancel","performDefferedZoom","redrawOnZooming","translateX","translateY","enableDeferredZooming","mouseDownX","mouseDownY","setTransform","refreshAxis","performZoomRedraw","animateSeries","doZoom","createChartSvg","zoomArea","zoomToolBar","chartDuration","duration","redraw","enableAnimation","zoomRedraw","highlightDataIndexes","highlightModule","legendSettings","enableHighlight","highlightMode","refreshBound","layout","measureAxis","initialClipRect","map","index","drawXAxisLabels","placeNextToAxisLine","updatedRect","drawYAxisLabels","bounds","zoomRect","zoomedAxisCollections","abs","parseFloat","toFixed","onZoomingEventArg","isRedraw","isMouseUp","zoomCompleteCollection","i","performMouseWheelZooming","direction","detail","origin","cumulative","onZoomingEventArgs","performPinchZooming","elementOffset","getBoundingClientRect","touchDown","touchMove","touchMoveList","touch0StartX","pageX","left","touch0StartY","pageY","top","touch0EndX","touch0EndY","touch1StartX","touch1StartY","touch1EndX","touch1EndY","scaleX","scaleY","clipX","clipY","pinchRect","translateXValue","translateYValue","isNaN","calculatePinchZoomFactor","selectionMin","selectionMax","rangeMin","rangeMax","value","axisTrans","currentZF","currentZP","delta","min","actualMin","actualDelta","transX","transY","isPinch","seriesElements","indicatorElements","translate","xAxisLoc","yAxisLoc","requireInvertedAxis","yAxis","xAxis","category","seriesElement","parentNode","errorBarElement","symbolElement","textElement","shapeElement","visibility","range","actualRange","showZoomingToolkit","toolboxItems","toolbarItems","spacing","render","iconSize","size","fontStyle","fontWeight","fontFamily","theme","indexOf","toolbarPosition","horizontalAlignment","verticalAlignment","toolkitShadowPadding","dragHorizontalRatio","border","dragVerticalRatio","xPosition","shadowElement","defElement","createDefs","innerHTML","toolkitElements","createGroup","transform","zoomFillColor","outerElement","currentItem","panIcon","createPanButton","createZoomButton","createZoomInButton","createZoomOutButton","createResetButton","zoomDiv","zoomheight","position","add","zoomToolkitMove","zoomToolkitLeave","pan","applyZoomToolkit","showToolkit","showToolbar","zoomCompleteEventCollection","zoomCompleteEvent","isDestroyed","on","chartMouseWheel","touchMoveEvent","mouseMoveHandler","touchStartEvent","mouseDownHandler","touchEndEvent","mouseUpHandler","mouseCancelHandler","removeEventListener","off","svgRect","svgId","clientX","clientY","enableMouseWheelZooming","preventDefault","touches","enablePinchZooming","addTouchPointer","zoomModule","reset","touchList","length_1","pointerId","length_2","getModuleName","destroy"],"sources":["C:/Users/gabby/trax-x/node_modules/@syncfusion/ej2-charts/src/chart/user-interaction/zooming.js"],"sourcesContent":["import { EventHandler, Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getRectLocation, minMax, getElement, ChartLocation, RectOption } from '../../common/utils/helper';\nimport { Rect, measureText } from '@syncfusion/ej2-svg-base';\nimport { Toolkit } from './zooming-toolkit';\nimport { zoomComplete, onZooming } from '../../common/model/constants';\nimport { withInBounds } from '../../common/utils/helper';\n/**\n * The `Zooming` module handles zooming functionality for charts.\n */\nvar Zoom = /** @class */ (function () {\n    /**\n     * Constructor for Zooming module.\n     *\n     * @private\n     */\n    function Zoom(chart) {\n        this.zoomCompleteEvtCollection = [];\n        /** @private */\n        this.startPanning = false;\n        this.chart = chart;\n        this.isPointer = Browser.isPointer;\n        this.browserName = Browser.info.name;\n        this.wheelEvent = this.browserName === 'mozilla' ? (this.isPointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        this.cancelEvent = this.isPointer ? 'pointerleave' : 'mouseleave';\n        this.addEventListener();\n        this.isDevice = Browser.isDevice;\n        var zooming = chart.zoomSettings;\n        this.toolkit = new Toolkit(chart);\n        this.zooming = zooming;\n        this.elementId = chart.element.id;\n        this.zoomingRect = new Rect(0, 0, 0, 0);\n        this.zoomAxes = [];\n        this.zoomkitOpacity = 1;\n        this.isIOS = Browser.isIos || Browser.isIos7;\n        this.isZoomed = this.performedUI = this.zooming.enablePan ||\n            ((this.chart.primaryXAxis.zoomFactor < 1 && this.chart.primaryXAxis.zoomPosition > 0) ||\n                (this.chart.primaryYAxis.zoomFactor < 1 && this.chart.primaryYAxis.zoomPosition > 0) || this.isAxisZoomed(this.chart.axes));\n        if (zooming.enableScrollbar) {\n            chart.scrollElement = createElement('div', { id: chart.element.id + '_scrollElement' });\n        }\n    }\n    /**\n     * Renders the zooming functionality for the chart.\n     *\n     * @param {PointerEvent | TouchEvent} e - The pointer or touch event.\n     * @param {Chart} chart - The chart instance.\n     * @param {boolean} isTouch - Indicates whether the event is a touch event.\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.renderZooming = function (e, chart, isTouch) {\n        this.calculateZoomAxesRange(chart);\n        if (this.zooming.enableSelectionZooming && (!isTouch\n            || (chart.isDoubleTap && this.touchStartList.length === 1)) && (!this.isPanning || chart.isDoubleTap)) {\n            this.isPanning = this.isDevice ? true : this.isPanning;\n            this.performedUI = true;\n            this.drawZoomingRectangle(chart);\n        }\n        else if (this.isPanning && chart.isChartDrag) {\n            if (!isTouch || (isTouch && this.touchStartList.length === 1)) {\n                this.pinchTarget = isTouch ? e.target : null;\n                this.doPan(chart, chart.axisCollections);\n            }\n        }\n    };\n    // Zooming rectangle drawn here\n    Zoom.prototype.drawZoomingRectangle = function (chart) {\n        var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n        var startLocation = new ChartLocation(chart.previousMouseMoveX, chart.previousMouseMoveY);\n        var endLocation = new ChartLocation(chart.mouseX, chart.mouseY);\n        var rect = this.zoomingRect = getRectLocation(startLocation, endLocation, areaBounds);\n        if (rect.width > 0 && rect.height > 0) {\n            this.isZoomed = true;\n            chart.disableTrackTooltip = true;\n            chart.svgObject.setAttribute('cursor', 'crosshair');\n            if (this.zooming.mode === 'X') {\n                rect.height = areaBounds.height;\n                rect.y = areaBounds.y;\n            }\n            else if (this.zooming.mode === 'Y') {\n                rect.width = areaBounds.width;\n                rect.x = areaBounds.x;\n            }\n            if (chart.tooltipModule) {\n                chart.tooltipModule.removeTooltip(0);\n                for (var _i = 0, _a = chart.visibleSeries; _i < _a.length; _i++) {\n                    var series = _a[_i];\n                    if (!isNullOrUndefined(series) && (series.marker.visible || chart.tooltip.shared)) {\n                        chart.markerRender.removeHighlightedMarker(series, null, true);\n                    }\n                }\n            }\n            if (chart.crosshairModule) {\n                chart.crosshairModule.removeCrosshair(0);\n            }\n            var svg = chart.svgObject;\n            if (this.chart.enableCanvas) {\n                var secondaryElement = document.getElementById(this.chart.element.id + '_Secondary_Element');\n                svg = this.chart.svgRenderer.createSvg({\n                    id: this.chart.element.id + '_zoomRect_svg',\n                    width: this.chart.availableSize.width,\n                    height: this.chart.availableSize.height\n                });\n                svg.style.cssText = 'position: absolute; display:block; pointer-events: none';\n                secondaryElement.appendChild(svg);\n            }\n            svg.appendChild(chart.svgRenderer.drawRectangle(new RectOption(this.elementId + '_ZoomArea', chart.themeStyle.selectionRectFill, { color: chart.themeStyle.selectionRectStroke, width: 1 }, 1, rect, 0, 0, '', '3')));\n        }\n    };\n    // Panning performed here\n    Zoom.prototype.doPan = function (chart, axes, xDifference, yDifference) {\n        var _this = this;\n        if (xDifference === void 0) { xDifference = 0; }\n        if (yDifference === void 0) { yDifference = 0; }\n        if (chart.startMove && chart.crosshair.enable) {\n            return null;\n        }\n        var currentScale;\n        var offset;\n        this.isZoomed = true;\n        this.startPanning = true;\n        this.offset = !chart.delayRedraw ? chart.chartAxisLayoutPanel.seriesClipRect : this.offset;\n        chart.delayRedraw = true;\n        this.zoomCompleteEvtCollection = [];\n        chart.disableTrackTooltip = true;\n        var argsData;\n        var zoomedAxisCollection = [];\n        for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            argsData = {\n                cancel: false, name: zoomComplete, axis: axis, previousZoomFactor: axis.zoomFactor,\n                previousZoomPosition: axis.zoomPosition, currentZoomFactor: axis.zoomFactor,\n                currentZoomPosition: axis.zoomPosition, previousVisibleRange: axis.visibleRange,\n                currentVisibleRange: null\n            };\n            currentScale = Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1);\n            if (axis.orientation === 'Horizontal') {\n                offset = (xDifference !== 0 ? xDifference : (chart.previousMouseMoveX - chart.mouseX)) / axis.rect.width / currentScale;\n                argsData.currentZoomPosition = minMax(axis.zoomPosition + offset, 0, (1 - axis.zoomFactor));\n            }\n            else {\n                offset = (yDifference !== 0 ? yDifference : (chart.previousMouseMoveY - chart.mouseY)) / axis.rect.height / currentScale;\n                argsData.currentZoomPosition = minMax(axis.zoomPosition - offset, 0, (1 - axis.zoomFactor));\n            }\n            if (!argsData.cancel) {\n                axis.zoomFactor = argsData.currentZoomFactor;\n                axis.zoomPosition = argsData.currentZoomPosition;\n                this.zoomCompleteEvtCollection.push(argsData);\n            }\n            zoomedAxisCollection.push({\n                zoomFactor: axis.zoomFactor, zoomPosition: axis.zoomFactor, axisName: axis.name,\n                axisRange: axis.visibleRange\n            });\n        }\n        if (chart.tooltipModule) {\n            var tooltipElement = getElement(chart.element.id + '_tooltip');\n            if (tooltipElement) {\n                tooltipElement.remove();\n            }\n            for (var _b = 0, _c = chart.visibleSeries; _b < _c.length; _b++) {\n                var series = _c[_b];\n                if (!isNullOrUndefined(series) && (series.marker.visible || chart.tooltip.shared || series.type === 'Scatter' || series.type === 'Bubble')) {\n                    chart.markerRender.removeHighlightedMarker(series, null, true);\n                }\n            }\n        }\n        var zoomingEventArgs = { cancel: false, axisCollection: zoomedAxisCollection, name: onZooming };\n        if (!zoomingEventArgs.cancel && this.chart.isBlazor) {\n            this.chart.trigger(onZooming, zoomingEventArgs, function () {\n                if (zoomingEventArgs.cancel) {\n                    _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\n                }\n                else {\n                    _this.performDefferedZoom(chart);\n                }\n            });\n        }\n        else {\n            this.chart.trigger(onZooming, zoomingEventArgs, function () {\n                if (zoomingEventArgs.cancel) {\n                    _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\n                }\n                else {\n                    _this.performDefferedZoom(chart);\n                    _this.redrawOnZooming(chart, false);\n                }\n            });\n        }\n    };\n    Zoom.prototype.performDefferedZoom = function (chart) {\n        var translateX;\n        var translateY;\n        if (this.zooming.enableDeferredZooming) {\n            translateX = chart.mouseX - chart.mouseDownX;\n            translateY = chart.mouseY - chart.mouseDownY;\n            switch (this.zooming.mode) {\n                case 'X':\n                    translateY = 0;\n                    break;\n                case 'Y':\n                    translateX = 0;\n                    break;\n            }\n            this.setTransform(translateX, translateY, null, null, chart, false);\n            this.refreshAxis(chart.chartAxisLayoutPanel, chart, chart.axisCollections);\n            if (chart.enableCanvas) {\n                this.performZoomRedraw(chart);\n            }\n        }\n        else {\n            this.performZoomRedraw(chart);\n        }\n        chart.previousMouseMoveX = chart.mouseX;\n        chart.previousMouseMoveY = chart.mouseY;\n    };\n    /**\n     * Redraw the chart on zooming.\n     *\n     * @param {Chart} chart - The chart instance.\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.performZoomRedraw = function (chart) {\n        var rect = this.zoomingRect;\n        chart.animateSeries = false;\n        if (this.isZoomed) {\n            if (rect.width > 0 && rect.height > 0) {\n                this.performedUI = true;\n                chart.svgObject.setAttribute('cursor', 'auto');\n                this.doZoom(chart, chart.axisCollections, chart.chartAxisLayoutPanel.seriesClipRect);\n                chart.isDoubleTap = false;\n            }\n            else if (chart.disableTrackTooltip) {\n                chart.disableTrackTooltip = false;\n                chart.delayRedraw = false;\n                if (chart.enableCanvas) {\n                    chart.createChartSvg();\n                }\n                else {\n                    var zoomArea = getElement(chart.element.id + '_ZoomArea');\n                    if (zoomArea) {\n                        zoomArea.remove();\n                    }\n                    var zoomToolBar = getElement(chart.element.id + '_Zooming_KitCollection');\n                    if (zoomToolBar) {\n                        zoomToolBar.remove();\n                    }\n                    if (chart.tooltipModule) {\n                        if (getElement(chart.element.id + '_tooltip')) {\n                            getElement(chart.element.id + '_tooltip').remove();\n                        }\n                        for (var _i = 0, _a = chart.visibleSeries; _i < _a.length; _i++) {\n                            var series = _a[_i];\n                            if (!isNullOrUndefined(series) && (series.marker.visible || chart.tooltip.shared || series.type === 'Scatter' || series.type === 'Bubble')) {\n                                chart.markerRender.removeHighlightedMarker(series, null, true);\n                            }\n                        }\n                    }\n                }\n                var chartDuration = chart.duration;\n                if (!(this.isPanning && (chart.isChartDrag || this.startPanning)) && !chart.enableCanvas) {\n                    chart.duration = 600;\n                    chart.redraw = this.zooming.enableAnimation;\n                    chart.zoomRedraw = this.zooming.enableAnimation;\n                }\n                var highlightDataIndexes = [];\n                if (chart.highlightModule && (chart.legendSettings.enableHighlight || chart.highlightMode !== 'None') && chart.highlightModule.highlightDataIndexes) {\n                    highlightDataIndexes = chart.highlightModule.highlightDataIndexes;\n                }\n                // chart.enableCanvas ? chart.createChartSvg() : chart.removeSvg();\n                chart.refreshAxis();\n                chart.refreshBound();\n                if (chart.highlightModule && (chart.legendSettings.enableHighlight || chart.highlightMode !== 'None') && highlightDataIndexes) {\n                    chart.highlightModule.highlightDataIndexes = highlightDataIndexes;\n                }\n                if (!this.isZoomed) {\n                    chart.zoomRedraw = this.zooming.enableAnimation;\n                }\n                this.startPanning = false;\n                chart.redraw = false;\n                chart.duration = chartDuration;\n                if (this.toolkit.isZoomed) {\n                    chart.zoomRedraw = false;\n                    this.toolkit.isZoomed = false;\n                }\n            }\n        }\n    };\n    Zoom.prototype.refreshAxis = function (layout, chart, axes) {\n        var mode = chart.zoomSettings.mode;\n        layout.measureAxis(new Rect(chart.initialClipRect.x, chart.initialClipRect.y, chart.initialClipRect.width, chart.initialClipRect.height));\n        axes.map(function (axis, index) {\n            if (axis.orientation === 'Horizontal' && mode !== 'Y') {\n                layout.drawXAxisLabels(axis, index, null, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n            }\n            if (axis.orientation === 'Vertical' && mode !== 'X') {\n                layout.drawYAxisLabels(axis, index, null, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n            }\n        });\n    };\n    // Rectangular zoom calculated here performed here\n    Zoom.prototype.doZoom = function (chart, axes, bounds) {\n        var _this = this;\n        var zoomRect = this.zoomingRect;\n        var mode = this.zooming.mode;\n        var argsData;\n        this.isPanning = chart.zoomSettings.enablePan || this.isPanning;\n        var zoomedAxisCollections = [];\n        this.zoomCompleteEvtCollection = [];\n        for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            argsData = {\n                cancel: false, name: zoomComplete, axis: axis,\n                previousZoomFactor: axis.zoomFactor,\n                previousZoomPosition: axis.zoomPosition,\n                currentZoomFactor: axis.zoomFactor,\n                currentZoomPosition: axis.zoomPosition,\n                previousVisibleRange: axis.visibleRange, currentVisibleRange: null\n            };\n            if (axis.orientation === 'Horizontal') {\n                if (mode !== 'Y') {\n                    argsData.currentZoomPosition += Math.abs((zoomRect.x - bounds.x) / (bounds.width)) * axis.zoomFactor;\n                    argsData.currentZoomFactor *= (zoomRect.width / bounds.width);\n                }\n            }\n            else {\n                if (mode !== 'X') {\n                    argsData.currentZoomPosition += (1 - Math.abs((zoomRect.height + (zoomRect.y - bounds.y)) / (bounds.height)))\n                        * axis.zoomFactor;\n                    argsData.currentZoomFactor *= (zoomRect.height / bounds.height);\n                }\n            }\n            if (parseFloat(argsData.currentZoomFactor.toFixed(3)) <= 0.001) {\n                argsData.currentZoomFactor = argsData.previousZoomFactor;\n                argsData.currentZoomPosition = argsData.previousZoomPosition;\n            }\n            if (!argsData.cancel) {\n                axis.zoomFactor = argsData.currentZoomFactor;\n                axis.zoomPosition = argsData.currentZoomPosition;\n                chart.zoomRedraw = this.zooming.enableAnimation;\n                this.zoomCompleteEvtCollection.push(argsData);\n            }\n            zoomedAxisCollections.push({\n                zoomFactor: axis.zoomFactor, zoomPosition: axis.zoomFactor, axisName: axis.name,\n                axisRange: axis.visibleRange\n            });\n        }\n        var onZoomingEventArg = { cancel: false, axisCollection: zoomedAxisCollections, name: onZooming };\n        if (!onZoomingEventArg.cancel && this.chart.isBlazor) {\n            this.chart.trigger(onZooming, onZoomingEventArg, function () {\n                if (onZoomingEventArg.cancel) {\n                    _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\n                }\n                else {\n                    _this.zoomingRect = new Rect(0, 0, 0, 0);\n                    _this.performZoomRedraw(chart);\n                }\n            });\n        }\n        else {\n            this.chart.trigger(onZooming, onZoomingEventArg, function () {\n                if (onZoomingEventArg.cancel) {\n                    _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\n                }\n                else {\n                    _this.zoomingRect = new Rect(0, 0, 0, 0);\n                    _this.redrawOnZooming(chart);\n                }\n            });\n        }\n    };\n    /**\n     * Redraws the chart on zooming.\n     *\n     * @param {Chart} chart - The chart instance.\n     * @param {boolean} [isRedraw=true] - Indicates whether to redraw the chart.\n     * @param {boolean} [isMouseUp=false] - Indicates whether the mouse button is released.\n     * @returns {void}\n     */\n    Zoom.prototype.redrawOnZooming = function (chart, isRedraw, isMouseUp) {\n        if (isRedraw === void 0) { isRedraw = true; }\n        if (isMouseUp === void 0) { isMouseUp = false; }\n        var zoomCompleteCollection = isMouseUp ? this.toolkit.zoomCompleteEvtCollection :\n            this.zoomCompleteEvtCollection;\n        if (isRedraw) {\n            this.performZoomRedraw(chart);\n        }\n        var argsData;\n        for (var i = 0; i < zoomCompleteCollection.length; i++) {\n            if (!zoomCompleteCollection[i].cancel) {\n                argsData = {\n                    cancel: false, name: zoomComplete,\n                    axis: chart.axisCollections[i],\n                    previousZoomFactor: zoomCompleteCollection[i].previousZoomFactor,\n                    previousZoomPosition: zoomCompleteCollection[i].previousZoomPosition,\n                    currentZoomFactor: chart.axisCollections[i].zoomFactor,\n                    currentZoomPosition: chart.axisCollections[i].zoomPosition,\n                    currentVisibleRange: chart.axisCollections[i].visibleRange,\n                    previousVisibleRange: zoomCompleteCollection[i].previousVisibleRange\n                };\n                chart.trigger(zoomComplete, argsData);\n            }\n        }\n    };\n    /**\n     * Performs mouse wheel zooming on the chart.\n     *\n     * @param {WheelEvent} e - The wheel event.\n     * @param {number} mouseX - The X-coordinate of the mouse pointer.\n     * @param {number} mouseY - The Y-coordinate of the mouse pointer.\n     * @param {Chart} chart - The chart instance.\n     * @param {AxisModel[]} axes - The axes in the chart.\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.performMouseWheelZooming = function (e, mouseX, mouseY, chart, axes) {\n        var _this = this;\n        var direction = (this.browserName === 'mozilla' && !this.isPointer) ?\n            -(e.detail) / 3 > 0 ? 1 : -1 : (e['wheelDelta'] > 0 ? 1 : -1);\n        var mode = this.zooming.mode;\n        var origin = 0.5;\n        var cumulative;\n        var zoomFactor;\n        var zoomPosition;\n        this.isZoomed = true;\n        this.calculateZoomAxesRange(chart);\n        chart.disableTrackTooltip = true;\n        this.performedUI = true;\n        this.isPanning = chart.zoomSettings.enablePan || this.isPanning;\n        this.zoomCompleteEvtCollection = [];\n        var argsData;\n        var zoomedAxisCollection = [];\n        for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            argsData = {\n                cancel: false, name: zoomComplete, axis: axis, previousZoomFactor: axis.zoomFactor,\n                previousZoomPosition: axis.zoomPosition,\n                currentZoomFactor: axis.zoomFactor,\n                currentZoomPosition: axis.zoomPosition, currentVisibleRange: null,\n                previousVisibleRange: axis.visibleRange\n            };\n            if ((axis.orientation === 'Vertical' && mode !== 'X') ||\n                (axis.orientation === 'Horizontal' && mode !== 'Y')) {\n                cumulative = Math.max(Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1) + (0.25 * direction), 1);\n                cumulative = (cumulative > 50000000000) ? 50000000000 : cumulative;\n                if (cumulative >= 1) {\n                    origin = axis.orientation === 'Horizontal' ? mouseX / axis.rect.width : 1 - (mouseY / axis.rect.height);\n                    origin = origin > 1 ? 1 : origin < 0 ? 0 : origin;\n                    zoomFactor = (cumulative === 1) ? 1 : minMax((direction > 0 ? 0.9 : 1.1) / cumulative, 0, 1);\n                    zoomPosition = (cumulative === 1) ? 0 : axis.zoomPosition + ((axis.zoomFactor - zoomFactor) * origin);\n                    if (axis.zoomPosition !== zoomPosition || axis.zoomFactor !== zoomFactor) {\n                        zoomFactor = (zoomPosition + zoomFactor) > 1 ? (1 - zoomPosition) : zoomFactor;\n                    }\n                    if (parseFloat(argsData.currentZoomFactor.toFixed(3)) <= 0.001) {\n                        argsData.currentZoomFactor = argsData.previousZoomFactor;\n                        argsData.currentZoomPosition = argsData.previousZoomPosition;\n                    }\n                    else {\n                        argsData.currentZoomFactor = zoomFactor;\n                        argsData.currentZoomPosition = zoomPosition;\n                    }\n                }\n                if (argsData.currentZoomFactor === argsData.previousZoomFactor &&\n                    argsData.currentZoomPosition === argsData.previousZoomPosition) {\n                    chart.disableTrackTooltip = false;\n                }\n                if (!argsData.cancel) {\n                    axis.zoomFactor = argsData.currentZoomFactor;\n                    axis.zoomPosition = argsData.currentZoomPosition;\n                    chart.zoomRedraw = this.zooming.enableAnimation;\n                    this.zoomCompleteEvtCollection.push(argsData);\n                }\n            }\n            zoomedAxisCollection.push({\n                zoomFactor: axis.zoomFactor, zoomPosition: axis.zoomFactor, axisName: axis.name,\n                axisRange: axis.visibleRange\n            });\n        }\n        var onZoomingEventArgs = { cancel: false, axisCollection: zoomedAxisCollection, name: onZooming };\n        if (!onZoomingEventArgs.cancel && this.chart.isBlazor) {\n            this.chart.trigger(onZooming, onZoomingEventArgs, function () {\n                if (onZoomingEventArgs.cancel) {\n                    _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\n                }\n                else {\n                    _this.performZoomRedraw(chart);\n                }\n            });\n        }\n        else {\n            this.chart.trigger(onZooming, onZoomingEventArgs, function () {\n                if (onZoomingEventArgs.cancel) {\n                    _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\n                }\n                else {\n                    _this.redrawOnZooming(chart);\n                }\n            });\n        }\n    };\n    /**\n     * Performs pinch zooming on the chart.\n     *\n     * @param {TouchEvent} e - The touch event.\n     * @param {Chart} chart - The chart instance.\n     * @returns {boolean} - Indicates whether pinch zooming is performed.\n     * @private\n     */\n    Zoom.prototype.performPinchZooming = function (e, chart) {\n        if ((this.zoomingRect.width > 0 && this.zoomingRect.height > 0) || (chart.startMove && chart.crosshair.enable)) {\n            return false;\n        }\n        this.calculateZoomAxesRange(chart);\n        this.isZoomed = true;\n        this.isPanning = true;\n        this.performedUI = true;\n        this.offset = !chart.delayRedraw ? chart.chartAxisLayoutPanel.seriesClipRect : this.offset;\n        chart.delayRedraw = true;\n        chart.disableTrackTooltip = true;\n        var elementOffset = chart.element.getBoundingClientRect();\n        var touchDown = this.touchStartList;\n        var touchMove = this.touchMoveList;\n        var touch0StartX = touchDown[0].pageX - elementOffset.left;\n        var touch0StartY = touchDown[0].pageY - elementOffset.top;\n        var touch0EndX = touchMove[0].pageX - elementOffset.left;\n        var touch0EndY = touchMove[0].pageY - elementOffset.top;\n        var touch1StartX = touchDown[1].pageX - elementOffset.left;\n        var touch1StartY = touchDown[1].pageY - elementOffset.top;\n        var touch1EndX = touchMove[1].pageX - elementOffset.left;\n        var touch1EndY = touchMove[1].pageY - elementOffset.top;\n        var scaleX = Math.abs(touch0EndX - touch1EndX) / Math.abs(touch0StartX - touch1StartX);\n        var scaleY = Math.abs(touch0EndY - touch1EndY) / Math.abs(touch0StartY - touch1StartY);\n        var clipX = ((this.offset.x - touch0EndX) / scaleX) + touch0StartX;\n        var clipY = ((this.offset.y - touch0EndY) / scaleY) + touch0StartY;\n        var pinchRect = new Rect(clipX, clipY, this.offset.width / scaleX, this.offset.height / scaleY);\n        var translateXValue = (touch0EndX - (scaleX * touch0StartX));\n        var translateYValue = (touch0EndY - (scaleY * touch0StartY));\n        if (!isNaN(scaleX - scaleX) && !isNaN(scaleY - scaleY)) {\n            switch (this.zooming.mode) {\n                case 'XY':\n                    this.setTransform(translateXValue, translateYValue, scaleX, scaleY, chart, true);\n                    break;\n                case 'X':\n                    this.setTransform(translateXValue, 0, scaleX, 1, chart, true);\n                    break;\n                case 'Y':\n                    this.setTransform(0, translateYValue, 1, scaleY, chart, true);\n                    break;\n            }\n        }\n        if (!this.calculatePinchZoomFactor(chart, pinchRect)) {\n            this.refreshAxis(chart.chartAxisLayoutPanel, chart, chart.axisCollections);\n            this.redrawOnZooming(chart, false);\n        }\n        return true;\n    };\n    Zoom.prototype.calculatePinchZoomFactor = function (chart, pinchRect) {\n        var mode = this.zooming.mode;\n        var selectionMin;\n        var selectionMax;\n        var rangeMin;\n        var rangeMax;\n        var value;\n        var axisTrans;\n        var argsData;\n        var currentZF;\n        var currentZP;\n        var zoomedAxisCollection = [];\n        this.zoomCompleteEvtCollection = [];\n        for (var index = 0; index < chart.axisCollections.length; index++) {\n            var axis = chart.axisCollections[index];\n            if ((axis.orientation === 'Horizontal' && mode !== 'Y') ||\n                (axis.orientation === 'Vertical' && mode !== 'X')) {\n                currentZF = axis.zoomFactor;\n                currentZP = axis.zoomPosition;\n                argsData = {\n                    cancel: false, name: zoomComplete, axis: axis, previousZoomFactor: axis.zoomFactor,\n                    previousZoomPosition: axis.zoomPosition, currentZoomFactor: currentZF,\n                    currentZoomPosition: currentZP, previousVisibleRange: axis.visibleRange,\n                    currentVisibleRange: null\n                };\n                if (axis.orientation === 'Horizontal') {\n                    value = pinchRect.x - this.offset.x;\n                    axisTrans = axis.rect.width / this.zoomAxes[index].delta;\n                    rangeMin = value / axisTrans + this.zoomAxes[index].min;\n                    value = pinchRect.x + pinchRect.width - this.offset.x;\n                    rangeMax = value / axisTrans + this.zoomAxes[index].min;\n                }\n                else {\n                    value = pinchRect.y - this.offset.y;\n                    axisTrans = axis.rect.height / this.zoomAxes[index].delta;\n                    rangeMin = (value * -1 + axis.rect.height) / axisTrans + this.zoomAxes[index].min;\n                    value = pinchRect.y + pinchRect.height - this.offset.y;\n                    rangeMax = (value * -1 + axis.rect.height) / axisTrans + this.zoomAxes[index].min;\n                }\n                selectionMin = Math.min(rangeMin, rangeMax);\n                selectionMax = Math.max(rangeMin, rangeMax);\n                currentZP = (selectionMin - this.zoomAxes[index].actualMin) / this.zoomAxes[index].actualDelta;\n                currentZF = (selectionMax - selectionMin) / this.zoomAxes[index].actualDelta;\n                argsData.currentZoomPosition = currentZP < 0 ? 0 : currentZP;\n                argsData.currentZoomFactor = currentZF > 1 ? 1 : (currentZF < 0.03) ? 0.03 : currentZF;\n                if (!argsData.cancel) {\n                    axis.zoomFactor = argsData.currentZoomFactor;\n                    axis.zoomPosition = argsData.currentZoomPosition;\n                    chart.zoomRedraw = this.zooming.enableAnimation;\n                    this.zoomCompleteEvtCollection.push(argsData);\n                }\n                zoomedAxisCollection.push({\n                    zoomFactor: axis.zoomFactor, zoomPosition: axis.zoomFactor, axisName: axis.name,\n                    axisRange: axis.visibleRange\n                });\n            }\n        }\n        var onZoomingEventArgs = { cancel: false, axisCollection: zoomedAxisCollection, name: onZooming };\n        if (!onZoomingEventArgs.cancel) {\n            this.chart.trigger(onZooming, onZoomingEventArgs);\n            if (onZoomingEventArgs.cancel) {\n                this.zoomCancel(chart.axisCollections, this.zoomCompleteEvtCollection);\n                return true;\n            }\n        }\n        return false;\n    };\n    // Series transformation style applied here.\n    Zoom.prototype.setTransform = function (transX, transY, scaleX, scaleY, chart, isPinch) {\n        if (!chart.enableCanvas) {\n            chart.seriesElements.setAttribute('clip-path', 'url(#' + this.elementId + '_ChartAreaClipRect_)');\n        }\n        if (chart.indicatorElements) {\n            chart.indicatorElements.setAttribute('clip-path', 'url(#' + this.elementId + '_ChartAreaClipRect_)');\n        }\n        var translate;\n        var xAxisLoc;\n        var yAxisLoc;\n        var element;\n        if (transX !== null && transY !== null) {\n            for (var _i = 0, _a = chart.visibleSeries; _i < _a.length; _i++) {\n                var value = _a[_i];\n                xAxisLoc = chart.requireInvertedAxis ? value.yAxis.rect.x : value.xAxis.rect.x;\n                yAxisLoc = chart.requireInvertedAxis ? value.xAxis.rect.y : value.yAxis.rect.y;\n                translate = 'translate(' + (transX + (isPinch ? (scaleX * xAxisLoc) : xAxisLoc)) +\n                    ',' + (transY + (isPinch ? (scaleY * yAxisLoc) : yAxisLoc)) + ')';\n                translate = (scaleX || scaleY) ? translate + ' scale(' + scaleX + ' ' + scaleY + ')' : translate;\n                if (value.visible) {\n                    if (value.category === 'Indicator') {\n                        value.seriesElement.parentNode.setAttribute('transform', translate);\n                    }\n                    else {\n                        if (!chart.enableCanvas) {\n                            value.seriesElement.setAttribute('transform', translate);\n                        }\n                    }\n                    element = getElement(chart.element.id + '_Series_' + value.index + '_DataLabelCollections');\n                    if (value.errorBarElement) {\n                        value.errorBarElement.setAttribute('transform', translate);\n                    }\n                    if (value.symbolElement) {\n                        value.symbolElement.setAttribute('transform', translate);\n                    }\n                    if (value.textElement) {\n                        value.textElement.setAttribute('visibility', 'hidden');\n                        value.shapeElement.setAttribute('visibility', 'hidden');\n                    }\n                    if (element) {\n                        element.style.visibility = 'hidden';\n                    }\n                }\n            }\n        }\n    };\n    Zoom.prototype.calculateZoomAxesRange = function (chart) {\n        var range;\n        var axisRange;\n        for (var index = 0; index < chart.axisCollections.length; index++) {\n            var axis = chart.axisCollections[index];\n            axisRange = axis.visibleRange;\n            if (this.zoomAxes[index]) {\n                if (!chart.delayRedraw) {\n                    this.zoomAxes[index].min = axisRange.min;\n                    this.zoomAxes[index].delta = axisRange.delta;\n                }\n            }\n            else {\n                range = {\n                    actualMin: axis.actualRange.min,\n                    actualDelta: axis.actualRange.delta,\n                    min: axisRange.min,\n                    delta: axisRange.delta\n                };\n                this.zoomAxes[index] = range;\n            }\n        }\n    };\n    // Zooming Toolkit created here\n    Zoom.prototype.showZoomingToolkit = function (chart) {\n        var toolboxItems = this.zooming.toolbarItems;\n        var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n        var spacing = 10;\n        var render = chart.svgRenderer;\n        var length = this.isDevice ? (toolboxItems.length === 0 ? 0 : 1) : toolboxItems.length;\n        var iconSize = this.isDevice ? measureText('Reset Zoom', { size: '12px' }, { size: '12px', fontStyle: 'Normal', fontWeight: '400', fontFamily: 'Segoe UI' }).width : 16;\n        var height = this.isDevice ? measureText('Reset Zoom', { size: '12px' }, { size: '12px', fontStyle: 'Normal', fontWeight: '400', fontFamily: 'Segoe UI' }).height : chart.theme.indexOf('Fluent2') > -1 || chart.theme.indexOf('Bootstrap5') > -1 ? 18 : 22;\n        var width = (length * iconSize) + ((length + 1) * spacing) + ((length - 1) * spacing);\n        var toolbarPosition = this.zooming.toolbarPosition;\n        var transX;\n        var transY;\n        switch (toolbarPosition.horizontalAlignment) {\n            case 'Far':\n                transX = areaBounds.x + areaBounds.width - width - spacing;\n                break;\n            case 'Near':\n                transX = areaBounds.x + spacing;\n                break;\n            case 'Center':\n                transX = (areaBounds.width / 2) - (width / 2) + areaBounds.x;\n                break;\n        }\n        transX += toolbarPosition.x;\n        switch (toolbarPosition.verticalAlignment) {\n            case 'Bottom':\n                transY = areaBounds.height - areaBounds.y + height + spacing;\n                break;\n            case 'Top':\n                transY = areaBounds.y + spacing;\n                break;\n            case 'Middle':\n                transY = (areaBounds.height / 2) - (height / 2) + areaBounds.y;\n                break;\n        }\n        var toolkitShadowPadding = 2;\n        transY += toolbarPosition.y;\n        transX = this.toolkit.dragHorizontalRatio != null ? Math.min(Math.max(this.chart.border.width + toolkitShadowPadding, this.toolkit.dragHorizontalRatio * this.chart.availableSize.width), this.chart.availableSize.width - width - this.chart.border.width - toolkitShadowPadding) : transX;\n        transY = this.toolkit.dragVerticalRatio != null ? Math.min(Math.max(this.chart.border.width + toolkitShadowPadding, this.toolkit.dragVerticalRatio * this.chart.availableSize.height), this.chart.availableSize.height - height - this.chart.border.width - toolkitShadowPadding) : transY;\n        var xPosition = spacing;\n        var toolkit = this.toolkit;\n        var element;\n        var shadowElement = '<filter id=\"chart_shadow\" height=\"130%\"><feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"5\"/>';\n        shadowElement += '<feOffset dx=\"-3\" dy=\"4\" result=\"offsetblur\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"1\"/>';\n        shadowElement += '</feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge></filter>';\n        if (length === 0 || getElement(this.elementId + '_Zooming_KitCollection')) {\n            return false;\n        }\n        var defElement = render.createDefs();\n        toolboxItems = this.isDevice ? ['Reset'] : toolboxItems;\n        defElement.innerHTML = shadowElement;\n        this.toolkitElements = render.createGroup({\n            id: this.elementId + '_Zooming_KitCollection',\n            transform: 'translate(' + transX + ',' + transY + ')'\n        });\n        this.toolkitElements.appendChild(defElement);\n        var zoomFillColor = this.chart.theme === 'Tailwind3' ? '#F9FAFB' : this.chart.theme === 'Fluent' ? '#F3F2F1' :\n            (this.chart.theme === 'Material3' ? '#FFFFFF' : this.chart.theme === 'Material3Dark' ? '#1C1B1F' : this.chart.theme === 'Fluent2' ? '#F5F5F5' : this.chart.theme === 'Fluent2Dark' ? '#141414' : chart.theme === 'Fluent2HighContrast' ? '#000000' : chart.theme === 'Bootstrap5' ? '#E9ECEF' : chart.theme === 'Bootstrap5Dark' ? '#343A40' : (chart.theme === 'Tailwind3Dark' && !this.isDevice) ? '#1D2432' : this.chart.theme === 'Tailwind' ? '#F3F4F6' : '#fafafa');\n        this.toolkitElements.appendChild(render.drawRectangle(new RectOption(this.elementId + '_Zooming_Rect', zoomFillColor, { color: 'transparent', width: 1 }, 1, new Rect(0, 0, width, (height + (spacing * 2))), this.chart.theme.indexOf('Bootstrap5') > -1 ? 1 : 4, this.chart.theme.indexOf('Bootstrap5') > -1 ? 1 : 4)));\n        var outerElement = render.drawRectangle(new RectOption(this.elementId + '_Zooming_Rect', zoomFillColor, { color: 'transparent', width: 1 }, 0.1, new Rect(0, 0, width, (height + (spacing * 2))), 4, 4));\n        if (this.chart.theme === 'Tailwind' || this.chart.theme === 'TailwindDark') {\n            outerElement.setAttribute('box-shadow', '0px 1px 2px rgba(0, 0, 0, 0.06), 0px 1px 3px rgba(0, 0, 0, 0.1)');\n        }\n        else if (this.chart.theme === 'Tailwind3Dark') {\n            outerElement.setAttribute('box-shadow', '0px 1px 2px rgba(0, 0, 0, 0.06), 0px 1px 3px rgba(0, 0, 0, 0.1)');\n        }\n        else if (this.chart.theme === 'Material3' || this.chart.theme === 'Material3Dark' || this.chart.theme === 'Fluent2' || this.chart.theme === 'Fluent2Dark' || this.chart.theme.indexOf('Bootstrap5') > -1) {\n            outerElement.setAttribute('filter', 'drop-shadow(0px 1px 3px rgba(0, 0, 0, 0.15)) drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3))');\n            outerElement.setAttribute('fill', this.chart.theme === 'Material3' ? '#FFFFFF' : this.chart.theme === 'Fluent2' ? '#F5F5F5' : this.chart.theme === 'Bootstrap5' ? '#E9ECEF' : this.chart.theme === 'Bootstrap5Dark' ? '#343A40' : '#1C1B1F');\n            outerElement.setAttribute('rx', this.chart.theme.indexOf('Bootstrap5') > -1 ? '1px' : '4px');\n            outerElement.setAttribute('ry', this.chart.theme.indexOf('Bootstrap5') > -1 ? '1px' : '4px');\n            outerElement.setAttribute('opacity', '1');\n        }\n        else {\n            if (chart.theme === 'Tailwind3') {\n                outerElement.setAttribute('fill', '#F9FAFB');\n            }\n            outerElement.setAttribute('filter', 'url(#chart_shadow)');\n        }\n        this.toolkitElements.appendChild(outerElement);\n        var currentItem;\n        var panIcon = false;\n        for (var i = 1; i <= length; i++) {\n            currentItem = toolboxItems[i - 1];\n            element = render.createGroup({\n                transform: 'translate(' + xPosition + ',' + (this.isDevice ? spacing : chart.theme.indexOf('Fluent2') > -1 || chart.theme.indexOf('Bootstrap5') > -1 ? (spacing + 1) : (spacing + 3)) + ')'\n            });\n            // for desktop toolkit hight is 32 and top padding is 8 icon size 16\n            switch (currentItem) {\n                case 'Pan':\n                    toolkit.createPanButton(element, this.toolkitElements);\n                    panIcon = true;\n                    break;\n                case 'Zoom':\n                    toolkit.createZoomButton(element, this.toolkitElements);\n                    break;\n                case 'ZoomIn':\n                    toolkit.createZoomInButton(element, this.toolkitElements, chart);\n                    break;\n                case 'ZoomOut':\n                    toolkit.createZoomOutButton(element, this.toolkitElements, chart);\n                    break;\n                case 'Reset':\n                    toolkit.createResetButton(element, this.toolkitElements, chart, this.isDevice);\n                    break;\n            }\n            xPosition += iconSize + (spacing * 2);\n        }\n        this.toolkitElements.setAttribute('opacity', this.isDevice ? '1' : '' + this.zoomkitOpacity);\n        this.toolkitElements.setAttribute('cursor', 'auto');\n        if (chart.enableCanvas) {\n            var zoomDiv = document.createElement('div');\n            zoomDiv.id = chart.element.id + '_zoom';\n            zoomDiv.style.cssText = 'position:absolute; z-index:1';\n            var zoomheight = chart.availableSize.height / 2;\n            var svg = chart.svgRenderer.createSvg({\n                id: chart.element.id + '_zoomkit_svg',\n                width: chart.availableSize.width,\n                height: zoomheight\n            });\n            svg.style.position = 'absolute';\n            svg.appendChild(this.toolkitElements);\n            zoomDiv.appendChild(svg);\n            document.getElementById(this.elementId + '_Secondary_Element').appendChild(zoomDiv);\n        }\n        else {\n            chart.svgObject.appendChild(this.toolkitElements);\n        }\n        if (!this.isDevice) {\n            EventHandler.add(this.toolkitElements, 'mousemove touchstart', this.zoomToolkitMove, this);\n            EventHandler.add(this.toolkitElements, 'mouseleave touchend', this.zoomToolkitLeave, this);\n            if (this.isPanning && panIcon) {\n                toolkit.pan();\n            }\n        }\n        return true;\n    };\n    /**\n     * Applies the zoom toolkit on the chart.\n     *\n     * @param {Chart} chart - The chart instance.\n     * @param {AxisModel[]} axes - The axis models.\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.applyZoomToolkit = function (chart, axes) {\n        var showToolkit = this.isAxisZoomed(axes);\n        if (showToolkit) {\n            this.showZoomingToolkit(chart);\n            this.isZoomed = true;\n        }\n        else if (chart.zoomSettings.showToolbar) {\n            this.isZoomed = showToolkit;\n            this.showZoomingToolkit(chart);\n        }\n        else {\n            this.toolkit.removeTooltip();\n            this.isPanning = false;\n            this.isZoomed = false;\n            chart.isZoomed = false;\n            chart.svgObject.setAttribute('cursor', 'auto');\n        }\n    };\n    /**\n     * Cancels the zoom action.\n     *\n     * @param {AxisModel[]} axes - The axis models.\n     * @param {IZoomCompleteEventArgs[]} zoomCompleteEventCollection - The collection of zoom complete events.\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.zoomCancel = function (axes, zoomCompleteEventCollection) {\n        for (var _i = 0, _a = zoomCompleteEventCollection; _i < _a.length; _i++) {\n            var zoomCompleteEvent = _a[_i];\n            for (var _b = 0, _c = axes; _b < _c.length; _b++) {\n                var axis = _c[_b];\n                if (axis.name === zoomCompleteEvent.axis.name) {\n                    axis.zoomFactor = zoomCompleteEvent.previousZoomFactor;\n                    axis.zoomPosition = zoomCompleteEvent.previousZoomPosition;\n                    axis.visibleRange = zoomCompleteEvent.previousVisibleRange;\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Checks if any of the axes is zoomed.\n     *\n     * @param {AxisModel[]} axes - The axis models.\n     * @returns {boolean} - True if any axis is zoomed; otherwise, false.\n     * @private\n     */\n    Zoom.prototype.isAxisZoomed = function (axes) {\n        var showToolkit = false;\n        for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            showToolkit = (showToolkit || (axis.zoomFactor !== 1 || axis.zoomPosition !== 0));\n        }\n        return showToolkit;\n    };\n    Zoom.prototype.zoomToolkitMove = function () {\n        var element = this.toolkitElements;\n        this.zoomkitOpacity = 1;\n        element.setAttribute('opacity', '' + this.zoomkitOpacity);\n        return false;\n    };\n    Zoom.prototype.zoomToolkitLeave = function () {\n        var element = this.toolkitElements;\n        this.zoomkitOpacity = 1;\n        element.setAttribute('opacity', '' + this.zoomkitOpacity);\n        return false;\n    };\n    /**\n     * Adds event listeners for the chart.\n     *\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.addEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.on('mousewheel', this.chartMouseWheel, this);\n        this.chart.on(Browser.touchMoveEvent, this.mouseMoveHandler, this);\n        this.chart.on(Browser.touchStartEvent, this.mouseDownHandler, this);\n        this.chart.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n        this.chart.on(this.cancelEvent, this.mouseCancelHandler, this);\n    };\n    /**\n     * Remove event listeners for the chart.\n     *\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.removeEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.off('mousewheel', this.chartMouseWheel);\n        this.chart.off(Browser.touchMoveEvent, this.mouseMoveHandler);\n        this.chart.off(Browser.touchStartEvent, this.mouseDownHandler);\n        this.chart.off(Browser.touchEndEvent, this.mouseUpHandler);\n        this.chart.off(this.cancelEvent, this.mouseCancelHandler);\n    };\n    /**\n     * Handles the mouse wheel event on the chart.\n     *\n     * @param {WheelEvent} e - The wheel event.\n     * @returns {boolean} - Returns false.\n     * @private\n     */\n    Zoom.prototype.chartMouseWheel = function (e) {\n        var chart = this.chart;\n        var offset = chart.element.getBoundingClientRect();\n        var svgRect = getElement(chart.svgId).getBoundingClientRect();\n        var mouseX = (e.clientX - offset.left) - Math.max(svgRect.left - offset.left, 0);\n        var mouseY = (e.clientY - offset.top) - Math.max(svgRect.top - offset.top, 0);\n        if (this.zooming.enableMouseWheelZooming &&\n            withInBounds(mouseX, mouseY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n            e.preventDefault();\n            this.performMouseWheelZooming(e, mouseX, mouseY, chart, chart.axisCollections);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse move event on the chart.\n     *\n     * @param {PointerEvent | TouchEvent} e - The mouse move event or touch event.\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.mouseMoveHandler = function (e) {\n        //Zooming for chart\n        var chart = this.chart;\n        var touches = null;\n        if (e.type === 'touchmove') {\n            if (e.preventDefault && this.isIOS &&\n                (this.isPanning || (chart.isDoubleTap)\n                    || (this.zooming.enablePinchZooming && this.touchStartList.length > 1))) {\n                e.preventDefault();\n            }\n            touches = e.touches;\n        }\n        if (chart.isChartDrag) {\n            if (chart.isTouch) {\n                this.touchMoveList = this.addTouchPointer(this.touchMoveList, e, touches);\n                if (this.zooming.enablePinchZooming && this.touchMoveList.length > 1\n                    && this.touchStartList.length > 1) {\n                    this.performPinchZooming(e, chart);\n                }\n            }\n            this.renderZooming(e, chart, chart.isTouch);\n        }\n    };\n    /**\n     * Handles the mouse down event on the chart.\n     *\n     * @param {PointerEvent} e - The mouse down event.\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.mouseDownHandler = function (e) {\n        //Zooming for chart\n        var chart = this.chart;\n        var touches = null;\n        var target;\n        if (e.type === 'touchstart') {\n            touches = e.touches;\n            target = e.target;\n        }\n        else {\n            target = e.target;\n        }\n        if (target.id.indexOf(chart.element.id + '_Zooming_') === -1 &&\n            (chart.zoomSettings.enablePinchZooming || chart.zoomSettings.enableSelectionZooming || this.chart.zoomModule.isPanning) &&\n            withInBounds(chart.previousMouseMoveX, chart.previousMouseMoveY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n            chart.isChartDrag = true;\n        }\n        if (chart.isTouch) {\n            this.touchStartList = this.addTouchPointer(this.touchStartList, e, touches);\n        }\n    };\n    /**\n     * Handles the mouse up event on the chart.\n     *\n     * @param {PointerEvent} e - The mouse up event.\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.mouseUpHandler = function (e) {\n        var chart = this.chart;\n        var performZoomRedraw = e.target.id.indexOf(chart.element.id + '_ZoomOut_') === -1 ||\n            e.target.id.indexOf(chart.element.id + '_ZoomIn_') === -1;\n        if (chart.isChartDrag || performZoomRedraw) {\n            this.redrawOnZooming(chart, true, true);\n        }\n        if (chart.isTouch) {\n            if (chart.isDoubleTap && withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect)\n                && this.touchStartList.length === 1 && this.isZoomed) {\n                this.toolkit.reset(e);\n            }\n            this.touchStartList = [];\n            chart.isDoubleTap = false;\n        }\n    };\n    /**\n     * Handles the mouse cancel event on the chart.\n     *\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.mouseCancelHandler = function () {\n        if (this.isZoomed) {\n            this.performZoomRedraw(this.chart);\n        }\n        this.pinchTarget = null;\n        this.touchStartList = [];\n        this.touchMoveList = [];\n    };\n    /**\n     * Adds touch pointer to the touch list.\n     *\n     * @param {ITouches[]} touchList - The touch list.\n     * @param {PointerEvent} e - The pointer event.\n     * @param {TouchList} touches - The touch list.\n     * @returns {ITouches[]} - The updated touch list.\n     * @private\n     */\n    Zoom.prototype.addTouchPointer = function (touchList, e, touches) {\n        if (touches) {\n            touchList = [];\n            for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n                touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n            }\n        }\n        else {\n            touchList = touchList ? touchList : [];\n            if (touchList.length === 0) {\n                touchList.push({ pageX: e.clientX, pageY: e.clientY, pointerId: e.pointerId });\n            }\n            else {\n                for (var i = 0, length_2 = touchList.length; i < length_2; i++) {\n                    if (touchList[i].pointerId === e.pointerId) {\n                        touchList[i] = { pageX: e.clientX, pageY: e.clientY, pointerId: e.pointerId };\n                    }\n                    else {\n                        touchList.push({ pageX: e.clientX, pageY: e.clientY, pointerId: e.pointerId });\n                    }\n                }\n            }\n        }\n        return touchList;\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Zoom.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Zoom';\n    };\n    /**\n     * To destroy the zooming.\n     *\n     * @returns {void}\n     * @private\n     */\n    Zoom.prototype.destroy = function () {\n        // Destroy method performed here.\n        this.removeEventListener();\n    };\n    return Zoom;\n}());\nexport { Zoom };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}