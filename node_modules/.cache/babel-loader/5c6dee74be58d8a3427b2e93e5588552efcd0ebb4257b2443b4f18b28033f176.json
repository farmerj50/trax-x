{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from \"react\";\nimport { getXValue } from \"@react-financial-charts/core/lib/utils/ChartDataUtil\";\nimport { isHover, saveNodeType } from \"../utils\";\nimport { HoverTextNearMouse, InteractiveText } from \"../components\";\nexport class EachText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleHover = (_, moreProps) => {\n      if (this.state.hover !== moreProps.hovering) {\n        this.setState({\n          hover: moreProps.hovering\n        });\n      }\n    };\n    this.handleDrag = (e, moreProps) => {\n      const {\n        index,\n        onDrag\n      } = this.props;\n      if (onDrag === undefined) {\n        return;\n      }\n      const {\n        mouseXY: [, mouseY],\n        chartConfig: {\n          yScale\n        },\n        xAccessor,\n        mouseXY,\n        plotData,\n        xScale\n      } = moreProps;\n      const {\n        dx,\n        dy\n      } = this.dragStartPosition;\n      const xValue = xScale.invert(xScale(getXValue(xScale, xAccessor, mouseXY, plotData)) - dx);\n      // xScale.invert(xScale(xAccessor(currentItem)) - dx);\n      const xyValue = [xValue, yScale.invert(mouseY - dy)];\n      onDrag(e, index, xyValue);\n    };\n    this.handleDragStart = (_, moreProps) => {\n      const {\n        position\n      } = this.props;\n      const {\n        mouseXY\n      } = moreProps;\n      const {\n        chartConfig: {\n          yScale\n        },\n        xScale\n      } = moreProps;\n      const [mouseX, mouseY] = mouseXY;\n      const [textCX, textCY] = position;\n      const dx = mouseX - xScale(textCX);\n      const dy = mouseY - yScale(textCY);\n      this.dragStartPosition = {\n        position,\n        dx,\n        dy\n      };\n    };\n    this.handleHover = this.handleHover.bind(this);\n    this.handleDragStart = this.handleDragStart.bind(this);\n    this.handleDrag = this.handleDrag.bind(this);\n    this.isHover = isHover.bind(this);\n    this.saveNodeType = saveNodeType.bind(this);\n    this.state = {\n      hover: false\n    };\n  }\n  render() {\n    const {\n      position,\n      bgFill,\n      bgStroke,\n      bgStrokeWidth,\n      textFill,\n      fontFamily,\n      fontSize,\n      fontWeight,\n      fontStyle,\n      text,\n      hoverText,\n      selected,\n      onDragComplete\n    } = this.props;\n    const {\n      hover\n    } = this.state;\n    const hoverHandler = {\n      onHover: this.handleHover,\n      onUnHover: this.handleHover\n    };\n    const {\n        enable: hoverTextEnabled,\n        selectedText: hoverTextSelected,\n        text: hoverTextUnselected\n      } = hoverText,\n      restHoverTextProps = __rest(hoverText, [\"enable\", \"selectedText\", \"text\"]);\n    return React.createElement(\"g\", null, React.createElement(InteractiveText, Object.assign({\n      ref: this.saveNodeType(\"text\"),\n      selected: selected || hover,\n      interactiveCursorClass: \"react-financial-charts-move-cursor\"\n    }, hoverHandler, {\n      onDragStart: this.handleDragStart,\n      onDrag: this.handleDrag,\n      onDragComplete: onDragComplete,\n      position: position,\n      bgFillStyle: bgFill,\n      bgStroke: bgStroke || textFill,\n      bgStrokeWidth: bgStrokeWidth,\n      textFill: textFill,\n      fontFamily: fontFamily,\n      fontStyle: fontStyle,\n      fontWeight: fontWeight,\n      fontSize: fontSize,\n      text: text\n    })), React.createElement(HoverTextNearMouse, Object.assign({\n      show: hoverTextEnabled && hover\n    }, restHoverTextProps, {\n      text: selected ? hoverTextSelected : hoverTextUnselected\n    })));\n  }\n}\nEachText.defaultProps = {\n  bgStrokeWidth: 1,\n  selected: false,\n  hoverText: Object.assign(Object.assign({}, HoverTextNearMouse.defaultProps), {\n    enable: true,\n    bgHeight: \"auto\",\n    bgWidth: \"auto\",\n    text: \"Click to select object\"\n  })\n};","map":{"version":3,"names":["React","getXValue","isHover","saveNodeType","HoverTextNearMouse","InteractiveText","EachText","Component","constructor","props","handleHover","_","moreProps","state","hover","hovering","setState","handleDrag","e","index","onDrag","undefined","mouseXY","mouseY","chartConfig","yScale","xAccessor","plotData","xScale","dx","dy","dragStartPosition","xValue","invert","xyValue","handleDragStart","position","mouseX","textCX","textCY","bind","render","bgFill","bgStroke","bgStrokeWidth","textFill","fontFamily","fontSize","fontWeight","fontStyle","text","hoverText","selected","onDragComplete","hoverHandler","onHover","onUnHover","enable","hoverTextEnabled","selectedText","hoverTextSelected","hoverTextUnselected","restHoverTextProps","__rest","createElement","Object","assign","ref","interactiveCursorClass","onDragStart","bgFillStyle","show","defaultProps","bgHeight","bgWidth"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\interactive\\src\\wrapper\\EachText.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { getXValue } from \"@react-financial-charts/core/lib/utils/ChartDataUtil\";\nimport { isHover, saveNodeType } from \"../utils\";\nimport { HoverTextNearMouse, InteractiveText } from \"../components\";\n\nexport interface EachTextProps {\n    readonly index?: number;\n    readonly position?: any;\n    readonly bgFill: string;\n    readonly bgStrokeWidth: number;\n    readonly bgStroke?: string;\n    readonly textFill: string;\n    readonly fontWeight: string;\n    readonly fontFamily: string;\n    readonly fontStyle: string;\n    readonly fontSize: number;\n    readonly text: string;\n    readonly selected: boolean;\n    readonly onDrag?: (e: React.MouseEvent, index: number | undefined, xyValue: number[]) => void;\n    readonly onDragComplete?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly hoverText: {\n        readonly enable: boolean;\n        readonly fontFamily: string;\n        readonly fontSize: number;\n        readonly fill: string;\n        readonly text: string;\n        readonly selectedText: string;\n        readonly bgFill: string;\n        readonly bgOpacity: number;\n        readonly bgWidth: number | string;\n        readonly bgHeight: number | string;\n    };\n}\n\ninterface EachTextState {\n    hover: boolean;\n}\n\nexport class EachText extends React.Component<EachTextProps, EachTextState> {\n    public static defaultProps = {\n        bgStrokeWidth: 1,\n        selected: false,\n        hoverText: {\n            ...HoverTextNearMouse.defaultProps,\n            enable: true,\n            bgHeight: \"auto\",\n            bgWidth: \"auto\",\n            text: \"Click to select object\",\n        },\n    };\n\n    private dragStartPosition: any;\n    // @ts-ignore\n    private isHover: any;\n    private saveNodeType: any;\n\n    public constructor(props: EachTextProps) {\n        super(props);\n\n        this.handleHover = this.handleHover.bind(this);\n\n        this.handleDragStart = this.handleDragStart.bind(this);\n        this.handleDrag = this.handleDrag.bind(this);\n\n        this.isHover = isHover.bind(this);\n        this.saveNodeType = saveNodeType.bind(this);\n\n        this.state = {\n            hover: false,\n        };\n    }\n\n    public render() {\n        const {\n            position,\n            bgFill,\n            bgStroke,\n            bgStrokeWidth,\n            textFill,\n            fontFamily,\n            fontSize,\n            fontWeight,\n            fontStyle,\n            text,\n            hoverText,\n            selected,\n            onDragComplete,\n        } = this.props;\n        const { hover } = this.state;\n\n        const hoverHandler = {\n            onHover: this.handleHover,\n            onUnHover: this.handleHover,\n        };\n\n        const {\n            enable: hoverTextEnabled,\n            selectedText: hoverTextSelected,\n            text: hoverTextUnselected,\n            ...restHoverTextProps\n        } = hoverText;\n\n        return (\n            <g>\n                <InteractiveText\n                    ref={this.saveNodeType(\"text\")}\n                    selected={selected || hover}\n                    interactiveCursorClass=\"react-financial-charts-move-cursor\"\n                    {...hoverHandler}\n                    onDragStart={this.handleDragStart}\n                    onDrag={this.handleDrag}\n                    onDragComplete={onDragComplete}\n                    position={position}\n                    bgFillStyle={bgFill}\n                    bgStroke={bgStroke || textFill}\n                    bgStrokeWidth={bgStrokeWidth}\n                    textFill={textFill}\n                    fontFamily={fontFamily}\n                    fontStyle={fontStyle}\n                    fontWeight={fontWeight}\n                    fontSize={fontSize}\n                    text={text}\n                />\n                <HoverTextNearMouse\n                    show={hoverTextEnabled && hover}\n                    {...restHoverTextProps}\n                    text={selected ? hoverTextSelected : hoverTextUnselected}\n                />\n            </g>\n        );\n    }\n\n    private readonly handleHover = (_: React.MouseEvent, moreProps: any) => {\n        if (this.state.hover !== moreProps.hovering) {\n            this.setState({\n                hover: moreProps.hovering,\n            });\n        }\n    };\n\n    private readonly handleDrag = (e: React.MouseEvent, moreProps: any) => {\n        const { index, onDrag } = this.props;\n        if (onDrag === undefined) {\n            return;\n        }\n\n        const {\n            mouseXY: [, mouseY],\n            chartConfig: { yScale },\n            xAccessor,\n            mouseXY,\n            plotData,\n            xScale,\n        } = moreProps;\n\n        const { dx, dy } = this.dragStartPosition;\n        const xValue = xScale.invert(xScale(getXValue(xScale, xAccessor, mouseXY, plotData)) - dx);\n        // xScale.invert(xScale(xAccessor(currentItem)) - dx);\n        const xyValue = [xValue, yScale.invert(mouseY - dy)];\n\n        onDrag(e, index, xyValue);\n    };\n\n    private readonly handleDragStart = (_: React.MouseEvent, moreProps: any) => {\n        const { position } = this.props;\n        const { mouseXY } = moreProps;\n        const {\n            chartConfig: { yScale },\n            xScale,\n        } = moreProps;\n        const [mouseX, mouseY] = mouseXY;\n\n        const [textCX, textCY] = position;\n        const dx = mouseX - xScale(textCX);\n        const dy = mouseY - yScale(textCY);\n\n        this.dragStartPosition = {\n            position,\n            dx,\n            dy,\n        };\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}