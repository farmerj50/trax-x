{"ast":null,"code":"/*\n\nTaken from https://github.com/ScottLogic/d3fc/blob/master/src/indicator/algorithm/calculator/slidingWindow.js\n\nThe MIT License (MIT)\n\nCopyright (c) 2014-2015 Scott Logic Ltd.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n\nimport noop from \"./noop\";\nimport { path, functor } from \"./index\";\nexport default function () {\n  var undefinedValue = undefined,\n    windowSize = 10,\n    accumulator = noop,\n    sourcePath = void 0,\n    source = void 0,\n    skipInitial = 0,\n    misc = void 0;\n\n  // eslint-disable-next-line prefer-const\n  var slidingWindow = function slidingWindow(data) {\n    var sourceFunction = source || path(sourcePath);\n    var size = functor(windowSize).apply(this, arguments);\n    var windowData = data.slice(skipInitial, size + skipInitial).map(sourceFunction);\n    var accumulatorIdx = 0;\n    var undef = functor(undefinedValue);\n    // console.log(skipInitial, size, data.length, windowData.length);\n    return data.map(function (d, i) {\n      // console.log(d, i);\n      if (i < skipInitial + size - 1) {\n        return undef(sourceFunction(d), i, misc);\n      }\n      if (i >= skipInitial + size) {\n        // Treat windowData as FIFO rolling buffer\n        windowData.shift();\n        windowData.push(sourceFunction(d, i));\n      }\n      return accumulator(windowData, i, accumulatorIdx++, misc);\n    });\n  };\n  slidingWindow.undefinedValue = function (x) {\n    if (!arguments.length) {\n      return undefinedValue;\n    }\n    undefinedValue = x;\n    return slidingWindow;\n  };\n  slidingWindow.windowSize = function (x) {\n    if (!arguments.length) {\n      return windowSize;\n    }\n    windowSize = x;\n    return slidingWindow;\n  };\n  slidingWindow.misc = function (x) {\n    if (!arguments.length) {\n      return misc;\n    }\n    misc = x;\n    return slidingWindow;\n  };\n  slidingWindow.accumulator = function (x) {\n    if (!arguments.length) {\n      return accumulator;\n    }\n    accumulator = x;\n    return slidingWindow;\n  };\n  slidingWindow.skipInitial = function (x) {\n    if (!arguments.length) {\n      return skipInitial;\n    }\n    skipInitial = x;\n    return slidingWindow;\n  };\n  slidingWindow.sourcePath = function (x) {\n    if (!arguments.length) {\n      return sourcePath;\n    }\n    sourcePath = x;\n    return slidingWindow;\n  };\n  slidingWindow.source = function (x) {\n    if (!arguments.length) {\n      return source;\n    }\n    source = x;\n    return slidingWindow;\n  };\n  return slidingWindow;\n}","map":{"version":3,"names":["noop","path","functor","undefinedValue","undefined","windowSize","accumulator","sourcePath","source","skipInitial","misc","slidingWindow","data","sourceFunction","size","apply","arguments","windowData","slice","map","accumulatorIdx","undef","d","i","shift","push","x","length"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\src\\lib\\utils\\slidingWindow.js"],"sourcesContent":["\n\n/*\n\nTaken from https://github.com/ScottLogic/d3fc/blob/master/src/indicator/algorithm/calculator/slidingWindow.js\n\nThe MIT License (MIT)\n\nCopyright (c) 2014-2015 Scott Logic Ltd.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n\nimport noop from \"./noop\";\nimport { path, functor } from \"./index\";\n\nexport default function() {\n\n\tlet undefinedValue = undefined,\n\t\twindowSize = 10,\n\t\taccumulator = noop,\n\t\tsourcePath,\n\t\tsource,\n\t\tskipInitial = 0,\n\t\tmisc;\n\n\t// eslint-disable-next-line prefer-const\n\tlet slidingWindow = function(data) {\n\t\tconst sourceFunction = source || path(sourcePath);\n\n\t\tconst size = functor(windowSize).apply(this, arguments);\n\t\tconst windowData = data.slice(skipInitial, size + skipInitial).map(sourceFunction);\n\t\tlet accumulatorIdx = 0;\n\t\tconst undef = functor(undefinedValue);\n\t\t// console.log(skipInitial, size, data.length, windowData.length);\n\t\treturn data.map(function(d, i) {\n\t\t\t// console.log(d, i);\n\t\t\tif (i < (skipInitial + size - 1)) {\n\t\t\t\treturn undef(sourceFunction(d), i, misc);\n\t\t\t}\n\t\t\tif (i >= (skipInitial + size)) {\n\t\t\t\t// Treat windowData as FIFO rolling buffer\n\t\t\t\twindowData.shift();\n\t\t\t\twindowData.push(sourceFunction(d, i));\n\t\t\t}\n\t\t\treturn accumulator(windowData, i, accumulatorIdx++, misc);\n\t\t});\n\t};\n\n\tslidingWindow.undefinedValue = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn undefinedValue;\n\t\t}\n\t\tundefinedValue = x;\n\t\treturn slidingWindow;\n\t};\n\tslidingWindow.windowSize = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn windowSize;\n\t\t}\n\t\twindowSize = x;\n\t\treturn slidingWindow;\n\t};\n\tslidingWindow.misc = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn misc;\n\t\t}\n\t\tmisc = x;\n\t\treturn slidingWindow;\n\t};\n\tslidingWindow.accumulator = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn accumulator;\n\t\t}\n\t\taccumulator = x;\n\t\treturn slidingWindow;\n\t};\n\tslidingWindow.skipInitial = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn skipInitial;\n\t\t}\n\t\tskipInitial = x;\n\t\treturn slidingWindow;\n\t};\n\tslidingWindow.sourcePath = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn sourcePath;\n\t\t}\n\t\tsourcePath = x;\n\t\treturn slidingWindow;\n\t};\n\tslidingWindow.source = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn source;\n\t\t}\n\t\tsource = x;\n\t\treturn slidingWindow;\n\t};\n\n\treturn slidingWindow;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}