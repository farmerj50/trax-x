{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabby\\\\trax-x\\\\src\\\\components\\\\StockScanner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport CandlestickChart from \"./CandlestickChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockScanner = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchStocks = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/scan-stocks\");\n        const data = await response.json();\n        setStocks(data.candidates);\n      } catch (err) {\n        setError(\"Failed to fetch stocks.\");\n        console.error(err);\n      }\n    };\n    fetchStocks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Top Stocks for Gains\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: stocks.map(stock => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: stock.ticker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), \" - $\", stock.last_price.toFixed(2), /*#__PURE__*/_jsxDEV(CandlestickChart, {\n          ticker: stock.ticker,\n          entryPoint: stock.last_price * 0.95 // Example: Entry at 5% below last price\n          ,\n          exitPoint: stock.last_price * 1.10 // Example: Exit at 10% above last price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, stock.ticker, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(StockScanner, \"MHASoUZIE/ZQtLP7ss/KvaI7iIY=\");\n_c = StockScanner;\nexport default StockScanner;\nvar _c;\n$RefreshReg$(_c, \"StockScanner\");","map":{"version":3,"names":["React","useEffect","useState","CandlestickChart","jsxDEV","_jsxDEV","StockScanner","_s","stocks","setStocks","error","setError","fetchStocks","response","fetch","data","json","candidates","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","stock","ticker","last_price","toFixed","entryPoint","exitPoint","_c","$RefreshReg$"],"sources":["C:/Users/gabby/trax-x/src/components/StockScanner.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport CandlestickChart from \"./CandlestickChart\";\r\n\r\nconst StockScanner = () => {\r\n  const [stocks, setStocks] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchStocks = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/scan-stocks\");\r\n        const data = await response.json();\r\n        setStocks(data.candidates);\r\n      } catch (err) {\r\n        setError(\"Failed to fetch stocks.\");\r\n        console.error(err);\r\n      }\r\n    };\r\n    fetchStocks();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Top Stocks for Gains</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <ul>\r\n        {stocks.map((stock) => (\r\n          <li key={stock.ticker}>\r\n            <strong>{stock.ticker}</strong> - ${stock.last_price.toFixed(2)}\r\n            <CandlestickChart\r\n              ticker={stock.ticker}\r\n              entryPoint={stock.last_price * 0.95} // Example: Entry at 5% below last price\r\n              exitPoint={stock.last_price * 1.10}  // Example: Exit at 10% above last price\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockScanner;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,CAAC;QACrE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCP,SAAS,CAACM,IAAI,CAACE,UAAU,CAAC;MAC5B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZP,QAAQ,CAAC,yBAAyB,CAAC;QACnCQ,OAAO,CAACT,KAAK,CAACQ,GAAG,CAAC;MACpB;IACF,CAAC;IACDN,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC5Bd,KAAK,iBAAIL,OAAA;MAAGoB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEV;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDnB,OAAA;MAAAe,QAAA,EACGZ,MAAM,CAACmB,GAAG,CAAEC,KAAK,iBAChBvB,OAAA;QAAAe,QAAA,gBACEf,OAAA;UAAAe,QAAA,EAASQ,KAAK,CAACC;QAAM;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,QAAI,EAACI,KAAK,CAACE,UAAU,CAACC,OAAO,CAAC,CAAC,CAAC,eAC/D1B,OAAA,CAACF,gBAAgB;UACf0B,MAAM,EAAED,KAAK,CAACC,MAAO;UACrBG,UAAU,EAAEJ,KAAK,CAACE,UAAU,GAAG,IAAK,CAAC;UAAA;UACrCG,SAAS,EAAEL,KAAK,CAACE,UAAU,GAAG,IAAK,CAAE;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC;MAAA,GANKI,KAAK,CAACC,MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOjB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACjB,EAAA,CApCID,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAsClB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}