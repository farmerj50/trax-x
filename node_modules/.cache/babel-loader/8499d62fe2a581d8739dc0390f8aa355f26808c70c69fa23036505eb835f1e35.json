{"ast":null,"code":"import * as React from \"react\";\nimport { LineSeries } from \"./LineSeries\";\nimport { StraightLine } from \"./StraightLine\";\nimport { SVGComponent } from \"./SVGComponent\";\n/**\n * The Relative Strength Index (RSI) is a momentum oscillator that measures the speed and change of price movements.\n */\nexport class RSISeries extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.clipPathId1 = `rsi-clip-${String(Math.round(Math.random() * 10000 * 10000))}`;\n    this.clipPathId2 = `rsi-clip-${String(Math.round(Math.random() * 10000 * 10000))}`;\n    this.renderClip = moreProps => {\n      const {\n        chartConfig\n      } = moreProps;\n      const {\n        overSold,\n        overBought\n      } = this.props;\n      const {\n        yScale,\n        width,\n        height\n      } = chartConfig;\n      return React.createElement(\"defs\", null, React.createElement(\"clipPath\", {\n        id: this.clipPathId1\n      }, React.createElement(\"rect\", {\n        x: 0,\n        y: yScale(overSold),\n        width: width,\n        height: yScale(overBought) - yScale(overSold)\n      })), React.createElement(\"clipPath\", {\n        id: this.clipPathId2\n      }, React.createElement(\"rect\", {\n        x: 0,\n        y: 0,\n        width: width,\n        height: yScale(overSold)\n      }), React.createElement(\"rect\", {\n        x: 0,\n        y: yScale(overBought),\n        width: width,\n        height: height - yScale(overBought)\n      })));\n    };\n    this.mainClip = (ctx, moreProps) => {\n      const {\n        chartConfig\n      } = moreProps;\n      const {\n        overSold,\n        overBought\n      } = this.props;\n      const {\n        yScale,\n        width,\n        height\n      } = chartConfig;\n      ctx.beginPath();\n      ctx.rect(0, 0, width, yScale(overSold));\n      ctx.rect(0, yScale(overBought), width, height - yScale(overBought));\n      ctx.clip();\n    };\n    this.topAndBottomClip = (ctx, moreProps) => {\n      const {\n        chartConfig\n      } = moreProps;\n      const {\n        overSold,\n        overBought\n      } = this.props;\n      const {\n        yScale,\n        width\n      } = chartConfig;\n      ctx.beginPath();\n      ctx.rect(0, yScale(overSold), width, yScale(overBought) - yScale(overSold));\n      ctx.clip();\n    };\n  }\n  render() {\n    const {\n      className,\n      strokeStyle = RSISeries.defaultProps.strokeStyle,\n      strokeDasharray = RSISeries.defaultProps.strokeDasharray,\n      strokeWidth = RSISeries.defaultProps.strokeWidth\n    } = this.props;\n    const {\n      yAccessor\n    } = this.props;\n    const {\n      overSold,\n      middle,\n      overBought\n    } = this.props;\n    return React.createElement(\"g\", {\n      className: className\n    }, React.createElement(SVGComponent, null, this.renderClip), React.createElement(StraightLine, {\n      strokeStyle: strokeStyle.top,\n      yValue: overSold,\n      lineDash: strokeDasharray.top,\n      lineWidth: strokeWidth.top\n    }), React.createElement(StraightLine, {\n      strokeStyle: strokeStyle.middle,\n      yValue: middle,\n      lineDash: strokeDasharray.middle,\n      lineWidth: strokeWidth.middle\n    }), React.createElement(StraightLine, {\n      strokeStyle: strokeStyle.bottom,\n      yValue: overBought,\n      lineDash: strokeDasharray.bottom,\n      lineWidth: strokeWidth.bottom\n    }), React.createElement(LineSeries, {\n      canvasClip: this.topAndBottomClip,\n      yAccessor: yAccessor,\n      strokeStyle: strokeStyle.insideThreshold || strokeStyle.line,\n      strokeWidth: strokeWidth.insideThreshold,\n      strokeDasharray: strokeDasharray.line\n    }), React.createElement(LineSeries, {\n      canvasClip: this.mainClip,\n      yAccessor: yAccessor,\n      strokeStyle: strokeStyle.outsideThreshold || strokeStyle.line,\n      strokeWidth: strokeWidth.outsideThreshold,\n      strokeDasharray: strokeDasharray.line\n    }));\n  }\n}\nRSISeries.defaultProps = {\n  className: \"react-financial-charts-rsi-series\",\n  strokeStyle: {\n    line: \"#000000\",\n    top: \"#B8C2CC\",\n    middle: \"#8795A1\",\n    bottom: \"#B8C2CC\",\n    outsideThreshold: \"#b300b3\",\n    insideThreshold: \"#ffccff\"\n  },\n  strokeDasharray: {\n    line: \"Solid\",\n    top: \"ShortDash\",\n    middle: \"ShortDash\",\n    bottom: \"ShortDash\"\n  },\n  strokeWidth: {\n    outsideThreshold: 1,\n    insideThreshold: 1,\n    top: 1,\n    middle: 1,\n    bottom: 1\n  },\n  overSold: 70,\n  middle: 50,\n  overBought: 30\n};","map":{"version":3,"names":["React","LineSeries","StraightLine","SVGComponent","RSISeries","Component","constructor","clipPathId1","String","Math","round","random","clipPathId2","renderClip","moreProps","chartConfig","overSold","overBought","props","yScale","width","height","createElement","id","x","y","mainClip","ctx","beginPath","rect","clip","topAndBottomClip","render","className","strokeStyle","defaultProps","strokeDasharray","strokeWidth","yAccessor","middle","top","yValue","lineDash","lineWidth","bottom","canvasClip","insideThreshold","line","outsideThreshold"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\series\\src\\RSISeries.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { strokeDashTypes } from \"@react-financial-charts/core\";\nimport { LineSeries } from \"./LineSeries\";\nimport { StraightLine } from \"./StraightLine\";\nimport { SVGComponent } from \"./SVGComponent\";\n\nexport interface RSISeriesProps {\n    readonly className?: string;\n    readonly yAccessor: (data: any) => any;\n    readonly strokeStyle?: {\n        line: string;\n        top: string;\n        middle: string;\n        bottom: string;\n        outsideThreshold: string;\n        insideThreshold: string;\n    };\n    readonly strokeDasharray?: {\n        line: strokeDashTypes;\n        top: strokeDashTypes;\n        middle: strokeDashTypes;\n        bottom: strokeDashTypes;\n    };\n    readonly strokeWidth?: {\n        outsideThreshold: number;\n        insideThreshold: number;\n        top: number;\n        middle: number;\n        bottom: number;\n    };\n    readonly overSold?: number;\n    readonly middle?: number;\n    readonly overBought?: number;\n}\n\n/**\n * The Relative Strength Index (RSI) is a momentum oscillator that measures the speed and change of price movements.\n */\nexport class RSISeries extends React.Component<RSISeriesProps> {\n    public static defaultProps = {\n        className: \"react-financial-charts-rsi-series\",\n        strokeStyle: {\n            line: \"#000000\",\n            top: \"#B8C2CC\",\n            middle: \"#8795A1\",\n            bottom: \"#B8C2CC\",\n            outsideThreshold: \"#b300b3\",\n            insideThreshold: \"#ffccff\",\n        },\n        strokeDasharray: {\n            line: \"Solid\" as strokeDashTypes,\n            top: \"ShortDash\" as strokeDashTypes,\n            middle: \"ShortDash\" as strokeDashTypes,\n            bottom: \"ShortDash\" as strokeDashTypes,\n        },\n        strokeWidth: {\n            outsideThreshold: 1,\n            insideThreshold: 1,\n            top: 1,\n            middle: 1,\n            bottom: 1,\n        },\n        overSold: 70,\n        middle: 50,\n        overBought: 30,\n    };\n\n    private clipPathId1 = `rsi-clip-${String(Math.round(Math.random() * 10000 * 10000))}`;\n    private clipPathId2 = `rsi-clip-${String(Math.round(Math.random() * 10000 * 10000))}`;\n\n    public render() {\n        const {\n            className,\n            strokeStyle = RSISeries.defaultProps.strokeStyle,\n            strokeDasharray = RSISeries.defaultProps.strokeDasharray,\n            strokeWidth = RSISeries.defaultProps.strokeWidth,\n        } = this.props;\n        const { yAccessor } = this.props;\n        const { overSold, middle, overBought } = this.props;\n\n        return (\n            <g className={className}>\n                <SVGComponent>{this.renderClip}</SVGComponent>\n                <StraightLine\n                    strokeStyle={strokeStyle.top}\n                    yValue={overSold}\n                    lineDash={strokeDasharray.top}\n                    lineWidth={strokeWidth.top}\n                />\n                <StraightLine\n                    strokeStyle={strokeStyle.middle}\n                    yValue={middle}\n                    lineDash={strokeDasharray.middle}\n                    lineWidth={strokeWidth.middle}\n                />\n                <StraightLine\n                    strokeStyle={strokeStyle.bottom}\n                    yValue={overBought}\n                    lineDash={strokeDasharray.bottom}\n                    lineWidth={strokeWidth.bottom}\n                />\n                <LineSeries\n                    canvasClip={this.topAndBottomClip}\n                    yAccessor={yAccessor}\n                    strokeStyle={strokeStyle.insideThreshold || strokeStyle.line}\n                    strokeWidth={strokeWidth.insideThreshold}\n                    strokeDasharray={strokeDasharray.line}\n                />\n                <LineSeries\n                    canvasClip={this.mainClip}\n                    yAccessor={yAccessor}\n                    strokeStyle={strokeStyle.outsideThreshold || strokeStyle.line}\n                    strokeWidth={strokeWidth.outsideThreshold}\n                    strokeDasharray={strokeDasharray.line}\n                />\n            </g>\n        );\n    }\n\n    private readonly renderClip = (moreProps: any) => {\n        const { chartConfig } = moreProps;\n        const { overSold, overBought } = this.props;\n        const { yScale, width, height } = chartConfig;\n\n        return (\n            <defs>\n                <clipPath id={this.clipPathId1}>\n                    <rect x={0} y={yScale(overSold)} width={width} height={yScale(overBought) - yScale(overSold)} />\n                </clipPath>\n                <clipPath id={this.clipPathId2}>\n                    <rect x={0} y={0} width={width} height={yScale(overSold)} />\n                    <rect x={0} y={yScale(overBought)} width={width} height={height - yScale(overBought)} />\n                </clipPath>\n            </defs>\n        );\n    };\n\n    private readonly mainClip = (ctx: CanvasRenderingContext2D, moreProps: any) => {\n        const { chartConfig } = moreProps;\n        const { overSold, overBought } = this.props;\n        const { yScale, width, height } = chartConfig;\n\n        ctx.beginPath();\n        ctx.rect(0, 0, width, yScale(overSold));\n        ctx.rect(0, yScale(overBought), width, height - yScale(overBought));\n        ctx.clip();\n    };\n\n    private readonly topAndBottomClip = (ctx: CanvasRenderingContext2D, moreProps: any) => {\n        const { chartConfig } = moreProps;\n        const { overSold, overBought } = this.props;\n        const { yScale, width } = chartConfig;\n\n        ctx.beginPath();\n        ctx.rect(0, yScale(overSold), width, yScale(overBought) - yScale(overSold));\n        ctx.clip();\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}