{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabby\\\\trax-x\\\\src\\\\components\\\\StocksPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport StockTracker from \"./StockTracker\";\nimport io from \"socket.io-client\";\nimport \"./StocksPage.css\";\nimport { StockChartComponent, StockChartSeriesCollectionDirective, StockChartSeriesDirective, Inject, DateTime, Tooltip, RangeTooltip, Crosshair, LineSeries, CandleSeries, Legend, Export, EmaIndicator, TmaIndicator, SmaIndicator, MomentumIndicator, AtrIndicator, AccumulationDistributionIndicator, BollingerBands, MacdIndicator, StochasticIndicator, RsiIndicator } from \"@syncfusion/ej2-react-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nconst StocksPage = () => {\n  _s();\n  const [ticker, setTicker] = useState(\"\");\n  const [selectedTicker, setSelectedTicker] = useState(\"AAPL\");\n  const [chartData, setChartData] = useState([]); // Ensure chartData defaults to an empty array\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const periods = [{\n    intervalType: \"Months\",\n    interval: 1,\n    text: \"1M\"\n  }, {\n    intervalType: \"Months\",\n    interval: 3,\n    text: \"3M\"\n  }, {\n    intervalType: \"Months\",\n    interval: 6,\n    text: \"6M\"\n  }, {\n    intervalType: \"Years\",\n    interval: 1,\n    text: \"YTD\"\n  }, {\n    intervalType: \"Years\",\n    interval: 3,\n    text: \"All\"\n  }];\n\n  // Fetch historical chart data\n  const fetchChartData = async tickerSymbol => {\n    setLoading(true);\n    try {\n      console.log(`Fetching data for ${tickerSymbol}`);\n      const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${tickerSymbol}`);\n      if (!response.ok) throw new Error(\"Failed to fetch chart data.\");\n      const data = await response.json();\n      console.log(\"Raw API Response:\", data);\n      if (data && data.dates && Array.isArray(data.dates) && data.dates.length > 0) {\n        const formattedData = data.dates.map((date, index) => {\n          var _data$open$index, _data$open, _data$high$index, _data$high, _data$low$index, _data$low, _data$close$index, _data$close;\n          return {\n            x: new Date(date),\n            open: (_data$open$index = (_data$open = data.open) === null || _data$open === void 0 ? void 0 : _data$open[index]) !== null && _data$open$index !== void 0 ? _data$open$index : null,\n            high: (_data$high$index = (_data$high = data.high) === null || _data$high === void 0 ? void 0 : _data$high[index]) !== null && _data$high$index !== void 0 ? _data$high$index : null,\n            low: (_data$low$index = (_data$low = data.low) === null || _data$low === void 0 ? void 0 : _data$low[index]) !== null && _data$low$index !== void 0 ? _data$low$index : null,\n            close: (_data$close$index = (_data$close = data.close) === null || _data$close === void 0 ? void 0 : _data$close[index]) !== null && _data$close$index !== void 0 ? _data$close$index : null\n          };\n        }).filter(entry => entry.x && entry.open !== null && entry.high !== null && entry.low !== null && entry.close !== null);\n        if (formattedData.length === 0) {\n          throw new Error(\"No valid stock data found.\");\n        }\n        setChartData(formattedData);\n        setError(\"\");\n      } else {\n        throw new Error(\"No data available for the selected ticker.\");\n      }\n    } catch (err) {\n      console.error(\"Error fetching chart data:\", err);\n      setChartData([]);\n      setError(err.message || \"Failed to load chart data.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchChartData(selectedTicker);\n  }, [selectedTicker]);\n  useEffect(() => {\n    if (chartData.length > 0) {\n      setTimeout(() => setLoading(false), 100); // Small delay to avoid race condition\n    }\n  }, [chartData]);\n  const handleSearch = () => {\n    if (ticker.trim() !== \"\") {\n      setSelectedTicker(ticker.toUpperCase());\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stocks-page\",\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [selectedTicker, \" Stock Analysis\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-stock\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter stock ticker (e.g., AAPL)\",\n        value: ticker,\n        onChange: e => setTicker(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chart-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\",\n          color: \"gray\"\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\",\n          textAlign: \"center\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this) : chartData.length > 0 ? /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n        children: /*#__PURE__*/_jsxDEV(StockChartComponent, {\n          id: \"stockchart\",\n          enableSelector: true,\n          primaryXAxis: {\n            valueType: \"DateTime\",\n            labelFormat: \"MMM dd\",\n            majorGridLines: {\n              width: 0\n            },\n            intervalType: \"Days\",\n            crosshairTooltip: {\n              enable: true\n            }\n          },\n          primaryYAxis: {\n            labelFormat: \"${value}\",\n            majorGridLines: {\n              width: 0\n            },\n            rangePadding: \"None\",\n            crosshairTooltip: {\n              enable: true\n            }\n          },\n          tooltip: {\n            enable: true\n          },\n          crosshair: {\n            enable: true\n          },\n          periods: periods,\n          title: `${selectedTicker} Stock Analysis`,\n          height: \"100%\",\n          width: \"100%\",\n          children: [/*#__PURE__*/_jsxDEV(Inject, {\n            services: [DateTime, Tooltip, RangeTooltip, Crosshair, LineSeries, CandleSeries, Legend, Export, EmaIndicator, TmaIndicator, SmaIndicator, MomentumIndicator, AtrIndicator, AccumulationDistributionIndicator, BollingerBands, MacdIndicator, StochasticIndicator, RsiIndicator]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StockChartSeriesCollectionDirective, {\n            children: /*#__PURE__*/_jsxDEV(StockChartSeriesDirective, {\n              dataSource: chartData,\n              xName: \"x\",\n              open: \"open\",\n              high: \"high\",\n              low: \"low\",\n              close: \"close\",\n              type: \"Candle\",\n              animation: {\n                enable: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\",\n          color: \"gray\"\n        },\n        children: \"No data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(StocksPage, \"5xcZlwivBEwGsCMIIqhqysX91Pg=\");\n_c = StocksPage;\nexport default StocksPage;\nvar _c;\n$RefreshReg$(_c, \"StocksPage\");","map":{"version":3,"names":["React","useState","useEffect","ErrorBoundary","StockTracker","io","StockChartComponent","StockChartSeriesCollectionDirective","StockChartSeriesDirective","Inject","DateTime","Tooltip","RangeTooltip","Crosshair","LineSeries","CandleSeries","Legend","Export","EmaIndicator","TmaIndicator","SmaIndicator","MomentumIndicator","AtrIndicator","AccumulationDistributionIndicator","BollingerBands","MacdIndicator","StochasticIndicator","RsiIndicator","jsxDEV","_jsxDEV","socket","StocksPage","_s","ticker","setTicker","selectedTicker","setSelectedTicker","chartData","setChartData","error","setError","loading","setLoading","periods","intervalType","interval","text","fetchChartData","tickerSymbol","console","log","response","fetch","ok","Error","data","json","dates","Array","isArray","length","formattedData","map","date","index","_data$open$index","_data$open","_data$high$index","_data$high","_data$low$index","_data$low","_data$close$index","_data$close","x","Date","open","high","low","close","filter","entry","err","message","setTimeout","handleSearch","trim","toUpperCase","className","style","padding","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","id","color","enableSelector","primaryXAxis","valueType","labelFormat","majorGridLines","width","crosshairTooltip","enable","primaryYAxis","rangePadding","tooltip","crosshair","title","height","services","dataSource","xName","animation","_c","$RefreshReg$"],"sources":["C:/Users/gabby/trax-x/src/components/StocksPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ErrorBoundary from \"./ErrorBoundary\";\r\nimport StockTracker from \"./StockTracker\";\r\nimport io from \"socket.io-client\";\r\nimport \"./StocksPage.css\";\r\n\r\nimport {\r\n  StockChartComponent,\r\n  StockChartSeriesCollectionDirective,\r\n  StockChartSeriesDirective,\r\n  Inject,\r\n  DateTime,\r\n  Tooltip,\r\n  RangeTooltip,\r\n  Crosshair,\r\n  LineSeries,\r\n  CandleSeries,\r\n  Legend,\r\n  Export,\r\n  EmaIndicator,\r\n  TmaIndicator,\r\n  SmaIndicator,\r\n  MomentumIndicator,\r\n  AtrIndicator,\r\n  AccumulationDistributionIndicator,\r\n  BollingerBands,\r\n  MacdIndicator,\r\n  StochasticIndicator,\r\n  RsiIndicator,\r\n} from \"@syncfusion/ej2-react-charts\";\r\n\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nconst StocksPage = () => {\r\n  const [ticker, setTicker] = useState(\"\");\r\n  const [selectedTicker, setSelectedTicker] = useState(\"AAPL\");\r\n  const [chartData, setChartData] = useState([]); // Ensure chartData defaults to an empty array\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const periods = [\r\n    { intervalType: \"Months\", interval: 1, text: \"1M\" },\r\n    { intervalType: \"Months\", interval: 3, text: \"3M\" },\r\n    { intervalType: \"Months\", interval: 6, text: \"6M\" },\r\n    { intervalType: \"Years\", interval: 1, text: \"YTD\" },\r\n    { intervalType: \"Years\", interval: 3, text: \"All\" },\r\n  ];\r\n\r\n  // Fetch historical chart data\r\n  const fetchChartData = async (tickerSymbol) => {\r\n    setLoading(true);\r\n    try {\r\n      console.log(`Fetching data for ${tickerSymbol}`);\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/candlestick?ticker=${tickerSymbol}`\r\n      );\r\n      if (!response.ok) throw new Error(\"Failed to fetch chart data.\");\r\n\r\n      const data = await response.json();\r\n      console.log(\"Raw API Response:\", data);\r\n\r\n      if (data && data.dates && Array.isArray(data.dates) && data.dates.length > 0) {\r\n        const formattedData = data.dates\r\n          .map((date, index) => ({\r\n            x: new Date(date),\r\n            open: data.open?.[index] ?? null,\r\n            high: data.high?.[index] ?? null,\r\n            low: data.low?.[index] ?? null,\r\n            close: data.close?.[index] ?? null,\r\n          }))\r\n          .filter(entry => entry.x && entry.open !== null && entry.high !== null && entry.low !== null && entry.close !== null);\r\n\r\n        if (formattedData.length === 0) {\r\n          throw new Error(\"No valid stock data found.\");\r\n        }\r\n\r\n        setChartData(formattedData);\r\n        setError(\"\");\r\n      } else {\r\n        throw new Error(\"No data available for the selected ticker.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching chart data:\", err);\r\n      setChartData([]);\r\n      setError(err.message || \"Failed to load chart data.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchChartData(selectedTicker);\r\n}, [selectedTicker]);\r\n\r\nuseEffect(() => {\r\n    if (chartData.length > 0) {\r\n        setTimeout(() => setLoading(false), 100); // Small delay to avoid race condition\r\n    }\r\n}, [chartData]);\r\n\r\n\r\n  const handleSearch = () => {\r\n    if (ticker.trim() !== \"\") {\r\n      setSelectedTicker(ticker.toUpperCase());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"stocks-page\" style={{ padding: \"20px\" }}>\r\n      <div className=\"stock-header\">\r\n        <h2 style={{ textAlign: \"center\" }}>{selectedTicker} Stock Analysis</h2>\r\n      </div>\r\n\r\n      <div className=\"search-stock\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter stock ticker (e.g., AAPL)\"\r\n          value={ticker}\r\n          onChange={(e) => setTicker(e.target.value)}\r\n        />\r\n        <button onClick={handleSearch}>Search</button>\r\n      </div>\r\n\r\n      <div id=\"chart-container\">\r\n        {loading ? (\r\n          <p style={{ textAlign: \"center\", color: \"gray\" }}>Loading...</p>\r\n        ) : error ? (\r\n          <p style={{ color: \"red\", textAlign: \"center\" }}>{error}</p>\r\n        ) : chartData.length > 0 ? (\r\n          <ErrorBoundary>\r\n            <StockChartComponent\r\n              id=\"stockchart\"\r\n              enableSelector={true}\r\n              primaryXAxis={{\r\n                valueType: \"DateTime\",\r\n                labelFormat: \"MMM dd\",\r\n                majorGridLines: { width: 0 },\r\n                intervalType: \"Days\",\r\n                crosshairTooltip: { enable: true },\r\n              }}\r\n              primaryYAxis={{\r\n                labelFormat: \"${value}\",\r\n                majorGridLines: { width: 0 },\r\n                rangePadding: \"None\",\r\n                crosshairTooltip: { enable: true },\r\n              }}\r\n              tooltip={{ enable: true }}\r\n              crosshair={{ enable: true }}\r\n              periods={periods}\r\n              title={`${selectedTicker} Stock Analysis`}\r\n              height=\"100%\"\r\n              width=\"100%\"\r\n            >\r\n              <Inject\r\n                services={[\r\n                  DateTime,\r\n                  Tooltip,\r\n                  RangeTooltip,\r\n                  Crosshair,\r\n                  LineSeries,\r\n                  CandleSeries,\r\n                  Legend,\r\n                  Export,\r\n                  EmaIndicator,\r\n                  TmaIndicator,\r\n                  SmaIndicator,\r\n                  MomentumIndicator,\r\n                  AtrIndicator,\r\n                  AccumulationDistributionIndicator,\r\n                  BollingerBands,\r\n                  MacdIndicator,\r\n                  StochasticIndicator,\r\n                  RsiIndicator,\r\n                ]}\r\n              />\r\n              <StockChartSeriesCollectionDirective>\r\n                <StockChartSeriesDirective\r\n                  dataSource={chartData}\r\n                  xName=\"x\"\r\n                  open=\"open\"\r\n                  high=\"high\"\r\n                  low=\"low\"\r\n                  close=\"close\"\r\n                  type=\"Candle\"\r\n                  animation={{ enable: true }}\r\n                />\r\n              </StockChartSeriesCollectionDirective>\r\n            </StockChartComponent>\r\n          </ErrorBoundary>\r\n        ) : (\r\n          <p style={{ textAlign: \"center\", color: \"gray\" }}>No data available.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StocksPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}