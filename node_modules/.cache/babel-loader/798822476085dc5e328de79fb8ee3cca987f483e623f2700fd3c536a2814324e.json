{"ast":null,"code":"import { max, sum } from \"d3-array\";\nimport * as React from \"react\";\nimport { ChartCanvasContext, first, GenericComponent, isDefined, last } from \"@react-financial-charts/core\";\nconst PADDING = 4;\nconst X = 8;\nconst Y = 8;\nconst roundRect = (ctx, x, y, width, height, radius) => {\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.lineTo(x + width - radius, y);\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n  ctx.lineTo(x + width, y + height - radius);\n  ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n  ctx.lineTo(x + radius, y + height);\n  ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n  ctx.lineTo(x, y + radius);\n  ctx.quadraticCurveTo(x, y, x + radius, y);\n  ctx.closePath();\n};\nconst defaultBackgroundShapeCanvas = (props, {\n  width,\n  height\n}, ctx) => {\n  const {\n    toolTipFillStyle,\n    toolTipStrokeStyle\n  } = props;\n  ctx.beginPath();\n  roundRect(ctx, 0, 0, width, height, 4);\n  if (toolTipFillStyle !== undefined) {\n    ctx.fillStyle = toolTipFillStyle;\n    ctx.shadowColor = \"#898\";\n    ctx.shadowBlur = 4;\n    ctx.fill();\n    ctx.shadowBlur = 0;\n  }\n  if (toolTipStrokeStyle !== undefined) {\n    ctx.strokeStyle = toolTipStrokeStyle;\n    ctx.stroke();\n  }\n};\nconst defaultTooltipCanvas = (props, content, ctx) => {\n  var _a, _b;\n  const {\n    fontSize = 14,\n    fontFamily,\n    fontFill\n  } = props;\n  const startY = Y + fontSize * 0.9;\n  ctx.font = `bold ${fontSize}px ${fontFamily}`;\n  if (fontFill !== undefined) {\n    ctx.fillStyle = fontFill;\n  }\n  ctx.textAlign = \"left\";\n  ctx.fillText(content.x, X, startY);\n  const maxLabel = (_a = max(content.y, y => ctx.measureText(y.label).width)) !== null && _a !== void 0 ? _a : 0;\n  for (let i = 0; i < content.y.length; i++) {\n    const y = content.y[i];\n    const textY = (i + 1) * PADDING + startY + fontSize * (i + 1);\n    ctx.font = `${fontSize}px ${fontFamily}`;\n    ctx.fillStyle = (_b = y.stroke) !== null && _b !== void 0 ? _b : fontFill;\n    ctx.fillText(y.label, X, textY);\n    if (fontFill !== undefined) {\n      ctx.fillStyle = fontFill;\n    }\n    ctx.fillText(y.value, X * 2 + maxLabel, textY);\n  }\n};\nconst drawOnCanvas = (ctx, props, context, pointer, height) => {\n  const {\n    margin,\n    ratio\n  } = context;\n  const {\n    backgroundShapeCanvas,\n    tooltipCanvas,\n    background\n  } = props;\n  const originX = 0.5 * ratio + margin.left;\n  const originY = 0.5 * ratio + margin.top;\n  ctx.save();\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.scale(ratio, ratio);\n  ctx.translate(originX, originY);\n  const {\n    x,\n    y,\n    content,\n    centerX,\n    pointWidth,\n    bgSize\n  } = pointer;\n  if ((background === null || background === void 0 ? void 0 : background.fillStyle) !== undefined) {\n    ctx.fillStyle = background.fillStyle;\n  }\n  ctx.beginPath();\n  ctx.rect(centerX - pointWidth / 2, 0, pointWidth, height);\n  ctx.fill();\n  ctx.translate(x, y);\n  backgroundShapeCanvas(props, bgSize, ctx);\n  tooltipCanvas(props, content, ctx);\n  ctx.restore();\n};\nconst calculateTooltipSize = (props, content, ctx) => {\n  const {\n    fontFamily,\n    fontSize = 12,\n    fontFill\n  } = props;\n  ctx.font = `bold ${fontSize}px ${fontFamily}`;\n  if (fontFill !== undefined) {\n    ctx.fillStyle = fontFill;\n  }\n  ctx.textAlign = \"left\";\n  const measureText = str => ({\n    width: ctx.measureText(str).width,\n    height: fontSize + PADDING\n  });\n  const {\n    width,\n    height\n  } = content.y.map(({\n    label,\n    value\n  }) => measureText(`${label}  ${value}`))\n  // Sum all y and x sizes (begin with x label size)\n  .reduce((res, size) => sumSizes(res, size), measureText(String(content.x)));\n  return {\n    width: width + 2 * X,\n    height: height + 2 * Y\n  };\n};\nconst sumSizes = (...sizes) => {\n  return {\n    width: Math.max(...sizes.map(size => size.width)),\n    height: sum(sizes, d => d.height)\n  };\n};\nconst normalizeX = (x, bgSize, pointWidth, width) => {\n  return x < width / 2 ? x + pointWidth / 2 + PADDING : x - bgSize.width - pointWidth / 2 - PADDING;\n};\nconst normalizeY = (y, bgSize) => {\n  return y - bgSize.height <= 0 ? y + PADDING : y - bgSize.height - PADDING;\n};\nconst defaultOrigin = (props, moreProps, bgSize, pointWidth) => {\n  const {\n    chartId,\n    yAccessor\n  } = props;\n  const {\n    mouseXY,\n    xAccessor,\n    currentItem,\n    xScale,\n    chartConfig,\n    width\n  } = moreProps;\n  let y = last(mouseXY);\n  const xValue = xAccessor(currentItem);\n  let x = Math.round(xScale(xValue));\n  if (isDefined(chartId) && isDefined(yAccessor) && isDefined(chartConfig) && isDefined(chartConfig.findIndex)) {\n    const yValue = yAccessor(currentItem);\n    const chartIndex = chartConfig.findIndex(c => c.id === chartId);\n    y = Math.round(chartConfig[chartIndex].yScale(yValue));\n  }\n  x = normalizeX(x, bgSize, pointWidth, width);\n  y = normalizeY(y, bgSize);\n  return [x, y];\n};\nexport class HoverTooltip extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.drawOnCanvas = (ctx, moreProps) => {\n      const pointer = this.helper(ctx, moreProps);\n      if (pointer === undefined) {\n        return;\n      }\n      const {\n        height\n      } = moreProps;\n      drawOnCanvas(ctx, this.props, this.context, pointer, height);\n    };\n    this.helper = (ctx, moreProps) => {\n      const {\n        show,\n        xScale,\n        currentItem,\n        plotData,\n        xAccessor,\n        displayXAccessor\n      } = moreProps;\n      const {\n        origin = HoverTooltip.defaultProps.origin,\n        tooltip\n      } = this.props;\n      if (!show || currentItem === undefined) {\n        return;\n      }\n      const xValue = xAccessor(currentItem);\n      if (xValue === undefined) {\n        return;\n      }\n      const content = tooltip.content({\n        currentItem,\n        xAccessor: displayXAccessor\n      });\n      const centerX = xScale(xValue);\n      const pointWidth = Math.abs(xScale(xAccessor(last(plotData))) - xScale(xAccessor(first(plotData)))) / (plotData.length - 1);\n      const bgSize = calculateTooltipSize(this.props, content, ctx);\n      const [x, y] = origin(this.props, moreProps, bgSize, pointWidth);\n      return {\n        x,\n        y,\n        content,\n        centerX,\n        pointWidth,\n        bgSize\n      };\n    };\n  }\n  render() {\n    return React.createElement(GenericComponent, {\n      canvasDraw: this.drawOnCanvas,\n      drawOn: [\"mousemove\", \"pan\"]\n    });\n  }\n}\nHoverTooltip.defaultProps = {\n  background: {\n    fillStyle: \"rgba(33, 148, 243, 0.1)\"\n  },\n  toolTipFillStyle: \"rgba(250, 250, 250, 1)\",\n  toolTipStrokeStyle: \"rgba(33, 148, 243)\",\n  tooltipCanvas: defaultTooltipCanvas,\n  origin: defaultOrigin,\n  backgroundShapeCanvas: defaultBackgroundShapeCanvas,\n  fontFill: \"#000000\",\n  fontFamily: \"-apple-system, system-ui, Roboto, 'Helvetica Neue', Ubuntu, sans-serif\",\n  fontSize: 14\n};\nHoverTooltip.contextType = ChartCanvasContext;","map":{"version":3,"names":["max","sum","React","ChartCanvasContext","first","GenericComponent","isDefined","last","PADDING","X","Y","roundRect","ctx","x","y","width","height","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","defaultBackgroundShapeCanvas","props","toolTipFillStyle","toolTipStrokeStyle","undefined","fillStyle","shadowColor","shadowBlur","fill","strokeStyle","stroke","defaultTooltipCanvas","content","fontSize","fontFamily","fontFill","startY","font","textAlign","fillText","maxLabel","_a","measureText","label","i","length","textY","_b","value","drawOnCanvas","context","pointer","margin","ratio","backgroundShapeCanvas","tooltipCanvas","background","originX","left","originY","top","save","setTransform","scale","translate","centerX","pointWidth","bgSize","rect","restore","calculateTooltipSize","str","map","reduce","res","size","sumSizes","String","sizes","Math","d","normalizeX","normalizeY","defaultOrigin","moreProps","chartId","yAccessor","mouseXY","xAccessor","currentItem","xScale","chartConfig","xValue","round","findIndex","yValue","chartIndex","c","id","yScale","HoverTooltip","Component","constructor","helper","show","plotData","displayXAccessor","origin","defaultProps","tooltip","abs","render","createElement","canvasDraw","drawOn","contextType"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\tooltip\\src\\HoverTooltip.tsx"],"sourcesContent":["import { max, sum } from \"d3-array\";\nimport * as React from \"react\";\nimport { ChartCanvasContext, first, GenericComponent, isDefined, last } from \"@react-financial-charts/core\";\n\nconst PADDING = 4;\nconst X = 8;\nconst Y = 8;\n\nconst roundRect = (\n    ctx: CanvasRenderingContext2D,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    radius: number,\n) => {\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n};\n\nconst defaultBackgroundShapeCanvas = (\n    props: HoverTooltipProps,\n    { width, height }: { width: number; height: number },\n    ctx: CanvasRenderingContext2D,\n) => {\n    const { toolTipFillStyle, toolTipStrokeStyle } = props;\n\n    ctx.beginPath();\n    roundRect(ctx, 0, 0, width, height, 4);\n    if (toolTipFillStyle !== undefined) {\n        ctx.fillStyle = toolTipFillStyle;\n        ctx.shadowColor = \"#898\";\n        ctx.shadowBlur = 4;\n        ctx.fill();\n        ctx.shadowBlur = 0;\n    }\n\n    if (toolTipStrokeStyle !== undefined) {\n        ctx.strokeStyle = toolTipStrokeStyle;\n        ctx.stroke();\n    }\n};\n\nconst defaultTooltipCanvas = (props: HoverTooltipProps, content: any, ctx: CanvasRenderingContext2D) => {\n    const { fontSize = 14, fontFamily, fontFill } = props;\n\n    const startY = Y + fontSize * 0.9;\n    ctx.font = `bold ${fontSize}px ${fontFamily}`;\n    if (fontFill !== undefined) {\n        ctx.fillStyle = fontFill;\n    }\n    ctx.textAlign = \"left\";\n    ctx.fillText(content.x, X, startY);\n\n    const maxLabel = max(content.y, (y: any) => ctx.measureText(y.label as string).width) ?? 0;\n\n    for (let i = 0; i < content.y.length; i++) {\n        const y = content.y[i];\n        const textY = (i + 1) * PADDING + startY + fontSize * (i + 1);\n        ctx.font = `${fontSize}px ${fontFamily}`;\n        ctx.fillStyle = y.stroke ?? fontFill;\n        ctx.fillText(y.label, X, textY);\n\n        if (fontFill !== undefined) {\n            ctx.fillStyle = fontFill;\n        }\n        ctx.fillText(y.value, X * 2 + maxLabel, textY);\n    }\n};\n\nconst drawOnCanvas = (\n    ctx: CanvasRenderingContext2D,\n    props: HoverTooltipProps,\n    context: any,\n    pointer: any,\n    height: number,\n) => {\n    const { margin, ratio } = context;\n    const { backgroundShapeCanvas, tooltipCanvas, background } = props;\n\n    const originX = 0.5 * ratio + margin.left;\n    const originY = 0.5 * ratio + margin.top;\n\n    ctx.save();\n\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.scale(ratio, ratio);\n\n    ctx.translate(originX, originY);\n\n    const { x, y, content, centerX, pointWidth, bgSize } = pointer;\n\n    if (background?.fillStyle !== undefined) {\n        ctx.fillStyle = background.fillStyle;\n    }\n    ctx.beginPath();\n    ctx.rect(centerX - pointWidth / 2, 0, pointWidth, height);\n    ctx.fill();\n\n    ctx.translate(x, y);\n\n    backgroundShapeCanvas(props, bgSize, ctx);\n\n    tooltipCanvas(props, content, ctx);\n\n    ctx.restore();\n};\n\nconst calculateTooltipSize = (props: HoverTooltipProps, content: any, ctx: CanvasRenderingContext2D) => {\n    const { fontFamily, fontSize = 12, fontFill } = props;\n\n    ctx.font = `bold ${fontSize}px ${fontFamily}`;\n    if (fontFill !== undefined) {\n        ctx.fillStyle = fontFill;\n    }\n    ctx.textAlign = \"left\";\n\n    const measureText = (str: string) => ({\n        width: ctx.measureText(str).width,\n        height: fontSize + PADDING,\n    });\n\n    const { width, height } = content.y\n        .map(({ label, value }: any) => measureText(`${label}  ${value}`))\n        // Sum all y and x sizes (begin with x label size)\n        .reduce((res: any, size: any) => sumSizes(res, size), measureText(String(content.x)));\n\n    return {\n        width: width + 2 * X,\n        height: height + 2 * Y,\n    };\n};\n\nconst sumSizes = (...sizes: any[]) => {\n    return {\n        width: Math.max(...sizes.map((size) => size.width)),\n        height: sum(sizes, (d) => d.height),\n    };\n};\n\nconst normalizeX = (x: number, bgSize: any, pointWidth: number, width: number) => {\n    return x < width / 2 ? x + pointWidth / 2 + PADDING : x - bgSize.width - pointWidth / 2 - PADDING;\n};\n\nconst normalizeY = (y: number, bgSize: any) => {\n    return y - bgSize.height <= 0 ? y + PADDING : y - bgSize.height - PADDING;\n};\n\nconst defaultOrigin = (props: HoverTooltipProps, moreProps: any, bgSize: any, pointWidth: any) => {\n    const { chartId, yAccessor } = props;\n\n    const { mouseXY, xAccessor, currentItem, xScale, chartConfig, width } = moreProps;\n\n    let y = last(mouseXY);\n\n    const xValue = xAccessor(currentItem);\n\n    let x = Math.round(xScale(xValue));\n\n    if (isDefined(chartId) && isDefined(yAccessor) && isDefined(chartConfig) && isDefined(chartConfig.findIndex)) {\n        const yValue = yAccessor(currentItem);\n        const chartIndex = chartConfig.findIndex((c: any) => c.id === chartId);\n\n        y = Math.round(chartConfig[chartIndex].yScale(yValue));\n    }\n\n    x = normalizeX(x, bgSize, pointWidth, width);\n    y = normalizeY(y, bgSize);\n\n    return [x, y];\n};\n\nexport interface HoverTooltipProps {\n    readonly background?: {\n        fillStyle?: string;\n        height?: number;\n        strokeStyle?: string;\n        width?: number;\n    };\n    readonly backgroundShapeCanvas: (\n        props: HoverTooltipProps,\n        { width, height }: { width: number; height: number },\n        ctx: CanvasRenderingContext2D,\n    ) => void;\n    readonly chartId?: number | string;\n    readonly fontFamily?: string;\n    readonly fontFill?: string;\n    readonly fontSize?: number;\n    readonly origin?: (\n        props: HoverTooltipProps,\n        moreProps: any,\n        bgSize: { width: number; height: number },\n        pointWidth: number,\n    ) => [number, number];\n    readonly tooltip: {\n        content: (data: any) => { x: string; y: { label: string; value?: string; stroke?: string }[] };\n    };\n    readonly toolTipFillStyle?: string;\n    readonly toolTipStrokeStyle?: string;\n    readonly tooltipCanvas: (props: HoverTooltipProps, content: any, ctx: CanvasRenderingContext2D) => void;\n    readonly yAccessor: (data: any) => number;\n}\n\nexport class HoverTooltip extends React.Component<HoverTooltipProps> {\n    public static defaultProps = {\n        background: {\n            fillStyle: \"rgba(33, 148, 243, 0.1)\",\n        },\n        toolTipFillStyle: \"rgba(250, 250, 250, 1)\",\n        toolTipStrokeStyle: \"rgba(33, 148, 243)\",\n        tooltipCanvas: defaultTooltipCanvas,\n        origin: defaultOrigin,\n        backgroundShapeCanvas: defaultBackgroundShapeCanvas,\n        fontFill: \"#000000\",\n        fontFamily: \"-apple-system, system-ui, Roboto, 'Helvetica Neue', Ubuntu, sans-serif\",\n        fontSize: 14,\n    };\n\n    public static contextType = ChartCanvasContext;\n\n    public render() {\n        return <GenericComponent canvasDraw={this.drawOnCanvas} drawOn={[\"mousemove\", \"pan\"]} />;\n    }\n\n    private readonly drawOnCanvas = (ctx: CanvasRenderingContext2D, moreProps: any) => {\n        const pointer = this.helper(ctx, moreProps);\n        if (pointer === undefined) {\n            return;\n        }\n\n        const { height } = moreProps;\n\n        drawOnCanvas(ctx, this.props, this.context, pointer, height);\n    };\n\n    private readonly helper = (ctx: CanvasRenderingContext2D, moreProps: any) => {\n        const { show, xScale, currentItem, plotData, xAccessor, displayXAccessor } = moreProps;\n\n        const { origin = HoverTooltip.defaultProps.origin, tooltip } = this.props;\n\n        if (!show || currentItem === undefined) {\n            return;\n        }\n\n        const xValue = xAccessor(currentItem);\n        if (xValue === undefined) {\n            return;\n        }\n\n        const content = tooltip.content({ currentItem, xAccessor: displayXAccessor });\n        const centerX = xScale(xValue);\n        const pointWidth =\n            Math.abs(xScale(xAccessor(last(plotData))) - xScale(xAccessor(first(plotData)))) / (plotData.length - 1);\n\n        const bgSize = calculateTooltipSize(this.props, content, ctx);\n\n        const [x, y] = origin(this.props, moreProps, bgSize, pointWidth);\n\n        return { x, y, content, centerX, pointWidth, bgSize };\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}