{"ast":null,"code":"import * as React from \"react\";\nimport { ChartCanvasContext, chartCanvasContextDefaultValue } from \"./ChartCanvas\";\nexport const ChartContext = React.createContext(Object.assign(Object.assign({}, chartCanvasContextDefaultValue), {\n  // @ts-ignore\n  chartConfig: {},\n  chartId: 0\n}));\nexport const Chart = React.memo(props => {\n  const {\n    // flipYScale = false,\n    id = 0,\n    // origin = [0, 0],\n    // padding = 0,\n    // yPan = true,\n    // yPanEnabled = false,\n    // yScale = scaleLinear(),\n    onContextMenu,\n    onDoubleClick\n  } = props;\n  const chartCanvasContextValue = React.useContext(ChartCanvasContext);\n  const {\n    subscribe,\n    unsubscribe,\n    chartConfigs\n  } = chartCanvasContextValue;\n  const listener = React.useCallback((type, moreProps, _, e) => {\n    switch (type) {\n      case \"contextmenu\":\n        {\n          if (onContextMenu === undefined) {\n            return;\n          }\n          const {\n            currentCharts\n          } = moreProps;\n          if (currentCharts.indexOf(id) > -1) {\n            onContextMenu(e, moreProps);\n          }\n          break;\n        }\n      case \"dblclick\":\n        {\n          if (onDoubleClick === undefined) {\n            return;\n          }\n          const {\n            currentCharts\n          } = moreProps;\n          if (currentCharts.indexOf(id) > -1) {\n            onDoubleClick(e, moreProps);\n          }\n          break;\n        }\n    }\n  }, [onContextMenu, onDoubleClick, id]);\n  React.useEffect(() => {\n    subscribe(`chart_${id}`, {\n      listener\n    });\n    return () => unsubscribe(`chart_${id}`);\n  }, [subscribe, unsubscribe, id, listener]);\n  const config = chartConfigs.find(({\n    id\n  }) => id === props.id);\n  const contextValue = React.useMemo(() => {\n    return Object.assign(Object.assign({}, chartCanvasContextValue), {\n      chartId: id,\n      chartConfig: config\n    });\n  }, [id, config, chartCanvasContextValue]);\n  const {\n    origin: [x, y]\n  } = config;\n  return React.createElement(ChartContext.Provider, {\n    value: contextValue\n  }, React.createElement(\"g\", {\n    transform: `translate(${x}, ${y})`,\n    id: `chart_${id}`\n  }, props.children));\n});\nChart.displayName = \"Chart\";","map":{"version":3,"names":["React","ChartCanvasContext","chartCanvasContextDefaultValue","ChartContext","createContext","Object","assign","chartConfig","chartId","Chart","memo","props","id","onContextMenu","onDoubleClick","chartCanvasContextValue","useContext","subscribe","unsubscribe","chartConfigs","listener","useCallback","type","moreProps","_","e","undefined","currentCharts","indexOf","useEffect","config","find","contextValue","useMemo","origin","x","y","createElement","Provider","value","transform","children","displayName"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\core\\src\\Chart.tsx"],"sourcesContent":["import { ScaleContinuousNumeric } from \"d3-scale\";\nimport * as React from \"react\";\nimport { ChartCanvasContext, chartCanvasContextDefaultValue, ChartCanvasContextType } from \"./ChartCanvas\";\nimport type { ChartConfig } from \"./utils/ChartDataUtil\";\n\nexport type ChartContextType = Omit<ChartCanvasContextType<number | Date>, \"chartConfig\"> & {\n    chartConfig: ChartConfig;\n};\nexport const ChartContext = React.createContext<ChartContextType>({\n    ...chartCanvasContextDefaultValue,\n    // @ts-ignore\n    chartConfig: {},\n    chartId: 0,\n});\n\nexport interface ChartProps {\n    readonly flipYScale?: boolean;\n    readonly height?: number;\n    readonly id: number | string;\n    readonly onContextMenu?: (event: React.MouseEvent, moreProps: any) => void;\n    readonly onDoubleClick?: (event: React.MouseEvent, moreProps: any) => void;\n    readonly origin?: number[] | ((width: number, height: number) => number[]);\n    readonly padding?: number | { top: number; bottom: number };\n    readonly yExtents?: number[] | ((data: any) => number) | ((data: any) => number[]);\n    readonly yExtentsCalculator?: (options: {\n        plotData: any[];\n        xDomain: any;\n        xAccessor: any;\n        displayXAccessor: any;\n        fullData: any[];\n    }) => number[];\n    readonly yPan?: boolean;\n    readonly yPanEnabled?: boolean;\n    readonly yScale?: ScaleContinuousNumeric<number, number>;\n}\n\nexport const Chart = React.memo((props: React.PropsWithChildren<ChartProps>) => {\n    const {\n        // flipYScale = false,\n        id = 0,\n        // origin = [0, 0],\n        // padding = 0,\n        // yPan = true,\n        // yPanEnabled = false,\n        // yScale = scaleLinear(),\n        onContextMenu,\n        onDoubleClick,\n    } = props;\n\n    const chartCanvasContextValue = React.useContext(ChartCanvasContext);\n    const { subscribe, unsubscribe, chartConfigs } = chartCanvasContextValue;\n\n    const listener = React.useCallback(\n        (type: string, moreProps: any, _: any, e: React.MouseEvent) => {\n            switch (type) {\n                case \"contextmenu\": {\n                    if (onContextMenu === undefined) {\n                        return;\n                    }\n\n                    const { currentCharts } = moreProps;\n                    if (currentCharts.indexOf(id) > -1) {\n                        onContextMenu(e, moreProps);\n                    }\n\n                    break;\n                }\n                case \"dblclick\": {\n                    if (onDoubleClick === undefined) {\n                        return;\n                    }\n\n                    const { currentCharts } = moreProps;\n                    if (currentCharts.indexOf(id) > -1) {\n                        onDoubleClick(e, moreProps);\n                    }\n\n                    break;\n                }\n            }\n        },\n        [onContextMenu, onDoubleClick, id],\n    );\n\n    React.useEffect(() => {\n        subscribe(`chart_${id}`, {\n            listener,\n        });\n        return () => unsubscribe(`chart_${id}`);\n    }, [subscribe, unsubscribe, id, listener]);\n\n    const config = chartConfigs.find(({ id }) => id === props.id)!;\n    const contextValue = React.useMemo(() => {\n        return {\n            ...chartCanvasContextValue,\n            chartId: id,\n            chartConfig: config,\n        };\n    }, [id, config, chartCanvasContextValue]);\n\n    const {\n        origin: [x, y],\n    } = config;\n\n    return (\n        <ChartContext.Provider value={contextValue}>\n            <g transform={`translate(${x}, ${y})`} id={`chart_${id}`}>\n                {props.children}\n            </g>\n        </ChartContext.Provider>\n    );\n});\n\nChart.displayName = \"Chart\";\n"],"mappings":"AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,kBAAkB,EAAEC,8BAA8B,QAAgC,eAAe;AAM1G,OAAO,MAAMC,YAAY,GAAGH,KAAK,CAACI,aAAa,CAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACxCJ,8BAA8B;EACjC;EACAK,WAAW,EAAE,EAAE;EACfC,OAAO,EAAE;AAAC,GACZ;AAuBF,OAAO,MAAMC,KAAK,GAAGT,KAAK,CAACU,IAAI,CAAEC,KAA0C,IAAI;EAC3E,MAAM;IACF;IACAC,EAAE,GAAG,CAAC;IACN;IACA;IACA;IACA;IACA;IACAC,aAAa;IACbC;EAAa,CAChB,GAAGH,KAAK;EAET,MAAMI,uBAAuB,GAAGf,KAAK,CAACgB,UAAU,CAACf,kBAAkB,CAAC;EACpE,MAAM;IAAEgB,SAAS;IAAEC,WAAW;IAAEC;EAAY,CAAE,GAAGJ,uBAAuB;EAExE,MAAMK,QAAQ,GAAGpB,KAAK,CAACqB,WAAW,CAC9B,CAACC,IAAY,EAAEC,SAAc,EAAEC,CAAM,EAAEC,CAAmB,KAAI;IAC1D,QAAQH,IAAI;MACR,KAAK,aAAa;QAAE;UAChB,IAAIT,aAAa,KAAKa,SAAS,EAAE;YAC7B;;UAGJ,MAAM;YAAEC;UAAa,CAAE,GAAGJ,SAAS;UACnC,IAAII,aAAa,CAACC,OAAO,CAAChB,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;YAChCC,aAAa,CAACY,CAAC,EAAEF,SAAS,CAAC;;UAG/B;;MAEJ,KAAK,UAAU;QAAE;UACb,IAAIT,aAAa,KAAKY,SAAS,EAAE;YAC7B;;UAGJ,MAAM;YAAEC;UAAa,CAAE,GAAGJ,SAAS;UACnC,IAAII,aAAa,CAACC,OAAO,CAAChB,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;YAChCE,aAAa,CAACW,CAAC,EAAEF,SAAS,CAAC;;UAG/B;;;EAGZ,CAAC,EACD,CAACV,aAAa,EAAEC,aAAa,EAAEF,EAAE,CAAC,CACrC;EAEDZ,KAAK,CAAC6B,SAAS,CAAC,MAAK;IACjBZ,SAAS,CAAC,SAASL,EAAE,EAAE,EAAE;MACrBQ;KACH,CAAC;IACF,OAAO,MAAMF,WAAW,CAAC,SAASN,EAAE,EAAE,CAAC;EAC3C,CAAC,EAAE,CAACK,SAAS,EAAEC,WAAW,EAAEN,EAAE,EAAEQ,QAAQ,CAAC,CAAC;EAE1C,MAAMU,MAAM,GAAGX,YAAY,CAACY,IAAI,CAAC,CAAC;IAAEnB;EAAE,CAAE,KAAKA,EAAE,KAAKD,KAAK,CAACC,EAAE,CAAE;EAC9D,MAAMoB,YAAY,GAAGhC,KAAK,CAACiC,OAAO,CAAC,MAAK;IACpC,OAAA5B,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACOS,uBAAuB;MAC1BP,OAAO,EAAEI,EAAE;MACXL,WAAW,EAAEuB;IAAM;EAE3B,CAAC,EAAE,CAAClB,EAAE,EAAEkB,MAAM,EAAEf,uBAAuB,CAAC,CAAC;EAEzC,MAAM;IACFmB,MAAM,EAAE,CAACC,CAAC,EAAEC,CAAC;EAAC,CACjB,GAAGN,MAAM;EAEV,OACI9B,KAAA,CAAAqC,aAAA,CAAClC,YAAY,CAACmC,QAAQ;IAACC,KAAK,EAAEP;EAAY,GACtChC,KAAA,CAAAqC,aAAA;IAAGG,SAAS,EAAE,aAAaL,CAAC,KAAKC,CAAC,GAAG;IAAExB,EAAE,EAAE,SAASA,EAAE;EAAE,GACnDD,KAAK,CAAC8B,QAAQ,CACf,CACgB;AAEhC,CAAC,CAAC;AAEFhC,KAAK,CAACiC,WAAW,GAAG,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}