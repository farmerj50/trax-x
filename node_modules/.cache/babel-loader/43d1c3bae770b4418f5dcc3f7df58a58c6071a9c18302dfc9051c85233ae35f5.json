{"ast":null,"code":"useEffect(() => {\n  const chart = createChart(chartContainerRef.current, {\n    width: chartContainerRef.current.clientWidth || 700,\n    height: 400,\n    layout: {\n      backgroundColor: \"#ffffff\",\n      textColor: \"#000000\"\n    }\n  });\n  const candlestickSeries = chart.addCandlestickSeries();\n\n  // Fetch and set initial data here...\n  const fetchData = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${ticker}`);\n      const data = await response.json();\n      if (data.dates) {\n        const formattedData = data.dates.map((date, index) => ({\n          time: date,\n          open: data.open[index],\n          high: data.high[index],\n          low: data.low[index],\n          close: data.close[index]\n        }));\n        candlestickSeries.setData(formattedData);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  fetchData();\n\n  // Update logic\n  const updateChart = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${ticker}`);\n      const data = await response.json();\n      if (data.dates) {\n        const latestData = {\n          time: data.dates[data.dates.length - 1],\n          open: data.open[data.open.length - 1],\n          high: data.high[data.high.length - 1],\n          low: data.low[data.low.length - 1],\n          close: data.close[data.close.length - 1]\n        };\n        candlestickSeries.update(latestData);\n      }\n    } catch (error) {\n      console.error(\"Error updating chart:\", error);\n    }\n  };\n  const intervalId = setInterval(updateChart, 5000);\n  const handleResize = () => {\n    chart.applyOptions({\n      width: chartContainerRef.current.clientWidth\n    });\n  };\n  window.addEventListener(\"resize\", handleResize);\n  return () => {\n    clearInterval(intervalId); // Clear interval\n    window.removeEventListener(\"resize\", handleResize); // Remove resize listener\n    chart.remove(); // Dispose chart\n  };\n}, [ticker]);","map":{"version":3,"names":["useEffect","chart","createChart","chartContainerRef","current","width","clientWidth","height","layout","backgroundColor","textColor","candlestickSeries","addCandlestickSeries","fetchData","response","fetch","ticker","data","json","dates","formattedData","map","date","index","time","open","high","low","close","setData","error","console","updateChart","latestData","length","update","intervalId","setInterval","handleResize","applyOptions","window","addEventListener","clearInterval","removeEventListener","remove"],"sources":["C:/Users/gabby/trax-x/src/components/CandlestickChart.jsx"],"sourcesContent":["useEffect(() => {\r\n  const chart = createChart(chartContainerRef.current, {\r\n    width: chartContainerRef.current.clientWidth || 700,\r\n    height: 400,\r\n    layout: { backgroundColor: \"#ffffff\", textColor: \"#000000\" },\r\n  });\r\n\r\n  const candlestickSeries = chart.addCandlestickSeries();\r\n\r\n  // Fetch and set initial data here...\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${ticker}`);\r\n      const data = await response.json();\r\n      if (data.dates) {\r\n        const formattedData = data.dates.map((date, index) => ({\r\n          time: date,\r\n          open: data.open[index],\r\n          high: data.high[index],\r\n          low: data.low[index],\r\n          close: data.close[index],\r\n        }));\r\n        candlestickSeries.setData(formattedData);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  fetchData();\r\n\r\n  // Update logic\r\n  const updateChart = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${ticker}`);\r\n      const data = await response.json();\r\n      if (data.dates) {\r\n        const latestData = {\r\n          time: data.dates[data.dates.length - 1],\r\n          open: data.open[data.open.length - 1],\r\n          high: data.high[data.high.length - 1],\r\n          low: data.low[data.low.length - 1],\r\n          close: data.close[data.close.length - 1],\r\n        };\r\n        candlestickSeries.update(latestData);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating chart:\", error);\r\n    }\r\n  };\r\n\r\n  const intervalId = setInterval(updateChart, 5000);\r\n\r\n  const handleResize = () => {\r\n    chart.applyOptions({ width: chartContainerRef.current.clientWidth });\r\n  };\r\n  window.addEventListener(\"resize\", handleResize);\r\n\r\n  return () => {\r\n    clearInterval(intervalId); // Clear interval\r\n    window.removeEventListener(\"resize\", handleResize); // Remove resize listener\r\n    chart.remove(); // Dispose chart\r\n  };\r\n}, [ticker]);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}