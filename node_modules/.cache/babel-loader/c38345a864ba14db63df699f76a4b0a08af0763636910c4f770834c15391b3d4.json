{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Circular 3D chart file.\n */\nimport { Animation, Browser, Collection, Complex, Component, Event, EventHandler, Internationalization, NotifyPropertyChanges, Property, animationMode, isNullOrUndefined, remove, extend } from '@syncfusion/ej2-base';\nimport { Border, Font, Indexes, Margin } from '../common/model/base';\nimport { getCircular3DThemeColor } from './model/theme';\nimport { CircularChart3DSeries } from './renderer/series';\nimport { Data } from '../common/model/data';\nimport { ImageOption, RectOption, appendChildElement, calculateSize, createSvg, degreeToLocation, getAnimationFunction, getElement, getTitle, redrawElement, removeElement, showTooltip, subtractRect, textElement, titlePositionX, withInBounds } from '../common/utils/helper';\nimport { PathOption, Rect, Size, TextOption, measureText } from '@syncfusion/ej2-svg-base';\nimport { CircularChart3DBinaryTreeBuilder, CircularChart3DTransform, CircularChart3DGraphics, CircularChart3DMatrix, CircularChart3DPolygonModule, CircularChart3DSvgRenderer, CircularChart3DVectorModule } from './renderer/3d-renderer';\nimport { animationComplete, beforeResize, load, pointClick, pointMove, resized } from '../common/model/constants';\nimport { PrintUtils } from '../common/utils/print';\nimport { CircularChart3DLegendSettings } from './legend/legend';\nimport { CircularChart3DPointData, CircularChart3DTooltipSettings } from './user-interaction/tooltip';\n/**\n * Represents the circular 3D chart control.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   let pie: CircularChart3D = new CircularChart3D({ });\n *   pie.appendTo(\"#container\");\n *\n * </script>\n * ```\n *\n * @public\n */\nvar CircularChart3D = /** @class */function (_super) {\n  __extends(CircularChart3D, _super);\n  /**\n   * Constructor for creating the circular 3D chart widget.\n   *\n   * @private\n   * @param {CircularChart3DModel} options - Specifies the instance of the circular 3D chart model.\n   * @param {string | HTMLElement} element - Specifies the element for which the circular 3D chart will be rendered\n   * @returns {void}\n   */\n  function CircularChart3D(options, element) {\n    var _this = _super.call(this, options, element) || this;\n    _this.chartId = 57724;\n    /** @private */\n    _this.explodeDistance = 0;\n    /** @private */\n    _this.rotateActivate = false;\n    /** @private */\n    _this.previousTargetId = '';\n    /** @private */\n    _this.currentPointIndex = 0;\n    /** @private */\n    _this.currentLegendIndex = 0;\n    /** @private */\n    _this.isLegendClicked = false;\n    /** @private */\n    _this.delayRedraw = false;\n    return _this;\n  }\n  Object.defineProperty(CircularChart3D.prototype, \"type\", {\n    get: function () {\n      return 'Pie';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * To create SVG object, renderer, and bind events for the container.\n   *\n   * @private\n   * @returns {void}\n   */\n  CircularChart3D.prototype.preRender = function () {\n    this.allowServerDataBinding = false;\n    this.unWireEvents();\n    this.titleLocation = {\n      x: 0,\n      y: 0,\n      size: new Size(0, 0)\n    };\n    this.subTitleLocation = {\n      x: 0,\n      y: 0,\n      size: new Size(0, 0)\n    };\n    this.circularRadius = [];\n    this.innerRadius = [];\n    this.matrixObj = new CircularChart3DMatrix();\n    this.bspTreeObj = new CircularChart3DBinaryTreeBuilder();\n    this.polygon = new CircularChart3DPolygonModule();\n    this.vector = new CircularChart3DVectorModule(null, null, null);\n    this.graphics = new CircularChart3DGraphics();\n    this.transform3D = new CircularChart3DTransform();\n    this.svg3DRenderer = new CircularChart3DSvgRenderer();\n    this.circular3DPolygon = [];\n    this.explodeDistance = 0;\n    this.setCulture();\n    this.animateSeries = true;\n    if (this.element.id === '') {\n      var collection = document.getElementsByClassName('e-circular3dchart').length;\n      this.element.id = 'acc_chart_' + this.chartId + '_' + collection;\n    }\n    this.wireEvents();\n    this.element.setAttribute('dir', this.enableRtl ? 'rtl' : '');\n  };\n  /**\n   * Method to unbind events for the circular 3D chart.\n   *\n   * @returns {void}\n   */\n  CircularChart3D.prototype.unWireEvents = function () {\n    /** Find the Events type */\n    var isIE11Pointer = Browser.isPointer;\n    var start = Browser.touchStartEvent;\n    var move = Browser.touchMoveEvent;\n    var stop = Browser.touchEndEvent;\n    var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n    /** UnBind the Event handler */\n    EventHandler.remove(this.element, move, this.chartOnMouseMove);\n    EventHandler.remove(this.element, stop, this.chartMouseUp);\n    EventHandler.remove(this.element, start, this.chartMouseDown);\n    EventHandler.remove(this.element, 'click', this.chartOnMouseClick);\n    EventHandler.remove(this.element, cancel, this.chartMouseLeave);\n    EventHandler.remove(this.element, 'keydown', this.circular3DChartKeyDown);\n    EventHandler.remove(this.element, 'keyup', this.circular3DChartKeyUp);\n    window.removeEventListener(Browser.isTouch && 'orientation' in window && 'onorientationchange' in window ? 'orientationchange' : 'resize', this.chartResizeBound);\n  };\n  /**\n   * Handles the mouse click on the circular 3D chart.\n   *\n   * @param {PointerEvent} e - Mouse event arguments.\n   * @returns {boolean} - Indicates whether the mouse click event was handled by the circular 3D chart.\n   * @private\n   */\n  CircularChart3D.prototype.chartOnMouseClick = function (e) {\n    this.setMouseXY(e);\n    if (this.circularChartLegend3DModule && this.legendSettings.visible) {\n      this.circularChartLegend3DModule.click(e);\n    }\n    if (this.selectionMode !== 'None' && this.circularChartSelection3DModule) {\n      this.circularChartSelection3DModule.calculateSelectedElements(this, e.target, e.type);\n    }\n    if (this.visibleSeries[0].explode) {\n      var id = e.target.id;\n      var indexes = void 0;\n      var pointIndex = void 0;\n      if (id.indexOf('-point-') > -1) {\n        indexes = id.split('-series-')[1].split('-point-');\n        pointIndex = parseInt(indexes[1], 10);\n        var currentPointIndex = this.visibleSeries[0].explodeIndex;\n        if (currentPointIndex === pointIndex || this.visibleSeries[0].points[pointIndex].isExplode) {\n          this.visibleSeries[0].explodeIndex = null;\n          this.visibleSeries[0].isExploded = true;\n          this.visibleSeries[0].points.forEach(function (point) {\n            point.isExplode = false;\n          });\n        } else {\n          this.visibleSeries[0].explodeIndex = pointIndex;\n        }\n        this.removeSeriesElements(this);\n        this.visibleSeries[0].segments = [];\n        this.circular3DPolygon = [];\n        this.renderSeries();\n        this.processSelection();\n        this.delayRedraw = true;\n      }\n    }\n    this.trigger('circularChart3DMouseClick', {\n      target: e.target.id,\n      x: this.mouseX,\n      y: this.mouseY\n    });\n    if (this.pointClick) {\n      this.triggerPointEvent(pointClick, e.target, e);\n    }\n    return false;\n  };\n  /**\n   * Triggers a point event for a circular 3D chart element.\n   *\n   * @param {string} event - The type of event to trigger.\n   * @param {Element} element - The DOM element associated with the event.\n   * @param {PointerEvent | TouchEvent | undefined} e - The pointer or touch event.\n   * @returns {void}\n   */\n  CircularChart3D.prototype.triggerPointEvent = function (event, element, e) {\n    var evt = e;\n    var point;\n    var series = this.visibleSeries[0];\n    if (element.id.indexOf('point') > -1 && element.id.indexOf('series') > -1) {\n      var pointIndex = parseInt(element.id.split('point-')[1], 10);\n      point = series.points[pointIndex];\n    }\n    if (point) {\n      this.trigger(event, {\n        series: series,\n        point: point,\n        seriesIndex: series.index,\n        pointIndex: point.index,\n        x: this.mouseX,\n        y: this.mouseY,\n        pageX: evt.pageX,\n        pageY: evt.pageY\n      });\n    }\n  };\n  /**\n   * Handles the mouse move on the circular 3D chart.\n   *\n   * @param {PointerEvent} e - Mouse event arguments.\n   * @returns {boolean} - Indicates whether the mouse move event was handled by the circular 3D chart.\n   * @private\n   */\n  CircularChart3D.prototype.chartOnMouseMove = function (e) {\n    if (!getElement(this.element.id + '_svg')) {\n      return false;\n    }\n    this.setMouseXY(e);\n    this.trigger('circularChart3DMouseMove', {\n      target: e.target.id,\n      x: this.mouseX,\n      y: this.mouseY\n    });\n    if (this.rotateActivate) {\n      var deltaX = this.previousCoords.x - this.mouseX;\n      var deltaY = this.previousCoords.y - this.mouseY;\n      if (deltaX || deltaY) {\n        this.tilt -= deltaY;\n        this.rotation += deltaX;\n        if (!this.isTouch) {\n          var grpElement = document.getElementById(this.groupElement.id);\n          grpElement.innerHTML = '';\n          grpElement.remove();\n        }\n        var size = {\n          width: this.availableSize.width,\n          height: this.availableSize.height\n        };\n        this.graphics.view(this.svgObject, this, this.rotation, this.tilt, size, 0, this.depth);\n        appendChildElement(false, this.svgObject, this.groupElement, this.redraw);\n        this.setSeriesTabIndex();\n        this.previousCoords.y = this.mouseY;\n        this.previousCoords.x = this.mouseX;\n        if (this.circularChartHighlight3DModule && this.highlightMode !== 'None') {\n          this.circularChartHighlight3DModule.calculateSelectedElements(this, document.getElementById(this.element.id + '-border'), 'mousemove');\n          this.circularChartHighlight3DModule.previousSelectedElement = [];\n        }\n        this.processSelection();\n      }\n    }\n    if (this.pointMove) {\n      this.triggerPointEvent(pointMove, e.target, e);\n    }\n    if (this.tooltip.enable && this.circularChartTooltip3DModule) {\n      this.circularChartTooltip3DModule.mouseMoveHandler(e, this);\n    }\n    if (!this.isTouch) {\n      this.titleTooltip(e, this.mouseX, this.mouseY);\n    }\n    this.notify(Browser.touchMoveEvent, e);\n    return false;\n  };\n  /**\n   * Displays a tooltip for the given event at the specified coordinates.\n   *\n   * @param {Event} event - The event triggering the tooltip display.\n   * @param {number} x - The x-coordinate for the tooltip position.\n   * @param {number} y - The y-coordinate for the tooltip position.\n   * @param {boolean} isTouch - Optional parameter indicating whether the event is a touch event. Defaults to false if not provided.\n   * @returns {void}\n   */\n  CircularChart3D.prototype.titleTooltip = function (event, x, y, isTouch) {\n    var targetId = event.target.id;\n    var id = targetId === this.element.id + '-title' || targetId === this.element.id + '-sub-title' || targetId === this.element.id + '_chart_legend_title';\n    if (event.target.textContent.indexOf('...') > -1 && id) {\n      var title = targetId === this.element.id + '-title' ? this.title : targetId === this.element.id + '-sub-title' ? this.subTitle : this.legendSettings.title;\n      showTooltip(title, x, y, this.element.offsetWidth, this.element.id + '_EJ2_Title_Tooltip', getElement(this.element.id + '_Secondary_Element'), isTouch);\n    } else {\n      removeElement(this.element.id + '_EJ2_Title_Tooltip');\n    }\n  };\n  /**\n   * Sets the mouse x and y coordinates based on the specified pointer event.\n   *\n   * @param {PointerEvent} e - Specifies the pointer event.\n   * @returns {void}\n   */\n  CircularChart3D.prototype.setMouseXY = function (e) {\n    var pageX;\n    var pageY;\n    var svgRectElement = getElement(this.element.id + '_svg');\n    if (svgRectElement && this.element) {\n      var svgRect = svgRectElement.getBoundingClientRect();\n      var rect = this.element.getBoundingClientRect();\n      if (e.type.indexOf('touch') > -1) {\n        this.isTouch = true;\n        var touchArg = e;\n        pageY = touchArg.changedTouches[0].clientY;\n        pageX = touchArg.changedTouches[0].clientX;\n      } else {\n        this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n        pageX = e.clientX;\n        pageY = e.clientY;\n      }\n      this.mouseY = pageY - rect.top - Math.max(svgRect.top - rect.top, 0);\n      this.mouseX = pageX - rect.left - Math.max(svgRect.left - rect.left, 0);\n    }\n  };\n  /**\n   * Method to bind events for the circular 3D chart.\n   *\n   * @returns {void}\n   */\n  CircularChart3D.prototype.wireEvents = function () {\n    if (!this.element) {\n      return;\n    }\n    /** Find the Events type */\n    var isIE11Pointer = Browser.isPointer;\n    var start = Browser.touchStartEvent;\n    var stop = Browser.touchEndEvent;\n    var move = Browser.touchMoveEvent;\n    var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n    /** Bind the Event handler */\n    EventHandler.add(this.element, move, this.chartOnMouseMove, this);\n    EventHandler.add(this.element, stop, this.chartMouseUp, this);\n    EventHandler.add(this.element, start, this.chartMouseDown, this);\n    EventHandler.add(this.element, 'click', this.chartOnMouseClick, this);\n    EventHandler.add(this.element, cancel, this.chartMouseLeave, this);\n    EventHandler.add(this.element, 'keydown', this.circular3DChartKeyDown, this);\n    EventHandler.add(this.element, 'keyup', this.circular3DChartKeyUp, this);\n    this.chartResizeBound = this.chartResize.bind(this);\n    window.addEventListener(Browser.isTouch && 'orientation' in window && 'onorientationchange' in window ? 'orientationchange' : 'resize', this.chartResizeBound);\n    //new Touch(this.element); // To avoid geasture blocking for browser\n    /** Apply the style for chart */\n    this.setStyle(this.element);\n  };\n  /**\n   * Handles the mouse leave on circular 3D chart.\n   *\n   * @param {PointerEvent} e - Mouse event arguments.\n   * @returns {boolean} - Indicates the mouse leave event for the circular 3D chart.\n   * @private\n   */\n  CircularChart3D.prototype.chartMouseLeave = function (e) {\n    this.setMouseXY(e);\n    this.trigger('circularChart3DMouseLeave', {\n      target: e.target.id,\n      x: this.mouseX,\n      y: this.mouseY\n    });\n    if (this.tooltip.enable && this.circularChartTooltip3DModule) {\n      this.circularChartTooltip3DModule.mouseLeaveHandler();\n    }\n    this.notify(Browser.isPointer ? 'pointerleave' : 'mouseleave', e);\n    this.rotateActivate = false;\n    return false;\n  };\n  /**\n   * Handles the mouse end event for the circular 3D chart.\n   *\n   * @param {PointerEvent} e - Mouse event arguments.\n   * @returns {boolean} - Indicates the mouse end event for the circular 3D chart.\n   * @private\n   */\n  CircularChart3D.prototype.chartMouseUp = function (e) {\n    this.setMouseXY(e);\n    this.trigger('circularChart3DMouseUp', {\n      target: e.target.id,\n      x: this.mouseX,\n      y: this.mouseY\n    });\n    if (this.isTouch) {\n      this.titleTooltip(e, this.mouseX, this.mouseY, this.isTouch);\n    }\n    this.rotateActivate = false;\n    if (this.tooltip.enable && this.circularChartTooltip3DModule) {\n      this.circularChartTooltip3DModule.mouseUpHandler(e, this);\n    }\n    this.notify(Browser.touchEndEvent, e);\n    return false;\n  };\n  /**\n   * Handles the mouse start event on the circular 3D chart.\n   *\n   * @param {PointerEvent} e - Mouse event arguments.\n   * @returns {boolean} - Indicates whether the mouse start event was handled by the circular 3D chart.\n   * @private\n   */\n  CircularChart3D.prototype.chartMouseDown = function (e) {\n    this.setMouseXY(e);\n    this.trigger('circularChart3DMouseDown', {\n      target: e.target.id,\n      x: this.mouseX,\n      y: this.mouseY\n    });\n    this.cachedX = this.mouseX;\n    this.cachedY = this.mouseY;\n    var svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n    var bounds = document.getElementById(this.element.id + '-svg-chart-3d').getBoundingClientRect();\n    var rect = {\n      x: bounds.left - svgRect.left,\n      y: bounds.top - svgRect.top,\n      width: bounds.width,\n      height: bounds.height\n    };\n    if (this.enableRotation && withInBounds(this.mouseX, this.mouseY, rect)) {\n      this.rotateActivate = true;\n      this.previousCoords = {\n        x: this.mouseX,\n        y: this.mouseY\n      };\n    }\n    return false;\n  };\n  /**\n   * Applies styles for the circular 3D chart element.\n   *\n   * @param {HTMLElement} element - Specifies the circular 3D chart element.\n   * @returns {void}\n   */\n  CircularChart3D.prototype.setStyle = function (element) {\n    element.style.touchAction = this.enableRotation ? 'none' : 'element';\n    element.style.msTouchAction = 'element';\n    element.style.msContentZooming = 'none';\n    element.style.msUserSelect = 'none';\n    element.style.webkitUserSelect = 'none';\n    element.style.position = 'relative';\n    element.style.display = 'block';\n    element.style.height = element.style.height || this.height && this.height.indexOf('%') === -1 ? element.style.height : 'inherit';\n    var tabColor = '';\n    switch (this.theme) {\n      case 'HighContrastLight':\n      case 'HighContrast':\n        tabColor = '#969696';\n        break;\n      case 'MaterialDark':\n      case 'FabricDark':\n      case 'Bootstrap':\n      case 'Bootstrap4':\n        tabColor = '#66afe9';\n        break;\n      case 'Tailwind':\n      case 'TailwindDark':\n        tabColor = '#4f46e5';\n        break;\n      case 'Bootstrap5':\n      case 'Bootstrap5Dark':\n        tabColor = '#0d6efd';\n        break;\n      case 'Fluent':\n      case 'FluentDark':\n        tabColor = '#9e9e9e';\n        break;\n      case 'Fluent2':\n      case 'Fluent2Dark':\n      case 'Fluent2HighContrast':\n        tabColor = '#0078D4';\n        break;\n      default:\n        tabColor = '#9e9e9e';\n        break;\n    }\n    var style = document.createElement('style');\n    style.setAttribute('id', element.id + 'Keyboard_circular3dchart_focus');\n    style.innerText = '.e-circular3dchart-focused:focus,path[id*=-series-0-point-]:focus, text[id*=-title]:focus' + '{outline: none} .e-circular3dchart-focused:focus-visible,path[id*=-series-0-point-]:focus-visible, text[id*=-title]:focus-visible' + '{outline: 1.5px ' + tabColor + ' solid}';\n    document.body.appendChild(style);\n  };\n  /**\n   * Method to set the culture for the circular 3D chart.\n   *\n   * @returns {void}\n   */\n  CircularChart3D.prototype.setCulture = function () {\n    this.intl = new Internationalization();\n  };\n  /**\n   * Renders the circular 3D chart elements.\n   *\n   * @returns {void}\n   * @private\n   */\n  CircularChart3D.prototype.render = function () {\n    var _this = this;\n    if (this.element.className.indexOf('e-circular3dchart') === -1) {\n      this.element.classList.add('e-circular3dchart');\n    }\n    this.element.setAttribute('role', 'region');\n    this.element.setAttribute('tabindex', '0');\n    this.element.setAttribute('aria-label', this.title + '. Syncfusion interactive chart.');\n    this.element.setAttribute('class', this.element.getAttribute('class') + ' e-circular3dchart-focused');\n    var loadEventData = {\n      chart: this,\n      theme: this.theme,\n      name: load,\n      cancel: false\n    };\n    this.trigger(load, loadEventData, function () {\n      if (!loadEventData.cancel) {\n        _this.setTheme();\n        _this.calculateVisibleSeries();\n        _this.processData();\n        _this.renderComplete();\n        _this.allowServerDataBinding = true;\n      }\n    });\n  };\n  /**\n   * Sets the theme for the circular 3D chart.\n   *\n   * @returns {void}\n   */\n  CircularChart3D.prototype.setTheme = function () {\n    /** Set theme for circular 3D chart */\n    this.themeStyle = getCircular3DThemeColor(this.theme);\n  };\n  /**\n   * Processes data from the data source to find points for rendering.\n   *\n   * @param {boolean} render - A boolean value indicating whether to trigger rendering after processing the data. Default is true.\n   * @returns {void}\n   */\n  CircularChart3D.prototype.processData = function (render) {\n    if (render === void 0) {\n      render = true;\n    }\n    this.seriesCounts = 0;\n    for (var _i = 0, _a = this.visibleSeries; _i < _a.length; _i++) {\n      var series = _a[_i];\n      series.dataModule = new Data(series.dataSource || this.dataSource, series.query);\n      series.refreshDataManager(this, render);\n    }\n  };\n  /**\n   * Refreshes the circular 3D chart.\n   *\n   * @private\n   * @returns {void}\n   */\n  CircularChart3D.prototype.refreshChart = function () {\n    this.createPieSvg();\n    this.calculateBounds();\n    this.circular3DPolygon = [];\n    this.visibleSeries[0].segments = [];\n    this.groupElement = this.renderer.createGroup({\n      'id': this.element.id + '-svg-chart-3d'\n    });\n    this.groupElement.setAttribute('role', 'region');\n    this.groupElement.setAttribute('aria-hidden', 'false');\n    this.renderElements();\n    removeElement('chartmeasuretext');\n  };\n  /**\n   * Renders elements for the circular 3D chart.\n   *\n   * @private\n   * @returns {void}\n   */\n  CircularChart3D.prototype.renderElements = function () {\n    this.renderBorder();\n    this.createSecondaryElement();\n    this.renderTitle();\n    this.renderSeries();\n    this.renderLegend();\n    appendChildElement(false, this.element, this.svgObject, this.redraw);\n    this.processSelection();\n    this.setSecondaryElementPosition();\n    this.trigger('loaded', {\n      chart: this\n    });\n    this.setSeriesTabIndex();\n    this.doAnimation();\n    this.animateSeries = false;\n  };\n  /**\n   * Sets the tabindex attribute to '0' for the last element matching the selector pattern \"[id*='region-series-0-point-0']\".\n   *\n   * @returns {void}\n   */\n  CircularChart3D.prototype.setSeriesTabIndex = function () {\n    var elements;\n    for (var i = 0; i < this.visibleSeries[0].points.length; i++) {\n      if (this.visibleSeries[0].points[i].visible) {\n        elements = document.querySelectorAll('[id*=\"region-series-0-point-' + this.visibleSeries[0].points[i].index + '\"]');\n        break;\n      }\n    }\n    if (elements && elements.length > 0) {\n      var element = elements[elements.length - 1];\n      element.setAttribute('tabindex', '0');\n    }\n  };\n  /**\n   * Processes the selection in the circular 3D chart.\n   *\n   * @returns {void}\n   */\n  CircularChart3D.prototype.processSelection = function () {\n    var selectedDataIndexes = [];\n    if (this.circularChartSelection3DModule && this.selectionMode !== 'None') {\n      selectedDataIndexes = extend([], this.circularChartSelection3DModule.selectedDataIndexes, null, true);\n      this.circularChartSelection3DModule.invokeSelection(this);\n    }\n    if (this.circularChartHighlight3DModule) {\n      this.circularChartHighlight3DModule.invokeHighlight(this);\n    }\n    if (selectedDataIndexes.length > 0) {\n      this.circularChartSelection3DModule.selectedDataIndexes = selectedDataIndexes;\n      this.circularChartSelection3DModule.redrawSelection(this);\n    }\n  };\n  /**\n   * Performs a highlight animation on the specified HTML element with the given duration and starting opacity.\n   *\n   * @param {HTMLElement} element - The HTML element to animate.\n   * @param {number} duration - The duration of the animation in milliseconds.\n   * @param {number} startOpacity - The starting opacity value for the animation.\n   * @returns {void}\n   * @private\n   */\n  CircularChart3D.prototype.highlightAnimation = function (element, duration, startOpacity) {\n    var endOpacity = parseFloat(this.visibleSeries[0].opacity.toString());\n    if (endOpacity) {\n      new Animation({}).animate(element, {\n        duration: duration,\n        progress: function (args) {\n          element.style.animation = '';\n          var progress = args.timeStamp / args.duration;\n          var currentOpacity = startOpacity + (endOpacity - startOpacity) * progress;\n          element.setAttribute('opacity', currentOpacity.toString());\n        },\n        end: function () {\n          element.setAttribute('opacity', endOpacity.toString());\n        }\n      });\n    }\n  };\n  /**\n   * Stops the animation for the specified HTML element in the circular 3D chart.\n   *\n   * @param {HTMLElement} element - The HTML element for which the animation should be stopped.\n   * @returns {void}\n   * @private\n   */\n  CircularChart3D.prototype.stopElementAnimation = function (element) {\n    var endOpacity = parseFloat(this.visibleSeries[0].opacity.toString());\n    var animation = element.getAttribute('e-animate');\n    if (animation) {\n      Animation.stop(element);\n    }\n    element.setAttribute('opacity', endOpacity.toString());\n  };\n  /**\n   * Initiates and executes the animation for the circular 3D chart.\n   * This method assumes the existence of visible series and focuses on the first series for animation.\n   *\n   * @returns {void}\n   */\n  CircularChart3D.prototype.doAnimation = function () {\n    var series = this.visibleSeries[0];\n    if (series.animation.enable && this.animateSeries) {\n      var clippath_1 = this.renderer.createClipPath({\n        id: this.element.id + 'SeriesGroup0' + '_clipPath'\n      });\n      var path = new PathOption(this.element.id + 'SeriesGroup0' + '_slice', 'transparent', 1, 'transparent', 1, '', '');\n      var clipslice = this.renderer.drawPath(path);\n      clippath_1.appendChild(clipslice);\n      this.svgObject.appendChild(clippath_1);\n      var id_1 = this.element.id;\n      var groupElementID_1 = this.groupElement.id;\n      document.querySelectorAll('[id*=\"region-series-\"]').forEach(function (slice) {\n        if (slice.parentElement.id === groupElementID_1) {\n          slice.style.cssText = 'clip-path:url(#' + clippath_1.id + '); -webkit-clip-path:url(#' + clippath_1.id + ');';\n          slice.setAttribute('clip-path', 'url(#' + id_1 + 'SeriesGroup0' + '_clipPath' + ')');\n        }\n      });\n      if (series.segments[0]) {\n        this.animationRect(clipslice, series);\n      }\n    }\n  };\n  /**\n   * Renders the legend for the circular 3D chart.\n   *\n   * @returns {void}\n   */\n  CircularChart3D.prototype.renderLegend = function () {\n    if (!this.circularChartLegend3DModule || !this.legendSettings.visible) {\n      return null;\n    }\n    if (this.circularChartLegend3DModule.legendCollections.length && this.visibleSeries[0].labelBound) {\n      this.circularChartLegend3DModule.getSmartLegendLocation(this.visibleSeries[0].labelBound, this.circularChartLegend3DModule.legendBounds, this.margin);\n    }\n    this.circularChartLegend3DModule.renderLegend(this, this.legendSettings, this.circularChartLegend3DModule.legendBounds, this.redraw);\n  };\n  /**\n   * Initiates animation for the circular 3D series.\n   *\n   * @param {Element} slice - Specifies the slice element to animate.\n   * @param {CircularChart3DSeries} series - Specifies the circular 3D chart series.\n   * @returns {void}\n   */\n  CircularChart3D.prototype.animationRect = function (slice, series) {\n    var _this = this;\n    var startAngle = -90;\n    var duration = series.animation.duration; //this.duration ? this.duration : series.animation.duration;\n    var value;\n    var radius = Math.max(this.availableSize.height, this.availableSize.width) * 0.75;\n    radius += radius * 0.414; // formula r + r / 2 * (1.414 -1)\n    var effect = getAnimationFunction('Linear'); // need to check animation type\n    var center = {\n      x: series.segments[0].center.x - this.rotation / 2,\n      y: series.segments[0].center.y + this.tilt / 2\n    };\n    for (var i = 0; i < series.points.length; i++) {\n      var dataLabelElement = getElement(this.element.id + '-svg-data-label-text-' + i);\n      if (dataLabelElement) {\n        dataLabelElement.style.visibility = 'hidden';\n      }\n      var shapeElement = getElement(this.element.id + '-svg-data-label-series-0-shape-' + i);\n      if (shapeElement) {\n        shapeElement.style.visibility = 'hidden';\n      }\n      var templateElement = getElement(this.element.id + '-series-' + series.index + '-data-label-' + i);\n      if (templateElement) {\n        templateElement.style.visibility = 'hidden';\n      }\n      var connectorElement = getElement(this.element.id + '-datalabel-series-0-connector-' + i);\n      if (connectorElement) {\n        connectorElement.style.visibility = 'hidden';\n      }\n    }\n    if (!isNullOrUndefined(slice)) {\n      new Animation({}).animate(slice, {\n        duration: duration === 0 && animationMode === 'Enable' ? 1000 : duration,\n        delay: series.animation.delay,\n        progress: function (args) {\n          value = effect(args.timeStamp, startAngle, 359.99999, args.duration);\n          slice.setAttribute('d', _this.getPathArc(center, startAngle, value, radius));\n        },\n        end: function () {\n          slice.setAttribute('d', _this.getPathArc(center, 0, 359.99999, radius));\n          _this.trigger(animationComplete, {\n            series: series,\n            chart: _this\n          });\n          for (var i = 0; i < series.points.length; i++) {\n            var dataLabelElement = getElement(_this.element.id + '-svg-data-label-text-' + i);\n            if (dataLabelElement) {\n              dataLabelElement.style.visibility = 'visible';\n            }\n            var shapeElement = getElement(_this.element.id + '-svg-data-label-series-0-shape-' + i);\n            if (shapeElement) {\n              shapeElement.style.visibility = 'visible';\n            }\n            var templateElement = getElement(_this.element.id + '-series-' + series.index + '-data-label-' + i);\n            if (templateElement) {\n              templateElement.style.visibility = 'visible';\n            }\n            var connectorElement = getElement(_this.element.id + '-datalabel-series-0-connector-' + i);\n            if (connectorElement) {\n              connectorElement.style.visibility = 'visible';\n            }\n          }\n        }\n      });\n    }\n  };\n  /**\n   * Gets the path arc direction for the circular 3D chart.\n   *\n   * @param {ChartLocation} center - Specifies the center of the series segment.\n   * @param {number} start - Specifies the start angle in degrees.\n   * @param {number} end  - Specifies the end angle in degrees.\n   * @param {number} radius - Specifies the radius of the series.\n   * @returns {string} - Path arc direction as an SVG path string.\n   */\n  CircularChart3D.prototype.getPathArc = function (center, start, end, radius) {\n    var degree = end - start;\n    degree = degree < 0 ? degree + 360 : degree;\n    var flag = degree < 180 ? 0 : 1;\n    return this.getPiePath(center, degreeToLocation(start, radius, center), degreeToLocation(end, radius, center), radius, flag);\n  };\n  /**\n   * Gets the SVG path string for a pie in the circular 3D chart.\n   *\n   * @param {ChartLocation} center - Specifies the center of the series segment.\n   * @param {ChartLocation} start - Specifies the start angle in degrees.\n   * @param {ChartLocation} end - Specifies the end angle in degrees.\n   * @param {number} radius - Specifies the radius of the series.\n   * @param {number} clockWise - Specifies the clockwise direction (0 for anti-clockwise, 1 for clockwise).\n   * @returns {string} - SVG path string for the pie.\n   */\n  CircularChart3D.prototype.getPiePath = function (center, start, end, radius, clockWise) {\n    return 'M ' + center.x + ' ' + center.y + ' L ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y + ' Z';\n  };\n  /**\n   * Renders the border for the circular 3D chart.\n   *\n   * @returns {void}\n   */\n  CircularChart3D.prototype.renderBorder = function () {\n    var padding = this.border.width;\n    var rect = new RectOption(this.element.id + '-border', this.background || this.themeStyle.background, this.border, 1, new Rect(padding / 2, padding / 2, this.availableSize.width - padding, this.availableSize.height - padding));\n    var htmlObject = this.renderer.drawRectangle(rect);\n    htmlObject.setAttribute('aria-hidden', 'true');\n    appendChildElement(false, this.svgObject, htmlObject, this.redraw);\n    var backGroundImage = this.backgroundImage;\n    if (backGroundImage) {\n      var image = new ImageOption(this.availableSize.height - padding, this.availableSize.width - padding, backGroundImage, 0, 0, this.element.id + '-background', 'visible', 'none');\n      appendChildElement(false, this.svgObject, this.renderer.drawImage(image), this.redraw);\n    }\n  };\n  /**\n   * Creates the secondary element for tooltips and data labels.\n   *\n   * @returns {void}\n   */\n  CircularChart3D.prototype.createSecondaryElement = function () {\n    var element = redrawElement(this.redraw, this.element.id + '_Secondary_Element') || this.createElement('div', {\n      id: this.element.id + '_Secondary_Element',\n      styles: 'position: relative'\n    });\n    appendChildElement(false, this.element, element, this.redraw);\n  };\n  /**\n   * Renders the series for the circular 3D chart.\n   *\n   * @returns {void}\n   */\n  CircularChart3D.prototype.renderSeries = function () {\n    if (!this.redraw) {\n      this.svgObject.appendChild(this.renderer.createGroup({\n        id: this.element.id + '_SeriesCollection'\n      }));\n    }\n    for (var _i = 0, _a = this.visibleSeries; _i < _a.length; _i++) {\n      var series = _a[_i];\n      if (series.visible && this['pie' + 'Series3DModule']) {\n        series.draw(series, this);\n        this.defaultLabelBound(series);\n      }\n    }\n  };\n  /**\n   * Sets the default label bounds for the specified circular 3D chart series based on its circular bounds.\n   *\n   * @param {CircularChart3DSeries} series - The CircularChart3DSeries for which to set the default label bounds.\n   * @returns {void}\n   */\n  CircularChart3D.prototype.defaultLabelBound = function (series) {\n    if (series.segments.length > 0 && series.dataLabel.visible) {\n      var circularBound = this.getSeriesBound(series);\n      if (series.dataLabel.visible && series.dataLabel.position === 'Inside') {\n        series.labelBound = new Rect(circularBound.x, circularBound.y, circularBound.width + circularBound.x, circularBound.height + circularBound.y);\n      }\n      series.findMaxBounds(series.labelBound, circularBound);\n      if (this.circularChartLegend3DModule) {\n        series.labelBound.x -= this.explodeDistance;\n        series.labelBound.y -= this.explodeDistance;\n        series.labelBound.height += this.explodeDistance - series.labelBound.y;\n        series.labelBound.width += this.explodeDistance - series.labelBound.x;\n      }\n    }\n  };\n  /**\n   * Calculates and returns the bounding rectangle (Rect) for the specified circular 3D chart series.\n   *\n   * @param {CircularChart3DSeries} series - The CircularChart3DSeries for which to calculate the bounding rectangle.\n   * @returns {Rect} - The calculated bounding rectangle for the series.\n   */\n  CircularChart3D.prototype.getSeriesBound = function (series) {\n    var rect = new Rect(Infinity, Infinity, -Infinity, -Infinity);\n    var start = 0;\n    var total = 360;\n    var end = (0 + total) % 360;\n    end = end === 0 ? 360 : end;\n    series.findMaxBounds(rect, this.getRectFromAngle(start));\n    series.findMaxBounds(rect, this.getRectFromAngle(end));\n    series.findMaxBounds(rect, new Rect(series.segments[0].center.x, series.segments[0].center.y, 0, 0));\n    var nextQuandrant = (Math.floor(start / 90) * 90 + 90) % 360;\n    var lastQuadrant = Math.floor(end / 90) * 90 % 360;\n    lastQuadrant = lastQuadrant === 0 ? 360 : lastQuadrant;\n    if (total >= 90 || lastQuadrant === nextQuandrant) {\n      series.findMaxBounds(rect, this.getRectFromAngle(nextQuandrant));\n      series.findMaxBounds(rect, this.getRectFromAngle(lastQuadrant));\n    }\n    if (start === 0 || start + total >= 360) {\n      series.findMaxBounds(rect, this.getRectFromAngle(0));\n    }\n    var length = nextQuandrant === lastQuadrant ? 0 : Math.floor(total / 90);\n    for (var i = 1; i < length; i++) {\n      nextQuandrant = nextQuandrant + 90;\n      if (nextQuandrant < lastQuadrant || end < start || total === 360) {\n        series.findMaxBounds(rect, this.getRectFromAngle(nextQuandrant));\n      }\n    }\n    rect.width -= rect.x;\n    rect.height -= rect.y;\n    return rect;\n  };\n  /**\n   * Computes and returns a rectangle (Rect) based on the specified angle.\n   *\n   * @param {number} angle - The angle used to calculate the rectangle position.\n   * @returns {Rect} - The calculated rectangle representing the position.\n   */\n  CircularChart3D.prototype.getRectFromAngle = function (angle) {\n    var location = degreeToLocation(angle, this.circularRadius[0], this.visibleSeries[0].segments[0].center);\n    return new Rect(location.x, location.y, 0, 0);\n  };\n  /**\n   * Renders the title for the circular 3D chart.\n   *\n   * @returns {void}\n   */\n  CircularChart3D.prototype.renderTitle = function () {\n    var margin = this.margin;\n    if (!this.title) {\n      return null;\n    }\n    var getAnchor = this.getTextAnchor(this.titleStyle.textAlignment, this.enableRtl);\n    var titleSize = measureText(this.title, this.titleStyle, this.themeStyle.chartTitleFont);\n    var titleHeight = this.margin.top + titleSize.height * 3 / 4;\n    var rect = new Rect(margin.left, 0, this.availableSize.width - margin.left - margin.right, 0);\n    var options = new TextOption(this.element.id + '-title', titlePositionX(rect, this.titleStyle), titleHeight, getAnchor, this.titleCollection, '', 'auto');\n    this.titleLocation = {\n      x: options.x,\n      y: options.y,\n      size: titleSize\n    };\n    var element = textElement(this.renderer, options, this.titleStyle, this.titleStyle.color || this.themeStyle.chartTitleFont.color, this.svgObject, false, this.redraw, null, null, null, null, null, null, null, null, this.themeStyle.chartTitleFont);\n    if (element) {\n      element.setAttribute('tabindex', '0');\n      element.parentNode.insertBefore(element, this.svgObject.children && this.svgObject.children[1]);\n    }\n    if (this.subTitle) {\n      this.renderSubTitle(options);\n    }\n  };\n  /**\n   * Gets the text anchor based on the specified alignment and RTL setting.\n   *\n   * @param {Alignment} alignment - The alignment of the text.\n   * @param {boolean} enableRTL - A boolean indicating whether right-to-left (RTL) text is enabled.\n   * @returns {string} - The text anchor value.\n   */\n  CircularChart3D.prototype.getTextAnchor = function (alignment, enableRTL) {\n    switch (alignment) {\n      case 'Near':\n        return enableRTL ? 'end' : 'start';\n      case 'Far':\n        return enableRTL ? 'start' : 'end';\n      default:\n        return 'middle';\n    }\n  };\n  /**\n   * Renders the subtitle for the circular 3D chart.\n   *\n   * @param {TextOption} options - The text options for rendering the subtitle.\n   * @returns {void}\n   */\n  CircularChart3D.prototype.renderSubTitle = function (options) {\n    var maxWidth = 0;\n    var titleWidth = 0;\n    var padding = 10;\n    var alignment = this.titleStyle.textAlignment;\n    var subTitleElementSize = measureText(this.subTitle, this.subTitleStyle, this.themeStyle.chartSubTitleFont);\n    for (var _i = 0, _a = this.titleCollection; _i < _a.length; _i++) {\n      var titleText = _a[_i];\n      titleWidth = measureText(titleText, this.titleStyle, this.themeStyle.chartTitleFont).width;\n      maxWidth = titleWidth > maxWidth ? titleWidth : maxWidth;\n    }\n    var rect = new Rect(alignment === 'Center' ? options.x - maxWidth / 2 : alignment === 'Far' ? options.x - maxWidth : options.x, 0, maxWidth, 0);\n    var subTitleOption = new TextOption(this.element.id + '-sub-title', titlePositionX(rect, this.subTitleStyle), options.y * options.text.length + subTitleElementSize.height * 3 / 4 + padding, this.getTextAnchor(this.subTitleStyle.textAlignment, this.enableRtl), this.subTitleCollection, '', 'auto');\n    this.subTitleLocation = {\n      x: subTitleOption.x,\n      y: subTitleOption.y,\n      size: subTitleElementSize\n    };\n    textElement(this.renderer, subTitleOption, this.subTitleStyle, this.subTitleStyle.color || this.themeStyle.chartSubTitleFont.color, this.svgObject, false, this.redraw, null, null, null, null, null, null, null, null, this.themeStyle.chartSubTitleFont);\n  };\n  /**\n   * Sets the left and top position for the data label and tooltip template for center-aligned chart.\n   *\n   * @private\n   * @returns {void}\n   */\n  CircularChart3D.prototype.setSecondaryElementPosition = function () {\n    var tooltipParent = getElement(this.element.id + '_Secondary_Element');\n    if (!tooltipParent) {\n      return;\n    }\n    var rect = this.element.getBoundingClientRect();\n    var svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n    tooltipParent.style.left = Math.max(svgRect.left - rect.left, 0) + 'px';\n    tooltipParent.style.top = Math.max(svgRect.top - rect.top, 0) + 'px';\n  };\n  /**\n   * Creates an SVG element for the circular 3D chart.\n   *\n   * @returns {void}\n   */\n  CircularChart3D.prototype.createPieSvg = function () {\n    this.removeSvg();\n    createSvg(this);\n  };\n  /**\n   * Removes the SVG from the circular 3D chart.\n   *\n   * @returns {void}\n   * @private\n   */\n  CircularChart3D.prototype.removeSvg = function () {\n    if (this.redraw) {\n      return null;\n    }\n    removeElement(this.element.id + '_Secondary_Element');\n    if (this.svgObject) {\n      while (this.svgObject.childNodes.length > 0) {\n        this.svgObject.removeChild(this.svgObject.firstChild);\n      }\n      if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n        remove(this.svgObject);\n      }\n    }\n    removeElement('EJ2_legend_tooltip');\n    removeElement('EJ2_datalabel_tooltip');\n    removeElement(this.element.id + 'PointHover_Border');\n  };\n  /**\n   * Calculates and sets the visible series for the circular 3D chart.\n   *\n   * @returns {void}\n   */\n  CircularChart3D.prototype.calculateVisibleSeries = function () {\n    this.visibleSeries = [];\n    this.series[0].index = 0;\n    this.visibleSeries.push(this.series[0]);\n  };\n  /**\n   * Method to calculate bounds for the circular 3D chart.\n   *\n   * @returns {void}\n   * @private\n   */\n  CircularChart3D.prototype.calculateBounds = function () {\n    this.initialClipRect = new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height);\n    this.titleCollection = [];\n    this.subTitleCollection = [];\n    var titleHeight = 0;\n    var subTitleHeight = 0;\n    var maxWidth = 0;\n    var titleWidth = 0;\n    if (this.title) {\n      this.titleCollection = getTitle(this.title, this.titleStyle, this.initialClipRect.width, this.enableRtl, this.themeStyle.chartTitleFont);\n    }\n    titleHeight = this.title ? measureText(this.title, this.titleStyle, this.themeStyle.chartTitleFont).height * this.titleCollection.length : titleHeight;\n    if (this.subTitle) {\n      for (var _i = 0, _a = this.titleCollection; _i < _a.length; _i++) {\n        var titleText = _a[_i];\n        titleWidth = measureText(titleText, this.titleStyle, this.themeStyle.chartTitleFont).width;\n        maxWidth = titleWidth > maxWidth ? titleWidth : maxWidth;\n      }\n      this.subTitleCollection = getTitle(this.subTitle, this.subTitleStyle, maxWidth, this.enableRtl, this.themeStyle.chartSubTitleFont);\n      subTitleHeight = measureText(this.subTitle, this.subTitleStyle, this.themeStyle.chartSubTitleFont).height * this.subTitleCollection.length;\n    }\n    subtractRect(this.initialClipRect, new Rect(0, subTitleHeight + titleHeight, this.margin.right + this.margin.left, this.margin.bottom + this.margin.top));\n    this.calculateLegendBounds();\n  };\n  /*\n   * Method to calculate legend bounds for the circular 3D chart.\n   *\n   * @returns {void}\n   */\n  CircularChart3D.prototype.calculateLegendBounds = function () {\n    if (!this.circularChartLegend3DModule || !this.legendSettings.visible) {\n      return null;\n    }\n    this.circularChartLegend3DModule.getLegendOptions(this, this.visibleSeries);\n    this.circularChartLegend3DModule.calculateLegendBounds(this.initialClipRect, this.availableSize, null);\n  };\n  /**\n   * Handles the print method for the circular 3D chart control.\n   *\n   * @param {string[] | string | Element} id - Specifies the element to print.\n   * @returns {void}\n   */\n  CircularChart3D.prototype.print = function (id) {\n    var exportChart = new PrintUtils(this);\n    exportChart.print(id);\n  };\n  /**\n   * Export method for the circular 3D chart.\n   *\n   * @param {ExportType} type - Specifies the type of the image file (PNG, JPEG, SVG).\n   * @param {string} fileName - Specifies the name of the exported image file.\n   * @returns {void}\n   */\n  CircularChart3D.prototype.export = function (type, fileName) {\n    if (this.circularChartExport3DModule) {\n      this.circularChartExport3DModule.export(type, fileName);\n      if (this.afterExport) {\n        this.circularChartExport3DModule.getDataUrl(this);\n      }\n    }\n  };\n  /**\n   * Export the chart on the page to a PDF document.\n   *\n   * @param {string} fileName - The name of the exported file.\n   * @param {PdfPageOrientation} orientation - Page orientation (portrait or landscape).\n   * @param {CircularChart3D[]} controls - Array of controls to be exported.\n   * @param {number} width - The width of the exported chart.\n   * @param {number} height - The height of the exported chart.\n   * @param {boolean} isVertical - Export the chart vertically or horizontally.\n   * @param {string} header - Text to appear at the top of the exported PDF document.\n   * @param {string} footer - Text to appear at the bottom of the exported PDF document.\n   * @param {boolean} exportToMultiplePage - Export the chart to multiple PDF pages.\n   * @returns {void}\n   */\n  CircularChart3D.prototype.pdfExport = function (fileName, orientation, controls, width, height, isVertical, header, footer, exportToMultiplePage) {\n    if (this.circularChartExport3DModule) {\n      this.circularChartExport3DModule.pdfExport(fileName, orientation, controls, width, height, isVertical, header, footer, exportToMultiplePage);\n    }\n  };\n  /**\n   * Provides an array of modules needed for control rendering in the circular 3D chart.\n   *\n   * @returns {ModuleDeclaration[]} - An array of required modules.\n   * @private\n   */\n  CircularChart3D.prototype.requiredModules = function () {\n    var modules = [];\n    modules.push({\n      member: this.type + 'Series3D',\n      args: [this]\n    });\n    if (this.legendSettings.visible) {\n      modules.push({\n        member: 'CircularChartLegend3D',\n        args: [this]\n      });\n    }\n    if (this.series[0].dataLabel.visible) {\n      modules.push({\n        member: 'CircularChartDataLabel3D',\n        args: [this]\n      });\n    }\n    if (this.tooltip.enable) {\n      modules.push({\n        member: 'CircularChartTooltip3D',\n        args: [this]\n      });\n    }\n    if (this.selectionMode !== 'None') {\n      modules.push({\n        member: 'CircularChartSelection3D',\n        args: [this]\n      });\n    }\n    if (this.highlightMode !== 'None' || this.legendSettings.enableHighlight) {\n      modules.push({\n        member: 'CircularChartHighlight3D',\n        args: [this]\n      });\n    }\n    if (this.enableExport) {\n      modules.push({\n        member: 'CircularChartExport3D',\n        args: [this]\n      });\n    }\n    return modules;\n  };\n  /**\n   * Handles the keyboard onkeydown event in the circular 3D chart.\n   *\n   * @param {KeyboardEvent} e - The keydown event arguments.\n   * @returns {boolean} - Returns `false`.\n   * @private\n   */\n  CircularChart3D.prototype.circular3DChartKeyDown = function (e) {\n    var actionKey = '';\n    if (this.tooltip.enable && (e.code === 'Tab' && this.previousTargetId.indexOf('series') > -1 || this.previousTargetId.indexOf('legend') > -1 || e.code === 'Escape')) {\n      actionKey = 'ESC';\n    }\n    if (e.code.indexOf('Arrow') > -1) {\n      e.preventDefault();\n    }\n    if (e.ctrlKey && e.key === 'p') {\n      e.preventDefault();\n      actionKey = 'CtrlP';\n    }\n    if (actionKey !== '') {\n      this.chartKeyboardNavigations(e, e.target.id, actionKey);\n    }\n    return false;\n  };\n  /**\n   * Handles keyboard navigation for the chart based on the provided KeyboardEvent, targetId, and actionKey.\n   *\n   * @param {KeyboardEvent} e - The keyboard event object.\n   * @param {string} targetId - The ID of the target element related to the keyboard action.\n   * @param {string} actionKey - The key representing the type of action (e.g., 'Tab', 'ArrowMove').\n   * @returns {void}\n   */\n  CircularChart3D.prototype.chartKeyboardNavigations = function (e, targetId, actionKey) {\n    this.isLegendClicked = false;\n    switch (actionKey) {\n      case 'Tab':\n      case 'ArrowMove':\n        if (targetId.indexOf('-point-') > -1) {\n          var seriesIndex = 0;\n          var pointIndex = parseInt(targetId.split('point-')[1], 10);\n          var point = this.visibleSeries[0].points[pointIndex];\n          var center = point.symbolLocation.center;\n          var dradius = point.symbolLocation.radius * this.visibleSeries[0].coefficient;\n          var radius = dradius + (point.symbolLocation.radius - dradius) / 2;\n          this.mouseX = center.x + radius * Math.cos(point.symbolLocation.angle);\n          this.mouseY = center.y + radius * Math.sin(point.symbolLocation.angle);\n          if (this.circularChartHighlight3DModule) {\n            var targetElement = getElement(targetId);\n            if (!isNullOrUndefined(targetElement)) {\n              if (targetElement.id.indexOf('text') > 1) {\n                targetElement = getElement(targetElement.id.replace('text', 'shape'));\n              }\n              if (this.circularChartSelection3DModule) {\n                this.circularChartSelection3DModule.calculateSelectedElements(this, targetElement, 'mousemove');\n              } else {\n                this.circularChartHighlight3DModule.calculateSelectedElements(this, targetElement, 'mousemove');\n              }\n            }\n          }\n          if (this.circularChartTooltip3DModule) {\n            var series = this.visibleSeries[seriesIndex];\n            var data = void 0;\n            if (series.enableTooltip) {\n              data = new CircularChart3DPointData(series.points[pointIndex], series);\n            }\n            this.circularChartTooltip3DModule.element = this.element;\n            this.circularChartTooltip3DModule.control = this;\n            this.circularChartTooltip3DModule.renderSeriesTooltip(this, data);\n          }\n        }\n        if (this.circularChartHighlight3DModule && this.highlightMode !== 'None') {\n          targetId = targetId.indexOf('_chart_legend_g_') > -1 ? document.getElementById(targetId).firstChild['id'] : targetId;\n          var legendID = this.element.id + '_chart_legend';\n          var legendItemsId = [legendID + '_text_', legendID + '_shape_marker_', legendID + '_shape_'];\n          for (var i = 0; i < legendItemsId.length; i++) {\n            var id = legendItemsId[i];\n            if (targetId.indexOf(id) > -1) {\n              document.getElementById(targetId).setAttribute('class', '');\n              if (this.circularChartSelection3DModule) {\n                this.circularChartSelection3DModule.legendSelection(this, getElement(targetId), 'mousemove');\n              } else {\n                this.circularChartHighlight3DModule.legendSelection(this, getElement(targetId), 'mousemove');\n              }\n              break;\n            }\n          }\n        }\n        break;\n      case 'Enter':\n      case 'Space':\n        if (targetId.indexOf('_chart_legend_') > -1 && this.circularChartLegend3DModule) {\n          this.isLegendClicked = true;\n          this.circularChartLegend3DModule.click(e);\n          this.focusChild(document.getElementById(targetId).parentElement);\n        } else {\n          if (this.circularChartSelection3DModule) {\n            this.circularChartSelection3DModule.calculateSelectedElements(this, document.getElementById(targetId), 'click');\n          }\n        }\n        break;\n      case 'CtrlP':\n        this.print();\n        break;\n      case 'ESC':\n        if (this.circularChartTooltip3DModule) {\n          this.circularChartTooltip3DModule.removeTooltip(1);\n        }\n        if (this.circularChartSelection3DModule) {\n          this.circularChartSelection3DModule.calculateSelectedElements(this, document.getElementById(this.element.id + '-border'), 'mousemove');\n        } else if (this.circularChartHighlight3DModule && this.highlightMode !== 'None') {\n          this.circularChartHighlight3DModule.calculateSelectedElements(this, document.getElementById(this.element.id + '-border'), 'mousemove');\n        }\n        break;\n    }\n  };\n  /**\n   * Sets the tabindex attribute of the provided HTML element to '0'.\n   *\n   * @param {HTMLElement} element - The HTML element to be focused.\n   * @returns {string} - The updated class attribute of the focused element.\n   */\n  CircularChart3D.prototype.focusChild = function (element) {\n    element.setAttribute('tabindex', '0');\n    var className = element.getAttribute('class');\n    element.setAttribute('tabindex', '0');\n    if (className && className.indexOf('e-circular3dchart-focused') === -1) {\n      className = 'e-circular3dchart-focused ' + className;\n    } else if (!className) {\n      className = 'e-circular3dchart-focused';\n    }\n    element.setAttribute('class', className);\n    element.focus();\n    return element.id;\n  };\n  /**\n   * Handles the keyboard onkeyup event in the circular 3D chart.\n   *\n   * @param {KeyboardEvent} e - The keyup event arguments.\n   * @returns {boolean} - Returns `false`.\n   * @private\n   */\n  CircularChart3D.prototype.circular3DChartKeyUp = function (e) {\n    var actionKey = '';\n    var targetId = e.target['id'];\n    var legendElement = getElement(this.element.id + '_chart_legend_translate_g');\n    var pagingElement = getElement(this.element.id + '_chart_legend_pageup');\n    if (legendElement) {\n      var firstChild = legendElement.firstElementChild;\n      var className = firstChild.getAttribute('class');\n      if (className && className.indexOf('e-circular3dchart-focused') === -1) {\n        className = className + ' e-circular3dchart-focused';\n      } else if (!className) {\n        className = 'e-circular3dchart-focused';\n      }\n      firstChild.setAttribute('class', className);\n    }\n    if (pagingElement) {\n      pagingElement.setAttribute('class', 'e-circular3dchart-focused');\n    }\n    if (e.code === 'Tab') {\n      if (this.previousTargetId !== '') {\n        if (this.previousTargetId.indexOf('-point-') > -1 && targetId.indexOf('-point-') === -1) {\n          // const groupElement: HTMLElement = document.getElementById(this.previousTargetId).parentElement;\n          // this.setTabIndex(groupElement.children[this.currentPointIndex] as HTMLElement,\n          //                  groupElement.firstElementChild as HTMLElement);\n          this.currentPointIndex = 0;\n        } else if (this.previousTargetId.indexOf('_chart_legend_page') > -1 && targetId.indexOf('_chart_legend_page') === -1 && targetId.indexOf('_chart_legend_g_') === -1) {\n          this.setTabIndex(e.target, pagingElement);\n        } else if (this.previousTargetId.indexOf('_chart_legend_g_') > -1 && targetId.indexOf('chart_legend_g_') === -1) {\n          this.setTabIndex(legendElement.children[this.currentLegendIndex], legendElement.firstElementChild);\n        } else if (this.previousTargetId.indexOf('-title') > -1 && targetId.indexOf('-point-') > -1) {\n          this.currentPointIndex = parseInt(targetId.split('point-')[1], 10);\n        }\n      }\n      this.previousTargetId = targetId;\n      if (targetId.indexOf('_chart_legend_g_') > -1 && this.highlightMode !== 'None') {\n        targetId = e.target['lastElementChild'].id;\n        actionKey = 'Tab';\n      } else if (targetId.indexOf('-point-') > -1 && (this.highlightMode !== 'None' || this.tooltip.enable)) {\n        actionKey = 'Tab';\n      }\n    } else if (e.code.indexOf('Arrow') > -1) {\n      e.preventDefault();\n      if (targetId.indexOf('_chart_legend_page') > -1) {\n        e.target.removeAttribute('tabindex');\n        this.previousTargetId = targetId = this.element.id + '_chart_legend_page' + (e.code === 'ArrowRight' ? 'up' : 'down');\n        this.focusTarget(getElement(targetId));\n      } else if (targetId.indexOf('_chart_legend_') > -1) {\n        e.target.removeAttribute('tabindex');\n        this.currentLegendIndex += e.code === 'ArrowUp' || e.code === 'ArrowRight' ? +1 : -1;\n        this.currentLegendIndex = this.getActualIndex(this.currentLegendIndex, legendElement.children.length);\n        var currentLegend = legendElement.children[this.currentLegendIndex];\n        this.focusTarget(currentLegend);\n        this.previousTargetId = targetId = currentLegend.lastElementChild.id;\n        actionKey = this.highlightMode !== 'None' ? 'ArrowMove' : '';\n      } else if (targetId.indexOf('-point-') > -1) {\n        e.target.setAttribute('tabindex', '-1');\n        var totalLength = 0;\n        var seriesIndexes = [];\n        for (var i = 0; i < this.visibleSeries[0].points.length; i++) {\n          var point = this.visibleSeries[0].points[i];\n          totalLength = point.visible ? totalLength + 1 : totalLength;\n          if (this.visibleSeries[0].points[i].visible) {\n            seriesIndexes.push(this.visibleSeries[0].points[i].index);\n          }\n        }\n        this.currentPointIndex = seriesIndexes.indexOf(this.currentPointIndex) + (e.code === 'ArrowUp' || e.code === 'ArrowRight' ? 1 : -1);\n        this.currentPointIndex = seriesIndexes[this.getActualIndex(this.currentPointIndex, seriesIndexes.length)];\n        var elements = document.querySelectorAll(\"[id*=\\\"region-series-0-point-\" + this.currentPointIndex + \"\\\"]\");\n        var element = void 0;\n        if (elements.length > 0) {\n          element = elements[elements.length - 1];\n        }\n        targetId = element ? element.id : '';\n        this.focusTarget(getElement(targetId));\n        actionKey = this.tooltip.enable || this.circularChartHighlight3DModule ? 'ArrowMove' : '';\n      }\n    } else if ((e.code === 'Enter' || e.code === 'Space') && (targetId.indexOf('_chart_legend_') > -1 || targetId.indexOf('-point-') > -1)) {\n      targetId = targetId.indexOf('_chart_legend_g') > -1 ? e.target['lastElementChild'].id : targetId;\n      actionKey = 'Enter';\n    }\n    if (actionKey !== '') {\n      this.chartKeyboardNavigations(e, targetId, actionKey);\n    }\n    return false;\n  };\n  /**\n   * Calculates the actual index based on the specified index and total length.\n   *\n   * @param {number} index - The index to be adjusted.\n   * @param {number} totalLength - The total length of the collection or array.\n   * @returns {number} - The actual index after adjustment.\n   */\n  CircularChart3D.prototype.getActualIndex = function (index, totalLength) {\n    return index > totalLength - 1 ? 0 : index < 0 ? totalLength - 1 : index;\n  };\n  /**\n   * Focuses the specified HTML element by setting its tabindex attribute to '0'.\n   *\n   * @param {HTMLElement} element - The HTML element to be focused.\n   * @returns {string} - The updated class attribute of the focused element.\n   */\n  CircularChart3D.prototype.focusTarget = function (element) {\n    var className = element.getAttribute('class');\n    element.setAttribute('tabindex', '0');\n    if (className && className.indexOf('e-circular3dchart-focused') === -1) {\n      className = className + ' e-circular3dchart-focused';\n    } else if (!className) {\n      className = 'e-circular3dchart-focused';\n    }\n    element.setAttribute('tabindex', '0');\n    element.setAttribute('class', className);\n    element.focus();\n    return element.id;\n  };\n  /**\n   * Sets the tabIndex property on the provided currentElement.\n   *\n   * @param {HTMLElement} previousElement - The previously focused HTML element.\n   * @param {HTMLElement} currentElement - The currently focused HTML element.\n   * @returns {void}\n   */\n  CircularChart3D.prototype.setTabIndex = function (previousElement, currentElement) {\n    if (previousElement) {\n      previousElement.removeAttribute('tabindex');\n    }\n    if (currentElement) {\n      currentElement.setAttribute('tabindex', '0');\n    }\n  };\n  /**\n   * Gets the properties to be maintained in the persisted state.\n   *\n   * @private\n   * @returns {string} - A string representing the persisted data.\n   */\n  CircularChart3D.prototype.getPersistData = function () {\n    return '';\n  };\n  /**\n   * Gets the module name for the circular 3D chart.\n   *\n   *  @private\n   * @returns {string} - The circular 3D chart module name.\n   */\n  CircularChart3D.prototype.getModuleName = function () {\n    return 'circularchart3d';\n  };\n  /**\n   * Destroys the circular 3D chart instance.\n   *\n   * @private\n   * @returns {void}\n   */\n  CircularChart3D.prototype.destroy = function () {\n    if (this.element) {\n      this.unWireEvents();\n      this.circular3DPolygon = [];\n      this.visibleSeries[0].segments = [];\n      _super.prototype.destroy.call(this);\n      this.element.classList.remove('e-circular3dchart');\n      this.element.classList.remove('e-circular3dchart-focused');\n      var element = document.getElementById(this.element.id + 'Keyboard_circular3dchart_focus');\n      if (element) {\n        element.remove();\n      }\n      removeElement('chartmeasuretext');\n      this.removeSvg();\n      this.svgObject = null;\n    }\n  };\n  /**\n   * Handles the resize of the circular 3D chart.\n   *\n   * @returns {boolean} - Returns `true` to indicate the resize method of the circular 3D chart.\n   * @private\n   */\n  CircularChart3D.prototype.chartResize = function () {\n    var _this = this;\n    this.animateSeries = false;\n    var args = {\n      previousSize: new Size(this.availableSize.width, this.availableSize.height),\n      currentSize: new Size(0, 0),\n      chart: this\n    };\n    var beforeResizeArgs = {\n      cancel: false\n    };\n    if (this.resizeTo) {\n      clearTimeout(this.resizeTo);\n    }\n    this.trigger(beforeResize, beforeResizeArgs);\n    if (!beforeResizeArgs.cancel) {\n      this.resizeTo = +setTimeout(function () {\n        if (_this.isDestroyed) {\n          clearTimeout(_this.resizeTo);\n          return;\n        }\n        calculateSize(_this);\n        args.currentSize = _this.availableSize;\n        _this.trigger(resized, args);\n        _this.refreshChart();\n      }, 500);\n    }\n    return false;\n  };\n  /**\n   * Retrieves the visible circular 3D chart series based on the specified index.\n   *\n   * @param {CircularChart3DSeries[]} visibleSeries - An array of visible circular 3D chart series.\n   * @param {number} index - The index of the desired series.\n   * @returns {CircularChart3DSeries} - The CircularChart3D series corresponding to the provided index.\n   */\n  CircularChart3D.prototype.changeVisibleSeries = function (visibleSeries, index) {\n    for (var _i = 0, visibleSeries_1 = visibleSeries; _i < visibleSeries_1.length; _i++) {\n      var series = visibleSeries_1[_i];\n      if (index === series.index) {\n        return series;\n      }\n    }\n    return null;\n  };\n  /**\n   * Removes elements with IDs containing the substring \"region-series-\".\n   *\n   * @param {CircularChart3D} chart - The instance of the circular 3D chart.\n   * @returns {void}\n   * @private\n   */\n  CircularChart3D.prototype.removeSeriesElements = function (chart) {\n    document.querySelectorAll('[id*=\"region-series-\"]').forEach(function (element) {\n      if (element.parentElement.id === chart.groupElement.id) {\n        return element.remove();\n      }\n    });\n    document.querySelectorAll('[id*=\"data-label-text-\"]').forEach(function (element) {\n      if (element.parentElement.id === chart.groupElement.id) {\n        return element.remove();\n      }\n    });\n    document.querySelectorAll('[id*=\"data-label-series-0-shape-\"]').forEach(function (element) {\n      if (element.parentElement.id === chart.groupElement.id) {\n        return element.remove();\n      }\n    });\n    document.querySelectorAll('[id*=\"datalabel-series-0-connector-\"]').forEach(function (element) {\n      if (element.parentElement.id === chart.groupElement.id) {\n        return element.remove();\n      }\n    });\n  };\n  /**\n   * Called internally when any property value changes in the circular 3D chart.\n   *\n   * @private\n   * @param {CircularChart3DModel} newProp - Specifies the new properties of the circular 3D chart.\n   * @param {CircularChart3DModel} oldProp - Specifies the old properties of the circular 3D chart.\n   */\n  // tslint:disable-next-line:max-func-body-length\n  CircularChart3D.prototype.onPropertyChanged = function (newProp, oldProp) {\n    var update = {\n      refreshElements: false,\n      refreshBounds: false\n    };\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n      switch (prop) {\n        case 'theme':\n          this.animateSeries = true;\n          break;\n        case 'title':\n        case 'subTitle':\n        case 'height':\n        case 'width':\n        case 'margin':\n        case 'enableRotation':\n        case 'depth':\n          update.refreshBounds = true;\n          break;\n        case 'tilt':\n        case 'rotation':\n          if (!this.rotateActivate) {\n            update.refreshBounds = true;\n            this.animateSeries = false;\n          }\n          break;\n        case 'titleStyle':\n          if (newProp.titleStyle && (newProp.titleStyle.size || newProp.titleStyle.textOverflow)) {\n            update.refreshBounds = true;\n          } else {\n            update.refreshElements = true;\n          }\n          break;\n        case 'subTitleStyle':\n          if (newProp.subTitleStyle && (newProp.subTitleStyle.size || newProp.subTitleStyle.textOverflow)) {\n            update.refreshBounds = true;\n          } else {\n            update.refreshElements = true;\n          }\n          break;\n        case 'legendSettings':\n          update.refreshBounds = true;\n          update.refreshElements = true;\n          break;\n        case 'dataSource':\n          this.processData(false);\n          update.refreshBounds = true;\n          break;\n        case 'series':\n          if (!this.delayRedraw) {\n            var seriesRefresh = false;\n            var series = void 0;\n            var seriesRender = void 0;\n            for (var i = 0; i < this.series.length; i++) {\n              series = newProp.series[i];\n              if (series.explodeOffset || series.radius || series.innerRadius || series.emptyPointSettings) {\n                seriesRender = true;\n              }\n              if (newProp.series[i] && (newProp.series[i].dataSource || newProp.series[i].yName || newProp.series[i].xName || newProp.series[i].dataLabel || seriesRender)) {\n                extend(this.changeVisibleSeries(this.visibleSeries, i), series, null, true);\n                seriesRefresh = true;\n              }\n              if (newProp.series[i] && !isNullOrUndefined(newProp.series[i].explodeIndex) && newProp.series[i].explodeIndex >= 0 && newProp.series[i].explodeIndex !== oldProp.series[i].explodeIndex) {\n                seriesRefresh = true;\n                this.removeSeriesElements(this);\n              }\n            }\n            if (seriesRefresh) {\n              this.processData(false);\n              update.refreshBounds = true;\n            }\n          }\n          this.delayRedraw = false;\n          this.redraw = false;\n          break;\n        case 'enableRtl':\n        case 'locale':\n          _super.prototype.refresh.call(this);\n          break;\n        case 'background':\n        case 'border':\n          update.refreshElements = true;\n          break;\n        case 'isMultiSelect':\n        case 'selectedDataIndexes':\n        case 'selectionMode':\n          if (this.circularChartSelection3DModule) {\n            if (isNullOrUndefined(this.circularChartSelection3DModule.selectedDataIndexes)) {\n              this.circularChartSelection3DModule.invokeSelection(this);\n            } else {\n              this.circularChartSelection3DModule.selectedDataIndexes = this.selectedDataIndexes;\n              this.circularChartSelection3DModule.redrawSelection(this);\n            }\n          }\n          break;\n        case 'tooltip':\n          if (this.circularChartTooltip3DModule) {\n            this.circularChartTooltip3DModule.previousPoints = [];\n            if (this.tooltip.template) {\n              this.circularChartTooltip3DModule.template = this.tooltip.template;\n            }\n          }\n          break;\n      }\n      if (!update.refreshBounds && update.refreshElements) {\n        this.removeSeriesElements(this);\n        this.createPieSvg();\n        this.circular3DPolygon = [];\n        this.visibleSeries[0].segments = [];\n        this.renderElements();\n      } else if (update.refreshBounds) {\n        this.removeSeriesElements(this);\n        this.createPieSvg();\n        this.circular3DPolygon = [];\n        this.visibleSeries[0].segments = [];\n        this.calculateBounds();\n        this.renderElements();\n      }\n    }\n  };\n  __decorate([Property(null)], CircularChart3D.prototype, \"width\", void 0);\n  __decorate([Property(null)], CircularChart3D.prototype, \"height\", void 0);\n  __decorate([Property(null)], CircularChart3D.prototype, \"title\", void 0);\n  __decorate([Property(null)], CircularChart3D.prototype, \"backgroundImage\", void 0);\n  __decorate([Property('')], CircularChart3D.prototype, \"dataSource\", void 0);\n  __decorate([Complex({\n    fontFamily: null,\n    size: null,\n    fontStyle: null,\n    fontWeight: null,\n    color: null\n  }, Font)], CircularChart3D.prototype, \"titleStyle\", void 0);\n  __decorate([Property(null)], CircularChart3D.prototype, \"subTitle\", void 0);\n  __decorate([Complex({\n    fontFamily: null,\n    size: null,\n    fontStyle: null,\n    fontWeight: null,\n    color: null\n  }, Font)], CircularChart3D.prototype, \"subTitleStyle\", void 0);\n  __decorate([Property('None')], CircularChart3D.prototype, \"selectionMode\", void 0);\n  __decorate([Property('None')], CircularChart3D.prototype, \"highlightMode\", void 0);\n  __decorate([Collection([{}], CircularChart3DSeries)], CircularChart3D.prototype, \"series\", void 0);\n  __decorate([Complex({}, CircularChart3DLegendSettings)], CircularChart3D.prototype, \"legendSettings\", void 0);\n  __decorate([Property('')], CircularChart3D.prototype, \"highlightColor\", void 0);\n  __decorate([Property('None')], CircularChart3D.prototype, \"selectionPattern\", void 0);\n  __decorate([Property('None')], CircularChart3D.prototype, \"highlightPattern\", void 0);\n  __decorate([Property(false)], CircularChart3D.prototype, \"isMultiSelect\", void 0);\n  __decorate([Property(true)], CircularChart3D.prototype, \"enableAnimation\", void 0);\n  __decorate([Property('Material')], CircularChart3D.prototype, \"theme\", void 0);\n  __decorate([Collection([], Indexes)], CircularChart3D.prototype, \"selectedDataIndexes\", void 0);\n  __decorate([Complex({}, Margin)], CircularChart3D.prototype, \"margin\", void 0);\n  __decorate([Complex({\n    color: '#DDDDDD',\n    width: 0\n  }, Border)], CircularChart3D.prototype, \"border\", void 0);\n  __decorate([Complex({}, CircularChart3DTooltipSettings)], CircularChart3D.prototype, \"tooltip\", void 0);\n  __decorate([Property(null)], CircularChart3D.prototype, \"background\", void 0);\n  __decorate([Property(false)], CircularChart3D.prototype, \"useGroupingSeparator\", void 0);\n  __decorate([Property(50)], CircularChart3D.prototype, \"depth\", void 0);\n  __decorate([Property(0)], CircularChart3D.prototype, \"tilt\", void 0);\n  __decorate([Property(false)], CircularChart3D.prototype, \"enableRotation\", void 0);\n  __decorate([Property(0)], CircularChart3D.prototype, \"rotation\", void 0);\n  __decorate([Property(false)], CircularChart3D.prototype, \"enableExport\", void 0);\n  __decorate([Event()], CircularChart3D.prototype, \"load\", void 0);\n  __decorate([Event()], CircularChart3D.prototype, \"loaded\", void 0);\n  __decorate([Event()], CircularChart3D.prototype, \"legendRender\", void 0);\n  __decorate([Event()], CircularChart3D.prototype, \"legendClick\", void 0);\n  __decorate([Event()], CircularChart3D.prototype, \"selectionComplete\", void 0);\n  __decorate([Event()], CircularChart3D.prototype, \"pointRender\", void 0);\n  __decorate([Event()], CircularChart3D.prototype, \"seriesRender\", void 0);\n  __decorate([Event()], CircularChart3D.prototype, \"textRender\", void 0);\n  __decorate([Event()], CircularChart3D.prototype, \"beforeExport\", void 0);\n  __decorate([Event()], CircularChart3D.prototype, \"afterExport\", void 0);\n  __decorate([Event()], CircularChart3D.prototype, \"beforePrint\", void 0);\n  __decorate([Event()], CircularChart3D.prototype, \"beforeResize\", void 0);\n  __decorate([Event()], CircularChart3D.prototype, \"resized\", void 0);\n  __decorate([Event()], CircularChart3D.prototype, \"circularChart3DMouseMove\", void 0);\n  __decorate([Event()], CircularChart3D.prototype, \"circularChart3DMouseClick\", void 0);\n  __decorate([Event()], CircularChart3D.prototype, \"circularChart3DMouseDown\", void 0);\n  __decorate([Event()], CircularChart3D.prototype, \"circularChart3DMouseLeave\", void 0);\n  __decorate([Event()], CircularChart3D.prototype, \"circularChart3DMouseUp\", void 0);\n  __decorate([Event()], CircularChart3D.prototype, \"pointClick\", void 0);\n  __decorate([Event()], CircularChart3D.prototype, \"pointMove\", void 0);\n  __decorate([Event()], CircularChart3D.prototype, \"tooltipRender\", void 0);\n  CircularChart3D = __decorate([NotifyPropertyChanges], CircularChart3D);\n  return CircularChart3D;\n}(Component);\nexport { CircularChart3D };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Animation","Browser","Collection","Complex","Component","Event","EventHandler","Internationalization","NotifyPropertyChanges","Property","animationMode","isNullOrUndefined","remove","extend","Border","Font","Indexes","Margin","getCircular3DThemeColor","CircularChart3DSeries","Data","ImageOption","RectOption","appendChildElement","calculateSize","createSvg","degreeToLocation","getAnimationFunction","getElement","getTitle","redrawElement","removeElement","showTooltip","subtractRect","textElement","titlePositionX","withInBounds","PathOption","Rect","Size","TextOption","measureText","CircularChart3DBinaryTreeBuilder","CircularChart3DTransform","CircularChart3DGraphics","CircularChart3DMatrix","CircularChart3DPolygonModule","CircularChart3DSvgRenderer","CircularChart3DVectorModule","animationComplete","beforeResize","load","pointClick","pointMove","resized","PrintUtils","CircularChart3DLegendSettings","CircularChart3DPointData","CircularChart3DTooltipSettings","CircularChart3D","_super","options","element","_this","call","chartId","explodeDistance","rotateActivate","previousTargetId","currentPointIndex","currentLegendIndex","isLegendClicked","delayRedraw","get","enumerable","configurable","preRender","allowServerDataBinding","unWireEvents","titleLocation","x","y","size","subTitleLocation","circularRadius","innerRadius","matrixObj","bspTreeObj","polygon","vector","graphics","transform3D","svg3DRenderer","circular3DPolygon","setCulture","animateSeries","id","collection","document","getElementsByClassName","wireEvents","setAttribute","enableRtl","isIE11Pointer","isPointer","start","touchStartEvent","move","touchMoveEvent","stop","touchEndEvent","cancel","chartOnMouseMove","chartMouseUp","chartMouseDown","chartOnMouseClick","chartMouseLeave","circular3DChartKeyDown","circular3DChartKeyUp","window","removeEventListener","isTouch","chartResizeBound","e","setMouseXY","circularChartLegend3DModule","legendSettings","visible","click","selectionMode","circularChartSelection3DModule","calculateSelectedElements","type","visibleSeries","explode","indexes","pointIndex","indexOf","split","parseInt","explodeIndex","points","isExplode","isExploded","forEach","point","removeSeriesElements","segments","renderSeries","processSelection","trigger","mouseX","mouseY","triggerPointEvent","event","evt","series","seriesIndex","index","pageX","pageY","deltaX","previousCoords","deltaY","tilt","rotation","grpElement","getElementById","groupElement","innerHTML","width","availableSize","height","view","svgObject","depth","redraw","setSeriesTabIndex","circularChartHighlight3DModule","highlightMode","previousSelectedElement","tooltip","enable","circularChartTooltip3DModule","mouseMoveHandler","titleTooltip","notify","targetId","textContent","title","subTitle","offsetWidth","svgRectElement","svgRect","getBoundingClientRect","rect","touchArg","changedTouches","clientY","clientX","pointerType","top","Math","max","left","add","chartResize","bind","addEventListener","setStyle","mouseLeaveHandler","mouseUpHandler","cachedX","cachedY","bounds","enableRotation","style","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","position","display","tabColor","theme","createElement","innerText","body","appendChild","intl","render","className","classList","getAttribute","loadEventData","chart","name","setTheme","calculateVisibleSeries","processData","renderComplete","themeStyle","seriesCounts","_i","_a","dataModule","dataSource","query","refreshDataManager","refreshChart","createPieSvg","calculateBounds","renderer","createGroup","renderElements","renderBorder","createSecondaryElement","renderTitle","renderLegend","setSecondaryElementPosition","doAnimation","elements","querySelectorAll","selectedDataIndexes","invokeSelection","invokeHighlight","redrawSelection","highlightAnimation","duration","startOpacity","endOpacity","parseFloat","opacity","toString","animate","progress","args","animation","timeStamp","currentOpacity","end","stopElementAnimation","clippath_1","createClipPath","path","clipslice","drawPath","id_1","groupElementID_1","slice","parentElement","cssText","animationRect","legendCollections","labelBound","getSmartLegendLocation","legendBounds","margin","startAngle","value","radius","effect","center","dataLabelElement","visibility","shapeElement","templateElement","connectorElement","delay","getPathArc","degree","flag","getPiePath","clockWise","padding","border","background","htmlObject","drawRectangle","backGroundImage","backgroundImage","image","drawImage","styles","draw","defaultLabelBound","dataLabel","circularBound","getSeriesBound","findMaxBounds","Infinity","total","getRectFromAngle","nextQuandrant","floor","lastQuadrant","angle","location","getAnchor","getTextAnchor","titleStyle","textAlignment","titleSize","chartTitleFont","titleHeight","right","titleCollection","color","parentNode","insertBefore","children","renderSubTitle","alignment","enableRTL","maxWidth","titleWidth","subTitleElementSize","subTitleStyle","chartSubTitleFont","titleText","subTitleOption","text","subTitleCollection","tooltipParent","removeSvg","childNodes","removeChild","firstChild","hasChildNodes","push","initialClipRect","subTitleHeight","bottom","calculateLegendBounds","getLegendOptions","print","exportChart","export","fileName","circularChartExport3DModule","afterExport","getDataUrl","pdfExport","orientation","controls","isVertical","header","footer","exportToMultiplePage","requiredModules","modules","member","enableHighlight","enableExport","actionKey","code","preventDefault","ctrlKey","chartKeyboardNavigations","symbolLocation","dradius","coefficient","cos","sin","targetElement","replace","data","enableTooltip","control","renderSeriesTooltip","legendID","legendItemsId","legendSelection","focusChild","removeTooltip","focus","legendElement","pagingElement","firstElementChild","setTabIndex","removeAttribute","focusTarget","getActualIndex","currentLegend","lastElementChild","totalLength","seriesIndexes","previousElement","currentElement","getPersistData","getModuleName","destroy","previousSize","currentSize","beforeResizeArgs","resizeTo","clearTimeout","setTimeout","isDestroyed","changeVisibleSeries","visibleSeries_1","onPropertyChanged","newProp","oldProp","update","refreshElements","refreshBounds","keys","prop","textOverflow","seriesRefresh","seriesRender","explodeOffset","emptyPointSettings","yName","xName","refresh","previousPoints","template","fontFamily","fontStyle","fontWeight"],"sources":["C:/Users/gabby/trax-x/node_modules/@syncfusion/ej2-charts/src/circularchart3d/circularchart3d.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Circular 3D chart file.\n */\nimport { Animation, Browser, Collection, Complex, Component, Event, EventHandler, Internationalization, NotifyPropertyChanges, Property, animationMode, isNullOrUndefined, remove, extend } from '@syncfusion/ej2-base';\nimport { Border, Font, Indexes, Margin } from '../common/model/base';\nimport { getCircular3DThemeColor } from './model/theme';\nimport { CircularChart3DSeries } from './renderer/series';\nimport { Data } from '../common/model/data';\nimport { ImageOption, RectOption, appendChildElement, calculateSize, createSvg, degreeToLocation, getAnimationFunction, getElement, getTitle, redrawElement, removeElement, showTooltip, subtractRect, textElement, titlePositionX, withInBounds } from '../common/utils/helper';\nimport { PathOption, Rect, Size, TextOption, measureText } from '@syncfusion/ej2-svg-base';\nimport { CircularChart3DBinaryTreeBuilder, CircularChart3DTransform, CircularChart3DGraphics, CircularChart3DMatrix, CircularChart3DPolygonModule, CircularChart3DSvgRenderer, CircularChart3DVectorModule } from './renderer/3d-renderer';\nimport { animationComplete, beforeResize, load, pointClick, pointMove, resized } from '../common/model/constants';\nimport { PrintUtils } from '../common/utils/print';\nimport { CircularChart3DLegendSettings } from './legend/legend';\nimport { CircularChart3DPointData, CircularChart3DTooltipSettings } from './user-interaction/tooltip';\n/**\n * Represents the circular 3D chart control.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   let pie: CircularChart3D = new CircularChart3D({ });\n *   pie.appendTo(\"#container\");\n *\n * </script>\n * ```\n *\n * @public\n */\nvar CircularChart3D = /** @class */ (function (_super) {\n    __extends(CircularChart3D, _super);\n    /**\n     * Constructor for creating the circular 3D chart widget.\n     *\n     * @private\n     * @param {CircularChart3DModel} options - Specifies the instance of the circular 3D chart model.\n     * @param {string | HTMLElement} element - Specifies the element for which the circular 3D chart will be rendered\n     * @returns {void}\n     */\n    function CircularChart3D(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.chartId = 57724;\n        /** @private */\n        _this.explodeDistance = 0;\n        /** @private */\n        _this.rotateActivate = false;\n        /** @private */\n        _this.previousTargetId = '';\n        /** @private */\n        _this.currentPointIndex = 0;\n        /** @private */\n        _this.currentLegendIndex = 0;\n        /** @private */\n        _this.isLegendClicked = false;\n        /** @private */\n        _this.delayRedraw = false;\n        return _this;\n    }\n    Object.defineProperty(CircularChart3D.prototype, \"type\", {\n        get: function () {\n            return 'Pie';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * To create SVG object, renderer, and bind events for the container.\n     *\n     * @private\n     * @returns {void}\n     */\n    CircularChart3D.prototype.preRender = function () {\n        this.allowServerDataBinding = false;\n        this.unWireEvents();\n        this.titleLocation = { x: 0, y: 0, size: new Size(0, 0) };\n        this.subTitleLocation = { x: 0, y: 0, size: new Size(0, 0) };\n        this.circularRadius = [];\n        this.innerRadius = [];\n        this.matrixObj = new CircularChart3DMatrix();\n        this.bspTreeObj = new CircularChart3DBinaryTreeBuilder();\n        this.polygon = new CircularChart3DPolygonModule();\n        this.vector = new CircularChart3DVectorModule(null, null, null);\n        this.graphics = new CircularChart3DGraphics();\n        this.transform3D = new CircularChart3DTransform();\n        this.svg3DRenderer = new CircularChart3DSvgRenderer();\n        this.circular3DPolygon = [];\n        this.explodeDistance = 0;\n        this.setCulture();\n        this.animateSeries = true;\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circular3dchart').length;\n            this.element.id = 'acc_chart_' + this.chartId + '_' + collection;\n        }\n        this.wireEvents();\n        this.element.setAttribute('dir', this.enableRtl ? 'rtl' : '');\n    };\n    /**\n     * Method to unbind events for the circular 3D chart.\n     *\n     * @returns {void}\n     */\n    CircularChart3D.prototype.unWireEvents = function () {\n        /** Find the Events type */\n        var isIE11Pointer = Browser.isPointer;\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var stop = Browser.touchEndEvent;\n        var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        /** UnBind the Event handler */\n        EventHandler.remove(this.element, move, this.chartOnMouseMove);\n        EventHandler.remove(this.element, stop, this.chartMouseUp);\n        EventHandler.remove(this.element, start, this.chartMouseDown);\n        EventHandler.remove(this.element, 'click', this.chartOnMouseClick);\n        EventHandler.remove(this.element, cancel, this.chartMouseLeave);\n        EventHandler.remove(this.element, 'keydown', this.circular3DChartKeyDown);\n        EventHandler.remove(this.element, 'keyup', this.circular3DChartKeyUp);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.chartResizeBound);\n    };\n    /**\n     * Handles the mouse click on the circular 3D chart.\n     *\n     * @param {PointerEvent} e - Mouse event arguments.\n     * @returns {boolean} - Indicates whether the mouse click event was handled by the circular 3D chart.\n     * @private\n     */\n    CircularChart3D.prototype.chartOnMouseClick = function (e) {\n        this.setMouseXY(e);\n        if (this.circularChartLegend3DModule && this.legendSettings.visible) {\n            this.circularChartLegend3DModule.click(e);\n        }\n        if (this.selectionMode !== 'None' && this.circularChartSelection3DModule) {\n            this.circularChartSelection3DModule.calculateSelectedElements(this, e.target, e.type);\n        }\n        if (this.visibleSeries[0].explode) {\n            var id = e.target.id;\n            var indexes = void 0;\n            var pointIndex = void 0;\n            if (id.indexOf('-point-') > -1) {\n                indexes = id.split('-series-')[1].split('-point-');\n                pointIndex = parseInt(indexes[1], 10);\n                var currentPointIndex = this.visibleSeries[0].explodeIndex;\n                if (currentPointIndex === pointIndex || this.visibleSeries[0].points[pointIndex].isExplode) {\n                    this.visibleSeries[0].explodeIndex = null;\n                    this.visibleSeries[0].isExploded = true;\n                    this.visibleSeries[0].points.forEach(function (point) {\n                        point.isExplode = false;\n                    });\n                }\n                else {\n                    this.visibleSeries[0].explodeIndex = pointIndex;\n                }\n                this.removeSeriesElements(this);\n                this.visibleSeries[0].segments = [];\n                this.circular3DPolygon = [];\n                this.renderSeries();\n                this.processSelection();\n                this.delayRedraw = true;\n            }\n        }\n        this.trigger('circularChart3DMouseClick', { target: e.target.id, x: this.mouseX, y: this.mouseY });\n        if (this.pointClick) {\n            this.triggerPointEvent(pointClick, e.target, e);\n        }\n        return false;\n    };\n    /**\n     * Triggers a point event for a circular 3D chart element.\n     *\n     * @param {string} event - The type of event to trigger.\n     * @param {Element} element - The DOM element associated with the event.\n     * @param {PointerEvent | TouchEvent | undefined} e - The pointer or touch event.\n     * @returns {void}\n     */\n    CircularChart3D.prototype.triggerPointEvent = function (event, element, e) {\n        var evt = e;\n        var point;\n        var series = this.visibleSeries[0];\n        if (element.id.indexOf('point') > -1 && element.id.indexOf('series') > -1) {\n            var pointIndex = parseInt(element.id.split('point-')[1], 10);\n            point = series.points[pointIndex];\n        }\n        if (point) {\n            this.trigger(event, {\n                series: series,\n                point: point,\n                seriesIndex: series.index, pointIndex: point.index,\n                x: this.mouseX, y: this.mouseY, pageX: evt.pageX, pageY: evt.pageY\n            });\n        }\n    };\n    /**\n     * Handles the mouse move on the circular 3D chart.\n     *\n     * @param {PointerEvent} e - Mouse event arguments.\n     * @returns {boolean} - Indicates whether the mouse move event was handled by the circular 3D chart.\n     * @private\n     */\n    CircularChart3D.prototype.chartOnMouseMove = function (e) {\n        if (!getElement(this.element.id + '_svg')) {\n            return false;\n        }\n        this.setMouseXY(e);\n        this.trigger('circularChart3DMouseMove', { target: e.target.id, x: this.mouseX, y: this.mouseY });\n        if (this.rotateActivate) {\n            var deltaX = this.previousCoords.x - this.mouseX;\n            var deltaY = this.previousCoords.y - this.mouseY;\n            if (deltaX || deltaY) {\n                this.tilt -= deltaY;\n                this.rotation += deltaX;\n                if (!this.isTouch) {\n                    var grpElement = document.getElementById(this.groupElement.id);\n                    grpElement.innerHTML = '';\n                    grpElement.remove();\n                }\n                var size = { width: this.availableSize.width, height: this.availableSize.height };\n                this.graphics.view(this.svgObject, this, this.rotation, this.tilt, size, 0, this.depth);\n                appendChildElement(false, this.svgObject, this.groupElement, this.redraw);\n                this.setSeriesTabIndex();\n                this.previousCoords.y = this.mouseY;\n                this.previousCoords.x = this.mouseX;\n                if (this.circularChartHighlight3DModule && this.highlightMode !== 'None') {\n                    this.circularChartHighlight3DModule.calculateSelectedElements(this, document.getElementById(this.element.id + '-border'), 'mousemove');\n                    this.circularChartHighlight3DModule.previousSelectedElement = [];\n                }\n                this.processSelection();\n            }\n        }\n        if (this.pointMove) {\n            this.triggerPointEvent(pointMove, e.target, e);\n        }\n        if (this.tooltip.enable && this.circularChartTooltip3DModule) {\n            this.circularChartTooltip3DModule.mouseMoveHandler(e, this);\n        }\n        if (!this.isTouch) {\n            this.titleTooltip(e, this.mouseX, this.mouseY);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Displays a tooltip for the given event at the specified coordinates.\n     *\n     * @param {Event} event - The event triggering the tooltip display.\n     * @param {number} x - The x-coordinate for the tooltip position.\n     * @param {number} y - The y-coordinate for the tooltip position.\n     * @param {boolean} isTouch - Optional parameter indicating whether the event is a touch event. Defaults to false if not provided.\n     * @returns {void}\n     */\n    CircularChart3D.prototype.titleTooltip = function (event, x, y, isTouch) {\n        var targetId = event.target.id;\n        var id = (targetId === (this.element.id + '-title') || targetId === (this.element.id + '-sub-title') ||\n            targetId === (this.element.id + '_chart_legend_title'));\n        if ((event.target.textContent.indexOf('...') > -1) && id) {\n            var title = (targetId === (this.element.id + '-title')) ?\n                this.title : (targetId === (this.element.id + '-sub-title')) ? this.subTitle : this.legendSettings.title;\n            showTooltip(title, x, y, this.element.offsetWidth, this.element.id + '_EJ2_Title_Tooltip', getElement(this.element.id + '_Secondary_Element'), isTouch);\n        }\n        else {\n            removeElement(this.element.id + '_EJ2_Title_Tooltip');\n        }\n    };\n    /**\n     * Sets the mouse x and y coordinates based on the specified pointer event.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event.\n     * @returns {void}\n     */\n    CircularChart3D.prototype.setMouseXY = function (e) {\n        var pageX;\n        var pageY;\n        var svgRectElement = getElement(this.element.id + '_svg');\n        if (svgRectElement && this.element) {\n            var svgRect = svgRectElement.getBoundingClientRect();\n            var rect = this.element.getBoundingClientRect();\n            if (e.type.indexOf('touch') > -1) {\n                this.isTouch = true;\n                var touchArg = e;\n                pageY = touchArg.changedTouches[0].clientY;\n                pageX = touchArg.changedTouches[0].clientX;\n            }\n            else {\n                this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n                pageX = e.clientX;\n                pageY = e.clientY;\n            }\n            this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n            this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n        }\n    };\n    /**\n     * Method to bind events for the circular 3D chart.\n     *\n     * @returns {void}\n     */\n    CircularChart3D.prototype.wireEvents = function () {\n        if (!this.element) {\n            return;\n        }\n        /** Find the Events type */\n        var isIE11Pointer = Browser.isPointer;\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        /** Bind the Event handler */\n        EventHandler.add(this.element, move, this.chartOnMouseMove, this);\n        EventHandler.add(this.element, stop, this.chartMouseUp, this);\n        EventHandler.add(this.element, start, this.chartMouseDown, this);\n        EventHandler.add(this.element, 'click', this.chartOnMouseClick, this);\n        EventHandler.add(this.element, cancel, this.chartMouseLeave, this);\n        EventHandler.add(this.element, 'keydown', this.circular3DChartKeyDown, this);\n        EventHandler.add(this.element, 'keyup', this.circular3DChartKeyUp, this);\n        this.chartResizeBound = this.chartResize.bind(this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.chartResizeBound);\n        //new Touch(this.element); // To avoid geasture blocking for browser\n        /** Apply the style for chart */\n        this.setStyle(this.element);\n    };\n    /**\n     * Handles the mouse leave on circular 3D chart.\n     *\n     * @param {PointerEvent} e - Mouse event arguments.\n     * @returns {boolean} - Indicates the mouse leave event for the circular 3D chart.\n     * @private\n     */\n    CircularChart3D.prototype.chartMouseLeave = function (e) {\n        this.setMouseXY(e);\n        this.trigger('circularChart3DMouseLeave', { target: e.target.id, x: this.mouseX, y: this.mouseY });\n        if (this.tooltip.enable && this.circularChartTooltip3DModule) {\n            this.circularChartTooltip3DModule.mouseLeaveHandler();\n        }\n        this.notify(Browser.isPointer ? 'pointerleave' : 'mouseleave', e);\n        this.rotateActivate = false;\n        return false;\n    };\n    /**\n     * Handles the mouse end event for the circular 3D chart.\n     *\n     * @param {PointerEvent} e - Mouse event arguments.\n     * @returns {boolean} - Indicates the mouse end event for the circular 3D chart.\n     * @private\n     */\n    CircularChart3D.prototype.chartMouseUp = function (e) {\n        this.setMouseXY(e);\n        this.trigger('circularChart3DMouseUp', { target: e.target.id, x: this.mouseX, y: this.mouseY });\n        if (this.isTouch) {\n            this.titleTooltip(e, this.mouseX, this.mouseY, this.isTouch);\n        }\n        this.rotateActivate = false;\n        if (this.tooltip.enable && this.circularChartTooltip3DModule) {\n            this.circularChartTooltip3DModule.mouseUpHandler(e, this);\n        }\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse start event on the circular 3D chart.\n     *\n     * @param {PointerEvent} e - Mouse event arguments.\n     * @returns {boolean} - Indicates whether the mouse start event was handled by the circular 3D chart.\n     * @private\n     */\n    CircularChart3D.prototype.chartMouseDown = function (e) {\n        this.setMouseXY(e);\n        this.trigger('circularChart3DMouseDown', { target: e.target.id, x: this.mouseX, y: this.mouseY });\n        this.cachedX = this.mouseX;\n        this.cachedY = this.mouseY;\n        var svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        var bounds = document.getElementById(this.element.id + '-svg-chart-3d').getBoundingClientRect();\n        var rect = { x: bounds.left - svgRect.left, y: bounds.top - svgRect.top, width: bounds.width, height: bounds.height };\n        if (this.enableRotation && withInBounds(this.mouseX, this.mouseY, rect)) {\n            this.rotateActivate = true;\n            this.previousCoords = { x: this.mouseX, y: this.mouseY };\n        }\n        return false;\n    };\n    /**\n     * Applies styles for the circular 3D chart element.\n     *\n     * @param {HTMLElement} element - Specifies the circular 3D chart element.\n     * @returns {void}\n     */\n    CircularChart3D.prototype.setStyle = function (element) {\n        element.style.touchAction = this.enableRotation ? 'none' : 'element';\n        element.style.msTouchAction = 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n        element.style.display = 'block';\n        element.style.height = (element.style.height || (this.height && this.height.indexOf('%') === -1)) ? element.style.height : 'inherit';\n        var tabColor = '';\n        switch (this.theme) {\n            case 'HighContrastLight':\n            case 'HighContrast':\n                tabColor = '#969696';\n                break;\n            case 'MaterialDark':\n            case 'FabricDark':\n            case 'Bootstrap':\n            case 'Bootstrap4':\n                tabColor = '#66afe9';\n                break;\n            case 'Tailwind':\n            case 'TailwindDark':\n                tabColor = '#4f46e5';\n                break;\n            case 'Bootstrap5':\n            case 'Bootstrap5Dark':\n                tabColor = '#0d6efd';\n                break;\n            case 'Fluent':\n            case 'FluentDark':\n                tabColor = '#9e9e9e';\n                break;\n            case 'Fluent2':\n            case 'Fluent2Dark':\n            case 'Fluent2HighContrast':\n                tabColor = '#0078D4';\n                break;\n            default:\n                tabColor = '#9e9e9e';\n                break;\n        }\n        var style = document.createElement('style');\n        style.setAttribute('id', element.id + 'Keyboard_circular3dchart_focus');\n        style.innerText = '.e-circular3dchart-focused:focus,path[id*=-series-0-point-]:focus, text[id*=-title]:focus' +\n            '{outline: none} .e-circular3dchart-focused:focus-visible,path[id*=-series-0-point-]:focus-visible, text[id*=-title]:focus-visible' +\n            '{outline: 1.5px ' + tabColor + ' solid}';\n        document.body.appendChild(style);\n    };\n    /**\n     * Method to set the culture for the circular 3D chart.\n     *\n     * @returns {void}\n     */\n    CircularChart3D.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Renders the circular 3D chart elements.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularChart3D.prototype.render = function () {\n        var _this = this;\n        if (this.element.className.indexOf('e-circular3dchart') === -1) {\n            this.element.classList.add('e-circular3dchart');\n        }\n        this.element.setAttribute('role', 'region');\n        this.element.setAttribute('tabindex', '0');\n        this.element.setAttribute('aria-label', this.title + '. Syncfusion interactive chart.');\n        this.element.setAttribute('class', this.element.getAttribute('class') + ' e-circular3dchart-focused');\n        var loadEventData = {\n            chart: this,\n            theme: this.theme, name: load, cancel: false\n        };\n        this.trigger(load, loadEventData, function () {\n            if (!loadEventData.cancel) {\n                _this.setTheme();\n                _this.calculateVisibleSeries();\n                _this.processData();\n                _this.renderComplete();\n                _this.allowServerDataBinding = true;\n            }\n        });\n    };\n    /**\n     * Sets the theme for the circular 3D chart.\n     *\n     * @returns {void}\n     */\n    CircularChart3D.prototype.setTheme = function () {\n        /** Set theme for circular 3D chart */\n        this.themeStyle = getCircular3DThemeColor(this.theme);\n    };\n    /**\n     * Processes data from the data source to find points for rendering.\n     *\n     * @param {boolean} render - A boolean value indicating whether to trigger rendering after processing the data. Default is true.\n     * @returns {void}\n     */\n    CircularChart3D.prototype.processData = function (render) {\n        if (render === void 0) { render = true; }\n        this.seriesCounts = 0;\n        for (var _i = 0, _a = this.visibleSeries; _i < _a.length; _i++) {\n            var series = _a[_i];\n            series.dataModule = new Data(series.dataSource || this.dataSource, series.query);\n            series.refreshDataManager(this, render);\n        }\n    };\n    /**\n     * Refreshes the circular 3D chart.\n     *\n     * @private\n     * @returns {void}\n     */\n    CircularChart3D.prototype.refreshChart = function () {\n        this.createPieSvg();\n        this.calculateBounds();\n        this.circular3DPolygon = [];\n        this.visibleSeries[0].segments = [];\n        this.groupElement = this.renderer.createGroup({ 'id': this.element.id + '-svg-chart-3d' });\n        this.groupElement.setAttribute('role', 'region');\n        this.groupElement.setAttribute('aria-hidden', 'false');\n        this.renderElements();\n        removeElement('chartmeasuretext');\n    };\n    /**\n     * Renders elements for the circular 3D chart.\n     *\n     * @private\n     * @returns {void}\n     */\n    CircularChart3D.prototype.renderElements = function () {\n        this.renderBorder();\n        this.createSecondaryElement();\n        this.renderTitle();\n        this.renderSeries();\n        this.renderLegend();\n        appendChildElement(false, this.element, this.svgObject, this.redraw);\n        this.processSelection();\n        this.setSecondaryElementPosition();\n        this.trigger('loaded', { chart: this });\n        this.setSeriesTabIndex();\n        this.doAnimation();\n        this.animateSeries = false;\n    };\n    /**\n     * Sets the tabindex attribute to '0' for the last element matching the selector pattern \"[id*='region-series-0-point-0']\".\n     *\n     * @returns {void}\n     */\n    CircularChart3D.prototype.setSeriesTabIndex = function () {\n        var elements;\n        for (var i = 0; i < this.visibleSeries[0].points.length; i++) {\n            if (this.visibleSeries[0].points[i].visible) {\n                elements = document.querySelectorAll('[id*=\"region-series-0-point-' + this.visibleSeries[0].points[i].index + '\"]');\n                break;\n            }\n        }\n        if (elements && elements.length > 0) {\n            var element = elements[elements.length - 1];\n            element.setAttribute('tabindex', '0');\n        }\n    };\n    /**\n     * Processes the selection in the circular 3D chart.\n     *\n     * @returns {void}\n     */\n    CircularChart3D.prototype.processSelection = function () {\n        var selectedDataIndexes = [];\n        if (this.circularChartSelection3DModule && this.selectionMode !== 'None') {\n            selectedDataIndexes = extend([], this.circularChartSelection3DModule.selectedDataIndexes, null, true);\n            this.circularChartSelection3DModule.invokeSelection(this);\n        }\n        if (this.circularChartHighlight3DModule) {\n            this.circularChartHighlight3DModule.invokeHighlight(this);\n        }\n        if (selectedDataIndexes.length > 0) {\n            this.circularChartSelection3DModule.selectedDataIndexes = selectedDataIndexes;\n            this.circularChartSelection3DModule.redrawSelection(this);\n        }\n    };\n    /**\n     * Performs a highlight animation on the specified HTML element with the given duration and starting opacity.\n     *\n     * @param {HTMLElement} element - The HTML element to animate.\n     * @param {number} duration - The duration of the animation in milliseconds.\n     * @param {number} startOpacity - The starting opacity value for the animation.\n     * @returns {void}\n     * @private\n     */\n    CircularChart3D.prototype.highlightAnimation = function (element, duration, startOpacity) {\n        var endOpacity = parseFloat(this.visibleSeries[0].opacity.toString());\n        if (endOpacity) {\n            new Animation({}).animate(element, {\n                duration: duration,\n                progress: function (args) {\n                    element.style.animation = '';\n                    var progress = args.timeStamp / args.duration;\n                    var currentOpacity = startOpacity + (endOpacity - startOpacity) * progress;\n                    element.setAttribute('opacity', currentOpacity.toString());\n                },\n                end: function () {\n                    element.setAttribute('opacity', endOpacity.toString());\n                }\n            });\n        }\n    };\n    /**\n     * Stops the animation for the specified HTML element in the circular 3D chart.\n     *\n     * @param {HTMLElement} element - The HTML element for which the animation should be stopped.\n     * @returns {void}\n     * @private\n     */\n    CircularChart3D.prototype.stopElementAnimation = function (element) {\n        var endOpacity = parseFloat(this.visibleSeries[0].opacity.toString());\n        var animation = element.getAttribute('e-animate');\n        if (animation) {\n            Animation.stop(element);\n        }\n        element.setAttribute('opacity', endOpacity.toString());\n    };\n    /**\n     * Initiates and executes the animation for the circular 3D chart.\n     * This method assumes the existence of visible series and focuses on the first series for animation.\n     *\n     * @returns {void}\n     */\n    CircularChart3D.prototype.doAnimation = function () {\n        var series = this.visibleSeries[0];\n        if (series.animation.enable && this.animateSeries) {\n            var clippath_1 = this.renderer.createClipPath({ id: this.element.id + 'SeriesGroup0' + '_clipPath' });\n            var path = new PathOption(this.element.id + 'SeriesGroup0' + '_slice', 'transparent', 1, 'transparent', 1, '', '');\n            var clipslice = this.renderer.drawPath(path);\n            clippath_1.appendChild(clipslice);\n            this.svgObject.appendChild(clippath_1);\n            var id_1 = this.element.id;\n            var groupElementID_1 = this.groupElement.id;\n            document.querySelectorAll('[id*=\"region-series-\"]').forEach(function (slice) {\n                if (slice.parentElement.id === groupElementID_1) {\n                    slice.style.cssText = 'clip-path:url(#' + clippath_1.id + '); -webkit-clip-path:url(#' + clippath_1.id + ');';\n                    slice.setAttribute('clip-path', 'url(#' + id_1 + 'SeriesGroup0' + '_clipPath' + ')');\n                }\n            });\n            if (series.segments[0]) {\n                this.animationRect(clipslice, series);\n            }\n        }\n    };\n    /**\n     * Renders the legend for the circular 3D chart.\n     *\n     * @returns {void}\n     */\n    CircularChart3D.prototype.renderLegend = function () {\n        if (!this.circularChartLegend3DModule || !this.legendSettings.visible) {\n            return null;\n        }\n        if (this.circularChartLegend3DModule.legendCollections.length && this.visibleSeries[0].labelBound) {\n            this.circularChartLegend3DModule.getSmartLegendLocation(this.visibleSeries[0].labelBound, this.circularChartLegend3DModule.legendBounds, this.margin);\n        }\n        this.circularChartLegend3DModule.renderLegend(this, this.legendSettings, this.circularChartLegend3DModule.legendBounds, this.redraw);\n    };\n    /**\n     * Initiates animation for the circular 3D series.\n     *\n     * @param {Element} slice - Specifies the slice element to animate.\n     * @param {CircularChart3DSeries} series - Specifies the circular 3D chart series.\n     * @returns {void}\n     */\n    CircularChart3D.prototype.animationRect = function (slice, series) {\n        var _this = this;\n        var startAngle = -90;\n        var duration = series.animation.duration; //this.duration ? this.duration : series.animation.duration;\n        var value;\n        var radius = Math.max(this.availableSize.height, this.availableSize.width) * 0.75;\n        radius += radius * (0.414); // formula r + r / 2 * (1.414 -1)\n        var effect = getAnimationFunction('Linear'); // need to check animation type\n        var center = {\n            x: series.segments[0].center.x - this.rotation / 2,\n            y: series.segments[0].center.y + this.tilt / 2\n        };\n        for (var i = 0; i < series.points.length; i++) {\n            var dataLabelElement = getElement(this.element.id + '-svg-data-label-text-' + i);\n            if (dataLabelElement) {\n                dataLabelElement.style.visibility = 'hidden';\n            }\n            var shapeElement = getElement(this.element.id + '-svg-data-label-series-0-shape-' + i);\n            if (shapeElement) {\n                shapeElement.style.visibility = 'hidden';\n            }\n            var templateElement = getElement(this.element.id + '-series-' + series.index + '-data-label-' + i);\n            if (templateElement) {\n                templateElement.style.visibility = 'hidden';\n            }\n            var connectorElement = getElement(this.element.id + '-datalabel-series-0-connector-' + i);\n            if (connectorElement) {\n                connectorElement.style.visibility = 'hidden';\n            }\n        }\n        if (!isNullOrUndefined(slice)) {\n            new Animation({}).animate(slice, {\n                duration: (duration === 0 && animationMode === 'Enable') ? 1000 : duration,\n                delay: series.animation.delay,\n                progress: function (args) {\n                    value = effect(args.timeStamp, startAngle, 359.99999, args.duration);\n                    slice.setAttribute('d', _this.getPathArc(center, startAngle, value, radius));\n                },\n                end: function () {\n                    slice.setAttribute('d', _this.getPathArc(center, 0, 359.99999, radius));\n                    _this.trigger(animationComplete, { series: series, chart: _this });\n                    for (var i = 0; i < series.points.length; i++) {\n                        var dataLabelElement = getElement(_this.element.id + '-svg-data-label-text-' + i);\n                        if (dataLabelElement) {\n                            dataLabelElement.style.visibility = 'visible';\n                        }\n                        var shapeElement = getElement(_this.element.id + '-svg-data-label-series-0-shape-' + i);\n                        if (shapeElement) {\n                            shapeElement.style.visibility = 'visible';\n                        }\n                        var templateElement = getElement(_this.element.id + '-series-' + series.index + '-data-label-' + i);\n                        if (templateElement) {\n                            templateElement.style.visibility = 'visible';\n                        }\n                        var connectorElement = getElement(_this.element.id + '-datalabel-series-0-connector-' + i);\n                        if (connectorElement) {\n                            connectorElement.style.visibility = 'visible';\n                        }\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * Gets the path arc direction for the circular 3D chart.\n     *\n     * @param {ChartLocation} center - Specifies the center of the series segment.\n     * @param {number} start - Specifies the start angle in degrees.\n     * @param {number} end  - Specifies the end angle in degrees.\n     * @param {number} radius - Specifies the radius of the series.\n     * @returns {string} - Path arc direction as an SVG path string.\n     */\n    CircularChart3D.prototype.getPathArc = function (center, start, end, radius) {\n        var degree = end - start;\n        degree = degree < 0 ? (degree + 360) : degree;\n        var flag = (degree < 180) ? 0 : 1;\n        return this.getPiePath(center, degreeToLocation(start, radius, center), degreeToLocation(end, radius, center), radius, flag);\n    };\n    /**\n     * Gets the SVG path string for a pie in the circular 3D chart.\n     *\n     * @param {ChartLocation} center - Specifies the center of the series segment.\n     * @param {ChartLocation} start - Specifies the start angle in degrees.\n     * @param {ChartLocation} end - Specifies the end angle in degrees.\n     * @param {number} radius - Specifies the radius of the series.\n     * @param {number} clockWise - Specifies the clockwise direction (0 for anti-clockwise, 1 for clockwise).\n     * @returns {string} - SVG path string for the pie.\n     */\n    CircularChart3D.prototype.getPiePath = function (center, start, end, radius, clockWise) {\n        return 'M ' + center.x + ' ' + center.y + ' L ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n            radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y + ' Z';\n    };\n    /**\n     * Renders the border for the circular 3D chart.\n     *\n     * @returns {void}\n     */\n    CircularChart3D.prototype.renderBorder = function () {\n        var padding = this.border.width;\n        var rect = new RectOption(this.element.id + '-border', this.background || this.themeStyle.background, this.border, 1, new Rect(padding / 2, padding / 2, this.availableSize.width - padding, this.availableSize.height - padding));\n        var htmlObject = this.renderer.drawRectangle(rect);\n        htmlObject.setAttribute('aria-hidden', 'true');\n        appendChildElement(false, this.svgObject, htmlObject, this.redraw);\n        var backGroundImage = this.backgroundImage;\n        if (backGroundImage) {\n            var image = new ImageOption(this.availableSize.height - padding, this.availableSize.width - padding, backGroundImage, 0, 0, this.element.id + '-background', 'visible', 'none');\n            appendChildElement(false, this.svgObject, this.renderer.drawImage(image), this.redraw);\n        }\n    };\n    /**\n     * Creates the secondary element for tooltips and data labels.\n     *\n     * @returns {void}\n     */\n    CircularChart3D.prototype.createSecondaryElement = function () {\n        var element = redrawElement(this.redraw, this.element.id + '_Secondary_Element') ||\n            this.createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: relative'\n            });\n        appendChildElement(false, this.element, element, this.redraw);\n    };\n    /**\n     * Renders the series for the circular 3D chart.\n     *\n     * @returns {void}\n     */\n    CircularChart3D.prototype.renderSeries = function () {\n        if (!this.redraw) {\n            this.svgObject.appendChild(this.renderer.createGroup({ id: this.element.id + '_SeriesCollection' }));\n        }\n        for (var _i = 0, _a = this.visibleSeries; _i < _a.length; _i++) {\n            var series = _a[_i];\n            if (series.visible && this[('pie' + 'Series3DModule')]) {\n                series.draw(series, this);\n                this.defaultLabelBound(series);\n            }\n        }\n    };\n    /**\n     * Sets the default label bounds for the specified circular 3D chart series based on its circular bounds.\n     *\n     * @param {CircularChart3DSeries} series - The CircularChart3DSeries for which to set the default label bounds.\n     * @returns {void}\n     */\n    CircularChart3D.prototype.defaultLabelBound = function (series) {\n        if (series.segments.length > 0 && series.dataLabel.visible) {\n            var circularBound = this.getSeriesBound(series);\n            if (series.dataLabel.visible && series.dataLabel.position === 'Inside') {\n                series.labelBound = new Rect(circularBound.x, circularBound.y, circularBound.width + circularBound.x, circularBound.height + circularBound.y);\n            }\n            series.findMaxBounds(series.labelBound, circularBound);\n            if (this.circularChartLegend3DModule) {\n                series.labelBound.x -= this.explodeDistance;\n                series.labelBound.y -= this.explodeDistance;\n                series.labelBound.height += (this.explodeDistance - series.labelBound.y);\n                series.labelBound.width += (this.explodeDistance - series.labelBound.x);\n            }\n        }\n    };\n    /**\n     * Calculates and returns the bounding rectangle (Rect) for the specified circular 3D chart series.\n     *\n     * @param {CircularChart3DSeries} series - The CircularChart3DSeries for which to calculate the bounding rectangle.\n     * @returns {Rect} - The calculated bounding rectangle for the series.\n     */\n    CircularChart3D.prototype.getSeriesBound = function (series) {\n        var rect = new Rect(Infinity, Infinity, -Infinity, -Infinity);\n        var start = 0;\n        var total = 360;\n        var end = (0 + total) % 360;\n        end = (end === 0) ? 360 : end;\n        series.findMaxBounds(rect, this.getRectFromAngle(start));\n        series.findMaxBounds(rect, this.getRectFromAngle(end));\n        series.findMaxBounds(rect, new Rect(series.segments[0].center.x, series.segments[0].center.y, 0, 0));\n        var nextQuandrant = (Math.floor(start / 90) * 90 + 90) % 360;\n        var lastQuadrant = (Math.floor(end / 90) * 90) % 360;\n        lastQuadrant = (lastQuadrant === 0) ? 360 : lastQuadrant;\n        if (total >= 90 || lastQuadrant === nextQuandrant) {\n            series.findMaxBounds(rect, this.getRectFromAngle(nextQuandrant));\n            series.findMaxBounds(rect, this.getRectFromAngle(lastQuadrant));\n        }\n        if (start === 0 || (start + total >= 360)) {\n            series.findMaxBounds(rect, this.getRectFromAngle(0));\n        }\n        var length = nextQuandrant === lastQuadrant ? 0 : Math.floor(total / 90);\n        for (var i = 1; i < length; i++) {\n            nextQuandrant = nextQuandrant + 90;\n            if ((nextQuandrant < lastQuadrant || end < start) || total === 360) {\n                series.findMaxBounds(rect, this.getRectFromAngle(nextQuandrant));\n            }\n        }\n        rect.width -= rect.x;\n        rect.height -= rect.y;\n        return rect;\n    };\n    /**\n     * Computes and returns a rectangle (Rect) based on the specified angle.\n     *\n     * @param {number} angle - The angle used to calculate the rectangle position.\n     * @returns {Rect} - The calculated rectangle representing the position.\n     */\n    CircularChart3D.prototype.getRectFromAngle = function (angle) {\n        var location = degreeToLocation(angle, this.circularRadius[0], this.visibleSeries[0].segments[0].center);\n        return new Rect(location.x, location.y, 0, 0);\n    };\n    /**\n     * Renders the title for the circular 3D chart.\n     *\n     * @returns {void}\n     */\n    CircularChart3D.prototype.renderTitle = function () {\n        var margin = this.margin;\n        if (!this.title) {\n            return null;\n        }\n        var getAnchor = this.getTextAnchor(this.titleStyle.textAlignment, this.enableRtl);\n        var titleSize = measureText(this.title, this.titleStyle, this.themeStyle.chartTitleFont);\n        var titleHeight = this.margin.top + (titleSize.height * 3 / 4);\n        var rect = new Rect(margin.left, 0, this.availableSize.width - margin.left - margin.right, 0);\n        var options = new TextOption(this.element.id + '-title', titlePositionX(rect, this.titleStyle), titleHeight, getAnchor, this.titleCollection, '', 'auto');\n        this.titleLocation = { x: options.x, y: options.y, size: titleSize };\n        var element = textElement(this.renderer, options, this.titleStyle, this.titleStyle.color || this.themeStyle.chartTitleFont.color, this.svgObject, false, this.redraw, null, null, null, null, null, null, null, null, this.themeStyle.chartTitleFont);\n        if (element) {\n            element.setAttribute('tabindex', '0');\n            element.parentNode.insertBefore(element, this.svgObject.children && this.svgObject.children[1]);\n        }\n        if (this.subTitle) {\n            this.renderSubTitle(options);\n        }\n    };\n    /**\n     * Gets the text anchor based on the specified alignment and RTL setting.\n     *\n     * @param {Alignment} alignment - The alignment of the text.\n     * @param {boolean} enableRTL - A boolean indicating whether right-to-left (RTL) text is enabled.\n     * @returns {string} - The text anchor value.\n     */\n    CircularChart3D.prototype.getTextAnchor = function (alignment, enableRTL) {\n        switch (alignment) {\n            case 'Near':\n                return enableRTL ? 'end' : 'start';\n            case 'Far':\n                return enableRTL ? 'start' : 'end';\n            default:\n                return 'middle';\n        }\n    };\n    /**\n     * Renders the subtitle for the circular 3D chart.\n     *\n     * @param {TextOption} options - The text options for rendering the subtitle.\n     * @returns {void}\n     */\n    CircularChart3D.prototype.renderSubTitle = function (options) {\n        var maxWidth = 0;\n        var titleWidth = 0;\n        var padding = 10;\n        var alignment = this.titleStyle.textAlignment;\n        var subTitleElementSize = measureText(this.subTitle, this.subTitleStyle, this.themeStyle.chartSubTitleFont);\n        for (var _i = 0, _a = this.titleCollection; _i < _a.length; _i++) {\n            var titleText = _a[_i];\n            titleWidth = measureText(titleText, this.titleStyle, this.themeStyle.chartTitleFont).width;\n            maxWidth = titleWidth > maxWidth ? titleWidth : maxWidth;\n        }\n        var rect = new Rect(alignment === 'Center' ? (options.x - maxWidth / 2) : alignment === 'Far' ? options.x - maxWidth : options.x, 0, maxWidth, 0);\n        var subTitleOption = new TextOption(this.element.id + '-sub-title', titlePositionX(rect, this.subTitleStyle), options.y * options.text.length + ((subTitleElementSize.height) * 3 / 4) + padding, this.getTextAnchor(this.subTitleStyle.textAlignment, this.enableRtl), this.subTitleCollection, '', 'auto');\n        this.subTitleLocation = { x: subTitleOption.x, y: subTitleOption.y, size: subTitleElementSize };\n        textElement(this.renderer, subTitleOption, this.subTitleStyle, this.subTitleStyle.color || this.themeStyle.chartSubTitleFont.color, this.svgObject, false, this.redraw, null, null, null, null, null, null, null, null, this.themeStyle.chartSubTitleFont);\n    };\n    /**\n     * Sets the left and top position for the data label and tooltip template for center-aligned chart.\n     *\n     * @private\n     * @returns {void}\n     */\n    CircularChart3D.prototype.setSecondaryElementPosition = function () {\n        var tooltipParent = getElement(this.element.id + '_Secondary_Element');\n        if (!tooltipParent) {\n            return;\n        }\n        var rect = this.element.getBoundingClientRect();\n        var svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        tooltipParent.style.left = Math.max(svgRect.left - rect.left, 0) + 'px';\n        tooltipParent.style.top = Math.max(svgRect.top - rect.top, 0) + 'px';\n    };\n    /**\n     * Creates an SVG element for the circular 3D chart.\n     *\n     * @returns {void}\n     */\n    CircularChart3D.prototype.createPieSvg = function () {\n        this.removeSvg();\n        createSvg(this);\n    };\n    /**\n     * Removes the SVG from the circular 3D chart.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularChart3D.prototype.removeSvg = function () {\n        if (this.redraw) {\n            return null;\n        }\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        removeElement('EJ2_legend_tooltip');\n        removeElement('EJ2_datalabel_tooltip');\n        removeElement(this.element.id + 'PointHover_Border');\n    };\n    /**\n     * Calculates and sets the visible series for the circular 3D chart.\n     *\n     * @returns {void}\n     */\n    CircularChart3D.prototype.calculateVisibleSeries = function () {\n        this.visibleSeries = [];\n        this.series[0].index = 0;\n        this.visibleSeries.push(this.series[0]);\n    };\n    /**\n     * Method to calculate bounds for the circular 3D chart.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularChart3D.prototype.calculateBounds = function () {\n        this.initialClipRect = new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height);\n        this.titleCollection = [];\n        this.subTitleCollection = [];\n        var titleHeight = 0;\n        var subTitleHeight = 0;\n        var maxWidth = 0;\n        var titleWidth = 0;\n        if (this.title) {\n            this.titleCollection = getTitle(this.title, this.titleStyle, this.initialClipRect.width, this.enableRtl, this.themeStyle.chartTitleFont);\n        }\n        titleHeight = this.title ? measureText(this.title, this.titleStyle, this.themeStyle.chartTitleFont).height * this.titleCollection.length : titleHeight;\n        if (this.subTitle) {\n            for (var _i = 0, _a = this.titleCollection; _i < _a.length; _i++) {\n                var titleText = _a[_i];\n                titleWidth = measureText(titleText, this.titleStyle, this.themeStyle.chartTitleFont).width;\n                maxWidth = titleWidth > maxWidth ? titleWidth : maxWidth;\n            }\n            this.subTitleCollection = getTitle(this.subTitle, this.subTitleStyle, maxWidth, this.enableRtl, this.themeStyle.chartSubTitleFont);\n            subTitleHeight = (measureText(this.subTitle, this.subTitleStyle, this.themeStyle.chartSubTitleFont).height * this.subTitleCollection.length);\n        }\n        subtractRect(this.initialClipRect, new Rect(0, (subTitleHeight + titleHeight), this.margin.right + this.margin.left, this.margin.bottom + this.margin.top));\n        this.calculateLegendBounds();\n    };\n    /*\n     * Method to calculate legend bounds for the circular 3D chart.\n     *\n     * @returns {void}\n     */\n    CircularChart3D.prototype.calculateLegendBounds = function () {\n        if (!this.circularChartLegend3DModule || !this.legendSettings.visible) {\n            return null;\n        }\n        this.circularChartLegend3DModule.getLegendOptions(this, this.visibleSeries);\n        this.circularChartLegend3DModule.calculateLegendBounds(this.initialClipRect, this.availableSize, null);\n    };\n    /**\n     * Handles the print method for the circular 3D chart control.\n     *\n     * @param {string[] | string | Element} id - Specifies the element to print.\n     * @returns {void}\n     */\n    CircularChart3D.prototype.print = function (id) {\n        var exportChart = new PrintUtils(this);\n        exportChart.print(id);\n    };\n    /**\n     * Export method for the circular 3D chart.\n     *\n     * @param {ExportType} type - Specifies the type of the image file (PNG, JPEG, SVG).\n     * @param {string} fileName - Specifies the name of the exported image file.\n     * @returns {void}\n     */\n    CircularChart3D.prototype.export = function (type, fileName) {\n        if (this.circularChartExport3DModule) {\n            this.circularChartExport3DModule.export(type, fileName);\n            if (this.afterExport) {\n                this.circularChartExport3DModule.getDataUrl(this);\n            }\n        }\n    };\n    /**\n     * Export the chart on the page to a PDF document.\n     *\n     * @param {string} fileName - The name of the exported file.\n     * @param {PdfPageOrientation} orientation - Page orientation (portrait or landscape).\n     * @param {CircularChart3D[]} controls - Array of controls to be exported.\n     * @param {number} width - The width of the exported chart.\n     * @param {number} height - The height of the exported chart.\n     * @param {boolean} isVertical - Export the chart vertically or horizontally.\n     * @param {string} header - Text to appear at the top of the exported PDF document.\n     * @param {string} footer - Text to appear at the bottom of the exported PDF document.\n     * @param {boolean} exportToMultiplePage - Export the chart to multiple PDF pages.\n     * @returns {void}\n     */\n    CircularChart3D.prototype.pdfExport = function (fileName, orientation, controls, width, height, isVertical, header, footer, exportToMultiplePage) {\n        if (this.circularChartExport3DModule) {\n            this.circularChartExport3DModule.pdfExport(fileName, orientation, controls, width, height, isVertical, header, footer, exportToMultiplePage);\n        }\n    };\n    /**\n     * Provides an array of modules needed for control rendering in the circular 3D chart.\n     *\n     * @returns {ModuleDeclaration[]} - An array of required modules.\n     * @private\n     */\n    CircularChart3D.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: this.type + 'Series3D',\n            args: [this]\n        });\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'CircularChartLegend3D',\n                args: [this]\n            });\n        }\n        if (this.series[0].dataLabel.visible) {\n            modules.push({\n                member: 'CircularChartDataLabel3D',\n                args: [this]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'CircularChartTooltip3D',\n                args: [this]\n            });\n        }\n        if (this.selectionMode !== 'None') {\n            modules.push({\n                member: 'CircularChartSelection3D',\n                args: [this]\n            });\n        }\n        if (this.highlightMode !== 'None' || this.legendSettings.enableHighlight) {\n            modules.push({\n                member: 'CircularChartHighlight3D',\n                args: [this]\n            });\n        }\n        if (this.enableExport) {\n            modules.push({\n                member: 'CircularChartExport3D',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Handles the keyboard onkeydown event in the circular 3D chart.\n     *\n     * @param {KeyboardEvent} e - The keydown event arguments.\n     * @returns {boolean} - Returns `false`.\n     * @private\n     */\n    CircularChart3D.prototype.circular3DChartKeyDown = function (e) {\n        var actionKey = '';\n        if (this.tooltip.enable && ((e.code === 'Tab' && this.previousTargetId.indexOf('series') > -1) || (this.previousTargetId.indexOf('legend') > -1) || e.code === 'Escape')) {\n            actionKey = 'ESC';\n        }\n        if (e.code.indexOf('Arrow') > -1) {\n            e.preventDefault();\n        }\n        if (e.ctrlKey && (e.key === 'p')) {\n            e.preventDefault();\n            actionKey = 'CtrlP';\n        }\n        if (actionKey !== '') {\n            this.chartKeyboardNavigations(e, e.target.id, actionKey);\n        }\n        return false;\n    };\n    /**\n     * Handles keyboard navigation for the chart based on the provided KeyboardEvent, targetId, and actionKey.\n     *\n     * @param {KeyboardEvent} e - The keyboard event object.\n     * @param {string} targetId - The ID of the target element related to the keyboard action.\n     * @param {string} actionKey - The key representing the type of action (e.g., 'Tab', 'ArrowMove').\n     * @returns {void}\n     */\n    CircularChart3D.prototype.chartKeyboardNavigations = function (e, targetId, actionKey) {\n        this.isLegendClicked = false;\n        switch (actionKey) {\n            case 'Tab':\n            case 'ArrowMove':\n                if (targetId.indexOf('-point-') > -1) {\n                    var seriesIndex = 0;\n                    var pointIndex = parseInt(targetId.split('point-')[1], 10);\n                    var point = this.visibleSeries[0].points[pointIndex];\n                    var center = point.symbolLocation.center;\n                    var dradius = point.symbolLocation.radius * this.visibleSeries[0].coefficient;\n                    var radius = dradius + (point.symbolLocation.radius - dradius) / 2;\n                    this.mouseX = center.x + radius * Math.cos(point.symbolLocation.angle);\n                    this.mouseY = center.y + radius * Math.sin(point.symbolLocation.angle);\n                    if (this.circularChartHighlight3DModule) {\n                        var targetElement = getElement(targetId);\n                        if (!isNullOrUndefined(targetElement)) {\n                            if (targetElement.id.indexOf('text') > 1) {\n                                targetElement = getElement(targetElement.id.replace('text', 'shape'));\n                            }\n                            if (this.circularChartSelection3DModule) {\n                                this.circularChartSelection3DModule.calculateSelectedElements(this, targetElement, 'mousemove');\n                            }\n                            else {\n                                this.circularChartHighlight3DModule.calculateSelectedElements(this, targetElement, 'mousemove');\n                            }\n                        }\n                    }\n                    if (this.circularChartTooltip3DModule) {\n                        var series = this.visibleSeries[seriesIndex];\n                        var data = void 0;\n                        if (series.enableTooltip) {\n                            data = new CircularChart3DPointData(series.points[pointIndex], series);\n                        }\n                        this.circularChartTooltip3DModule.element = this.element;\n                        this.circularChartTooltip3DModule.control = this;\n                        this.circularChartTooltip3DModule.renderSeriesTooltip(this, data);\n                    }\n                }\n                if (this.circularChartHighlight3DModule && this.highlightMode !== 'None') {\n                    targetId = targetId.indexOf('_chart_legend_g_') > -1 ? document.getElementById(targetId).firstChild['id'] : targetId;\n                    var legendID = this.element.id + '_chart_legend';\n                    var legendItemsId = [legendID + '_text_', legendID + '_shape_marker_',\n                        legendID + '_shape_'];\n                    for (var i = 0; i < legendItemsId.length; i++) {\n                        var id = legendItemsId[i];\n                        if (targetId.indexOf(id) > -1) {\n                            document.getElementById(targetId).setAttribute('class', '');\n                            if (this.circularChartSelection3DModule) {\n                                this.circularChartSelection3DModule.legendSelection(this, getElement(targetId), 'mousemove');\n                            }\n                            else {\n                                this.circularChartHighlight3DModule.legendSelection(this, getElement(targetId), 'mousemove');\n                            }\n                            break;\n                        }\n                    }\n                }\n                break;\n            case 'Enter':\n            case 'Space':\n                if (targetId.indexOf('_chart_legend_') > -1 && this.circularChartLegend3DModule) {\n                    this.isLegendClicked = true;\n                    this.circularChartLegend3DModule.click(e);\n                    this.focusChild(document.getElementById(targetId).parentElement);\n                }\n                else {\n                    if (this.circularChartSelection3DModule) {\n                        this.circularChartSelection3DModule.calculateSelectedElements(this, document.getElementById(targetId), 'click');\n                    }\n                }\n                break;\n            case 'CtrlP':\n                this.print();\n                break;\n            case 'ESC':\n                if (this.circularChartTooltip3DModule) {\n                    this.circularChartTooltip3DModule.removeTooltip(1);\n                }\n                if (this.circularChartSelection3DModule) {\n                    this.circularChartSelection3DModule.calculateSelectedElements(this, document.getElementById(this.element.id + '-border'), 'mousemove');\n                }\n                else if (this.circularChartHighlight3DModule && this.highlightMode !== 'None') {\n                    this.circularChartHighlight3DModule.calculateSelectedElements(this, document.getElementById(this.element.id + '-border'), 'mousemove');\n                }\n                break;\n        }\n    };\n    /**\n     * Sets the tabindex attribute of the provided HTML element to '0'.\n     *\n     * @param {HTMLElement} element - The HTML element to be focused.\n     * @returns {string} - The updated class attribute of the focused element.\n     */\n    CircularChart3D.prototype.focusChild = function (element) {\n        element.setAttribute('tabindex', '0');\n        var className = element.getAttribute('class');\n        element.setAttribute('tabindex', '0');\n        if (className && className.indexOf('e-circular3dchart-focused') === -1) {\n            className = 'e-circular3dchart-focused ' + className;\n        }\n        else if (!className) {\n            className = 'e-circular3dchart-focused';\n        }\n        element.setAttribute('class', className);\n        element.focus();\n        return element.id;\n    };\n    /**\n     * Handles the keyboard onkeyup event in the circular 3D chart.\n     *\n     * @param {KeyboardEvent} e - The keyup event arguments.\n     * @returns {boolean} - Returns `false`.\n     * @private\n     */\n    CircularChart3D.prototype.circular3DChartKeyUp = function (e) {\n        var actionKey = '';\n        var targetId = e.target['id'];\n        var legendElement = getElement(this.element.id + '_chart_legend_translate_g');\n        var pagingElement = getElement(this.element.id + '_chart_legend_pageup');\n        if (legendElement) {\n            var firstChild = legendElement.firstElementChild;\n            var className = firstChild.getAttribute('class');\n            if (className && className.indexOf('e-circular3dchart-focused') === -1) {\n                className = className + ' e-circular3dchart-focused';\n            }\n            else if (!className) {\n                className = 'e-circular3dchart-focused';\n            }\n            firstChild.setAttribute('class', className);\n        }\n        if (pagingElement) {\n            pagingElement.setAttribute('class', 'e-circular3dchart-focused');\n        }\n        if (e.code === 'Tab') {\n            if (this.previousTargetId !== '') {\n                if (this.previousTargetId.indexOf('-point-') > -1 && targetId.indexOf('-point-') === -1) {\n                    // const groupElement: HTMLElement = document.getElementById(this.previousTargetId).parentElement;\n                    // this.setTabIndex(groupElement.children[this.currentPointIndex] as HTMLElement,\n                    //                  groupElement.firstElementChild as HTMLElement);\n                    this.currentPointIndex = 0;\n                }\n                else if (this.previousTargetId.indexOf('_chart_legend_page') > -1 && targetId.indexOf('_chart_legend_page') === -1 &&\n                    targetId.indexOf('_chart_legend_g_') === -1) {\n                    this.setTabIndex(e.target, pagingElement);\n                }\n                else if (this.previousTargetId.indexOf('_chart_legend_g_') > -1 && targetId.indexOf('chart_legend_g_') === -1) {\n                    this.setTabIndex(legendElement.children[this.currentLegendIndex], legendElement.firstElementChild);\n                }\n                else if (this.previousTargetId.indexOf('-title') > -1 && targetId.indexOf('-point-') > -1) {\n                    this.currentPointIndex = parseInt(targetId.split('point-')[1], 10);\n                }\n            }\n            this.previousTargetId = targetId;\n            if (targetId.indexOf('_chart_legend_g_') > -1 && this.highlightMode !== 'None') {\n                targetId = e.target['lastElementChild'].id;\n                actionKey = 'Tab';\n            }\n            else if (targetId.indexOf('-point-') > -1 && (this.highlightMode !== 'None' || this.tooltip.enable)) {\n                actionKey = 'Tab';\n            }\n        }\n        else if (e.code.indexOf('Arrow') > -1) {\n            e.preventDefault();\n            if (targetId.indexOf('_chart_legend_page') > -1) {\n                e.target.removeAttribute('tabindex');\n                this.previousTargetId = targetId = this.element.id + '_chart_legend_page' + (e.code === 'ArrowRight' ? 'up' : 'down');\n                this.focusTarget(getElement(targetId));\n            }\n            else if ((targetId.indexOf('_chart_legend_') > -1)) {\n                e.target.removeAttribute('tabindex');\n                this.currentLegendIndex += (e.code === 'ArrowUp' || e.code === 'ArrowRight') ? +1 : -1;\n                this.currentLegendIndex = this.getActualIndex(this.currentLegendIndex, legendElement.children.length);\n                var currentLegend = legendElement.children[this.currentLegendIndex];\n                this.focusTarget(currentLegend);\n                this.previousTargetId = targetId = currentLegend.lastElementChild.id;\n                actionKey = this.highlightMode !== 'None' ? 'ArrowMove' : '';\n            }\n            else if (targetId.indexOf('-point-') > -1) {\n                e.target.setAttribute('tabindex', '-1');\n                var totalLength = 0;\n                var seriesIndexes = [];\n                for (var i = 0; i < this.visibleSeries[0].points.length; i++) {\n                    var point = this.visibleSeries[0].points[i];\n                    totalLength = point.visible ? totalLength + 1 : totalLength;\n                    if (this.visibleSeries[0].points[i].visible) {\n                        seriesIndexes.push(this.visibleSeries[0].points[i].index);\n                    }\n                }\n                this.currentPointIndex = seriesIndexes.indexOf(this.currentPointIndex) + ((e.code === 'ArrowUp' || e.code === 'ArrowRight') ? 1 : -1);\n                this.currentPointIndex = seriesIndexes[this.getActualIndex(this.currentPointIndex, seriesIndexes.length)];\n                var elements = document.querySelectorAll(\"[id*=\\\"region-series-0-point-\" + this.currentPointIndex + \"\\\"]\");\n                var element = void 0;\n                if (elements.length > 0) {\n                    element = elements[elements.length - 1];\n                }\n                targetId = element ? element.id : '';\n                this.focusTarget(getElement(targetId));\n                actionKey = this.tooltip.enable || this.circularChartHighlight3DModule ? 'ArrowMove' : '';\n            }\n        }\n        else if ((e.code === 'Enter' || e.code === 'Space') && ((targetId.indexOf('_chart_legend_') > -1) ||\n            (targetId.indexOf('-point-') > -1))) {\n            targetId = (targetId.indexOf('_chart_legend_g') > -1) ? e.target['lastElementChild'].id : targetId;\n            actionKey = 'Enter';\n        }\n        if (actionKey !== '') {\n            this.chartKeyboardNavigations(e, targetId, actionKey);\n        }\n        return false;\n    };\n    /**\n     * Calculates the actual index based on the specified index and total length.\n     *\n     * @param {number} index - The index to be adjusted.\n     * @param {number} totalLength - The total length of the collection or array.\n     * @returns {number} - The actual index after adjustment.\n     */\n    CircularChart3D.prototype.getActualIndex = function (index, totalLength) {\n        return index > totalLength - 1 ? 0 : (index < 0 ? totalLength - 1 : index);\n    };\n    /**\n     * Focuses the specified HTML element by setting its tabindex attribute to '0'.\n     *\n     * @param {HTMLElement} element - The HTML element to be focused.\n     * @returns {string} - The updated class attribute of the focused element.\n     */\n    CircularChart3D.prototype.focusTarget = function (element) {\n        var className = element.getAttribute('class');\n        element.setAttribute('tabindex', '0');\n        if (className && className.indexOf('e-circular3dchart-focused') === -1) {\n            className = className + ' e-circular3dchart-focused';\n        }\n        else if (!className) {\n            className = 'e-circular3dchart-focused';\n        }\n        element.setAttribute('tabindex', '0');\n        element.setAttribute('class', className);\n        element.focus();\n        return element.id;\n    };\n    /**\n     * Sets the tabIndex property on the provided currentElement.\n     *\n     * @param {HTMLElement} previousElement - The previously focused HTML element.\n     * @param {HTMLElement} currentElement - The currently focused HTML element.\n     * @returns {void}\n     */\n    CircularChart3D.prototype.setTabIndex = function (previousElement, currentElement) {\n        if (previousElement) {\n            previousElement.removeAttribute('tabindex');\n        }\n        if (currentElement) {\n            currentElement.setAttribute('tabindex', '0');\n        }\n    };\n    /**\n     * Gets the properties to be maintained in the persisted state.\n     *\n     * @private\n     * @returns {string} - A string representing the persisted data.\n     */\n    CircularChart3D.prototype.getPersistData = function () {\n        return '';\n    };\n    /**\n     * Gets the module name for the circular 3D chart.\n     *\n     *  @private\n     * @returns {string} - The circular 3D chart module name.\n     */\n    CircularChart3D.prototype.getModuleName = function () {\n        return 'circularchart3d';\n    };\n    /**\n     * Destroys the circular 3D chart instance.\n     *\n     * @private\n     * @returns {void}\n     */\n    CircularChart3D.prototype.destroy = function () {\n        if (this.element) {\n            this.unWireEvents();\n            this.circular3DPolygon = [];\n            this.visibleSeries[0].segments = [];\n            _super.prototype.destroy.call(this);\n            this.element.classList.remove('e-circular3dchart');\n            this.element.classList.remove('e-circular3dchart-focused');\n            var element = document.getElementById(this.element.id + 'Keyboard_circular3dchart_focus');\n            if (element) {\n                element.remove();\n            }\n            removeElement('chartmeasuretext');\n            this.removeSvg();\n            this.svgObject = null;\n        }\n    };\n    /**\n     * Handles the resize of the circular 3D chart.\n     *\n     * @returns {boolean} - Returns `true` to indicate the resize method of the circular 3D chart.\n     * @private\n     */\n    CircularChart3D.prototype.chartResize = function () {\n        var _this = this;\n        this.animateSeries = false;\n        var args = {\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n            currentSize: new Size(0, 0),\n            chart: this\n        };\n        var beforeResizeArgs = { cancel: false };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.trigger(beforeResize, beforeResizeArgs);\n        if (!beforeResizeArgs.cancel) {\n            this.resizeTo = +setTimeout(function () {\n                if (_this.isDestroyed) {\n                    clearTimeout(_this.resizeTo);\n                    return;\n                }\n                calculateSize(_this);\n                args.currentSize = _this.availableSize;\n                _this.trigger(resized, args);\n                _this.refreshChart();\n            }, 500);\n        }\n        return false;\n    };\n    /**\n     * Retrieves the visible circular 3D chart series based on the specified index.\n     *\n     * @param {CircularChart3DSeries[]} visibleSeries - An array of visible circular 3D chart series.\n     * @param {number} index - The index of the desired series.\n     * @returns {CircularChart3DSeries} - The CircularChart3D series corresponding to the provided index.\n     */\n    CircularChart3D.prototype.changeVisibleSeries = function (visibleSeries, index) {\n        for (var _i = 0, visibleSeries_1 = visibleSeries; _i < visibleSeries_1.length; _i++) {\n            var series = visibleSeries_1[_i];\n            if (index === series.index) {\n                return series;\n            }\n        }\n        return null;\n    };\n    /**\n     * Removes elements with IDs containing the substring \"region-series-\".\n     *\n     * @param {CircularChart3D} chart - The instance of the circular 3D chart.\n     * @returns {void}\n     * @private\n     */\n    CircularChart3D.prototype.removeSeriesElements = function (chart) {\n        document.querySelectorAll('[id*=\"region-series-\"]').forEach(function (element) {\n            if (element.parentElement.id === chart.groupElement.id) {\n                return element.remove();\n            }\n        });\n        document.querySelectorAll('[id*=\"data-label-text-\"]').forEach(function (element) {\n            if (element.parentElement.id === chart.groupElement.id) {\n                return element.remove();\n            }\n        });\n        document.querySelectorAll('[id*=\"data-label-series-0-shape-\"]').forEach(function (element) {\n            if (element.parentElement.id === chart.groupElement.id) {\n                return element.remove();\n            }\n        });\n        document.querySelectorAll('[id*=\"datalabel-series-0-connector-\"]').forEach(function (element) {\n            if (element.parentElement.id === chart.groupElement.id) {\n                return element.remove();\n            }\n        });\n    };\n    /**\n     * Called internally when any property value changes in the circular 3D chart.\n     *\n     * @private\n     * @param {CircularChart3DModel} newProp - Specifies the new properties of the circular 3D chart.\n     * @param {CircularChart3DModel} oldProp - Specifies the old properties of the circular 3D chart.\n     */\n    // tslint:disable-next-line:max-func-body-length\n    CircularChart3D.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var update = {\n            refreshElements: false, refreshBounds: false\n        };\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'theme':\n                    this.animateSeries = true;\n                    break;\n                case 'title':\n                case 'subTitle':\n                case 'height':\n                case 'width':\n                case 'margin':\n                case 'enableRotation':\n                case 'depth':\n                    update.refreshBounds = true;\n                    break;\n                case 'tilt':\n                case 'rotation':\n                    if (!this.rotateActivate) {\n                        update.refreshBounds = true;\n                        this.animateSeries = false;\n                    }\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && (newProp.titleStyle.size || newProp.titleStyle.textOverflow)) {\n                        update.refreshBounds = true;\n                    }\n                    else {\n                        update.refreshElements = true;\n                    }\n                    break;\n                case 'subTitleStyle':\n                    if (newProp.subTitleStyle && (newProp.subTitleStyle.size || newProp.subTitleStyle.textOverflow)) {\n                        update.refreshBounds = true;\n                    }\n                    else {\n                        update.refreshElements = true;\n                    }\n                    break;\n                case 'legendSettings':\n                    update.refreshBounds = true;\n                    update.refreshElements = true;\n                    break;\n                case 'dataSource':\n                    this.processData(false);\n                    update.refreshBounds = true;\n                    break;\n                case 'series':\n                    if (!this.delayRedraw) {\n                        var seriesRefresh = false;\n                        var series = void 0;\n                        var seriesRender = void 0;\n                        for (var i = 0; i < this.series.length; i++) {\n                            series = newProp.series[i];\n                            if ((series.explodeOffset ||\n                                series.radius || series.innerRadius || series.emptyPointSettings)) {\n                                seriesRender = true;\n                            }\n                            if (newProp.series[i] && (newProp.series[i].dataSource || newProp.series[i].yName\n                                || newProp.series[i].xName ||\n                                newProp.series[i].dataLabel || seriesRender)) {\n                                extend(this.changeVisibleSeries(this.visibleSeries, i), series, null, true);\n                                seriesRefresh = true;\n                            }\n                            if (newProp.series[i] && !isNullOrUndefined(newProp.series[i].explodeIndex) &&\n                                newProp.series[i].explodeIndex >= 0\n                                && newProp.series[i].explodeIndex !== oldProp.series[i].explodeIndex) {\n                                seriesRefresh = true;\n                                this.removeSeriesElements(this);\n                            }\n                        }\n                        if (seriesRefresh) {\n                            this.processData(false);\n                            update.refreshBounds = true;\n                        }\n                    }\n                    this.delayRedraw = false;\n                    this.redraw = false;\n                    break;\n                case 'enableRtl':\n                case 'locale':\n                    _super.prototype.refresh.call(this);\n                    break;\n                case 'background':\n                case 'border':\n                    update.refreshElements = true;\n                    break;\n                case 'isMultiSelect':\n                case 'selectedDataIndexes':\n                case 'selectionMode':\n                    if (this.circularChartSelection3DModule) {\n                        if (isNullOrUndefined(this.circularChartSelection3DModule.selectedDataIndexes)) {\n                            this.circularChartSelection3DModule.invokeSelection(this);\n                        }\n                        else {\n                            this.circularChartSelection3DModule.selectedDataIndexes = this.selectedDataIndexes;\n                            this.circularChartSelection3DModule.redrawSelection(this);\n                        }\n                    }\n                    break;\n                case 'tooltip':\n                    if (this.circularChartTooltip3DModule) {\n                        this.circularChartTooltip3DModule.previousPoints = [];\n                        if (this.tooltip.template) {\n                            this.circularChartTooltip3DModule.template = this.tooltip.template;\n                        }\n                    }\n                    break;\n            }\n            if (!update.refreshBounds && update.refreshElements) {\n                this.removeSeriesElements(this);\n                this.createPieSvg();\n                this.circular3DPolygon = [];\n                this.visibleSeries[0].segments = [];\n                this.renderElements();\n            }\n            else if (update.refreshBounds) {\n                this.removeSeriesElements(this);\n                this.createPieSvg();\n                this.circular3DPolygon = [];\n                this.visibleSeries[0].segments = [];\n                this.calculateBounds();\n                this.renderElements();\n            }\n        }\n    };\n    __decorate([\n        Property(null)\n    ], CircularChart3D.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularChart3D.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularChart3D.prototype, \"title\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularChart3D.prototype, \"backgroundImage\", void 0);\n    __decorate([\n        Property('')\n    ], CircularChart3D.prototype, \"dataSource\", void 0);\n    __decorate([\n        Complex({ fontFamily: null, size: null, fontStyle: null, fontWeight: null, color: null }, Font)\n    ], CircularChart3D.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularChart3D.prototype, \"subTitle\", void 0);\n    __decorate([\n        Complex({ fontFamily: null, size: null, fontStyle: null, fontWeight: null, color: null }, Font)\n    ], CircularChart3D.prototype, \"subTitleStyle\", void 0);\n    __decorate([\n        Property('None')\n    ], CircularChart3D.prototype, \"selectionMode\", void 0);\n    __decorate([\n        Property('None')\n    ], CircularChart3D.prototype, \"highlightMode\", void 0);\n    __decorate([\n        Collection([{}], CircularChart3DSeries)\n    ], CircularChart3D.prototype, \"series\", void 0);\n    __decorate([\n        Complex({}, CircularChart3DLegendSettings)\n    ], CircularChart3D.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property('')\n    ], CircularChart3D.prototype, \"highlightColor\", void 0);\n    __decorate([\n        Property('None')\n    ], CircularChart3D.prototype, \"selectionPattern\", void 0);\n    __decorate([\n        Property('None')\n    ], CircularChart3D.prototype, \"highlightPattern\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularChart3D.prototype, \"isMultiSelect\", void 0);\n    __decorate([\n        Property(true)\n    ], CircularChart3D.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularChart3D.prototype, \"theme\", void 0);\n    __decorate([\n        Collection([], Indexes)\n    ], CircularChart3D.prototype, \"selectedDataIndexes\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularChart3D.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], CircularChart3D.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, CircularChart3DTooltipSettings)\n    ], CircularChart3D.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularChart3D.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularChart3D.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(50)\n    ], CircularChart3D.prototype, \"depth\", void 0);\n    __decorate([\n        Property(0)\n    ], CircularChart3D.prototype, \"tilt\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularChart3D.prototype, \"enableRotation\", void 0);\n    __decorate([\n        Property(0)\n    ], CircularChart3D.prototype, \"rotation\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularChart3D.prototype, \"enableExport\", void 0);\n    __decorate([\n        Event()\n    ], CircularChart3D.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularChart3D.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularChart3D.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularChart3D.prototype, \"legendClick\", void 0);\n    __decorate([\n        Event()\n    ], CircularChart3D.prototype, \"selectionComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularChart3D.prototype, \"pointRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularChart3D.prototype, \"seriesRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularChart3D.prototype, \"textRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularChart3D.prototype, \"beforeExport\", void 0);\n    __decorate([\n        Event()\n    ], CircularChart3D.prototype, \"afterExport\", void 0);\n    __decorate([\n        Event()\n    ], CircularChart3D.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], CircularChart3D.prototype, \"beforeResize\", void 0);\n    __decorate([\n        Event()\n    ], CircularChart3D.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], CircularChart3D.prototype, \"circularChart3DMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularChart3D.prototype, \"circularChart3DMouseClick\", void 0);\n    __decorate([\n        Event()\n    ], CircularChart3D.prototype, \"circularChart3DMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularChart3D.prototype, \"circularChart3DMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularChart3D.prototype, \"circularChart3DMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularChart3D.prototype, \"pointClick\", void 0);\n    __decorate([\n        Event()\n    ], CircularChart3D.prototype, \"pointMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularChart3D.prototype, \"tooltipRender\", void 0);\n    CircularChart3D = __decorate([\n        NotifyPropertyChanges\n    ], CircularChart3D);\n    return CircularChart3D;\n}(Component));\nexport { CircularChart3D };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}