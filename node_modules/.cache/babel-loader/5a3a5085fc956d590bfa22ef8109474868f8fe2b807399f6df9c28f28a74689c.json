{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rotateXY = undefined;\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nexports.identityStack = identityStack;\nexports.drawOnCanvasHelper = drawOnCanvasHelper;\nexports.svgHelper = svgHelper;\nexports.getBarsSVG2 = getBarsSVG2;\nexports.drawOnCanvas2 = drawOnCanvas2;\nexports.getBars = getBars;\nvar _react = require(\"react\");\nvar _react2 = _interopRequireDefault(_react);\nvar _propTypes = require(\"prop-types\");\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _d3Collection = require(\"d3-collection\");\nvar _d3Array = require(\"d3-array\");\nvar _d3Shape = require(\"d3-shape\");\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\nvar _GenericComponent = require(\"../GenericComponent\");\nvar _utils = require(\"../utils\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar StackedBarSeries = function (_Component) {\n  _inherits(StackedBarSeries, _Component);\n  function StackedBarSeries(props) {\n    _classCallCheck(this, StackedBarSeries);\n    var _this = _possibleConstructorReturn(this, (StackedBarSeries.__proto__ || Object.getPrototypeOf(StackedBarSeries)).call(this, props));\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    return _this;\n  }\n  _createClass(StackedBarSeries, [{\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var xAccessor = moreProps.xAccessor;\n      // var { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n      drawOnCanvasHelper(ctx, this.props, moreProps, xAccessor, _d3Shape.stack);\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var xAccessor = moreProps.xAccessor;\n      return _react2.default.createElement(\"g\", null, svgHelper(this.props, moreProps, xAccessor, _d3Shape.stack));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var clip = this.props.clip;\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        clip: clip,\n        svgDraw: this.renderSVG,\n        canvasDraw: this.drawOnCanvas,\n        canvasToDraw: _GenericComponent.getAxisCanvas,\n        drawOn: [\"pan\"]\n      });\n    }\n  }]);\n  return StackedBarSeries;\n}(_react.Component);\nStackedBarSeries.propTypes = {\n  baseAt: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.func]).isRequired,\n  direction: _propTypes2.default.oneOf([\"up\", \"down\"]).isRequired,\n  stroke: _propTypes2.default.bool.isRequired,\n  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.func]).isRequired,\n  opacity: _propTypes2.default.number.isRequired,\n  fill: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired,\n  className: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired,\n  clip: _propTypes2.default.bool.isRequired\n};\nStackedBarSeries.defaultProps = {\n  baseAt: function baseAt(xScale, yScale /* , d*/) {\n    return (0, _utils.head)(yScale.range());\n  },\n  direction: \"up\",\n  className: \"bar\",\n  stroke: true,\n  fill: \"#4682B4\",\n  opacity: 0.5,\n  width: _utils.plotDataLengthBarWidth,\n  widthRatio: 0.8,\n  clip: true,\n  swapScales: false\n};\nfunction identityStack() {\n  var keys = [];\n  function stack(data) {\n    var response = keys.map(function (key, i) {\n      // eslint-disable-next-line prefer-const\n      var arrays = data.map(function (d) {\n        // eslint-disable-next-line prefer-const\n        var array = [0, d[key]];\n        array.data = d;\n        return array;\n      });\n      arrays.key = key;\n      arrays.index = i;\n      return arrays;\n    });\n    return response;\n  }\n  stack.keys = function (x) {\n    if (!arguments.length) {\n      return keys;\n    }\n    keys = x;\n    return stack;\n  };\n  return stack;\n}\nfunction drawOnCanvasHelper(ctx, props, moreProps, xAccessor, stackFn) {\n  var defaultPostAction = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : _utils.identity;\n  var postRotateAction = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : rotateXY;\n  var xScale = moreProps.xScale,\n    yScale = moreProps.chartConfig.yScale,\n    plotData = moreProps.plotData;\n  var bars = doStuff(props, xAccessor, plotData, xScale, yScale, stackFn, postRotateAction, defaultPostAction);\n  drawOnCanvas2(props, ctx, bars);\n}\nfunction convertToArray(item) {\n  return Array.isArray(item) ? item : [item];\n}\nfunction svgHelper(props, moreProps, xAccessor, stackFn) {\n  var defaultPostAction = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : _utils.identity;\n  var postRotateAction = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : rotateXY;\n  var xScale = moreProps.xScale,\n    yScale = moreProps.chartConfig.yScale,\n    plotData = moreProps.plotData;\n  var bars = doStuff(props, xAccessor, plotData, xScale, yScale, stackFn, postRotateAction, defaultPostAction);\n  return getBarsSVG2(props, bars);\n}\nfunction doStuff(props, xAccessor, plotData, xScale, yScale, stackFn, postRotateAction, defaultPostAction) {\n  var yAccessor = props.yAccessor,\n    swapScales = props.swapScales;\n  var modifiedYAccessor = swapScales ? convertToArray(props.xAccessor) : convertToArray(yAccessor);\n  var modifiedXAccessor = swapScales ? yAccessor : xAccessor;\n  var modifiedXScale = swapScales ? yScale : xScale;\n  var modifiedYScale = swapScales ? xScale : yScale;\n  var postProcessor = swapScales ? postRotateAction : defaultPostAction;\n  var bars = getBars(props, modifiedXAccessor, modifiedYAccessor, modifiedXScale, modifiedYScale, plotData, stackFn, postProcessor);\n  return bars;\n}\nvar rotateXY = exports.rotateXY = function rotateXY(array) {\n  return array.map(function (each) {\n    return _extends({}, each, {\n      x: each.y,\n      y: each.x,\n      height: each.width,\n      width: each.height\n    });\n  });\n};\nfunction getBarsSVG2(props, bars) {\n  /* eslint-disable react/prop-types */\n  var opacity = props.opacity;\n  /* eslint-enable react/prop-types */\n\n  return bars.map(function (d, idx) {\n    if (d.width <= 1) {\n      return _react2.default.createElement(\"line\", {\n        key: idx,\n        className: d.className,\n        stroke: d.fill,\n        x1: d.x,\n        y1: d.y,\n        x2: d.x,\n        y2: d.y + d.height\n      });\n    }\n    return _react2.default.createElement(\"rect\", {\n      key: idx,\n      className: d.className,\n      stroke: d.stroke,\n      fill: d.fill,\n      x: d.x,\n      y: d.y,\n      width: d.width,\n      fillOpacity: opacity,\n      height: d.height\n    });\n  });\n}\nfunction drawOnCanvas2(props, ctx, bars) {\n  var stroke = props.stroke;\n  var nest = (0, _d3Collection.nest)().key(function (d) {\n    return d.fill;\n  }).entries(bars);\n  nest.forEach(function (outer) {\n    var key = outer.key,\n      values = outer.values;\n    if ((0, _utils.head)(values).width > 1) {\n      ctx.strokeStyle = key;\n    }\n    var fillStyle = (0, _utils.head)(values).width <= 1 ? key : (0, _utils.hexToRGBA)(key, props.opacity);\n    ctx.fillStyle = fillStyle;\n    values.forEach(function (d) {\n      if (d.width <= 1) {\n        /* <line key={idx} className={d.className}\n        \t\t\tstroke={stroke}\n        \t\t\tfill={fill}\n        \t\t\tx1={d.x} y1={d.y}\n        \t\t\tx2={d.x} y2={d.y + d.height} />*/\n        /*\n        ctx.beginPath();\n        ctx.moveTo(d.x, d.y);\n        ctx.lineTo(d.x, d.y + d.height);\n        ctx.stroke();\n        */\n        ctx.fillRect(d.x - 0.5, d.y, 1, d.height);\n      } else {\n        /* <rect key={idx} className={d.className}\n        \t\tstroke={stroke}\n        \t\tfill={fill}\n        \t\tx={d.x}\n        \t\ty={d.y}\n        \t\twidth={d.width}\n        \t\theight={d.height} /> */\n        /*\n        ctx.beginPath();\n        ctx.rect(d.x, d.y, d.width, d.height);\n        ctx.fill();\n        */\n        ctx.fillRect(d.x, d.y, d.width, d.height);\n        if (stroke) ctx.strokeRect(d.x, d.y, d.width, d.height);\n      }\n    });\n  });\n}\nfunction getBars(props, xAccessor, yAccessor, xScale, yScale, plotData) {\n  var stack = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : identityStack;\n  var after = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : _utils.identity;\n  var baseAt = props.baseAt,\n    className = props.className,\n    fill = props.fill,\n    stroke = props.stroke,\n    _props$spaceBetweenBa = props.spaceBetweenBar,\n    spaceBetweenBar = _props$spaceBetweenBa === undefined ? 0 : _props$spaceBetweenBa;\n  var getClassName = (0, _utils.functor)(className);\n  var getFill = (0, _utils.functor)(fill);\n  var getBase = (0, _utils.functor)(baseAt);\n  var widthFunctor = (0, _utils.functor)(props.width);\n  var width = widthFunctor(props, {\n    xScale: xScale,\n    xAccessor: xAccessor,\n    plotData: plotData\n  });\n  var barWidth = Math.round(width);\n  var eachBarWidth = (barWidth - spaceBetweenBar * (yAccessor.length - 1)) / yAccessor.length;\n  var offset = barWidth === 1 ? 0 : 0.5 * width;\n  var ds = plotData.map(function (each) {\n    // eslint-disable-next-line prefer-const\n    var d = {\n      appearance: {},\n      x: xAccessor(each)\n    };\n    yAccessor.forEach(function (eachYAccessor, i) {\n      var key = \"y\" + i;\n      d[key] = eachYAccessor(each);\n      var appearance = {\n        className: getClassName(each, i),\n        stroke: stroke ? getFill(each, i) : \"none\",\n        fill: getFill(each, i)\n      };\n      d.appearance[key] = appearance;\n    });\n    return d;\n  });\n  var keys = yAccessor.map(function (_, i) {\n    return \"y\" + i;\n  });\n\n  // console.log(ds);\n\n  var data = stack().keys(keys)(ds);\n\n  // console.log(data);\n\n  var newData = data.map(function (each, i) {\n    var key = each.key;\n    return each.map(function (d) {\n      // eslint-disable-next-line prefer-const\n      var array = [d[0], d[1]];\n      array.data = {\n        x: d.data.x,\n        i: i,\n        appearance: d.data.appearance[key]\n      };\n      return array;\n    });\n  });\n  // console.log(newData);\n  // console.log(merge(newData));\n\n  var bars = (0, _d3Array.merge)(newData)\n  // .filter(d => isDefined(d.y))\n  .map(function (d) {\n    // let baseValue = yScale.invert(getBase(xScale, yScale, d.datum));\n    var y = yScale(d[1]);\n    /* let h = isDefined(d.y0) && d.y0 !== 0 && !isNaN(d.y0)\n    \t\t? yScale(d.y0) - y\n    \t\t: getBase(xScale, yScale, d.datum) - yScale(d.y)*/\n    var h = getBase(xScale, yScale, d.data) - yScale(d[1] - d[0]);\n    // console.log(d.y, yScale.domain(), yScale.range())\n    // let h = ;\n    // if (d.y < 0) h = -h;\n    // console.log(d, y, h)\n    if (h < 0) {\n      y = y + h;\n      h = -h;\n    }\n    // console.log(d.data.i, Math.round(offset - (d.data.i > 0 ? (eachBarWidth + spaceBetweenBar) * d.data.i : 0)))\n    /* console.log(d.series, d.datum.date, d.x,\n    \t\tgetBase(xScale, yScale, d.datum), `d.y=${d.y}, d.y0=${d.y0}, y=${y}, h=${h}`)*/\n    return _extends({}, d.data.appearance, {\n      // series: d.series,\n      // i: d.x,\n      x: Math.round(xScale(d.data.x) - width / 2),\n      y: y,\n      groupOffset: Math.round(offset - (d.data.i > 0 ? (eachBarWidth + spaceBetweenBar) * d.data.i : 0)),\n      groupWidth: Math.round(eachBarWidth),\n      offset: Math.round(offset),\n      height: h,\n      width: barWidth\n    });\n  }).filter(function (bar) {\n    return !isNaN(bar.y);\n  });\n  return after(bars);\n}\nexports.default = StackedBarSeries;","map":{"version":3,"names":["identityStack","drawOnCanvasHelper","svgHelper","getBarsSVG2","drawOnCanvas2","getBars","_react","require","_propTypes","_d3Collection","_d3Array","_d3Shape","_GenericChartComponent","_GenericComponent","_utils","StackedBarSeries","props","_classCallCheck","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","stack","_react2","default","createElement","clip","_GenericChartComponent2","svgDraw","canvasDraw","canvasToDraw","getAxisCanvas","drawOn","propTypes","baseAt","_propTypes2","oneOfType","number","func","isRequired","direction","oneOf","stroke","bool","width","opacity","fill","string","className","defaultProps","xScale","yScale","head","range","plotDataLengthBarWidth","widthRatio","swapScales","keys","data","response","map","key","i","arrays","d","array","index","x","arguments","length","stackFn","defaultPostAction","undefined","identity","postRotateAction","rotateXY","chartConfig","plotData","bars","doStuff","convertToArray","item","Array","isArray","yAccessor","modifiedYAccessor","modifiedXAccessor","modifiedXScale","modifiedYScale","postProcessor","exports","each","_extends","y","height","idx","x1","y1","x2","y2","fillOpacity","nest","entries","forEach","outer","values","strokeStyle","fillStyle","hexToRGBA","fillRect","strokeRect","after","_props$spaceBetweenBa","spaceBetweenBar","getClassName","functor","getFill","getBase","widthFunctor","barWidth","Math","round","eachBarWidth","offset","ds","appearance","eachYAccessor","_","newData","merge","h","groupOffset","groupWidth","filter","bar","isNaN"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\src\\lib\\series\\StackedBarSeries.js"],"sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { nest as d3Nest } from \"d3-collection\";\nimport { merge } from \"d3-array\";\nimport { stack as d3Stack } from \"d3-shape\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { identity, hexToRGBA, head, functor, plotDataLengthBarWidth } from \"../utils\";\n\nclass StackedBarSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\t\t// var { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\t\tdrawOnCanvasHelper(ctx, this.props, moreProps, xAccessor, d3Stack);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\n\t\treturn <g>{svgHelper(this.props, moreProps, xAccessor, d3Stack)}</g>;\n\t}\n\trender() {\n\t\tconst { clip } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tclip={clip}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n}\n\nStackedBarSeries.propTypes = {\n\tbaseAt: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.func,\n\t]).isRequired,\n\tdirection: PropTypes.oneOf([\"up\", \"down\"]).isRequired,\n\tstroke: PropTypes.bool.isRequired,\n\twidth: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.func\n\t]).isRequired,\n\topacity: PropTypes.number.isRequired,\n\tfill: PropTypes.oneOfType([\n\t\tPropTypes.func, PropTypes.string\n\t]).isRequired,\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.func, PropTypes.string\n\t]).isRequired,\n\tclip: PropTypes.bool.isRequired,\n};\n\nStackedBarSeries.defaultProps = {\n\tbaseAt: (xScale, yScale/* , d*/) => head(yScale.range()),\n\tdirection: \"up\",\n\tclassName: \"bar\",\n\tstroke: true,\n\tfill: \"#4682B4\",\n\topacity: 0.5,\n\twidth: plotDataLengthBarWidth,\n\twidthRatio: 0.8,\n\tclip: true,\n\tswapScales: false,\n};\n\nexport function identityStack() {\n\tlet keys = [];\n\tfunction stack(data) {\n\t\tconst response = keys.map((key, i) => {\n\t\t\t// eslint-disable-next-line prefer-const\n\t\t\tlet arrays = data.map(d => {\n\t\t\t\t// eslint-disable-next-line prefer-const\n\t\t\t\tlet array = [0, d[key]];\n\t\t\t\tarray.data = d;\n\t\t\t\treturn array;\n\t\t\t});\n\t\t\tarrays.key = key;\n\t\t\tarrays.index = i;\n\t\t\treturn arrays;\n\t\t});\n\t\treturn response;\n\t}\n\tstack.keys = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn keys;\n\t\t}\n\t\tkeys = x;\n\t\treturn stack;\n\t};\n\treturn stack;\n}\n\n\nexport function drawOnCanvasHelper(ctx, props, moreProps, xAccessor, stackFn, defaultPostAction = identity, postRotateAction = rotateXY) {\n\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\tconst bars = doStuff(props, xAccessor, plotData, xScale, yScale, stackFn, postRotateAction, defaultPostAction);\n\n\tdrawOnCanvas2(props, ctx, bars);\n}\n\nfunction convertToArray(item) {\n\treturn Array.isArray(item) ? item : [item];\n}\n\nexport function svgHelper(props, moreProps, xAccessor, stackFn, defaultPostAction = identity, postRotateAction = rotateXY) {\n\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\tconst bars = doStuff(props, xAccessor, plotData, xScale, yScale, stackFn, postRotateAction, defaultPostAction);\n\treturn getBarsSVG2(props, bars);\n}\n\nfunction doStuff(props, xAccessor, plotData, xScale, yScale, stackFn, postRotateAction, defaultPostAction) {\n\tconst { yAccessor, swapScales } = props;\n\n\tconst modifiedYAccessor = swapScales ? convertToArray(props.xAccessor) : convertToArray(yAccessor);\n\tconst modifiedXAccessor = swapScales ? yAccessor : xAccessor;\n\n\tconst modifiedXScale = swapScales ? yScale : xScale;\n\tconst modifiedYScale = swapScales ? xScale : yScale;\n\n\tconst postProcessor =  swapScales ? postRotateAction : defaultPostAction;\n\n\tconst bars = getBars(props, modifiedXAccessor, modifiedYAccessor, modifiedXScale, modifiedYScale, plotData, stackFn, postProcessor);\n\n\treturn bars;\n}\n\nexport const rotateXY = (array) => array.map(each => {\n\treturn {\n\t\t...each,\n\t\tx: each.y,\n\t\ty: each.x,\n\t\theight: each.width,\n\t\twidth: each.height\n\t};\n});\n\nexport function getBarsSVG2(props, bars) {\n\t/* eslint-disable react/prop-types */\n\tconst { opacity } = props;\n\t/* eslint-enable react/prop-types */\n\n\treturn bars.map((d, idx) => {\n\t\tif (d.width <= 1) {\n\t\t\treturn <line key={idx} className={d.className}\n\t\t\t\tstroke={d.fill}\n\t\t\t\tx1={d.x} y1={d.y}\n\t\t\t\tx2={d.x} y2={d.y + d.height} />;\n\t\t}\n\t\treturn <rect key={idx} className={d.className}\n\t\t\tstroke={d.stroke}\n\t\t\tfill={d.fill}\n\t\t\tx={d.x}\n\t\t\ty={d.y}\n\t\t\twidth={d.width}\n\t\t\tfillOpacity={opacity}\n\t\t\theight={d.height} />;\n\t});\n}\n\nexport function drawOnCanvas2(props, ctx, bars) {\n\tconst { stroke } = props;\n\n\tconst nest = d3Nest()\n\t\t.key(d => d.fill)\n\t\t.entries(bars);\n\n\tnest.forEach(outer => {\n\t\tconst { key, values } = outer;\n\t\tif (head(values).width > 1) {\n\t\t\tctx.strokeStyle = key;\n\t\t}\n\t\tconst fillStyle = head(values).width <= 1\n\t\t\t? key\n\t\t\t: hexToRGBA(key, props.opacity);\n\t\tctx.fillStyle = fillStyle;\n\n\t\tvalues.forEach(d => {\n\t\t\tif (d.width <= 1) {\n\t\t\t\t/* <line key={idx} className={d.className}\n\t\t\t\t\t\t\tstroke={stroke}\n\t\t\t\t\t\t\tfill={fill}\n\t\t\t\t\t\t\tx1={d.x} y1={d.y}\n\t\t\t\t\t\t\tx2={d.x} y2={d.y + d.height} />*/\n\t\t\t\t/*\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(d.x, d.y);\n\t\t\t\tctx.lineTo(d.x, d.y + d.height);\n\t\t\t\tctx.stroke();\n\t\t\t\t*/\n\t\t\t\tctx.fillRect(d.x - 0.5, d.y, 1, d.height);\n\t\t\t} else {\n\t\t\t\t/* <rect key={idx} className={d.className}\n\t\t\t\t\t\tstroke={stroke}\n\t\t\t\t\t\tfill={fill}\n\t\t\t\t\t\tx={d.x}\n\t\t\t\t\t\ty={d.y}\n\t\t\t\t\t\twidth={d.width}\n\t\t\t\t\t\theight={d.height} /> */\n\t\t\t\t/*\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.rect(d.x, d.y, d.width, d.height);\n\t\t\t\tctx.fill();\n\t\t\t\t*/\n\t\t\t\tctx.fillRect(d.x, d.y, d.width, d.height);\n\t\t\t\tif (stroke) ctx.strokeRect(d.x, d.y, d.width, d.height);\n\t\t\t}\n\n\t\t});\n\t});\n}\n\nexport function getBars(props, xAccessor, yAccessor, xScale, yScale, plotData, stack = identityStack, after = identity) {\n\tconst { baseAt, className, fill, stroke, spaceBetweenBar = 0 } = props;\n\n\tconst getClassName = functor(className);\n\tconst getFill = functor(fill);\n\tconst getBase = functor(baseAt);\n\n\tconst widthFunctor = functor(props.width);\n\tconst width = widthFunctor(props, {\n\t\txScale,\n\t\txAccessor,\n\t\tplotData\n\t});\n\n\tconst barWidth = Math.round(width);\n\n\tconst eachBarWidth = (barWidth - spaceBetweenBar * (yAccessor.length - 1)) / yAccessor.length;\n\n\tconst offset = (barWidth === 1 ? 0 : 0.5 * width);\n\n\tconst ds = plotData\n\t\t.map(each => {\n\t\t\t// eslint-disable-next-line prefer-const\n\t\t\tlet d = {\n\t\t\t\tappearance: {\n\t\t\t\t},\n\t\t\t\tx: xAccessor(each),\n\t\t\t};\n\t\t\tyAccessor.forEach((eachYAccessor, i) => {\n\t\t\t\tconst key = `y${i}`;\n\t\t\t\td[key] = eachYAccessor(each);\n\t\t\t\tconst appearance = {\n\t\t\t\t\tclassName: getClassName(each, i),\n\t\t\t\t\tstroke: stroke ? getFill(each, i) : \"none\",\n\t\t\t\t\tfill: getFill(each, i),\n\t\t\t\t};\n\t\t\t\td.appearance[key] = appearance;\n\t\t\t});\n\t\t\treturn d;\n\t\t});\n\n\tconst keys = yAccessor.map((_, i) => `y${i}`);\n\n\t// console.log(ds);\n\n\tconst data = stack().keys(keys)(ds);\n\n\t// console.log(data);\n\n\tconst newData = data.map((each, i) => {\n\t\tconst key = each.key;\n\t\treturn each.map((d) => {\n\t\t\t// eslint-disable-next-line prefer-const\n\t\t\tlet array = [d[0], d[1]];\n\t\t\tarray.data = {\n\t\t\t\tx: d.data.x,\n\t\t\t\ti,\n\t\t\t\tappearance: d.data.appearance[key]\n\t\t\t};\n\t\t\treturn array;\n\t\t});\n\t});\n\t// console.log(newData);\n\t// console.log(merge(newData));\n\n\tconst bars = merge(newData)\n\t\t// .filter(d => isDefined(d.y))\n\t\t.map(d => {\n\t\t\t// let baseValue = yScale.invert(getBase(xScale, yScale, d.datum));\n\t\t\tlet y = yScale(d[1]);\n\t\t\t/* let h = isDefined(d.y0) && d.y0 !== 0 && !isNaN(d.y0)\n\t\t\t\t\t? yScale(d.y0) - y\n\t\t\t\t\t: getBase(xScale, yScale, d.datum) - yScale(d.y)*/\n\t\t\tlet h = getBase(xScale, yScale, d.data) - yScale(d[1] - d[0]);\n\t\t\t// console.log(d.y, yScale.domain(), yScale.range())\n\t\t\t// let h = ;\n\t\t\t// if (d.y < 0) h = -h;\n\t\t\t// console.log(d, y, h)\n\t\t\tif (h < 0) {\n\t\t\t\ty = y + h;\n\t\t\t\th = -h;\n\t\t\t}\n\t\t\t// console.log(d.data.i, Math.round(offset - (d.data.i > 0 ? (eachBarWidth + spaceBetweenBar) * d.data.i : 0)))\n\t\t\t/* console.log(d.series, d.datum.date, d.x,\n\t\t\t\t\tgetBase(xScale, yScale, d.datum), `d.y=${d.y}, d.y0=${d.y0}, y=${y}, h=${h}`)*/\n\t\t\treturn {\n\t\t\t\t...d.data.appearance,\n\t\t\t\t// series: d.series,\n\t\t\t\t// i: d.x,\n\t\t\t\tx: Math.round(xScale(d.data.x) - width / 2),\n\t\t\t\ty: y,\n\t\t\t\tgroupOffset: Math.round(offset - (d.data.i > 0 ? (eachBarWidth + spaceBetweenBar) * d.data.i : 0)),\n\t\t\t\tgroupWidth: Math.round(eachBarWidth),\n\t\t\t\toffset: Math.round(offset),\n\t\t\t\theight: h,\n\t\t\t\twidth: barWidth,\n\t\t\t};\n\t\t})\n\t\t.filter(bar => !isNaN(bar.y));\n\n\treturn after(bars);\n}\n\nexport default StackedBarSeries;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}