{"ast":null,"code":"import { extent } from \"d3-array\";\nimport { scaleLinear } from \"d3-scale\";\nimport flattenDeep from \"lodash.flattendeep\";\nimport * as React from \"react\";\nimport { functor, getClosestItem, isNotDefined, isObject, last, mapObject, shallowEqual, zipper } from \"./index\";\nexport const ChartDefaultConfig = {\n  flipYScale: false,\n  id: 0,\n  origin: [0, 0],\n  padding: 0,\n  yPan: true,\n  yPanEnabled: false,\n  yScale: scaleLinear()\n};\nexport function getChartOrigin(origin, contextWidth, contextHeight) {\n  const originCoordinates = typeof origin === \"function\" ? origin(contextWidth, contextHeight) : origin;\n  return originCoordinates;\n}\nexport function getDimensions({\n  width,\n  height\n}, chartProps) {\n  const chartHeight = chartProps.height || height;\n  return {\n    availableHeight: height,\n    width,\n    height: chartHeight\n  };\n}\nfunction values(func) {\n  return d => {\n    const obj = func(d);\n    if (isObject(obj)) {\n      return mapObject(obj);\n    }\n    return obj;\n  };\n}\nfunction isArraySize2AndNumber(yExtentsProp) {\n  if (Array.isArray(yExtentsProp) && yExtentsProp.length === 2) {\n    const [a, b] = yExtentsProp;\n    return typeof a === \"number\" && typeof b === \"number\";\n  }\n  return false;\n}\nconst isChartProps = props => {\n  if (props === undefined) {\n    return false;\n  }\n  const chartProps = props;\n  if (chartProps.id === undefined) {\n    return false;\n  }\n  return true;\n};\nexport function getNewChartConfig(innerDimension, children, existingChartConfig = []) {\n  return React.Children.map(children, each => {\n    if (!each || !isChartProps(each.props)) {\n      return undefined;\n    }\n    const chartProps = Object.assign(Object.assign({}, ChartDefaultConfig), each.props);\n    const {\n      id,\n      origin,\n      padding,\n      yExtents: yExtentsProp,\n      yScale: yScaleProp = ChartDefaultConfig.yScale,\n      flipYScale,\n      yExtentsCalculator\n    } = chartProps;\n    const yScale = yScaleProp.copy();\n    const {\n      width,\n      height,\n      availableHeight\n    } = getDimensions(innerDimension, chartProps);\n    const {\n      yPan\n    } = chartProps;\n    let {\n      yPanEnabled\n    } = chartProps;\n    const yExtents = yExtentsProp ? (Array.isArray(yExtentsProp) ? yExtentsProp : [yExtentsProp]).map(functor) : undefined;\n    const prevChartConfig = existingChartConfig.find(d => d.id === id);\n    if (isArraySize2AndNumber(yExtentsProp)) {\n      if (!!prevChartConfig && prevChartConfig.yPan && prevChartConfig.yPanEnabled && yPan && yPanEnabled && shallowEqual(prevChartConfig.originalYExtentsProp, yExtentsProp)) {\n        yScale.domain(prevChartConfig.yScale.domain());\n      } else {\n        const [a, b] = yExtentsProp;\n        yScale.domain([a, b]);\n      }\n    } else if (!!prevChartConfig && prevChartConfig.yPanEnabled) {\n      if (isArraySize2AndNumber(prevChartConfig.originalYExtentsProp)) {\n        // do nothing\n      } else {\n        yScale.domain(prevChartConfig.yScale.domain());\n        yPanEnabled = true;\n      }\n    }\n    return {\n      id,\n      origin: functor(origin)(width, availableHeight),\n      padding,\n      originalYExtentsProp: yExtentsProp,\n      yExtents,\n      yExtentsCalculator,\n      flipYScale,\n      yScale,\n      yPan,\n      yPanEnabled,\n      width,\n      height\n    };\n  }).filter(each => each !== undefined);\n}\nexport function getCurrentCharts(chartConfig, mouseXY) {\n  const currentCharts = chartConfig.filter(eachConfig => {\n    const top = eachConfig.origin[1];\n    const bottom = top + eachConfig.height;\n    return mouseXY[1] > top && mouseXY[1] < bottom;\n  }).map(config => config.id);\n  return currentCharts;\n}\nfunction setRange(scale, height, padding, flipYScale) {\n  if (scale.rangeRoundPoints || isNotDefined(scale.invert)) {\n    if (isNaN(padding)) {\n      throw new Error(\"padding has to be a number for ordinal scale\");\n    }\n    if (scale.rangeRoundPoints) {\n      scale.rangeRoundPoints(flipYScale ? [0, height] : [height, 0], padding);\n    }\n    if (scale.rangeRound) {\n      scale.range(flipYScale ? [0, height] : [height, 0]).padding(padding);\n    }\n  } else {\n    const {\n      top,\n      bottom\n    } = isNaN(padding) ? padding : {\n      top: padding,\n      bottom: padding\n    };\n    scale.range(flipYScale ? [top, height - bottom] : [height - bottom, top]);\n  }\n  return scale;\n}\nfunction yDomainFromYExtents(yExtents, yScale, plotData) {\n  const yValues = yExtents.map(eachExtent => plotData.map(values(eachExtent)));\n  const allYValues = flattenDeep(yValues);\n  const realYDomain = yScale.invert ? extent(allYValues) : [...new Set(allYValues).values()];\n  return realYDomain;\n}\nexport function getChartConfigWithUpdatedYScales(chartConfig, {\n  plotData,\n  xAccessor,\n  displayXAccessor,\n  fullData\n}, xDomain, dy, chartsToPan) {\n  const yDomains = chartConfig.map(({\n    yExtentsCalculator,\n    yExtents,\n    yScale\n  }) => {\n    const realYDomain = yExtentsCalculator ? yExtentsCalculator({\n      plotData,\n      xDomain,\n      xAccessor,\n      displayXAccessor,\n      fullData\n    }) : yDomainFromYExtents(yExtents, yScale, plotData);\n    const yDomainDY = dy !== undefined ? yScale.range().map(each => each - dy).map(yScale.invert) : yScale.domain();\n    return {\n      realYDomain,\n      yDomainDY,\n      prevYDomain: yScale.domain()\n    };\n  });\n  const combine = zipper().combine((config, {\n    realYDomain,\n    yDomainDY,\n    prevYDomain\n  }) => {\n    const {\n      id,\n      padding,\n      height,\n      yScale,\n      yPan,\n      flipYScale,\n      yPanEnabled = false\n    } = config;\n    const another = chartsToPan !== undefined ? chartsToPan.indexOf(id) > -1 : true;\n    const domain = yPan && yPanEnabled ? another ? yDomainDY : prevYDomain : realYDomain;\n    const newYScale = setRange(yScale.copy().domain(domain), height, padding, flipYScale);\n    return Object.assign(Object.assign({}, config), {\n      yScale: newYScale,\n      realYDomain\n    });\n  });\n  const updatedChartConfig = combine(chartConfig, yDomains);\n  return updatedChartConfig;\n}\nexport function getCurrentItem(xScale, xAccessor, mouseXY, plotData) {\n  let xValue;\n  let item;\n  if (xScale.invert) {\n    xValue = xScale.invert(mouseXY[0]);\n    item = getClosestItem(plotData, xValue, xAccessor);\n  } else {\n    const dr = xScale.range().map((d, idx) => ({\n      x: Math.abs(d - mouseXY[0]),\n      idx\n    })).reduce((a, b) => a.x < b.x ? a : b);\n    item = dr !== undefined ? plotData[dr.idx] : plotData[0];\n  }\n  return item;\n}\nexport function getXValue(xScale, xAccessor, mouseXY, plotData) {\n  let xValue;\n  let item;\n  if (xScale.invert) {\n    xValue = xScale.invert(mouseXY[0]);\n    if (xValue > xAccessor(last(plotData))) {\n      return Math.round(xValue.valueOf());\n    } else {\n      item = getClosestItem(plotData, xValue, xAccessor);\n    }\n  } else {\n    const dr = xScale.range().map((d, idx) => ({\n      x: Math.abs(d - mouseXY[0]),\n      idx\n    })).reduce((a, b) => a.x < b.x ? a : b);\n    item = dr !== undefined ? plotData[dr.idx] : plotData[0];\n  }\n  return xAccessor(item);\n}","map":{"version":3,"names":["extent","scaleLinear","flattenDeep","React","functor","getClosestItem","isNotDefined","isObject","last","mapObject","shallowEqual","zipper","ChartDefaultConfig","flipYScale","id","origin","padding","yPan","yPanEnabled","yScale","getChartOrigin","contextWidth","contextHeight","originCoordinates","getDimensions","width","height","chartProps","chartHeight","availableHeight","values","func","d","obj","isArraySize2AndNumber","yExtentsProp","Array","isArray","length","a","b","isChartProps","props","undefined","getNewChartConfig","innerDimension","children","existingChartConfig","Children","map","each","Object","assign","yExtents","yScaleProp","yExtentsCalculator","copy","prevChartConfig","find","originalYExtentsProp","domain","filter","getCurrentCharts","chartConfig","mouseXY","currentCharts","eachConfig","top","bottom","config","setRange","scale","rangeRoundPoints","invert","isNaN","Error","rangeRound","range","yDomainFromYExtents","plotData","yValues","eachExtent","allYValues","realYDomain","Set","getChartConfigWithUpdatedYScales","xAccessor","displayXAccessor","fullData","xDomain","dy","chartsToPan","yDomains","yDomainDY","prevYDomain","combine","another","indexOf","newYScale","updatedChartConfig","getCurrentItem","xScale","xValue","item","dr","idx","x","Math","abs","reduce","getXValue","round","valueOf"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\core\\src\\utils\\ChartDataUtil.ts"],"sourcesContent":["import { extent } from \"d3-array\";\nimport { ScaleContinuousNumeric, scaleLinear, ScaleTime } from \"d3-scale\";\nimport flattenDeep from \"lodash.flattendeep\";\nimport * as React from \"react\";\nimport type { ChartProps } from \"../Chart\";\n\nimport { functor, getClosestItem, isNotDefined, isObject, last, mapObject, shallowEqual, zipper } from \"./index\";\n\nexport interface ChartConfig {\n    id: number | string;\n    // readonly origin: number[] | ((width: number, height: number) => number[]);\n    readonly origin: number[];\n    readonly padding: number | { top: number; bottom: number };\n    readonly originalYExtentsProp?: number[] | ((data: any) => number) | ((data: any) => number[]);\n    readonly yExtents?: number[] | ((data: any) => number) | ((data: any) => number[]);\n    readonly yExtentsCalculator?: (options: {\n        plotData: any[];\n        xDomain: any;\n        xAccessor: any;\n        displayXAccessor: any;\n        fullData: any[];\n    }) => number[];\n    readonly flipYScale?: boolean;\n    readonly yScale: ScaleContinuousNumeric<number, number>;\n    readonly yPan: boolean;\n    readonly yPanEnabled: boolean;\n    readonly realYDomain?: number[];\n    readonly width: number;\n    readonly height: number;\n    mouseCoordinates?: { at: string; format: () => unknown };\n}\n\nexport const ChartDefaultConfig = {\n    flipYScale: false,\n    id: 0,\n    origin: [0, 0],\n    padding: 0,\n    yPan: true,\n    yPanEnabled: false,\n    yScale: scaleLinear(),\n};\n\nexport function getChartOrigin(origin: any, contextWidth: number, contextHeight: number) {\n    const originCoordinates = typeof origin === \"function\" ? origin(contextWidth, contextHeight) : origin;\n\n    return originCoordinates;\n}\n\nexport function getDimensions({ width, height }: any, chartProps: any) {\n    const chartHeight = chartProps.height || height;\n\n    return {\n        availableHeight: height,\n        width,\n        height: chartHeight,\n    };\n}\n\nfunction values(func: any) {\n    return (d: any) => {\n        const obj = func(d);\n        if (isObject(obj)) {\n            return mapObject(obj);\n        }\n        return obj;\n    };\n}\n\nfunction isArraySize2AndNumber(yExtentsProp: any): yExtentsProp is [number, number] {\n    if (Array.isArray(yExtentsProp) && yExtentsProp.length === 2) {\n        const [a, b] = yExtentsProp;\n        return typeof a === \"number\" && typeof b === \"number\";\n    }\n\n    return false;\n}\n\nconst isChartProps = (props: ChartProps | any | undefined): props is ChartProps => {\n    if (props === undefined) {\n        return false;\n    }\n\n    const chartProps = props as ChartProps;\n    if (chartProps.id === undefined) {\n        return false;\n    }\n\n    return true;\n};\n\nexport function getNewChartConfig(innerDimension: any, children: any, existingChartConfig: ChartConfig[] = []) {\n    return React.Children.map(children, (each): ChartConfig | undefined => {\n        if (!each || !isChartProps(each.props)) {\n            return undefined;\n        }\n        const chartProps = {\n            ...ChartDefaultConfig,\n            ...(each.props as ChartProps),\n        };\n\n        const {\n            id,\n            origin,\n            padding,\n            yExtents: yExtentsProp,\n            yScale: yScaleProp = ChartDefaultConfig.yScale,\n            flipYScale,\n            yExtentsCalculator,\n        } = chartProps;\n\n        const yScale = yScaleProp.copy();\n        const { width, height, availableHeight } = getDimensions(innerDimension, chartProps);\n\n        const { yPan } = chartProps;\n        let { yPanEnabled } = chartProps;\n        const yExtents = yExtentsProp\n            ? (Array.isArray(yExtentsProp) ? yExtentsProp : [yExtentsProp]).map(functor)\n            : undefined;\n\n        const prevChartConfig = existingChartConfig.find((d) => d.id === id);\n\n        if (isArraySize2AndNumber(yExtentsProp)) {\n            if (\n                !!prevChartConfig &&\n                prevChartConfig.yPan &&\n                prevChartConfig.yPanEnabled &&\n                yPan &&\n                yPanEnabled &&\n                shallowEqual(prevChartConfig.originalYExtentsProp, yExtentsProp)\n            ) {\n                yScale.domain(prevChartConfig.yScale.domain());\n            } else {\n                const [a, b] = yExtentsProp;\n                yScale.domain([a, b]);\n            }\n        } else if (!!prevChartConfig && prevChartConfig.yPanEnabled) {\n            if (isArraySize2AndNumber(prevChartConfig.originalYExtentsProp)) {\n                // do nothing\n            } else {\n                yScale.domain(prevChartConfig.yScale.domain());\n                yPanEnabled = true;\n            }\n        }\n\n        return {\n            id,\n            origin: functor(origin)(width, availableHeight),\n            padding,\n            originalYExtentsProp: yExtentsProp,\n            yExtents,\n            yExtentsCalculator,\n            flipYScale,\n            yScale,\n            yPan,\n            yPanEnabled,\n            width,\n            height,\n        };\n    }).filter((each: any) => each !== undefined);\n}\n\nexport function getCurrentCharts(chartConfig: ChartConfig[], mouseXY: number[]) {\n    const currentCharts = chartConfig\n        .filter((eachConfig) => {\n            const top = eachConfig.origin[1];\n            const bottom = top + eachConfig.height;\n            return mouseXY[1] > top && mouseXY[1] < bottom;\n        })\n        .map((config: any) => config.id);\n\n    return currentCharts;\n}\n\nfunction setRange(scale: any, height: number, padding: any, flipYScale: any) {\n    if (scale.rangeRoundPoints || isNotDefined(scale.invert)) {\n        if (isNaN(padding)) {\n            throw new Error(\"padding has to be a number for ordinal scale\");\n        }\n        if (scale.rangeRoundPoints) {\n            scale.rangeRoundPoints(flipYScale ? [0, height] : [height, 0], padding);\n        }\n        if (scale.rangeRound) {\n            scale.range(flipYScale ? [0, height] : [height, 0]).padding(padding);\n        }\n    } else {\n        const { top, bottom } = isNaN(padding) ? padding : { top: padding, bottom: padding };\n\n        scale.range(flipYScale ? [top, height - bottom] : [height - bottom, top]);\n    }\n    return scale;\n}\n\nfunction yDomainFromYExtents(yExtents: any, yScale: any, plotData: any[]) {\n    const yValues = yExtents.map((eachExtent: any) => plotData.map(values(eachExtent)));\n\n    const allYValues: number[] = flattenDeep(yValues);\n\n    const realYDomain = yScale.invert ? (extent(allYValues) as [number, number]) : [...new Set(allYValues).values()];\n\n    return realYDomain;\n}\n\nexport function getChartConfigWithUpdatedYScales(\n    chartConfig: ChartConfig[],\n    { plotData, xAccessor, displayXAccessor, fullData }: any,\n    xDomain: any,\n    dy?: number,\n    chartsToPan?: (string | number)[],\n): ChartConfig[] {\n    const yDomains = chartConfig.map(({ yExtentsCalculator, yExtents, yScale }) => {\n        const realYDomain = yExtentsCalculator\n            ? yExtentsCalculator({ plotData, xDomain, xAccessor, displayXAccessor, fullData })\n            : yDomainFromYExtents(yExtents, yScale, plotData);\n\n        const yDomainDY =\n            dy !== undefined\n                ? yScale\n                      .range()\n                      .map((each: any) => each - dy)\n                      .map(yScale.invert)\n                : yScale.domain();\n        return {\n            realYDomain,\n            yDomainDY,\n            prevYDomain: yScale.domain(),\n        };\n    });\n\n    const combine = zipper().combine(\n        (config: ChartConfig, { realYDomain, yDomainDY, prevYDomain }: (typeof yDomains)[number]): ChartConfig => {\n            const { id, padding, height, yScale, yPan, flipYScale, yPanEnabled = false } = config;\n\n            const another = chartsToPan !== undefined ? chartsToPan.indexOf(id) > -1 : true;\n            const domain = yPan && yPanEnabled ? (another ? yDomainDY : prevYDomain) : realYDomain;\n\n            const newYScale = setRange(yScale.copy().domain(domain), height, padding, flipYScale);\n\n            return {\n                ...config,\n                yScale: newYScale,\n                realYDomain,\n            };\n        },\n    );\n\n    const updatedChartConfig = combine(chartConfig, yDomains) as ChartConfig[];\n\n    return updatedChartConfig;\n}\n\nexport function getCurrentItem(\n    xScale: ScaleContinuousNumeric<number, number> | ScaleTime<number, number>,\n    xAccessor: any,\n    mouseXY: number[],\n    plotData: any[],\n) {\n    let xValue: number | Date;\n    let item: any;\n    if (xScale.invert) {\n        xValue = xScale.invert(mouseXY[0]);\n        item = getClosestItem(plotData, xValue, xAccessor);\n    } else {\n        const dr = xScale\n            .range()\n            .map((d, idx) => ({ x: Math.abs(d - mouseXY[0]), idx }))\n            .reduce((a, b) => (a.x < b.x ? a : b));\n\n        item = dr !== undefined ? plotData[dr.idx] : plotData[0];\n    }\n    return item;\n}\n\nexport function getXValue(\n    xScale: ScaleContinuousNumeric<number, number> | ScaleTime<number, number>,\n    xAccessor: any,\n    mouseXY: number[],\n    plotData: any[],\n) {\n    let xValue: number | Date;\n    let item: any;\n    if (xScale.invert) {\n        xValue = xScale.invert(mouseXY[0]);\n        if (xValue > xAccessor(last(plotData))) {\n            return Math.round(xValue.valueOf());\n        } else {\n            item = getClosestItem(plotData, xValue, xAccessor);\n        }\n    } else {\n        const dr = xScale\n            .range()\n            .map((d, idx) => ({ x: Math.abs(d - mouseXY[0]), idx }))\n            .reduce((a, b) => (a.x < b.x ? a : b));\n\n        item = dr !== undefined ? plotData[dr.idx] : plotData[0];\n    }\n    return xAccessor(item);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}