{"ast":null,"code":"import { functor, getAxisCanvas, GenericChartComponent } from \"@react-financial-charts/core\";\nimport { group } from \"d3-array\";\nimport * as React from \"react\";\nexport class ScatterSeries extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.drawOnCanvas = (ctx, moreProps) => {\n      const points = this.getMarkers(moreProps);\n      const {\n        markerProps\n      } = this.props;\n      const nest = group(points, d => d.fillStyle, d => d.strokeStyle);\n      nest.forEach((fillValues, fillKey) => {\n        if (fillKey !== \"none\") {\n          ctx.fillStyle = fillKey;\n        }\n        fillValues.forEach(strokeValues => {\n          strokeValues.forEach(point => {\n            const {\n              marker\n            } = point;\n            marker.drawOnCanvas(Object.assign(Object.assign(Object.assign({}, marker.defaultProps), markerProps), {\n              fillStyle: fillKey\n            }), point, ctx);\n          });\n        });\n      });\n    };\n    this.getMarkers = moreProps => {\n      const {\n        yAccessor,\n        markerProvider,\n        markerProps\n      } = this.props;\n      const {\n        xAccessor,\n        xScale,\n        chartConfig: {\n          yScale\n        },\n        plotData\n      } = moreProps;\n      let {\n        marker: Marker\n      } = this.props;\n      if (!(markerProvider || Marker)) {\n        throw new Error(\"required prop, either marker or markerProvider missing\");\n      }\n      return plotData.map(d => {\n        const yValue = yAccessor(d);\n        if (yValue === undefined) {\n          return undefined;\n        }\n        const xValue = xAccessor(d);\n        if (markerProvider) {\n          Marker = markerProvider(d);\n        }\n        const mProps = Object.assign(Object.assign({}, Marker.defaultProps), markerProps);\n        const fill = functor(mProps.fillStyle);\n        const stroke = functor(mProps.strokeStyle);\n        return {\n          x: xScale(xValue),\n          y: yScale(yValue),\n          fillStyle: fill(d),\n          strokeStyle: stroke(d),\n          datum: d,\n          marker: Marker\n        };\n      }).filter(marker => marker !== undefined).map(marker => marker);\n    };\n  }\n  render() {\n    return React.createElement(GenericChartComponent, {\n      canvasDraw: this.drawOnCanvas,\n      canvasToDraw: getAxisCanvas,\n      drawOn: [\"pan\"]\n    });\n  }\n}","map":{"version":3,"names":["functor","getAxisCanvas","GenericChartComponent","group","React","ScatterSeries","Component","constructor","drawOnCanvas","ctx","moreProps","points","getMarkers","markerProps","props","nest","d","fillStyle","strokeStyle","forEach","fillValues","fillKey","strokeValues","point","marker","Object","assign","defaultProps","yAccessor","markerProvider","xAccessor","xScale","chartConfig","yScale","plotData","Marker","Error","map","yValue","undefined","xValue","mProps","fill","stroke","x","y","datum","filter","render","createElement","canvasDraw","canvasToDraw","drawOn"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\series\\src\\ScatterSeries.tsx"],"sourcesContent":["import { functor, getAxisCanvas, GenericChartComponent } from \"@react-financial-charts/core\";\nimport { group } from \"d3-array\";\nimport { ScaleContinuousNumeric, ScaleTime } from \"d3-scale\";\nimport * as React from \"react\";\n\nexport interface ScatterSeriesProps {\n    /**\n     * A Marker to draw.\n     */\n    readonly marker?: any;\n    /**\n     * Given the data point return a Marker.\n     */\n    readonly markerProvider?: (datum: any) => any;\n    /**\n     * Props to pass to the marker.\n     */\n    readonly markerProps?: object;\n    /**\n     * Accessor for y value.\n     */\n    readonly yAccessor: (data: any) => number | undefined;\n}\n\nexport class ScatterSeries extends React.Component<ScatterSeriesProps> {\n    public render() {\n        return <GenericChartComponent canvasDraw={this.drawOnCanvas} canvasToDraw={getAxisCanvas} drawOn={[\"pan\"]} />;\n    }\n\n    private readonly drawOnCanvas = (ctx: CanvasRenderingContext2D, moreProps: any) => {\n        const points = this.getMarkers(moreProps);\n\n        const { markerProps } = this.props;\n\n        const nest = group(\n            points,\n            (d) => d.fillStyle,\n            (d) => d.strokeStyle,\n        );\n\n        nest.forEach((fillValues, fillKey) => {\n            if (fillKey !== \"none\") {\n                ctx.fillStyle = fillKey;\n            }\n\n            fillValues.forEach((strokeValues) => {\n                strokeValues.forEach((point) => {\n                    const { marker } = point;\n                    marker.drawOnCanvas({ ...marker.defaultProps, ...markerProps, fillStyle: fillKey }, point, ctx);\n                });\n            });\n        });\n    };\n\n    private readonly getMarkers = (moreProps: {\n        xAccessor: (data: any) => number | Date;\n        xScale: ScaleContinuousNumeric<number, number> | ScaleTime<number, number>;\n        chartConfig: any;\n        plotData: any[];\n    }) => {\n        const { yAccessor, markerProvider, markerProps } = this.props;\n\n        const {\n            xAccessor,\n            xScale,\n            chartConfig: { yScale },\n            plotData,\n        } = moreProps;\n\n        let { marker: Marker } = this.props;\n        if (!(markerProvider || Marker)) {\n            throw new Error(\"required prop, either marker or markerProvider missing\");\n        }\n\n        return plotData\n            .map((d: any) => {\n                const yValue = yAccessor(d);\n                if (yValue === undefined) {\n                    return undefined;\n                }\n\n                const xValue = xAccessor(d);\n\n                if (markerProvider) {\n                    Marker = markerProvider(d);\n                }\n\n                const mProps = { ...Marker.defaultProps, ...markerProps };\n\n                const fill = functor(mProps.fillStyle);\n                const stroke = functor(mProps.strokeStyle);\n\n                return {\n                    x: xScale(xValue),\n                    y: yScale(yValue),\n                    fillStyle: fill(d),\n                    strokeStyle: stroke(d),\n                    datum: d,\n                    marker: Marker,\n                };\n            })\n            .filter((marker) => marker !== undefined)\n            .map((marker) => marker!);\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}