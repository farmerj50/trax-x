{"ast":null,"code":"import { functor } from \"@react-financial-charts/core\";\nimport * as React from \"react\";\nexport class SvgPathAnnotation extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.handleClick = e => {\n      const {\n        onClick,\n        xScale,\n        yScale,\n        datum\n      } = this.props;\n      if (onClick !== undefined) {\n        onClick(e, {\n          xScale,\n          yScale,\n          datum\n        });\n      }\n    };\n    this.helper = () => {\n      const {\n        x,\n        y,\n        datum,\n        fill,\n        tooltip,\n        xAccessor,\n        xScale,\n        yScale,\n        plotData\n      } = this.props;\n      const xFunc = functor(x);\n      const yFunc = functor(y);\n      const [xPos, yPos] = [xFunc({\n        xScale,\n        xAccessor,\n        datum,\n        plotData\n      }), yFunc({\n        yScale,\n        datum,\n        plotData\n      })];\n      return {\n        x: Math.round(xPos),\n        y: Math.round(yPos),\n        fill: functor(fill)(datum),\n        tooltip: functor(tooltip)(datum)\n      };\n    };\n  }\n  render() {\n    const {\n      className,\n      datum,\n      stroke,\n      opacity,\n      path,\n      pathWidth,\n      pathHeight\n    } = this.props;\n    const {\n      x,\n      y,\n      fill,\n      tooltip\n    } = this.helper();\n    return React.createElement(\"g\", {\n      className: className,\n      onClick: this.handleClick\n    }, React.createElement(\"title\", null, tooltip), React.createElement(\"path\", {\n      transform: `translate(${x - pathWidth},${y - pathHeight})`,\n      d: path(datum),\n      stroke: stroke,\n      fill: fill,\n      opacity: opacity\n    }));\n  }\n}\nSvgPathAnnotation.defaultProps = {\n  className: \"react-financial-charts-svg-path-annotation\",\n  opacity: 1,\n  x: ({\n    xScale,\n    xAccessor,\n    datum\n  }) => xScale(xAccessor(datum))\n};","map":{"version":3,"names":["functor","React","SvgPathAnnotation","Component","constructor","handleClick","e","onClick","xScale","yScale","datum","props","undefined","helper","x","y","fill","tooltip","xAccessor","plotData","xFunc","yFunc","xPos","yPos","Math","round","render","className","stroke","opacity","path","pathWidth","pathHeight","createElement","transform","d","defaultProps"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\annotations\\src\\SvgPathAnnotation.tsx"],"sourcesContent":["import { functor } from \"@react-financial-charts/core\";\nimport { ScaleContinuousNumeric } from \"d3-scale\";\nimport * as React from \"react\";\n\nexport interface SvgPathAnnotationProps {\n    readonly className?: string;\n    readonly datum?: any;\n    readonly fill?: string | ((datum: any) => string);\n    readonly onClick?: (\n        e: React.MouseEvent,\n        data: {\n            xScale?: ScaleContinuousNumeric<number, number>;\n            yScale?: ScaleContinuousNumeric<number, number>;\n            datum: any;\n        },\n    ) => void;\n    readonly opacity?: number;\n    readonly path: (datum: any) => string;\n    readonly pathHeight: number;\n    readonly pathWidth: number;\n    readonly plotData: any[];\n    readonly stroke?: string;\n    readonly tooltip?: string | ((datum: any) => string);\n    readonly xAccessor?: (datum: any) => any;\n    readonly x?:\n        | number\n        | (({\n              xScale,\n              xAccessor,\n              datum,\n              plotData,\n          }: {\n              xScale: ScaleContinuousNumeric<number, number>;\n              xAccessor: (datum: any) => any;\n              datum: any;\n              plotData: any[];\n          }) => number);\n    readonly xScale?: ScaleContinuousNumeric<number, number>;\n    readonly y?:\n        | number\n        | (({\n              yScale,\n              datum,\n              plotData,\n          }: {\n              yScale: ScaleContinuousNumeric<number, number>;\n              datum: any;\n              plotData: any[];\n          }) => number);\n    readonly yScale?: ScaleContinuousNumeric<number, number>;\n}\n\nexport class SvgPathAnnotation extends React.Component<SvgPathAnnotationProps> {\n    public static defaultProps = {\n        className: \"react-financial-charts-svg-path-annotation\",\n        opacity: 1,\n        x: ({\n            xScale,\n            xAccessor,\n            datum,\n        }: {\n            xScale: ScaleContinuousNumeric<number, number>;\n            xAccessor: any;\n            datum: any;\n        }) => xScale(xAccessor(datum)),\n    };\n\n    public render() {\n        const { className, datum, stroke, opacity, path, pathWidth, pathHeight } = this.props;\n\n        const { x, y, fill, tooltip } = this.helper();\n\n        return (\n            <g className={className} onClick={this.handleClick}>\n                <title>{tooltip}</title>\n                <path\n                    transform={`translate(${x - pathWidth},${y - pathHeight})`}\n                    d={path(datum)}\n                    stroke={stroke}\n                    fill={fill}\n                    opacity={opacity}\n                />\n            </g>\n        );\n    }\n\n    private readonly handleClick = (e: React.MouseEvent) => {\n        const { onClick, xScale, yScale, datum } = this.props;\n        if (onClick !== undefined) {\n            onClick(e, { xScale, yScale, datum });\n        }\n    };\n\n    private readonly helper = () => {\n        const { x, y, datum, fill, tooltip, xAccessor, xScale, yScale, plotData } = this.props;\n\n        const xFunc = functor(x);\n        const yFunc = functor(y);\n\n        const [xPos, yPos]: [number, number] = [\n            xFunc({ xScale, xAccessor, datum, plotData }),\n            yFunc({ yScale, datum, plotData }),\n        ];\n\n        return {\n            x: Math.round(xPos),\n            y: Math.round(yPos),\n            fill: functor(fill)(datum),\n            tooltip: functor(tooltip)(datum),\n        };\n    };\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,8BAA8B;AAEtD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAkD9B,OAAM,MAAOC,iBAAkB,SAAQD,KAAK,CAACE,SAAiC;EAA9EC,YAAA;;IAkCqB,KAAAC,WAAW,GAAIC,CAAmB,IAAI;MACnD,MAAM;QAAEC,OAAO;QAAEC,MAAM;QAAEC,MAAM;QAAEC;MAAK,CAAE,GAAG,IAAI,CAACC,KAAK;MACrD,IAAIJ,OAAO,KAAKK,SAAS,EAAE;QACvBL,OAAO,CAACD,CAAC,EAAE;UAAEE,MAAM;UAAEC,MAAM;UAAEC;QAAK,CAAE,CAAC;;IAE7C,CAAC;IAEgB,KAAAG,MAAM,GAAG,MAAK;MAC3B,MAAM;QAAEC,CAAC;QAAEC,CAAC;QAAEL,KAAK;QAAEM,IAAI;QAAEC,OAAO;QAAEC,SAAS;QAAEV,MAAM;QAAEC,MAAM;QAAEU;MAAQ,CAAE,GAAG,IAAI,CAACR,KAAK;MAEtF,MAAMS,KAAK,GAAGpB,OAAO,CAACc,CAAC,CAAC;MACxB,MAAMO,KAAK,GAAGrB,OAAO,CAACe,CAAC,CAAC;MAExB,MAAM,CAACO,IAAI,EAAEC,IAAI,CAAC,GAAqB,CACnCH,KAAK,CAAC;QAAEZ,MAAM;QAAEU,SAAS;QAAER,KAAK;QAAES;MAAQ,CAAE,CAAC,EAC7CE,KAAK,CAAC;QAAEZ,MAAM;QAAEC,KAAK;QAAES;MAAQ,CAAE,CAAC,CACrC;MAED,OAAO;QACHL,CAAC,EAAEU,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC;QACnBP,CAAC,EAAES,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC;QACnBP,IAAI,EAAEhB,OAAO,CAACgB,IAAI,CAAC,CAACN,KAAK,CAAC;QAC1BO,OAAO,EAAEjB,OAAO,CAACiB,OAAO,CAAC,CAACP,KAAK;OAClC;IACL,CAAC;EACL;EA5CWgB,MAAMA,CAAA;IACT,MAAM;MAAEC,SAAS;MAAEjB,KAAK;MAAEkB,MAAM;MAAEC,OAAO;MAAEC,IAAI;MAAEC,SAAS;MAAEC;IAAU,CAAE,GAAG,IAAI,CAACrB,KAAK;IAErF,MAAM;MAAEG,CAAC;MAAEC,CAAC;MAAEC,IAAI;MAAEC;IAAO,CAAE,GAAG,IAAI,CAACJ,MAAM,EAAE;IAE7C,OACIZ,KAAA,CAAAgC,aAAA;MAAGN,SAAS,EAAEA,SAAS;MAAEpB,OAAO,EAAE,IAAI,CAACF;IAAW,GAC9CJ,KAAA,CAAAgC,aAAA,gBAAQhB,OAAO,CAAS,EACxBhB,KAAA,CAAAgC,aAAA;MACIC,SAAS,EAAE,aAAapB,CAAC,GAAGiB,SAAS,IAAIhB,CAAC,GAAGiB,UAAU,GAAG;MAC1DG,CAAC,EAAEL,IAAI,CAACpB,KAAK,CAAC;MACdkB,MAAM,EAAEA,MAAM;MACdZ,IAAI,EAAEA,IAAI;MACVa,OAAO,EAAEA;IAAO,EAClB,CACF;EAEZ;;AA/Bc3B,iBAAA,CAAAkC,YAAY,GAAG;EACzBT,SAAS,EAAE,4CAA4C;EACvDE,OAAO,EAAE,CAAC;EACVf,CAAC,EAAEA,CAAC;IACAN,MAAM;IACNU,SAAS;IACTR;EAAK,CAKR,KAAKF,MAAM,CAACU,SAAS,CAACR,KAAK,CAAC;CAChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}