{"ast":null,"code":"import { path } from \"../utils\";\nimport { Change as defaultOptions } from \"./defaultOptionsForComputation\";\nexport default function () {\n  let options = defaultOptions;\n  const calculator = data => {\n    const {\n      basePath,\n      mainKeys,\n      compareKeys\n    } = options;\n    const base = path(basePath);\n    const first = data[0];\n    const b = base(first);\n    const firsts = {};\n    const compareData = data.map(d => {\n      const result = {};\n      mainKeys.forEach(key => {\n        if (typeof d[key] === \"object\") {\n          // @ts-ignore\n          result[key] = {};\n          Object.keys(d[key]).forEach(subkey => {\n            // @ts-ignore\n            result[key][subkey] = (d[key][subkey] - b) / b;\n          });\n        } else {\n          // @ts-ignore\n          result[key] = (d[key] - b) / b;\n        }\n      });\n      compareKeys.forEach(key => {\n        if (d[key] !== undefined && firsts[key] === undefined) {\n          // @ts-ignore\n          firsts[key] = d[key];\n        }\n        if (d[key] !== undefined && firsts[key] !== undefined) {\n          // @ts-ignore\n          result[key] = (d[key] - firsts[key]) / firsts[key];\n        }\n      });\n      return result;\n    });\n    return compareData;\n  };\n  calculator.options = newOptions => {\n    if (newOptions === undefined) {\n      return options;\n    }\n    options = Object.assign(Object.assign({}, defaultOptions), newOptions);\n    return calculator;\n  };\n  return calculator;\n}","map":{"version":3,"names":["path","Change","defaultOptions","options","calculator","data","basePath","mainKeys","compareKeys","base","first","b","firsts","compareData","map","d","result","forEach","key","Object","keys","subkey","undefined","newOptions","assign"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\indicators\\src\\calculator\\compare.ts"],"sourcesContent":["import { path } from \"../utils\";\nimport { Change as defaultOptions } from \"./defaultOptionsForComputation\";\n\nexport interface CompareOptions {\n    readonly basePath: string;\n    readonly compareKeys: string[];\n    readonly mainKeys: string[];\n    readonly sourcePath?: string;\n}\n\nexport default function () {\n    let options: CompareOptions = defaultOptions;\n\n    const calculator = (data: any[]) => {\n        const { basePath, mainKeys, compareKeys } = options;\n\n        const base = path(basePath);\n\n        const first = data[0];\n        const b = base(first);\n\n        const firsts: any = {};\n\n        const compareData = data.map((d) => {\n            const result = {};\n\n            mainKeys.forEach((key) => {\n                if (typeof d[key] === \"object\") {\n                    // @ts-ignore\n                    result[key] = {};\n                    Object.keys(d[key]).forEach((subkey) => {\n                        // @ts-ignore\n                        result[key][subkey] = (d[key][subkey] - b) / b;\n                    });\n                } else {\n                    // @ts-ignore\n                    result[key] = (d[key] - b) / b;\n                }\n            });\n\n            compareKeys.forEach((key) => {\n                if (d[key] !== undefined && firsts[key] === undefined) {\n                    // @ts-ignore\n                    firsts[key] = d[key];\n                }\n                if (d[key] !== undefined && firsts[key] !== undefined) {\n                    // @ts-ignore\n                    result[key] = (d[key] - firsts[key]) / firsts[key];\n                }\n            });\n            return result;\n        });\n\n        return compareData;\n    };\n\n    calculator.options = (newOptions?: CompareOptions) => {\n        if (newOptions === undefined) {\n            return options;\n        }\n\n        options = { ...defaultOptions, ...newOptions };\n\n        return calculator;\n    };\n\n    return calculator;\n}\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,UAAU;AAC/B,SAASC,MAAM,IAAIC,cAAc,QAAQ,gCAAgC;AASzE,eAAc;EACV,IAAIC,OAAO,GAAmBD,cAAc;EAE5C,MAAME,UAAU,GAAIC,IAAW,IAAI;IAC/B,MAAM;MAAEC,QAAQ;MAAEC,QAAQ;MAAEC;IAAW,CAAE,GAAGL,OAAO;IAEnD,MAAMM,IAAI,GAAGT,IAAI,CAACM,QAAQ,CAAC;IAE3B,MAAMI,KAAK,GAAGL,IAAI,CAAC,CAAC,CAAC;IACrB,MAAMM,CAAC,GAAGF,IAAI,CAACC,KAAK,CAAC;IAErB,MAAME,MAAM,GAAQ,EAAE;IAEtB,MAAMC,WAAW,GAAGR,IAAI,CAACS,GAAG,CAAEC,CAAC,IAAI;MAC/B,MAAMC,MAAM,GAAG,EAAE;MAEjBT,QAAQ,CAACU,OAAO,CAAEC,GAAG,IAAI;QACrB,IAAI,OAAOH,CAAC,CAACG,GAAG,CAAC,KAAK,QAAQ,EAAE;UAC5B;UACAF,MAAM,CAACE,GAAG,CAAC,GAAG,EAAE;UAChBC,MAAM,CAACC,IAAI,CAACL,CAAC,CAACG,GAAG,CAAC,CAAC,CAACD,OAAO,CAAEI,MAAM,IAAI;YACnC;YACAL,MAAM,CAACE,GAAG,CAAC,CAACG,MAAM,CAAC,GAAG,CAACN,CAAC,CAACG,GAAG,CAAC,CAACG,MAAM,CAAC,GAAGV,CAAC,IAAIA,CAAC;UAClD,CAAC,CAAC;SACL,MAAM;UACH;UACAK,MAAM,CAACE,GAAG,CAAC,GAAG,CAACH,CAAC,CAACG,GAAG,CAAC,GAAGP,CAAC,IAAIA,CAAC;;MAEtC,CAAC,CAAC;MAEFH,WAAW,CAACS,OAAO,CAAEC,GAAG,IAAI;QACxB,IAAIH,CAAC,CAACG,GAAG,CAAC,KAAKI,SAAS,IAAIV,MAAM,CAACM,GAAG,CAAC,KAAKI,SAAS,EAAE;UACnD;UACAV,MAAM,CAACM,GAAG,CAAC,GAAGH,CAAC,CAACG,GAAG,CAAC;;QAExB,IAAIH,CAAC,CAACG,GAAG,CAAC,KAAKI,SAAS,IAAIV,MAAM,CAACM,GAAG,CAAC,KAAKI,SAAS,EAAE;UACnD;UACAN,MAAM,CAACE,GAAG,CAAC,GAAG,CAACH,CAAC,CAACG,GAAG,CAAC,GAAGN,MAAM,CAACM,GAAG,CAAC,IAAIN,MAAM,CAACM,GAAG,CAAC;;MAE1D,CAAC,CAAC;MACF,OAAOF,MAAM;IACjB,CAAC,CAAC;IAEF,OAAOH,WAAW;EACtB,CAAC;EAEDT,UAAU,CAACD,OAAO,GAAIoB,UAA2B,IAAI;IACjD,IAAIA,UAAU,KAAKD,SAAS,EAAE;MAC1B,OAAOnB,OAAO;;IAGlBA,OAAO,GAAAgB,MAAA,CAAAK,MAAA,CAAAL,MAAA,CAAAK,MAAA,KAAQtB,cAAc,GAAKqB,UAAU,CAAE;IAE9C,OAAOnB,UAAU;EACrB,CAAC;EAED,OAAOA,UAAU;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}