{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabby\\\\trax-x\\\\src\\\\components\\\\CandlestickChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { createChart } from \"lightweight-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CandlestickChart = ({\n  ticker\n}) => {\n  _s();\n  const chartContainerRef = useRef(null);\n  const chartRef = useRef(null);\n  useEffect(() => {\n    // Initialize the chart\n    const chart = createChart(chartContainerRef.current, {\n      width: chartContainerRef.current.clientWidth || 1200,\n      height: 400,\n      layout: {\n        backgroundColor: \"#ffffff\",\n        textColor: \"#000000\"\n      },\n      grid: {\n        vertLines: {\n          color: \"#eeeeee\"\n        },\n        horzLines: {\n          color: \"#eeeeee\"\n        }\n      },\n      priceScale: {\n        position: \"right\",\n        // Ensure price scale is on the right side\n        borderColor: \"#cccccc\"\n      },\n      timeScale: {\n        borderColor: \"#cccccc\"\n      }\n    });\n    const candlestickSeries = chart.addCandlestickSeries();\n\n    // Fetch initial data\n    const fetchChartData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${ticker}`);\n        const data = await response.json();\n        if (data.dates) {\n          const formattedData = data.dates.map((date, index) => ({\n            time: date,\n            open: data.open[index],\n            high: data.high[index],\n            low: data.low[index],\n            close: data.close[index]\n          }));\n          candlestickSeries.setData(formattedData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching chart data:\", error);\n      }\n    };\n    fetchChartData();\n\n    // Handle chart resizing\n    const handleResize = () => {\n      if (chartContainerRef.current) {\n        const width = chartContainerRef.current.clientWidth;\n        const height = 400; // Keep height constant\n        chart.applyOptions({\n          width,\n          height\n        });\n      }\n    };\n\n    // Add ResizeObserver\n    const resizeObserver = new ResizeObserver(handleResize);\n    resizeObserver.observe(chartContainerRef.current);\n\n    // Cleanup on unmount\n    return () => {\n      resizeObserver.disconnect();\n      chart.remove();\n    };\n  }, [ticker]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: chartContainerRef,\n    style: {\n      width: \"100%\",\n      maxWidth: \"1200px\",\n      height: \"400px\",\n      margin: \"0 auto\",\n      border: \"2px solid #ccc\",\n      borderRadius: \"5px\",\n      overflow: \"hidden\",\n      backgroundColor: \"#ffffff\",\n      boxSizing: \"border-box\" // Ensure padding doesn't affect dimensions\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(CandlestickChart, \"2rN9armGVJ1f+QeW0pB7tlSVqXQ=\");\n_c = CandlestickChart;\nexport default CandlestickChart;\nvar _c;\n$RefreshReg$(_c, \"CandlestickChart\");","map":{"version":3,"names":["React","useEffect","useRef","createChart","jsxDEV","_jsxDEV","CandlestickChart","ticker","_s","chartContainerRef","chartRef","chart","current","width","clientWidth","height","layout","backgroundColor","textColor","grid","vertLines","color","horzLines","priceScale","position","borderColor","timeScale","candlestickSeries","addCandlestickSeries","fetchChartData","response","fetch","data","json","dates","formattedData","map","date","index","time","open","high","low","close","setData","error","console","handleResize","applyOptions","resizeObserver","ResizeObserver","observe","disconnect","remove","ref","style","maxWidth","margin","border","borderRadius","overflow","boxSizing","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gabby/trax-x/src/components/CandlestickChart.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { createChart } from \"lightweight-charts\";\r\n\r\nconst CandlestickChart = ({ ticker }) => {\r\n  const chartContainerRef = useRef(null);\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Initialize the chart\r\n    const chart = createChart(chartContainerRef.current, {\r\n      width: chartContainerRef.current.clientWidth || 1200,\r\n      height: 400,\r\n      layout: { backgroundColor: \"#ffffff\", textColor: \"#000000\" },\r\n      grid: { vertLines: { color: \"#eeeeee\" }, horzLines: { color: \"#eeeeee\" } },\r\n      priceScale: {\r\n        position: \"right\", // Ensure price scale is on the right side\r\n        borderColor: \"#cccccc\",\r\n      },\r\n      timeScale: {\r\n        borderColor: \"#cccccc\",\r\n      },\r\n    });\r\n\r\n    const candlestickSeries = chart.addCandlestickSeries();\r\n\r\n    // Fetch initial data\r\n    const fetchChartData = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${ticker}`);\r\n        const data = await response.json();\r\n\r\n        if (data.dates) {\r\n          const formattedData = data.dates.map((date, index) => ({\r\n            time: date,\r\n            open: data.open[index],\r\n            high: data.high[index],\r\n            low: data.low[index],\r\n            close: data.close[index],\r\n          }));\r\n          candlestickSeries.setData(formattedData);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching chart data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchChartData();\r\n\r\n    // Handle chart resizing\r\n    const handleResize = () => {\r\n      if (chartContainerRef.current) {\r\n        const width = chartContainerRef.current.clientWidth;\r\n        const height = 400; // Keep height constant\r\n        chart.applyOptions({ width, height });\r\n      }\r\n    };\r\n\r\n    // Add ResizeObserver\r\n    const resizeObserver = new ResizeObserver(handleResize);\r\n    resizeObserver.observe(chartContainerRef.current);\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      resizeObserver.disconnect();\r\n      chart.remove();\r\n    };\r\n  }, [ticker]);\r\n\r\n  return (\r\n    <div\r\n      ref={chartContainerRef}\r\n      style={{\r\n        width: \"100%\",\r\n        maxWidth: \"1200px\",\r\n        height: \"400px\",\r\n        margin: \"0 auto\",\r\n        border: \"2px solid #ccc\",\r\n        borderRadius: \"5px\",\r\n        overflow: \"hidden\",\r\n        backgroundColor: \"#ffffff\",\r\n        boxSizing: \"border-box\", // Ensure padding doesn't affect dimensions\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CandlestickChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}