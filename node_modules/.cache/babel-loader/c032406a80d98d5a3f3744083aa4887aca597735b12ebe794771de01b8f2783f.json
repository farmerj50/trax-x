{"ast":null,"code":"import { functor, GenericChartComponent } from \"@react-financial-charts/core\";\nimport { format } from \"d3-format\";\nimport * as React from \"react\";\nimport { ToolTipText } from \"./ToolTipText\";\nimport { ToolTipTSpanLabel } from \"./ToolTipTSpanLabel\";\nexport class StochasticTooltip extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.renderSVG = moreProps => {\n      var _a, _b, _c;\n      const {\n        onClick,\n        fontFamily,\n        fontSize,\n        fontWeight,\n        yAccessor,\n        displayFormat,\n        origin: originProp,\n        label,\n        className,\n        displayInit,\n        displayValuesFor = StochasticTooltip.defaultProps.displayValuesFor,\n        options,\n        appearance,\n        labelFill\n      } = this.props;\n      const {\n        chartConfig: {\n          width,\n          height\n        },\n        fullData\n      } = moreProps;\n      const currentItem = (_a = displayValuesFor(this.props, moreProps)) !== null && _a !== void 0 ? _a : fullData[fullData.length - 1];\n      const stochastic = currentItem && yAccessor(currentItem);\n      const K = (_b = (stochastic === null || stochastic === void 0 ? void 0 : stochastic.K) && displayFormat(stochastic.K)) !== null && _b !== void 0 ? _b : displayInit;\n      const D = (_c = (stochastic === null || stochastic === void 0 ? void 0 : stochastic.D) && displayFormat(stochastic.D)) !== null && _c !== void 0 ? _c : displayInit;\n      const origin = functor(originProp);\n      const [x, y] = origin(width, height);\n      const {\n        stroke\n      } = appearance;\n      return React.createElement(\"g\", {\n        className: className,\n        transform: `translate(${x}, ${y})`,\n        onClick: onClick\n      }, React.createElement(ToolTipText, {\n        x: 0,\n        y: 0,\n        fontFamily: fontFamily,\n        fontSize: fontSize,\n        fontWeight: fontWeight\n      }, React.createElement(ToolTipTSpanLabel, {\n        fill: labelFill\n      }, `${label} %K(`), React.createElement(\"tspan\", {\n        fill: stroke.kLine\n      }, `${options.windowSize}, ${options.kWindowSize}`), React.createElement(ToolTipTSpanLabel, {\n        fill: labelFill\n      }, \"): \"), React.createElement(\"tspan\", {\n        fill: stroke.kLine\n      }, K), React.createElement(ToolTipTSpanLabel, {\n        fill: labelFill\n      }, \" %D (\"), React.createElement(\"tspan\", {\n        fill: stroke.dLine\n      }, options.dWindowSize), React.createElement(ToolTipTSpanLabel, {\n        fill: labelFill\n      }, \"): \"), React.createElement(\"tspan\", {\n        fill: stroke.dLine\n      }, D)));\n    };\n  }\n  render() {\n    return React.createElement(GenericChartComponent, {\n      clip: false,\n      svgDraw: this.renderSVG,\n      drawOn: [\"mousemove\"]\n    });\n  }\n}\nStochasticTooltip.defaultProps = {\n  className: \"react-financial-charts-tooltip\",\n  displayFormat: format(\".2f\"),\n  displayInit: \"n/a\",\n  displayValuesFor: (_, props) => props.currentItem,\n  label: \"STO\",\n  origin: [0, 0]\n};","map":{"version":3,"names":["functor","GenericChartComponent","format","React","ToolTipText","ToolTipTSpanLabel","StochasticTooltip","Component","constructor","renderSVG","moreProps","onClick","fontFamily","fontSize","fontWeight","yAccessor","displayFormat","origin","originProp","label","className","displayInit","displayValuesFor","defaultProps","options","appearance","labelFill","props","chartConfig","width","height","fullData","currentItem","_a","length","stochastic","K","_b","D","_c","x","y","stroke","createElement","transform","fill","kLine","windowSize","kWindowSize","dLine","dWindowSize","render","clip","svgDraw","drawOn","_"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\tooltip\\src\\StochasticTooltip.tsx"],"sourcesContent":["import { functor, GenericChartComponent } from \"@react-financial-charts/core\";\nimport { format } from \"d3-format\";\nimport * as React from \"react\";\nimport { ToolTipText } from \"./ToolTipText\";\nimport { ToolTipTSpanLabel } from \"./ToolTipTSpanLabel\";\n\nexport interface StochasticTooltipProps {\n    readonly origin: number[] | ((width: number, height: number) => [number, number]);\n    readonly className?: string;\n    readonly fontFamily?: string;\n    readonly fontSize?: number;\n    readonly fontWeight?: number;\n    readonly labelFill?: string;\n    readonly onClick?: (event: React.MouseEvent) => void;\n    readonly yAccessor: (currentItem: any) => { K: number; D: number };\n    readonly options: {\n        windowSize: number;\n        kWindowSize: number;\n        dWindowSize: number;\n    };\n    readonly appearance: {\n        stroke: {\n            dLine: string;\n            kLine: string;\n        };\n    };\n    readonly displayFormat: (value: number) => string;\n    readonly displayInit?: string;\n    readonly displayValuesFor?: (props: StochasticTooltipProps, moreProps: any) => any;\n    readonly label: string;\n}\n\nexport class StochasticTooltip extends React.Component<StochasticTooltipProps> {\n    public static defaultProps = {\n        className: \"react-financial-charts-tooltip\",\n        displayFormat: format(\".2f\"),\n        displayInit: \"n/a\",\n        displayValuesFor: (_: any, props: any) => props.currentItem,\n        label: \"STO\",\n        origin: [0, 0],\n    };\n\n    public render() {\n        return <GenericChartComponent clip={false} svgDraw={this.renderSVG} drawOn={[\"mousemove\"]} />;\n    }\n\n    private readonly renderSVG = (moreProps: any) => {\n        const {\n            onClick,\n            fontFamily,\n            fontSize,\n            fontWeight,\n            yAccessor,\n            displayFormat,\n            origin: originProp,\n            label,\n            className,\n            displayInit,\n            displayValuesFor = StochasticTooltip.defaultProps.displayValuesFor,\n            options,\n            appearance,\n            labelFill,\n        } = this.props;\n        const {\n            chartConfig: { width, height },\n            fullData,\n        } = moreProps;\n\n        const currentItem = displayValuesFor(this.props, moreProps) ?? fullData[fullData.length - 1];\n\n        const stochastic = currentItem && yAccessor(currentItem);\n\n        const K = (stochastic?.K && displayFormat(stochastic.K)) ?? displayInit;\n        const D = (stochastic?.D && displayFormat(stochastic.D)) ?? displayInit;\n\n        const origin = functor(originProp);\n\n        const [x, y] = origin(width, height);\n\n        const { stroke } = appearance;\n\n        return (\n            <g className={className} transform={`translate(${x}, ${y})`} onClick={onClick}>\n                <ToolTipText x={0} y={0} fontFamily={fontFamily} fontSize={fontSize} fontWeight={fontWeight}>\n                    <ToolTipTSpanLabel fill={labelFill}>{`${label} %K(`}</ToolTipTSpanLabel>\n                    <tspan fill={stroke.kLine}>{`${options.windowSize}, ${options.kWindowSize}`}</tspan>\n                    <ToolTipTSpanLabel fill={labelFill}>): </ToolTipTSpanLabel>\n                    <tspan fill={stroke.kLine}>{K}</tspan>\n                    <ToolTipTSpanLabel fill={labelFill}> %D (</ToolTipTSpanLabel>\n                    <tspan fill={stroke.dLine}>{options.dWindowSize}</tspan>\n                    <ToolTipTSpanLabel fill={labelFill}>): </ToolTipTSpanLabel>\n                    <tspan fill={stroke.dLine}>{D}</tspan>\n                </ToolTipText>\n            </g>\n        );\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}