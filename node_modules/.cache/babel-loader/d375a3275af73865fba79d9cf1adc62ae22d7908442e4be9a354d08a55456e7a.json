{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabby\\\\trax-x\\\\src\\\\components\\\\StocksPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport StockTracker from \"./StockTracker\";\nimport io from \"socket.io-client\";\nimport \"./StocksPage.css\"; // Ensure this file has the Syncfusion imports\n\nimport { StockChartComponent, StockChartSeriesCollectionDirective, StockChartSeriesDirective, Inject, DateTime, Tooltip, RangeTooltip, Crosshair, LineSeries, CandleSeries, Legend, Export, EmaIndicator, TmaIndicator, SmaIndicator, MomentumIndicator, AtrIndicator, AccumulationDistributionIndicator, BollingerBands, MacdIndicator, StochasticIndicator, RsiIndicator } from \"@syncfusion/ej2-react-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nconst StocksPage = () => {\n  _s();\n  const [ticker, setTicker] = useState(\"\");\n  const [selectedTickers, setSelectedTickers] = useState([\"AAPL\"]); // Track multiple stocks\n  const [chartData, setChartData] = useState({});\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [recommendations, setRecommendations] = useState({});\n  const periods = [{\n    intervalType: \"Months\",\n    interval: 1,\n    text: \"1M\"\n  }, {\n    intervalType: \"Months\",\n    interval: 3,\n    text: \"3M\"\n  }, {\n    intervalType: \"Months\",\n    interval: 6,\n    text: \"6M\"\n  }, {\n    intervalType: \"Years\",\n    interval: 1,\n    text: \"YTD\"\n  }, {\n    intervalType: \"Years\",\n    interval: 3,\n    text: \"All\"\n  }];\n\n  // Fetch historical chart data for a given stock\n  const fetchChartData = async tickerSymbol => {\n    setLoading(true);\n    try {\n      const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${tickerSymbol}`);\n      if (!response.ok) throw new Error(\"Failed to fetch chart data.\");\n      const data = await response.json();\n      if (data && data.dates && data.dates.length > 0) {\n        const formattedData = data.dates.map((date, index) => ({\n          x: new Date(date),\n          open: data.open[index],\n          high: data.high[index],\n          low: data.low[index],\n          close: data.close[index]\n        })).filter(entry => entry.x && !isNaN(entry.open) && !isNaN(entry.high) && !isNaN(entry.low) && !isNaN(entry.close));\n        setChartData(prevData => ({\n          ...prevData,\n          [tickerSymbol]: formattedData\n        }));\n        setError(\"\");\n      } else {\n        setChartData(prevData => ({\n          ...prevData,\n          [tickerSymbol]: []\n        }));\n        setError(`No data available for ${tickerSymbol}.`);\n      }\n    } catch (err) {\n      console.error(\"Error fetching chart data:\", err);\n      setError(err.message || \"Failed to load chart data.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch data for all selected tickers\n  useEffect(() => {\n    selectedTickers.forEach(ticker => fetchChartData(ticker));\n  }, [selectedTickers]);\n\n  // WebSocket for real-time updates\n  useEffect(() => {\n    const handleStockUpdate = data => {\n      console.log(\"Real-time update:\", data);\n      if (data && data.price && data.timestamp) {\n        setChartData(prevData => ({\n          ...prevData,\n          [data.ticker]: [...(prevData[data.ticker] || []), {\n            x: new Date(data.timestamp),\n            open: data.price,\n            high: data.price,\n            low: data.price,\n            close: data.price\n          }]\n        }));\n        setRecommendations(prev => ({\n          ...prev,\n          [data.ticker]: data.recommendation || \"Hold\"\n        }));\n      }\n    };\n    selectedTickers.forEach(ticker => socket.emit(\"track_stock\", {\n      ticker\n    }));\n    socket.on(\"stock_update\", handleStockUpdate);\n    return () => {\n      selectedTickers.forEach(ticker => socket.emit(\"untrack_stock\", {\n        ticker\n      }));\n      socket.off(\"stock_update\", handleStockUpdate);\n    };\n  }, [selectedTickers]);\n\n  // Add stock for tracking\n  const handleSearch = () => {\n    if (ticker.trim() !== \"\" && !selectedTickers.includes(ticker.toUpperCase())) {\n      setSelectedTickers([...selectedTickers, ticker.toUpperCase()]);\n      setTicker(\"\");\n    }\n  };\n\n  // Remove stock from tracking\n  const handleRemoveStock = tickerToRemove => {\n    setSelectedTickers(prev => prev.filter(t => t !== tickerToRemove));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stocks-page\",\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"\\uD83D\\uDCCA Stock Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-stock\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter stock ticker (e.g., AAPL)\",\n        value: ticker,\n        onChange: e => setTicker(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Track Stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracked-stocks\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDD0D Tracking Stocks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), selectedTickers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No stocks are being tracked.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this) : selectedTickers.map(ticker => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tracked-stock\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: ticker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveStock(ticker),\n          children: \"\\u274C Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this)]\n      }, ticker, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), selectedTickers.map(ticker => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [ticker, \" Stock Chart\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this) : chartData[ticker] && chartData[ticker].length > 0 ? /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n        children: /*#__PURE__*/_jsxDEV(StockChartComponent, {\n          id: `stockchart-${ticker}`,\n          enableSelector: true,\n          primaryXAxis: {\n            valueType: \"DateTime\",\n            labelFormat: \"MMM dd\",\n            majorGridLines: {\n              width: 0\n            },\n            intervalType: \"Days\",\n            crosshairTooltip: {\n              enable: true\n            }\n          },\n          primaryYAxis: {\n            labelFormat: \"${value}\",\n            majorGridLines: {\n              width: 0\n            },\n            rangePadding: \"None\",\n            crosshairTooltip: {\n              enable: true\n            }\n          },\n          tooltip: {\n            enable: true\n          },\n          crosshair: {\n            enable: true\n          },\n          periods: periods,\n          title: `${ticker} Stock Analysis`,\n          height: \"100%\",\n          width: \"100%\",\n          children: [/*#__PURE__*/_jsxDEV(Inject, {\n            services: [DateTime, Tooltip, RangeTooltip, Crosshair, LineSeries, CandleSeries, Legend, Export, EmaIndicator, TmaIndicator, SmaIndicator, MomentumIndicator, AtrIndicator, AccumulationDistributionIndicator, BollingerBands, MacdIndicator, StochasticIndicator, RsiIndicator]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(StockChartSeriesCollectionDirective, {\n            children: /*#__PURE__*/_jsxDEV(StockChartSeriesDirective, {\n              dataSource: chartData[ticker],\n              xName: \"x\",\n              open: \"open\",\n              high: \"high\",\n              low: \"low\",\n              close: \"close\",\n              type: \"Candle\",\n              animation: {\n                enable: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }, this)]\n    }, ticker, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(StocksPage, \"85MGGISSKM4m6F4sWQ4dwkLxkDQ=\");\n_c = StocksPage;\nexport default StocksPage;\nvar _c;\n$RefreshReg$(_c, \"StocksPage\");","map":{"version":3,"names":["React","useState","useEffect","ErrorBoundary","StockTracker","io","StockChartComponent","StockChartSeriesCollectionDirective","StockChartSeriesDirective","Inject","DateTime","Tooltip","RangeTooltip","Crosshair","LineSeries","CandleSeries","Legend","Export","EmaIndicator","TmaIndicator","SmaIndicator","MomentumIndicator","AtrIndicator","AccumulationDistributionIndicator","BollingerBands","MacdIndicator","StochasticIndicator","RsiIndicator","jsxDEV","_jsxDEV","socket","StocksPage","_s","ticker","setTicker","selectedTickers","setSelectedTickers","chartData","setChartData","error","setError","loading","setLoading","recommendations","setRecommendations","periods","intervalType","interval","text","fetchChartData","tickerSymbol","response","fetch","ok","Error","data","json","dates","length","formattedData","map","date","index","x","Date","open","high","low","close","filter","entry","isNaN","prevData","err","console","message","forEach","handleStockUpdate","log","price","timestamp","prev","recommendation","emit","on","off","handleSearch","trim","includes","toUpperCase","handleRemoveStock","tickerToRemove","t","className","style","padding","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","color","id","enableSelector","primaryXAxis","valueType","labelFormat","majorGridLines","width","crosshairTooltip","enable","primaryYAxis","rangePadding","tooltip","crosshair","title","height","services","dataSource","xName","animation","_c","$RefreshReg$"],"sources":["C:/Users/gabby/trax-x/src/components/StocksPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ErrorBoundary from \"./ErrorBoundary\";\r\nimport StockTracker from \"./StockTracker\";\r\nimport io from \"socket.io-client\";\r\nimport \"./StocksPage.css\"; // Ensure this file has the Syncfusion imports\r\n\r\nimport {\r\n  StockChartComponent,\r\n  StockChartSeriesCollectionDirective,\r\n  StockChartSeriesDirective,\r\n  Inject,\r\n  DateTime,\r\n  Tooltip,\r\n  RangeTooltip,\r\n  Crosshair,\r\n  LineSeries,\r\n  CandleSeries,\r\n  Legend,\r\n  Export,\r\n  EmaIndicator,\r\n  TmaIndicator,\r\n  SmaIndicator,\r\n  MomentumIndicator,\r\n  AtrIndicator,\r\n  AccumulationDistributionIndicator,\r\n  BollingerBands,\r\n  MacdIndicator,\r\n  StochasticIndicator,\r\n  RsiIndicator,\r\n} from \"@syncfusion/ej2-react-charts\";\r\n\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nconst StocksPage = () => {\r\n  const [ticker, setTicker] = useState(\"\");\r\n  const [selectedTickers, setSelectedTickers] = useState([\"AAPL\"]); // Track multiple stocks\r\n  const [chartData, setChartData] = useState({});\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [recommendations, setRecommendations] = useState({});\r\n\r\n  const periods = [\r\n    { intervalType: \"Months\", interval: 1, text: \"1M\" },\r\n    { intervalType: \"Months\", interval: 3, text: \"3M\" },\r\n    { intervalType: \"Months\", interval: 6, text: \"6M\" },\r\n    { intervalType: \"Years\", interval: 1, text: \"YTD\" },\r\n    { intervalType: \"Years\", interval: 3, text: \"All\" },\r\n  ];\r\n\r\n  // Fetch historical chart data for a given stock\r\n  const fetchChartData = async (tickerSymbol) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${tickerSymbol}`);\r\n      if (!response.ok) throw new Error(\"Failed to fetch chart data.\");\r\n\r\n      const data = await response.json();\r\n      if (data && data.dates && data.dates.length > 0) {\r\n        const formattedData = data.dates.map((date, index) => ({\r\n          x: new Date(date),\r\n          open: data.open[index],\r\n          high: data.high[index],\r\n          low: data.low[index],\r\n          close: data.close[index],\r\n        })).filter(\r\n          (entry) =>\r\n            entry.x && !isNaN(entry.open) && !isNaN(entry.high) && !isNaN(entry.low) && !isNaN(entry.close)\r\n        );\r\n\r\n        setChartData((prevData) => ({\r\n          ...prevData,\r\n          [tickerSymbol]: formattedData,\r\n        }));\r\n        setError(\"\");\r\n      } else {\r\n        setChartData((prevData) => ({\r\n          ...prevData,\r\n          [tickerSymbol]: [],\r\n        }));\r\n        setError(`No data available for ${tickerSymbol}.`);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching chart data:\", err);\r\n      setError(err.message || \"Failed to load chart data.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch data for all selected tickers\r\n  useEffect(() => {\r\n    selectedTickers.forEach((ticker) => fetchChartData(ticker));\r\n  }, [selectedTickers]);\r\n\r\n  // WebSocket for real-time updates\r\n  useEffect(() => {\r\n    const handleStockUpdate = (data) => {\r\n      console.log(\"Real-time update:\", data);\r\n      if (data && data.price && data.timestamp) {\r\n        setChartData((prevData) => ({\r\n          ...prevData,\r\n          [data.ticker]: [\r\n            ...(prevData[data.ticker] || []),\r\n            {\r\n              x: new Date(data.timestamp),\r\n              open: data.price,\r\n              high: data.price,\r\n              low: data.price,\r\n              close: data.price,\r\n            },\r\n          ],\r\n        }));\r\n\r\n        setRecommendations((prev) => ({\r\n          ...prev,\r\n          [data.ticker]: data.recommendation || \"Hold\",\r\n        }));\r\n      }\r\n    };\r\n\r\n    selectedTickers.forEach((ticker) => socket.emit(\"track_stock\", { ticker }));\r\n    socket.on(\"stock_update\", handleStockUpdate);\r\n\r\n    return () => {\r\n      selectedTickers.forEach((ticker) => socket.emit(\"untrack_stock\", { ticker }));\r\n      socket.off(\"stock_update\", handleStockUpdate);\r\n    };\r\n  }, [selectedTickers]);\r\n\r\n  // Add stock for tracking\r\n  const handleSearch = () => {\r\n    if (ticker.trim() !== \"\" && !selectedTickers.includes(ticker.toUpperCase())) {\r\n      setSelectedTickers([...selectedTickers, ticker.toUpperCase()]);\r\n      setTicker(\"\");\r\n    }\r\n  };\r\n\r\n  // Remove stock from tracking\r\n  const handleRemoveStock = (tickerToRemove) => {\r\n    setSelectedTickers((prev) => prev.filter((t) => t !== tickerToRemove));\r\n  };\r\n\r\n  return (\r\n    <div className=\"stocks-page\" style={{ padding: \"20px\" }}>\r\n      <div className=\"stock-header\">\r\n        <h2 style={{ textAlign: \"center\" }}>📊 Stock Analysis</h2>\r\n      </div>\r\n\r\n      <div className=\"search-stock\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter stock ticker (e.g., AAPL)\"\r\n          value={ticker}\r\n          onChange={(e) => setTicker(e.target.value)}\r\n        />\r\n        <button onClick={handleSearch}>Track Stock</button>\r\n      </div>\r\n\r\n      <div className=\"tracked-stocks\">\r\n        <h3>🔍 Tracking Stocks:</h3>\r\n        {selectedTickers.length === 0 ? (\r\n          <p>No stocks are being tracked.</p>\r\n        ) : (\r\n          selectedTickers.map((ticker) => (\r\n            <div key={ticker} className=\"tracked-stock\">\r\n              <span>{ticker}</span>\r\n              <button onClick={() => handleRemoveStock(ticker)}>❌ Remove</button>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      {selectedTickers.map((ticker) => (\r\n        <div key={ticker} className=\"stock-section\">\r\n          <h3>{ticker} Stock Chart</h3>\r\n          {loading ? (\r\n            <p>Loading...</p>\r\n          ) : error ? (\r\n            <p style={{ color: \"red\" }}>{error}</p>\r\n          ) : chartData[ticker] && chartData[ticker].length > 0 ? (\r\n            <ErrorBoundary>\r\n              <StockChartComponent\r\n                id={`stockchart-${ticker}`}\r\n                enableSelector={true}\r\n                primaryXAxis={{\r\n                  valueType: \"DateTime\",\r\n                  labelFormat: \"MMM dd\",\r\n                  majorGridLines: { width: 0 },\r\n                  intervalType: \"Days\",\r\n                  crosshairTooltip: { enable: true },\r\n                }}\r\n                primaryYAxis={{\r\n                  labelFormat: \"${value}\",\r\n                  majorGridLines: { width: 0 },\r\n                  rangePadding: \"None\",\r\n                  crosshairTooltip: { enable: true },\r\n                }}\r\n                tooltip={{ enable: true }}\r\n                crosshair={{ enable: true }}\r\n                periods={periods}\r\n                title={`${ticker} Stock Analysis`}\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n              >\r\n                <Inject\r\n                  services={[\r\n                    DateTime,\r\n                    Tooltip,\r\n                    RangeTooltip,\r\n                    Crosshair,\r\n                    LineSeries,\r\n                    CandleSeries,\r\n                    Legend,\r\n                    Export,\r\n                    EmaIndicator,\r\n                    TmaIndicator,\r\n                    SmaIndicator,\r\n                    MomentumIndicator,\r\n                    AtrIndicator,\r\n                    AccumulationDistributionIndicator,\r\n                    BollingerBands,\r\n                    MacdIndicator,\r\n                    StochasticIndicator,\r\n                    RsiIndicator,\r\n                  ]}\r\n                />\r\n                <StockChartSeriesCollectionDirective>\r\n                  <StockChartSeriesDirective\r\n                    dataSource={chartData[ticker]}\r\n                    xName=\"x\"\r\n                    open=\"open\"\r\n                    high=\"high\"\r\n                    low=\"low\"\r\n                    close=\"close\"\r\n                    type=\"Candle\"\r\n                    animation={{ enable: true }}\r\n                  />\r\n                </StockChartSeriesCollectionDirective>\r\n              </StockChartComponent>\r\n            </ErrorBoundary>\r\n          ) : (\r\n            <p>No data available.</p>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StocksPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}