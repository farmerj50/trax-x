{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\";\nimport { functor, identity } from \"./utils\";\nimport { ChartCanvasContext } from \"./ChartCanvas\";\nconst aliases = {\n  mouseleave: \"mousemove\",\n  panend: \"pan\",\n  pinchzoom: \"pan\",\n  mousedown: \"mousemove\",\n  click: \"mousemove\",\n  contextmenu: \"mousemove\",\n  dblclick: \"mousemove\",\n  dragstart: \"drag\",\n  dragend: \"drag\",\n  dragcancel: \"drag\",\n  zoom: \"zoom\"\n};\nexport class GenericComponent extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.moreProps = {};\n    this.dragInProgress = false;\n    this.evaluationInProgress = false;\n    this.iSetTheCursorClass = false;\n    this.listener = (type, moreProps, state, e) => {\n      if (moreProps !== undefined) {\n        this.updateMoreProps(moreProps);\n      }\n      this.evaluationInProgress = true;\n      this.evaluateType(type, e);\n      this.evaluationInProgress = false;\n    };\n    this.drawOnCanvas = this.drawOnCanvas.bind(this);\n    this.getMoreProps = this.getMoreProps.bind(this);\n    this.draw = this.draw.bind(this);\n    this.updateMoreProps = this.updateMoreProps.bind(this);\n    this.evaluateType = this.evaluateType.bind(this);\n    this.isHover = this.isHover.bind(this);\n    this.preCanvasDraw = this.preCanvasDraw.bind(this);\n    this.postCanvasDraw = this.postCanvasDraw.bind(this);\n    this.getPanConditions = this.getPanConditions.bind(this);\n    this.shouldTypeProceed = this.shouldTypeProceed.bind(this);\n    this.preEvaluate = this.preEvaluate.bind(this);\n    const {\n      generateSubscriptionId\n    } = context;\n    this.subscriberId = generateSubscriptionId();\n    this.state = {\n      updateCount: 0\n    };\n  }\n  updateMoreProps(moreProps) {\n    Object.keys(moreProps).forEach(key => {\n      this.moreProps[key] = moreProps[key];\n    });\n  }\n  shouldTypeProceed(type, moreProps) {\n    return true;\n  }\n  preEvaluate(type, moreProps, e) {\n    /// empty\n  }\n  evaluateType(type, e) {\n    // @ts-ignore\n    const newType = aliases[type] || type;\n    const proceed = this.props.drawOn.indexOf(newType) > -1;\n    if (!proceed) {\n      return;\n    }\n    this.preEvaluate(type, this.moreProps, e);\n    if (!this.shouldTypeProceed(type, this.moreProps)) {\n      return;\n    }\n    switch (type) {\n      case \"zoom\":\n      case \"mouseenter\":\n        // DO NOT DRAW FOR THESE EVENTS\n        break;\n      case \"mouseleave\":\n        {\n          this.moreProps.hovering = false;\n          if (this.props.onUnHover) {\n            this.props.onUnHover(e, this.getMoreProps());\n          }\n          break;\n        }\n      case \"contextmenu\":\n        {\n          if (this.props.onContextMenu) {\n            this.props.onContextMenu(e, this.getMoreProps());\n          }\n          if (this.moreProps.hovering && this.props.onContextMenuWhenHover) {\n            this.props.onContextMenuWhenHover(e, this.getMoreProps());\n          }\n          break;\n        }\n      case \"mousedown\":\n        {\n          if (this.props.onMouseDown) {\n            this.props.onMouseDown(e, this.getMoreProps());\n          }\n          break;\n        }\n      case \"click\":\n        {\n          const {\n            onClick,\n            onClickOutside,\n            onClickWhenHover\n          } = this.props;\n          const moreProps = this.getMoreProps();\n          if (moreProps.hovering && onClickWhenHover !== undefined) {\n            onClickWhenHover(e, moreProps);\n          } else if (onClickOutside !== undefined) {\n            onClickOutside(e, moreProps);\n          }\n          if (onClick !== undefined) {\n            onClick(e, moreProps);\n          }\n          break;\n        }\n      case \"mousemove\":\n        {\n          const prevHover = this.moreProps.hovering;\n          this.moreProps.hovering = this.isHover(e);\n          const {\n            amIOnTop,\n            setCursorClass\n          } = this.context;\n          if (this.moreProps.hovering && !this.props.selected && /* && !prevHover */\n          amIOnTop(this.subscriberId) && this.props.onHover !== undefined) {\n            setCursorClass(\"react-financial-charts-pointer-cursor\");\n            this.iSetTheCursorClass = true;\n          } else if (this.moreProps.hovering && this.props.selected && amIOnTop(this.subscriberId)) {\n            setCursorClass(this.props.interactiveCursorClass);\n            this.iSetTheCursorClass = true;\n          } else if (prevHover && !this.moreProps.hovering && this.iSetTheCursorClass) {\n            this.iSetTheCursorClass = false;\n            setCursorClass(null);\n          }\n          const moreProps = this.getMoreProps();\n          if (this.moreProps.hovering && !prevHover) {\n            if (this.props.onHover) {\n              this.props.onHover(e, moreProps);\n            }\n          }\n          if (prevHover && !this.moreProps.hovering) {\n            if (this.props.onUnHover) {\n              this.props.onUnHover(e, moreProps);\n            }\n          }\n          if (this.props.onMouseMove) {\n            this.props.onMouseMove(e, moreProps);\n          }\n          break;\n        }\n      case \"dblclick\":\n        {\n          const moreProps = this.getMoreProps();\n          if (this.props.onDoubleClick) {\n            this.props.onDoubleClick(e, moreProps);\n          }\n          if (this.moreProps.hovering && this.props.onDoubleClickWhenHover) {\n            this.props.onDoubleClickWhenHover(e, moreProps);\n          }\n          break;\n        }\n      case \"pan\":\n        {\n          this.moreProps.hovering = false;\n          if (this.props.onPan) {\n            this.props.onPan(e, this.getMoreProps());\n          }\n          break;\n        }\n      case \"panend\":\n        {\n          if (this.props.onPanEnd) {\n            this.props.onPanEnd(e, this.getMoreProps());\n          }\n          break;\n        }\n      case \"dragstart\":\n        {\n          if (this.getPanConditions().draggable) {\n            const {\n              amIOnTop\n            } = this.context;\n            if (amIOnTop(this.subscriberId)) {\n              this.dragInProgress = true;\n              if (this.props.onDragStart !== undefined) {\n                this.props.onDragStart(e, this.getMoreProps());\n              }\n            }\n          }\n          break;\n        }\n      case \"drag\":\n        {\n          if (this.dragInProgress && this.props.onDrag) {\n            this.props.onDrag(e, this.getMoreProps());\n          }\n          break;\n        }\n      case \"dragend\":\n        {\n          if (this.dragInProgress && this.props.onDragComplete) {\n            this.props.onDragComplete(e, this.getMoreProps());\n          }\n          this.dragInProgress = false;\n          break;\n        }\n      case \"dragcancel\":\n        {\n          if (this.dragInProgress || this.iSetTheCursorClass) {\n            const {\n              setCursorClass\n            } = this.context;\n            setCursorClass(null);\n          }\n          break;\n        }\n    }\n  }\n  isHover(e) {\n    const {\n      isHover\n    } = this.props;\n    if (isHover === undefined) {\n      return false;\n    }\n    return isHover(this.getMoreProps(), e);\n  }\n  getPanConditions() {\n    const draggable = !!(this.props.selected && this.moreProps.hovering) || this.props.enableDragOnHover && this.moreProps.hovering;\n    return {\n      draggable,\n      panEnabled: !this.props.disablePan\n    };\n  }\n  draw({\n    trigger,\n    force = false\n  }) {\n    const type = aliases[trigger] || trigger;\n    const proceed = this.props.drawOn.indexOf(type) > -1;\n    if (proceed || this.props.selected /* this is to draw as soon as you select */ || force) {\n      const {\n        canvasDraw\n      } = this.props;\n      if (canvasDraw === undefined) {\n        const {\n          updateCount\n        } = this.state;\n        this.setState({\n          updateCount: updateCount + 1\n        });\n      } else {\n        this.drawOnCanvas();\n      }\n    }\n  }\n  UNSAFE_componentWillMount() {\n    const {\n      subscribe,\n      chartId\n    } = this.context;\n    const {\n      clip,\n      edgeClip\n    } = this.props;\n    subscribe(this.subscriberId, {\n      chartId,\n      clip,\n      edgeClip,\n      listener: this.listener,\n      draw: this.draw,\n      getPanConditions: this.getPanConditions\n    });\n    this.UNSAFE_componentWillReceiveProps(this.props, this.context);\n  }\n  componentWillUnmount() {\n    const {\n      unsubscribe\n    } = this.context;\n    unsubscribe(this.subscriberId);\n    if (this.iSetTheCursorClass) {\n      const {\n        setCursorClass\n      } = this.context;\n      setCursorClass(null);\n    }\n  }\n  componentDidMount() {\n    this.componentDidUpdate(this.props);\n  }\n  componentDidUpdate(prevProps) {\n    const {\n      canvasDraw,\n      selected,\n      interactiveCursorClass\n    } = this.props;\n    if (prevProps.selected !== selected) {\n      const {\n        setCursorClass\n      } = this.context;\n      if (selected && this.moreProps.hovering) {\n        this.iSetTheCursorClass = true;\n        setCursorClass(interactiveCursorClass);\n      } else {\n        this.iSetTheCursorClass = false;\n        setCursorClass(null);\n      }\n    }\n    if (canvasDraw !== undefined && !this.evaluationInProgress) {\n      this.updateMoreProps(this.moreProps);\n      this.drawOnCanvas();\n    }\n  }\n  UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\n    const {\n      xScale,\n      plotData,\n      chartConfig,\n      getMutableState\n    } = nextContext;\n    this.moreProps = Object.assign(Object.assign(Object.assign({}, this.moreProps), getMutableState()), {\n      /*\n      ^ this is so\n      mouseXY, currentCharts, currentItem are available to\n      newly created components like MouseHoverText which\n      is created right after a new interactive object is drawn\n      */\n      xScale,\n      plotData,\n      chartConfig\n    });\n  }\n  getMoreProps() {\n    const {\n      xScale,\n      plotData,\n      chartConfigs,\n      morePropsDecorator,\n      xAccessor,\n      displayXAccessor,\n      width,\n      height\n    } = this.context;\n    const {\n      chartId,\n      fullData\n    } = this.context;\n    const moreProps = Object.assign({\n      xScale,\n      plotData,\n      chartConfigs,\n      xAccessor,\n      displayXAccessor,\n      width,\n      height,\n      chartId,\n      fullData\n    }, this.moreProps);\n    return (morePropsDecorator || identity)(moreProps);\n  }\n  preCanvasDraw(ctx, moreProps) {\n    // do nothing\n  }\n  postCanvasDraw(ctx, moreProps) {\n    // empty\n  }\n  drawOnCanvas() {\n    const {\n      canvasDraw,\n      canvasToDraw\n    } = this.props;\n    if (canvasDraw === undefined || canvasToDraw === undefined) {\n      return;\n    }\n    const {\n      getCanvasContexts\n    } = this.context;\n    const moreProps = this.getMoreProps();\n    const contexts = getCanvasContexts();\n    const ctx = canvasToDraw(contexts);\n    if (ctx !== undefined) {\n      this.preCanvasDraw(ctx, moreProps);\n      canvasDraw(ctx, moreProps);\n      this.postCanvasDraw(ctx, moreProps);\n    }\n  }\n  render() {\n    const {\n      canvasDraw,\n      clip,\n      svgDraw\n    } = this.props;\n    if (canvasDraw !== undefined || svgDraw === undefined) {\n      return null;\n    }\n    const {\n      chartId\n    } = this.context;\n    const suffix = chartId !== undefined ? \"-\" + chartId : \"\";\n    const style = clip ? {\n      clipPath: `url(#chart-area-clip${suffix})`\n    } : undefined;\n    return React.createElement(\"g\", {\n      style: style\n    }, svgDraw(this.getMoreProps()));\n  }\n}\nGenericComponent.defaultProps = {\n  svgDraw: functor(null),\n  draw: [],\n  canvasToDraw: contexts => contexts.mouseCoord,\n  clip: true,\n  edgeClip: false,\n  selected: false,\n  disablePan: false,\n  enableDragOnHover: false\n};\nGenericComponent.contextType = ChartCanvasContext;\nexport const getAxisCanvas = contexts => {\n  return contexts.axes;\n};\nexport const getMouseCanvas = contexts => {\n  return contexts.mouseCoord;\n};","map":{"version":3,"names":["React","functor","identity","ChartCanvasContext","aliases","mouseleave","panend","pinchzoom","mousedown","click","contextmenu","dblclick","dragstart","dragend","dragcancel","zoom","GenericComponent","Component","constructor","props","context","moreProps","dragInProgress","evaluationInProgress","iSetTheCursorClass","listener","type","state","e","undefined","updateMoreProps","evaluateType","drawOnCanvas","bind","getMoreProps","draw","isHover","preCanvasDraw","postCanvasDraw","getPanConditions","shouldTypeProceed","preEvaluate","generateSubscriptionId","subscriberId","updateCount","Object","keys","forEach","key","newType","proceed","drawOn","indexOf","hovering","onUnHover","onContextMenu","onContextMenuWhenHover","onMouseDown","onClick","onClickOutside","onClickWhenHover","prevHover","amIOnTop","setCursorClass","selected","onHover","interactiveCursorClass","onMouseMove","onDoubleClick","onDoubleClickWhenHover","onPan","onPanEnd","draggable","onDragStart","onDrag","onDragComplete","enableDragOnHover","panEnabled","disablePan","trigger","force","canvasDraw","setState","UNSAFE_componentWillMount","subscribe","chartId","clip","edgeClip","UNSAFE_componentWillReceiveProps","componentWillUnmount","unsubscribe","componentDidMount","componentDidUpdate","prevProps","nextProps","nextContext","xScale","plotData","chartConfig","getMutableState","assign","chartConfigs","morePropsDecorator","xAccessor","displayXAccessor","width","height","fullData","ctx","canvasToDraw","getCanvasContexts","contexts","render","svgDraw","suffix","style","clipPath","createElement","defaultProps","mouseCoord","contextType","getAxisCanvas","axes","getMouseCanvas"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\core\\src\\GenericComponent.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\";\nimport { functor, identity } from \"./utils\";\nimport { ICanvasContexts } from \"./CanvasContainer\";\nimport { ChartCanvasContext } from \"./ChartCanvas\";\n\nconst aliases: Record<string, string> = {\n    mouseleave: \"mousemove\", // to draw interactive after mouse exit\n    panend: \"pan\",\n    pinchzoom: \"pan\",\n    mousedown: \"mousemove\",\n    click: \"mousemove\",\n    contextmenu: \"mousemove\",\n    dblclick: \"mousemove\",\n    dragstart: \"drag\",\n    dragend: \"drag\",\n    dragcancel: \"drag\",\n    zoom: \"zoom\",\n};\n\ninterface GenericComponentProps {\n    readonly svgDraw?: (moreProps: any) => React.ReactNode;\n    readonly canvasDraw?: (ctx: CanvasRenderingContext2D, moreProps: any) => void;\n    readonly canvasToDraw?: (contexts: ICanvasContexts) => CanvasRenderingContext2D | undefined;\n    readonly clip?: boolean;\n    readonly disablePan?: boolean;\n    readonly drawOn: string[];\n    readonly edgeClip?: boolean;\n    readonly enableDragOnHover?: boolean;\n    readonly interactiveCursorClass?: string;\n    readonly isHover?: (moreProps: any, e: React.MouseEvent) => boolean;\n    readonly onClick?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onClickWhenHover?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onClickOutside?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onPan?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onPanEnd?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onDragStart?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onDrag?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onDragComplete?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onDoubleClick?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onDoubleClickWhenHover?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onContextMenu?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onContextMenuWhenHover?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onMouseMove?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onMouseDown?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onHover?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onUnHover?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly selected?: boolean;\n}\n\ninterface GenericComponentState {\n    updateCount: number;\n}\n\nexport class GenericComponent extends React.Component<GenericComponentProps, GenericComponentState> {\n    public static defaultProps = {\n        svgDraw: functor(null),\n        draw: [],\n        canvasToDraw: (contexts: ICanvasContexts) => contexts.mouseCoord,\n        clip: true,\n        edgeClip: false,\n        selected: false,\n        disablePan: false,\n        enableDragOnHover: false,\n    };\n\n    public declare context: React.ContextType<typeof ChartCanvasContext>;\n\n    public moreProps: any = {};\n\n    private dragInProgress = false;\n    private evaluationInProgress = false;\n    private iSetTheCursorClass = false;\n    private readonly subscriberId: number;\n\n    public constructor(props: GenericComponentProps, context: any) {\n        super(props, context);\n        this.drawOnCanvas = this.drawOnCanvas.bind(this);\n        this.getMoreProps = this.getMoreProps.bind(this);\n        this.draw = this.draw.bind(this);\n        this.updateMoreProps = this.updateMoreProps.bind(this);\n        this.evaluateType = this.evaluateType.bind(this);\n        this.isHover = this.isHover.bind(this);\n        this.preCanvasDraw = this.preCanvasDraw.bind(this);\n        this.postCanvasDraw = this.postCanvasDraw.bind(this);\n        this.getPanConditions = this.getPanConditions.bind(this);\n        this.shouldTypeProceed = this.shouldTypeProceed.bind(this);\n        this.preEvaluate = this.preEvaluate.bind(this);\n\n        const { generateSubscriptionId } = context;\n\n        this.subscriberId = generateSubscriptionId();\n\n        this.state = {\n            updateCount: 0,\n        };\n    }\n\n    public updateMoreProps(moreProps: any) {\n        Object.keys(moreProps).forEach((key) => {\n            this.moreProps[key] = moreProps[key];\n        });\n    }\n\n    public shouldTypeProceed(type: string, moreProps: any) {\n        return true;\n    }\n\n    public preEvaluate(type: string, moreProps: any, e: any) {\n        /// empty\n    }\n\n    public listener = (type: string, moreProps: any, state: any, e: any) => {\n        if (moreProps !== undefined) {\n            this.updateMoreProps(moreProps);\n        }\n        this.evaluationInProgress = true;\n        this.evaluateType(type, e);\n        this.evaluationInProgress = false;\n    };\n\n    public evaluateType(type: string, e: any) {\n        // @ts-ignore\n        const newType = aliases[type] || type;\n        const proceed = this.props.drawOn.indexOf(newType) > -1;\n        if (!proceed) {\n            return;\n        }\n\n        this.preEvaluate(type, this.moreProps, e);\n\n        if (!this.shouldTypeProceed(type, this.moreProps)) {\n            return;\n        }\n\n        switch (type) {\n            case \"zoom\":\n            case \"mouseenter\":\n                // DO NOT DRAW FOR THESE EVENTS\n                break;\n            case \"mouseleave\": {\n                this.moreProps.hovering = false;\n\n                if (this.props.onUnHover) {\n                    this.props.onUnHover(e, this.getMoreProps());\n                }\n                break;\n            }\n            case \"contextmenu\": {\n                if (this.props.onContextMenu) {\n                    this.props.onContextMenu(e, this.getMoreProps());\n                }\n                if (this.moreProps.hovering && this.props.onContextMenuWhenHover) {\n                    this.props.onContextMenuWhenHover(e, this.getMoreProps());\n                }\n                break;\n            }\n            case \"mousedown\": {\n                if (this.props.onMouseDown) {\n                    this.props.onMouseDown(e, this.getMoreProps());\n                }\n                break;\n            }\n            case \"click\": {\n                const { onClick, onClickOutside, onClickWhenHover } = this.props;\n                const moreProps = this.getMoreProps();\n                if (moreProps.hovering && onClickWhenHover !== undefined) {\n                    onClickWhenHover(e, moreProps);\n                } else if (onClickOutside !== undefined) {\n                    onClickOutside(e, moreProps);\n                }\n\n                if (onClick !== undefined) {\n                    onClick(e, moreProps);\n                }\n                break;\n            }\n            case \"mousemove\": {\n                const prevHover = this.moreProps.hovering;\n                this.moreProps.hovering = this.isHover(e);\n\n                const { amIOnTop, setCursorClass } = this.context;\n\n                if (\n                    this.moreProps.hovering &&\n                    !this.props.selected &&\n                    /* && !prevHover */\n                    amIOnTop(this.subscriberId) &&\n                    this.props.onHover !== undefined\n                ) {\n                    setCursorClass(\"react-financial-charts-pointer-cursor\");\n                    this.iSetTheCursorClass = true;\n                } else if (this.moreProps.hovering && this.props.selected && amIOnTop(this.subscriberId)) {\n                    setCursorClass(this.props.interactiveCursorClass);\n                    this.iSetTheCursorClass = true;\n                } else if (prevHover && !this.moreProps.hovering && this.iSetTheCursorClass) {\n                    this.iSetTheCursorClass = false;\n                    setCursorClass(null);\n                }\n                const moreProps = this.getMoreProps();\n\n                if (this.moreProps.hovering && !prevHover) {\n                    if (this.props.onHover) {\n                        this.props.onHover(e, moreProps);\n                    }\n                }\n                if (prevHover && !this.moreProps.hovering) {\n                    if (this.props.onUnHover) {\n                        this.props.onUnHover(e, moreProps);\n                    }\n                }\n\n                if (this.props.onMouseMove) {\n                    this.props.onMouseMove(e, moreProps);\n                }\n                break;\n            }\n            case \"dblclick\": {\n                const moreProps = this.getMoreProps();\n\n                if (this.props.onDoubleClick) {\n                    this.props.onDoubleClick(e, moreProps);\n                }\n                if (this.moreProps.hovering && this.props.onDoubleClickWhenHover) {\n                    this.props.onDoubleClickWhenHover(e, moreProps);\n                }\n                break;\n            }\n            case \"pan\": {\n                this.moreProps.hovering = false;\n                if (this.props.onPan) {\n                    this.props.onPan(e, this.getMoreProps());\n                }\n                break;\n            }\n            case \"panend\": {\n                if (this.props.onPanEnd) {\n                    this.props.onPanEnd(e, this.getMoreProps());\n                }\n                break;\n            }\n            case \"dragstart\": {\n                if (this.getPanConditions().draggable) {\n                    const { amIOnTop } = this.context;\n                    if (amIOnTop(this.subscriberId)) {\n                        this.dragInProgress = true;\n                        if (this.props.onDragStart !== undefined) {\n                            this.props.onDragStart(e, this.getMoreProps());\n                        }\n                    }\n                }\n                break;\n            }\n            case \"drag\": {\n                if (this.dragInProgress && this.props.onDrag) {\n                    this.props.onDrag(e, this.getMoreProps());\n                }\n                break;\n            }\n            case \"dragend\": {\n                if (this.dragInProgress && this.props.onDragComplete) {\n                    this.props.onDragComplete(e, this.getMoreProps());\n                }\n                this.dragInProgress = false;\n                break;\n            }\n            case \"dragcancel\": {\n                if (this.dragInProgress || this.iSetTheCursorClass) {\n                    const { setCursorClass } = this.context;\n                    setCursorClass(null);\n                }\n                break;\n            }\n        }\n    }\n\n    public isHover(e: React.MouseEvent) {\n        const { isHover } = this.props;\n        if (isHover === undefined) {\n            return false;\n        }\n\n        return isHover(this.getMoreProps(), e);\n    }\n\n    public getPanConditions() {\n        const draggable =\n            !!(this.props.selected && this.moreProps.hovering) ||\n            (this.props.enableDragOnHover && this.moreProps.hovering);\n\n        return {\n            draggable,\n            panEnabled: !this.props.disablePan,\n        };\n    }\n\n    public draw({ trigger, force = false }: { force: boolean; trigger: string }) {\n        const type = aliases[trigger] || trigger;\n        const proceed = this.props.drawOn.indexOf(type) > -1;\n\n        if (proceed || this.props.selected /* this is to draw as soon as you select */ || force) {\n            const { canvasDraw } = this.props;\n            if (canvasDraw === undefined) {\n                const { updateCount } = this.state;\n                this.setState({\n                    updateCount: updateCount + 1,\n                });\n            } else {\n                this.drawOnCanvas();\n            }\n        }\n    }\n\n    public UNSAFE_componentWillMount() {\n        const { subscribe, chartId } = this.context;\n        const { clip, edgeClip } = this.props;\n\n        subscribe(this.subscriberId, {\n            chartId,\n            clip,\n            edgeClip,\n            listener: this.listener,\n            draw: this.draw,\n            getPanConditions: this.getPanConditions,\n        });\n\n        this.UNSAFE_componentWillReceiveProps(this.props, this.context);\n    }\n\n    public componentWillUnmount() {\n        const { unsubscribe } = this.context;\n        unsubscribe(this.subscriberId);\n        if (this.iSetTheCursorClass) {\n            const { setCursorClass } = this.context;\n            setCursorClass(null);\n        }\n    }\n\n    public componentDidMount() {\n        this.componentDidUpdate(this.props);\n    }\n\n    public componentDidUpdate(prevProps: GenericComponentProps) {\n        const { canvasDraw, selected, interactiveCursorClass } = this.props;\n\n        if (prevProps.selected !== selected) {\n            const { setCursorClass } = this.context;\n            if (selected && this.moreProps.hovering) {\n                this.iSetTheCursorClass = true;\n                setCursorClass(interactiveCursorClass);\n            } else {\n                this.iSetTheCursorClass = false;\n                setCursorClass(null);\n            }\n        }\n        if (canvasDraw !== undefined && !this.evaluationInProgress) {\n            this.updateMoreProps(this.moreProps);\n            this.drawOnCanvas();\n        }\n    }\n\n    public UNSAFE_componentWillReceiveProps(nextProps: GenericComponentProps, nextContext: any) {\n        const { xScale, plotData, chartConfig, getMutableState } = nextContext;\n\n        this.moreProps = {\n            ...this.moreProps,\n            ...getMutableState(),\n            /*\n\t\t\t^ this is so\n\t\t\tmouseXY, currentCharts, currentItem are available to\n\t\t\tnewly created components like MouseHoverText which\n\t\t\tis created right after a new interactive object is drawn\n\t\t\t*/\n            xScale,\n            plotData,\n            chartConfig,\n        };\n    }\n\n    public getMoreProps() {\n        const { xScale, plotData, chartConfigs, morePropsDecorator, xAccessor, displayXAccessor, width, height } =\n            this.context;\n\n        const { chartId, fullData } = this.context;\n\n        const moreProps = {\n            xScale,\n            plotData,\n            chartConfigs,\n            xAccessor,\n            displayXAccessor,\n            width,\n            height,\n            chartId,\n            fullData,\n            ...this.moreProps,\n        };\n\n        return (morePropsDecorator || identity)(moreProps);\n    }\n\n    public preCanvasDraw(ctx: CanvasRenderingContext2D, moreProps: any) {\n        // do nothing\n    }\n\n    public postCanvasDraw(ctx: CanvasRenderingContext2D, moreProps: any) {\n        // empty\n    }\n\n    public drawOnCanvas() {\n        const { canvasDraw, canvasToDraw } = this.props;\n        if (canvasDraw === undefined || canvasToDraw === undefined) {\n            return;\n        }\n\n        const { getCanvasContexts } = this.context;\n\n        const moreProps = this.getMoreProps();\n\n        const contexts = getCanvasContexts!()!;\n\n        const ctx = canvasToDraw(contexts);\n        if (ctx !== undefined) {\n            this.preCanvasDraw(ctx, moreProps);\n            canvasDraw(ctx, moreProps);\n            this.postCanvasDraw(ctx, moreProps);\n        }\n    }\n\n    public render() {\n        const { canvasDraw, clip, svgDraw } = this.props;\n        if (canvasDraw !== undefined || svgDraw === undefined) {\n            return null;\n        }\n\n        const { chartId } = this.context;\n\n        const suffix = chartId !== undefined ? \"-\" + chartId : \"\";\n\n        const style = clip ? { clipPath: `url(#chart-area-clip${suffix})` } : undefined;\n\n        return <g style={style}>{svgDraw(this.getMoreProps())}</g>;\n    }\n}\n\nGenericComponent.contextType = ChartCanvasContext;\n\nexport const getAxisCanvas = (contexts: ICanvasContexts) => {\n    return contexts.axes;\n};\n\nexport const getMouseCanvas = (contexts: ICanvasContexts) => {\n    return contexts.mouseCoord;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}