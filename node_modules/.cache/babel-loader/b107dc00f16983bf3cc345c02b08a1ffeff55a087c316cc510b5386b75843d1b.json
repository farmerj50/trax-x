{"ast":null,"code":"import { path, slidingWindow } from \"../utils\";\nimport { ForceIndex as defaultOptions } from \"./defaultOptionsForComputation\";\nexport default function () {\n  let options = defaultOptions;\n  const calculator = data => {\n    const {\n      sourcePath,\n      volumePath\n    } = options;\n    const source = path(sourcePath);\n    const volume = path(volumePath);\n    const forceIndexCalulator = slidingWindow().windowSize(2).accumulator(([prev, curr]) => (source(curr) - source(prev)) * volume(curr));\n    const forceIndex = forceIndexCalulator(data);\n    return forceIndex;\n  };\n  calculator.undefinedLength = () => {\n    return 2;\n  };\n  calculator.options = newOptions => {\n    if (newOptions === undefined) {\n      return options;\n    }\n    options = Object.assign(Object.assign({}, defaultOptions), newOptions);\n    return calculator;\n  };\n  return calculator;\n}","map":{"version":3,"names":["path","slidingWindow","ForceIndex","defaultOptions","options","calculator","data","sourcePath","volumePath","source","volume","forceIndexCalulator","windowSize","accumulator","prev","curr","forceIndex","undefinedLength","newOptions","undefined","Object","assign"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\indicators\\src\\calculator\\forceIndex.ts"],"sourcesContent":["import { path, slidingWindow } from \"../utils\";\nimport { ForceIndex as defaultOptions } from \"./defaultOptionsForComputation\";\n\nexport interface ForceIndexOptions {\n    readonly sourcePath: string;\n    readonly volumePath: string;\n}\n\nexport default function () {\n    let options = defaultOptions;\n\n    const calculator = (data: any[]) => {\n        const { sourcePath, volumePath } = options;\n\n        const source = path(sourcePath);\n\n        const volume = path(volumePath);\n\n        const forceIndexCalulator = slidingWindow()\n            .windowSize(2)\n            .accumulator(([prev, curr]: any) => (source(curr) - source(prev)) * volume(curr));\n\n        const forceIndex = forceIndexCalulator(data);\n\n        return forceIndex;\n    };\n\n    calculator.undefinedLength = () => {\n        return 2;\n    };\n\n    calculator.options = (newOptions?: ForceIndexOptions) => {\n        if (newOptions === undefined) {\n            return options;\n        }\n\n        options = { ...defaultOptions, ...newOptions };\n\n        return calculator;\n    };\n\n    return calculator;\n}\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,aAAa,QAAQ,UAAU;AAC9C,SAASC,UAAU,IAAIC,cAAc,QAAQ,gCAAgC;AAO7E,eAAc;EACV,IAAIC,OAAO,GAAGD,cAAc;EAE5B,MAAME,UAAU,GAAIC,IAAW,IAAI;IAC/B,MAAM;MAAEC,UAAU;MAAEC;IAAU,CAAE,GAAGJ,OAAO;IAE1C,MAAMK,MAAM,GAAGT,IAAI,CAACO,UAAU,CAAC;IAE/B,MAAMG,MAAM,GAAGV,IAAI,CAACQ,UAAU,CAAC;IAE/B,MAAMG,mBAAmB,GAAGV,aAAa,EAAE,CACtCW,UAAU,CAAC,CAAC,CAAC,CACbC,WAAW,CAAC,CAAC,CAACC,IAAI,EAAEC,IAAI,CAAM,KAAK,CAACN,MAAM,CAACM,IAAI,CAAC,GAAGN,MAAM,CAACK,IAAI,CAAC,IAAIJ,MAAM,CAACK,IAAI,CAAC,CAAC;IAErF,MAAMC,UAAU,GAAGL,mBAAmB,CAACL,IAAI,CAAC;IAE5C,OAAOU,UAAU;EACrB,CAAC;EAEDX,UAAU,CAACY,eAAe,GAAG,MAAK;IAC9B,OAAO,CAAC;EACZ,CAAC;EAEDZ,UAAU,CAACD,OAAO,GAAIc,UAA8B,IAAI;IACpD,IAAIA,UAAU,KAAKC,SAAS,EAAE;MAC1B,OAAOf,OAAO;;IAGlBA,OAAO,GAAAgB,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAQlB,cAAc,GAAKe,UAAU,CAAE;IAE9C,OAAOb,UAAU;EACrB,CAAC;EAED,OAAOA,UAAU;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}