{"ast":null,"code":"import { ChartCanvasContext, first, GenericComponent, getMouseCanvas, getStrokeDasharrayCanvas, last } from \"@react-financial-charts/core\";\nimport * as React from \"react\";\nconst defaultCustomSnapX = (props, moreProps) => {\n  const {\n    xScale,\n    xAccessor,\n    currentItem,\n    mouseXY\n  } = moreProps;\n  const {\n    snapX\n  } = props;\n  const x = snapX ? Math.round(xScale(xAccessor(currentItem))) : mouseXY[0];\n  return x;\n};\nexport class Cursor extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.drawOnCanvas = (ctx, moreProps) => {\n      const cursors = this.getXYCursor(this.props, moreProps);\n      if (cursors === undefined) {\n        return;\n      }\n      const {\n        useXCursorShape\n      } = this.props;\n      const {\n        margin,\n        ratio\n      } = this.context;\n      const originX = 0.5 * ratio + margin.left;\n      const originY = 0.5 * ratio + margin.top;\n      ctx.save();\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.scale(ratio, ratio);\n      ctx.translate(originX, originY);\n      cursors.forEach(line => {\n        if (useXCursorShape && line.isXCursor) {\n          const {\n            xCursorShapeStrokeDasharray\n          } = this.props;\n          if (xCursorShapeStrokeDasharray !== undefined) {\n            const xShapeStrokeStyle = this.getXCursorShapeStroke(moreProps);\n            if (xShapeStrokeStyle !== undefined) {\n              ctx.strokeStyle = xShapeStrokeStyle;\n            }\n            ctx.setLineDash(getStrokeDasharrayCanvas(xCursorShapeStrokeDasharray));\n          }\n          ctx.beginPath();\n          const xShapeFillStyle = this.getXCursorShapeFill(moreProps);\n          if (xShapeFillStyle !== undefined) {\n            ctx.fillStyle = xShapeFillStyle;\n          }\n          ctx.beginPath();\n          const xShape = this.getXCursorShape(moreProps);\n          xCursorShapeStrokeDasharray === undefined ? ctx.fillRect(xShape.xPos, 0, xShape.shapeWidth, xShape.height) : ctx.rect(xShape.xPos, 0, xShape.shapeWidth, xShape.height);\n          ctx.fill();\n        } else {\n          if (line.strokeStyle !== undefined) {\n            ctx.strokeStyle = line.strokeStyle;\n          }\n          const dashArray = getStrokeDasharrayCanvas(line.strokeDasharray);\n          ctx.setLineDash(dashArray);\n          ctx.beginPath();\n          ctx.moveTo(line.x1, line.y1);\n          ctx.lineTo(line.x2, line.y2);\n        }\n        ctx.stroke();\n      });\n      ctx.restore();\n    };\n  }\n  render() {\n    return React.createElement(GenericComponent, {\n      clip: false,\n      canvasDraw: this.drawOnCanvas,\n      canvasToDraw: getMouseCanvas,\n      drawOn: [\"mousemove\", \"pan\", \"drag\"]\n    });\n  }\n  getXCursorShapeStroke({\n    currentItem\n  }) {\n    const {\n      xCursorShapeStrokeStyle\n    } = this.props;\n    return xCursorShapeStrokeStyle instanceof Function ? xCursorShapeStrokeStyle(currentItem) : xCursorShapeStrokeStyle;\n  }\n  getXCursorShapeFill({\n    currentItem\n  }) {\n    const {\n      xCursorShapeFillStyle\n    } = this.props;\n    return xCursorShapeFillStyle instanceof Function ? xCursorShapeFillStyle(currentItem) : xCursorShapeFillStyle;\n  }\n  getXCursorShape(moreProps) {\n    const {\n      height,\n      xScale,\n      currentItem,\n      plotData\n    } = moreProps;\n    const {\n      xAccessor\n    } = moreProps;\n    const xValue = xAccessor(currentItem);\n    const centerX = xScale(xValue);\n    const shapeWidth = Math.abs(xScale(xAccessor(last(plotData))) - xScale(xAccessor(first(plotData)))) / (plotData.length - 1);\n    const xPos = centerX - shapeWidth / 2;\n    return {\n      height,\n      xPos,\n      shapeWidth\n    };\n  }\n  getXYCursor(props, moreProps) {\n    const {\n      mouseXY,\n      currentItem,\n      show,\n      height,\n      width\n    } = moreProps;\n    const {\n      customX = Cursor.defaultProps.customX,\n      strokeStyle,\n      strokeDasharray,\n      disableYCursor\n    } = props;\n    if (!show || currentItem === undefined) {\n      return undefined;\n    }\n    const yCursor = {\n      x1: 0,\n      x2: width,\n      y1: mouseXY[1] + 0.5,\n      y2: mouseXY[1] + 0.5,\n      strokeStyle,\n      strokeDasharray,\n      isXCursor: false\n    };\n    const x = customX(props, moreProps);\n    const xCursor = {\n      x1: x,\n      x2: x,\n      y1: 0,\n      y2: height,\n      strokeStyle,\n      strokeDasharray,\n      isXCursor: true\n    };\n    return disableYCursor ? [xCursor] : [yCursor, xCursor];\n  }\n}\nCursor.defaultProps = {\n  strokeStyle: \"rgba(55, 71, 79, 0.8)\",\n  strokeDasharray: \"ShortDash\",\n  snapX: true,\n  customX: defaultCustomSnapX,\n  disableYCursor: false,\n  useXCursorShape: false,\n  xCursorShapeStrokeStyle: \"rgba(0, 0, 0, 0.5)\"\n};\nCursor.contextType = ChartCanvasContext;","map":{"version":3,"names":["ChartCanvasContext","first","GenericComponent","getMouseCanvas","getStrokeDasharrayCanvas","last","React","defaultCustomSnapX","props","moreProps","xScale","xAccessor","currentItem","mouseXY","snapX","x","Math","round","Cursor","Component","constructor","drawOnCanvas","ctx","cursors","getXYCursor","undefined","useXCursorShape","margin","ratio","context","originX","left","originY","top","save","setTransform","scale","translate","forEach","line","isXCursor","xCursorShapeStrokeDasharray","xShapeStrokeStyle","getXCursorShapeStroke","strokeStyle","setLineDash","beginPath","xShapeFillStyle","getXCursorShapeFill","fillStyle","xShape","getXCursorShape","fillRect","xPos","shapeWidth","height","rect","fill","dashArray","strokeDasharray","moveTo","x1","y1","lineTo","x2","y2","stroke","restore","render","createElement","clip","canvasDraw","canvasToDraw","drawOn","xCursorShapeStrokeStyle","Function","xCursorShapeFillStyle","plotData","xValue","centerX","abs","length","show","width","customX","defaultProps","disableYCursor","yCursor","xCursor","contextType"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\coordinates\\src\\Cursor.tsx"],"sourcesContent":["import {\n    ChartCanvasContext,\n    first,\n    GenericComponent,\n    getMouseCanvas,\n    getStrokeDasharrayCanvas,\n    last,\n    strokeDashTypes,\n} from \"@react-financial-charts/core\";\nimport * as React from \"react\";\n\nexport interface CursorProps {\n    readonly customX?: (props: CursorProps, moreProps: any) => number;\n    readonly disableYCursor?: boolean;\n    readonly snapX?: boolean;\n    readonly strokeDasharray?: strokeDashTypes;\n    readonly strokeStyle?: string;\n    readonly useXCursorShape?: boolean;\n    readonly xCursorShapeFillStyle?: string | ((currentItem: any) => string);\n    readonly xCursorShapeStrokeStyle?: string | ((currentItem: any) => string);\n    readonly xCursorShapeStrokeDasharray?: strokeDashTypes;\n}\n\nconst defaultCustomSnapX = (props: CursorProps, moreProps: any) => {\n    const { xScale, xAccessor, currentItem, mouseXY } = moreProps;\n    const { snapX } = props;\n    const x = snapX ? Math.round(xScale(xAccessor(currentItem))) : mouseXY[0];\n    return x;\n};\n\nexport class Cursor extends React.Component<CursorProps> {\n    public static defaultProps = {\n        strokeStyle: \"rgba(55, 71, 79, 0.8)\",\n        strokeDasharray: \"ShortDash\",\n        snapX: true,\n        customX: defaultCustomSnapX,\n        disableYCursor: false,\n        useXCursorShape: false,\n        xCursorShapeStrokeStyle: \"rgba(0, 0, 0, 0.5)\",\n    };\n\n    public static contextType = ChartCanvasContext;\n\n    public render() {\n        return (\n            <GenericComponent\n                clip={false}\n                canvasDraw={this.drawOnCanvas}\n                canvasToDraw={getMouseCanvas}\n                drawOn={[\"mousemove\", \"pan\", \"drag\"]}\n            />\n        );\n    }\n\n    private getXCursorShapeStroke({ currentItem }: any): string | undefined {\n        const { xCursorShapeStrokeStyle } = this.props;\n\n        return xCursorShapeStrokeStyle instanceof Function\n            ? xCursorShapeStrokeStyle(currentItem)\n            : xCursorShapeStrokeStyle;\n    }\n\n    private getXCursorShapeFill({ currentItem }: any): string | undefined {\n        const { xCursorShapeFillStyle } = this.props;\n\n        return xCursorShapeFillStyle instanceof Function ? xCursorShapeFillStyle(currentItem) : xCursorShapeFillStyle;\n    }\n\n    private getXCursorShape(moreProps: any) {\n        const { height, xScale, currentItem, plotData } = moreProps;\n        const { xAccessor } = moreProps;\n        const xValue = xAccessor(currentItem);\n        const centerX = xScale(xValue);\n        const shapeWidth =\n            Math.abs(xScale(xAccessor(last(plotData))) - xScale(xAccessor(first(plotData)))) / (plotData.length - 1);\n        const xPos = centerX - shapeWidth / 2;\n\n        return { height, xPos, shapeWidth };\n    }\n\n    private getXYCursor(props: CursorProps, moreProps: any) {\n        const { mouseXY, currentItem, show, height, width } = moreProps;\n\n        const { customX = Cursor.defaultProps.customX, strokeStyle, strokeDasharray, disableYCursor } = props;\n\n        if (!show || currentItem === undefined) {\n            return undefined;\n        }\n\n        const yCursor = {\n            x1: 0,\n            x2: width,\n            y1: mouseXY[1] + 0.5,\n            y2: mouseXY[1] + 0.5,\n            strokeStyle,\n            strokeDasharray,\n            isXCursor: false,\n        };\n\n        const x = customX(props, moreProps);\n\n        const xCursor = {\n            x1: x,\n            x2: x,\n            y1: 0,\n            y2: height,\n            strokeStyle,\n            strokeDasharray,\n            isXCursor: true,\n        };\n\n        return disableYCursor ? [xCursor] : [yCursor, xCursor];\n    }\n\n    private readonly drawOnCanvas = (ctx: CanvasRenderingContext2D, moreProps: any) => {\n        const cursors = this.getXYCursor(this.props, moreProps);\n        if (cursors === undefined) {\n            return;\n        }\n\n        const { useXCursorShape } = this.props;\n\n        const { margin, ratio } = this.context;\n\n        const originX = 0.5 * ratio + margin.left;\n        const originY = 0.5 * ratio + margin.top;\n\n        ctx.save();\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.scale(ratio, ratio);\n        ctx.translate(originX, originY);\n\n        cursors.forEach((line) => {\n            if (useXCursorShape && line.isXCursor) {\n                const { xCursorShapeStrokeDasharray } = this.props;\n                if (xCursorShapeStrokeDasharray !== undefined) {\n                    const xShapeStrokeStyle = this.getXCursorShapeStroke(moreProps);\n                    if (xShapeStrokeStyle !== undefined) {\n                        ctx.strokeStyle = xShapeStrokeStyle;\n                    }\n                    ctx.setLineDash(getStrokeDasharrayCanvas(xCursorShapeStrokeDasharray));\n                }\n\n                ctx.beginPath();\n                const xShapeFillStyle = this.getXCursorShapeFill(moreProps);\n                if (xShapeFillStyle !== undefined) {\n                    ctx.fillStyle = xShapeFillStyle;\n                }\n\n                ctx.beginPath();\n\n                const xShape = this.getXCursorShape(moreProps);\n                xCursorShapeStrokeDasharray === undefined\n                    ? ctx.fillRect(xShape.xPos, 0, xShape.shapeWidth, xShape.height)\n                    : ctx.rect(xShape.xPos, 0, xShape.shapeWidth, xShape.height);\n                ctx.fill();\n            } else {\n                if (line.strokeStyle !== undefined) {\n                    ctx.strokeStyle = line.strokeStyle;\n                }\n\n                const dashArray = getStrokeDasharrayCanvas(line.strokeDasharray);\n                ctx.setLineDash(dashArray);\n                ctx.beginPath();\n                ctx.moveTo(line.x1, line.y1);\n                ctx.lineTo(line.x2, line.y2);\n            }\n\n            ctx.stroke();\n        });\n\n        ctx.restore();\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}