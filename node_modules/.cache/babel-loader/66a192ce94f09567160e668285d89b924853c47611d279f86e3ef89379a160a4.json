{"ast":null,"code":"import * as React from \"react\";\nimport { getStrokeDasharrayCanvas, getMouseCanvas, GenericChartComponent } from \"@react-financial-charts/core\";\nexport class Brush extends React.Component {\n  constructor(props) {\n    super(props);\n    this.drawOnCanvas = ctx => {\n      const {\n        rect\n      } = this.state;\n      if (rect === null) {\n        return;\n      }\n      const {\n        x,\n        y,\n        height,\n        width\n      } = rect;\n      const {\n        strokeStyle = Brush.defaultProps.strokeStyle,\n        fillStyle = Brush.defaultProps.fillStyle,\n        strokeDashArray\n      } = this.props;\n      const dashArray = getStrokeDasharrayCanvas(strokeDashArray);\n      ctx.strokeStyle = strokeStyle;\n      ctx.fillStyle = fillStyle;\n      ctx.setLineDash(dashArray);\n      ctx.beginPath();\n      ctx.fillRect(x, y, width, height);\n      ctx.strokeRect(x, y, width, height);\n    };\n    this.handleZoomStart = (_, moreProps) => {\n      this.zoomHappening = false;\n      const {\n        mouseXY: [, mouseY],\n        currentItem,\n        chartConfig: {\n          yScale\n        },\n        xAccessor,\n        xScale\n      } = moreProps;\n      const x1y1 = [xScale(xAccessor(currentItem)), mouseY];\n      this.setState({\n        selected: true,\n        x1y1,\n        start: {\n          item: currentItem,\n          xValue: xAccessor(currentItem),\n          yValue: yScale.invert(mouseY)\n        }\n      });\n    };\n    this.handleDrawSquare = (_, moreProps) => {\n      if (this.state.x1y1 == null) {\n        return;\n      }\n      this.zoomHappening = true;\n      const {\n        mouseXY: [, mouseY],\n        currentItem,\n        chartConfig: {\n          yScale\n        },\n        xAccessor,\n        xScale\n      } = moreProps;\n      const [x2, y2] = [xScale(xAccessor(currentItem)), mouseY];\n      const {\n        x1y1: [x1, y1]\n      } = this.state;\n      const x = Math.min(x1, x2);\n      const y = Math.min(y1, y2);\n      const height = Math.abs(y2 - y1);\n      const width = Math.abs(x2 - x1);\n      this.setState({\n        selected: true,\n        end: {\n          item: currentItem,\n          xValue: xAccessor(currentItem),\n          yValue: yScale.invert(mouseY)\n        },\n        rect: {\n          x,\n          y,\n          height,\n          width\n        }\n      });\n    };\n    this.handleZoomComplete = (_, moreProps) => {\n      if (this.zoomHappening) {\n        const {\n          onBrush\n        } = this.props;\n        if (onBrush !== undefined) {\n          const {\n            start,\n            end\n          } = this.state;\n          onBrush({\n            start,\n            end\n          }, moreProps);\n        }\n      }\n      this.setState({\n        selected: false,\n        rect: null\n      });\n    };\n    this.terminate = this.terminate.bind(this);\n    this.state = {\n      rect: null\n    };\n  }\n  terminate() {\n    this.zoomHappening = false;\n    this.setState({\n      x1y1: null,\n      start: null,\n      end: null,\n      rect: null\n    });\n  }\n  render() {\n    const {\n      enabled\n    } = this.props;\n    if (!enabled) {\n      return null;\n    }\n    return React.createElement(GenericChartComponent, {\n      disablePan: enabled,\n      canvasToDraw: getMouseCanvas,\n      canvasDraw: this.drawOnCanvas,\n      onMouseDown: this.handleZoomStart,\n      onMouseMove: this.handleDrawSquare,\n      onClick: this.handleZoomComplete,\n      drawOn: [\"mousemove\", \"pan\", \"drag\"]\n    });\n  }\n}\nBrush.defaultProps = {\n  type: \"2D\",\n  strokeStyle: \"#000000\",\n  fillStyle: \"#3h3h3h\",\n  strokeDashArray: \"ShortDash\"\n};","map":{"version":3,"names":["React","getStrokeDasharrayCanvas","getMouseCanvas","GenericChartComponent","Brush","Component","constructor","props","drawOnCanvas","ctx","rect","state","x","y","height","width","strokeStyle","defaultProps","fillStyle","strokeDashArray","dashArray","setLineDash","beginPath","fillRect","strokeRect","handleZoomStart","_","moreProps","zoomHappening","mouseXY","mouseY","currentItem","chartConfig","yScale","xAccessor","xScale","x1y1","setState","selected","start","item","xValue","yValue","invert","handleDrawSquare","x2","y2","x1","y1","Math","min","abs","end","handleZoomComplete","onBrush","undefined","terminate","bind","render","enabled","createElement","disablePan","canvasToDraw","canvasDraw","onMouseDown","onMouseMove","onClick","drawOn","type"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\interactive\\src\\Brush.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n    getStrokeDasharrayCanvas,\n    getMouseCanvas,\n    GenericChartComponent,\n    strokeDashTypes,\n} from \"@react-financial-charts/core\";\n\ninterface BrushProps {\n    readonly enabled: boolean;\n    readonly onBrush: ({ start, end }: any, moreProps: any) => void;\n    readonly type?: \"1D\" | \"2D\";\n    readonly strokeStyle?: string;\n    readonly fillStyle?: string;\n    readonly interactiveState: object;\n    readonly strokeDashArray?: strokeDashTypes;\n}\n\ninterface BrushState {\n    end?: any;\n    rect: any | null;\n    selected?: boolean;\n    start?: any;\n    x1y1?: any;\n}\n\nexport class Brush extends React.Component<BrushProps, BrushState> {\n    public static defaultProps = {\n        type: \"2D\",\n        strokeStyle: \"#000000\",\n        fillStyle: \"#3h3h3h\",\n        strokeDashArray: \"ShortDash\",\n    };\n\n    private zoomHappening?: boolean;\n\n    public constructor(props: BrushProps) {\n        super(props);\n\n        this.terminate = this.terminate.bind(this);\n        this.state = {\n            rect: null,\n        };\n    }\n\n    public terminate() {\n        this.zoomHappening = false;\n        this.setState({\n            x1y1: null,\n            start: null,\n            end: null,\n            rect: null,\n        });\n    }\n\n    public render() {\n        const { enabled } = this.props;\n        if (!enabled) {\n            return null;\n        }\n\n        return (\n            <GenericChartComponent\n                disablePan={enabled}\n                canvasToDraw={getMouseCanvas}\n                canvasDraw={this.drawOnCanvas}\n                onMouseDown={this.handleZoomStart}\n                onMouseMove={this.handleDrawSquare}\n                onClick={this.handleZoomComplete}\n                drawOn={[\"mousemove\", \"pan\", \"drag\"]}\n            />\n        );\n    }\n\n    private readonly drawOnCanvas = (ctx: CanvasRenderingContext2D) => {\n        const { rect } = this.state;\n        if (rect === null) {\n            return;\n        }\n\n        const { x, y, height, width } = rect;\n        const {\n            strokeStyle = Brush.defaultProps.strokeStyle,\n            fillStyle = Brush.defaultProps.fillStyle,\n            strokeDashArray,\n        } = this.props;\n\n        const dashArray = getStrokeDasharrayCanvas(strokeDashArray);\n\n        ctx.strokeStyle = strokeStyle;\n        ctx.fillStyle = fillStyle;\n        ctx.setLineDash(dashArray);\n        ctx.beginPath();\n        ctx.fillRect(x, y, width, height);\n        ctx.strokeRect(x, y, width, height);\n    };\n\n    private readonly handleZoomStart = (_: React.MouseEvent, moreProps: any) => {\n        this.zoomHappening = false;\n        const {\n            mouseXY: [, mouseY],\n            currentItem,\n            chartConfig: { yScale },\n            xAccessor,\n            xScale,\n        } = moreProps;\n\n        const x1y1 = [xScale(xAccessor(currentItem)), mouseY];\n\n        this.setState({\n            selected: true,\n            x1y1,\n            start: {\n                item: currentItem,\n                xValue: xAccessor(currentItem),\n                yValue: yScale.invert(mouseY),\n            },\n        });\n    };\n\n    private readonly handleDrawSquare = (_: React.MouseEvent, moreProps: any) => {\n        if (this.state.x1y1 == null) {\n            return;\n        }\n\n        this.zoomHappening = true;\n\n        const {\n            mouseXY: [, mouseY],\n            currentItem,\n            chartConfig: { yScale },\n            xAccessor,\n            xScale,\n        } = moreProps;\n\n        const [x2, y2] = [xScale(xAccessor(currentItem)), mouseY];\n\n        const {\n            x1y1: [x1, y1],\n        } = this.state;\n\n        const x = Math.min(x1, x2);\n        const y = Math.min(y1, y2);\n        const height = Math.abs(y2 - y1);\n        const width = Math.abs(x2 - x1);\n\n        this.setState({\n            selected: true,\n            end: {\n                item: currentItem,\n                xValue: xAccessor(currentItem),\n                yValue: yScale.invert(mouseY),\n            },\n            rect: {\n                x,\n                y,\n                height,\n                width,\n            },\n        });\n    };\n\n    private readonly handleZoomComplete = (_: React.MouseEvent, moreProps: any) => {\n        if (this.zoomHappening) {\n            const { onBrush } = this.props;\n            if (onBrush !== undefined) {\n                const { start, end } = this.state;\n                onBrush({ start, end }, moreProps);\n            }\n        }\n\n        this.setState({\n            selected: false,\n            rect: null,\n        });\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}