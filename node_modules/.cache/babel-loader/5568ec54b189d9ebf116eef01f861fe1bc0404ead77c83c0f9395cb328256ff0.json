{"ast":null,"code":"import { slidingWindow } from \"../utils\";\nimport { Change as defaultOptions } from \"./defaultOptionsForComputation\";\nexport default function () {\n  let options = defaultOptions;\n  const calculator = data => {\n    const {\n      sourcePath\n    } = options;\n    const algo = slidingWindow().windowSize(2).sourcePath(sourcePath).accumulator(([prev, curr]) => {\n      const absoluteChange = curr - prev;\n      const percentChange = absoluteChange * 100 / prev;\n      return {\n        absoluteChange,\n        percentChange\n      };\n    });\n    const newData = algo(data);\n    return newData;\n  };\n  calculator.undefinedLength = () => {\n    return 1;\n  };\n  calculator.options = newOptions => {\n    if (newOptions === undefined) {\n      return options;\n    }\n    options = Object.assign(Object.assign({}, defaultOptions), newOptions);\n    return calculator;\n  };\n  return calculator;\n}","map":{"version":3,"names":["slidingWindow","Change","defaultOptions","options","calculator","data","sourcePath","algo","windowSize","accumulator","prev","curr","absoluteChange","percentChange","newData","undefinedLength","newOptions","undefined","Object","assign"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\indicators\\src\\calculator\\change.ts"],"sourcesContent":["import { slidingWindow } from \"../utils\";\nimport { Change as defaultOptions } from \"./defaultOptionsForComputation\";\n\nexport interface ChangeOptions {\n    readonly sourcePath: string;\n    readonly basePath: string;\n    readonly mainKeys: string[];\n    readonly compareKeys: string[];\n}\n\ninterface ChangeCalculator {\n    (data: any[]): any;\n    undefinedLength(): number;\n    options(): ChangeOptions;\n    options(newOptions: ChangeOptions): ChangeCalculator;\n}\n\nexport default function () {\n    let options: ChangeOptions = defaultOptions;\n\n    const calculator = (data: any[]) => {\n        const { sourcePath } = options;\n\n        const algo = slidingWindow()\n            .windowSize(2)\n            .sourcePath(sourcePath)\n            .accumulator(([prev, curr]: any) => {\n                const absoluteChange = curr - prev;\n                const percentChange = (absoluteChange * 100) / prev;\n                return { absoluteChange, percentChange };\n            });\n\n        const newData = algo(data);\n\n        return newData;\n    };\n\n    calculator.undefinedLength = () => {\n        return 1;\n    };\n\n    calculator.options = (newOptions?: ChangeOptions) => {\n        if (newOptions === undefined) {\n            return options;\n        }\n\n        options = { ...defaultOptions, ...newOptions };\n\n        return calculator;\n    };\n\n    return calculator as ChangeCalculator;\n}\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,UAAU;AACxC,SAASC,MAAM,IAAIC,cAAc,QAAQ,gCAAgC;AAgBzE,eAAc;EACV,IAAIC,OAAO,GAAkBD,cAAc;EAE3C,MAAME,UAAU,GAAIC,IAAW,IAAI;IAC/B,MAAM;MAAEC;IAAU,CAAE,GAAGH,OAAO;IAE9B,MAAMI,IAAI,GAAGP,aAAa,EAAE,CACvBQ,UAAU,CAAC,CAAC,CAAC,CACbF,UAAU,CAACA,UAAU,CAAC,CACtBG,WAAW,CAAC,CAAC,CAACC,IAAI,EAAEC,IAAI,CAAM,KAAI;MAC/B,MAAMC,cAAc,GAAGD,IAAI,GAAGD,IAAI;MAClC,MAAMG,aAAa,GAAID,cAAc,GAAG,GAAG,GAAIF,IAAI;MACnD,OAAO;QAAEE,cAAc;QAAEC;MAAa,CAAE;IAC5C,CAAC,CAAC;IAEN,MAAMC,OAAO,GAAGP,IAAI,CAACF,IAAI,CAAC;IAE1B,OAAOS,OAAO;EAClB,CAAC;EAEDV,UAAU,CAACW,eAAe,GAAG,MAAK;IAC9B,OAAO,CAAC;EACZ,CAAC;EAEDX,UAAU,CAACD,OAAO,GAAIa,UAA0B,IAAI;IAChD,IAAIA,UAAU,KAAKC,SAAS,EAAE;MAC1B,OAAOd,OAAO;;IAGlBA,OAAO,GAAAe,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAQjB,cAAc,GAAKc,UAAU,CAAE;IAE9C,OAAOZ,UAAU;EACrB,CAAC;EAED,OAAOA,UAA8B;AACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}