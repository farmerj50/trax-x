{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabby\\\\trax-x\\\\src\\\\components\\\\StocksPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport StockTracker from \"./StockTracker\"; // Live Stock Tracker Component\nimport io from \"socket.io-client\";\nimport \"./StocksPage.css\";\nimport { StockChartComponent, StockChartSeriesCollectionDirective, StockChartSeriesDirective, AnnotationsDirective, AnnotationDirective, Inject, DateTime, Tooltip, RangeTooltip, Crosshair, LineSeries, CandleSeries, Legend, Export, EmaIndicator, TmaIndicator, SmaIndicator, MomentumIndicator, AtrIndicator, AccumulationDistributionIndicator, BollingerBands, MacdIndicator, StochasticIndicator, RsiIndicator } from \"@syncfusion/ej2-react-charts\";\n\n// Initialize WebSocket connection\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nconst StocksPage = () => {\n  _s();\n  const [ticker, setTicker] = useState(\"\");\n  const [selectedTicker, setSelectedTicker] = useState(\"AAPL\");\n  const [chartData, setChartData] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [recommendations, setRecommendations] = useState([]);\n  const [scannedStocks, setScannedStocks] = useState([]); // For scanned stock data\n\n  const periods = [{\n    intervalType: \"Months\",\n    interval: 1,\n    text: \"1M\"\n  }, {\n    intervalType: \"Months\",\n    interval: 3,\n    text: \"3M\"\n  }, {\n    intervalType: \"Months\",\n    interval: 6,\n    text: \"6M\"\n  }, {\n    intervalType: \"Years\",\n    interval: 1,\n    text: \"YTD\"\n  }, {\n    intervalType: \"Years\",\n    interval: 3,\n    text: \"All\"\n  }];\n\n  // Fetch historical chart data\n  const fetchChartData = async tickerSymbol => {\n    setLoading(true);\n    try {\n      const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${tickerSymbol}`);\n      if (!response.ok) throw new Error(\"Failed to fetch chart data.\");\n      const data = await response.json();\n      if (data && data.dates) {\n        const formattedData = data.dates.map((date, index) => ({\n          x: new Date(date),\n          open: data.open[index],\n          high: data.high[index],\n          low: data.low[index],\n          close: data.close[index]\n        }));\n        setChartData(formattedData);\n        setError(\"\");\n      } else {\n        setChartData([]);\n        setError(\"No data available for the selected ticker.\");\n      }\n    } catch (err) {\n      console.error(\"Error fetching chart data:\", err);\n      setChartData([]);\n      setError(err.message || \"Failed to load chart data.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch scanned stock data\n  useEffect(() => {\n    fetch(\"/api/scan-stocks\").then(res => {\n      if (!res.ok) throw new Error(\"Failed to fetch scanned stocks.\");\n      return res.json();\n    }).then(data => {\n      console.log(\"Scanned stocks data:\", data);\n      setScannedStocks(data.candidates || []);\n    }).catch(err => {\n      console.error(\"Error fetching scanned stocks:\", err);\n      setScannedStocks([]);\n    });\n  }, []);\n  useEffect(() => {\n    fetchChartData(selectedTicker);\n  }, [selectedTicker]);\n\n  // WebSocket Listener for Real-Time Updates\n  useEffect(() => {\n    const handleStockUpdate = data => {\n      console.log(\"Real-time data:\", data);\n      if (data && data.price && data.timestamp) {\n        setChartData(prevData => [...prevData, {\n          x: new Date(data.timestamp),\n          open: data.price,\n          high: data.price,\n          low: data.price,\n          close: data.price\n        }]);\n        setRecommendations(prev => [...prev, {\n          timestamp: data.timestamp,\n          recommendation: data.recommendation || \"Hold\"\n        }]);\n      } else {\n        console.warn(\"Invalid WebSocket data received:\", data);\n      }\n    };\n    socket.emit(\"track_stock\", {\n      ticker: selectedTicker\n    });\n    socket.on(\"stock_update\", handleStockUpdate);\n    return () => {\n      socket.off(\"stock_update\", handleStockUpdate);\n    };\n  }, [selectedTicker]);\n  const handleSearch = () => {\n    if (ticker.trim() !== \"\") {\n      setSelectedTicker(ticker.toUpperCase());\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stocks-page\",\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-header\",\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\",\n          fontSize: \"24px\"\n        },\n        children: [selectedTicker, \" Stock Analysis\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"realtime-stock-tracker\",\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Real-Time Stock Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StockTracker, {\n        ticker: selectedTicker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-stock\",\n      style: {\n        marginBottom: \"20px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter stock ticker (e.g., AAPL)\",\n        value: ticker,\n        onChange: e => setTicker(e.target.value),\n        style: {\n          padding: \"10px\",\n          fontSize: \"16px\",\n          borderRadius: \"5px\",\n          border: \"1px solid #ccc\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        style: {\n          padding: \"10px 20px\",\n          fontSize: \"16px\",\n          borderRadius: \"5px\",\n          backgroundColor: \"#007bff\",\n          color: \"#fff\",\n          border: \"none\",\n          cursor: \"pointer\"\n        },\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chart-container\",\n      style: {\n        width: \"100%\",\n        height: \"600px\",\n        backgroundColor: \"#fff\",\n        borderRadius: \"8px\",\n        padding: \"10px\"\n      },\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\",\n          color: \"gray\"\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\",\n          textAlign: \"center\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this) : chartData && chartData.length > 0 ? /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n        children: /*#__PURE__*/_jsxDEV(StockChartComponent, {\n          id: \"stockchart\",\n          enableSelector: true,\n          primaryXAxis: {\n            valueType: \"DateTime\",\n            labelFormat: \"MMM dd\",\n            majorGridLines: {\n              width: 0\n            },\n            intervalType: \"Days\",\n            crosshairTooltip: {\n              enable: true\n            }\n          },\n          primaryYAxis: {\n            labelFormat: \"${value}\",\n            majorGridLines: {\n              width: 0\n            },\n            rangePadding: \"None\",\n            crosshairTooltip: {\n              enable: true\n            }\n          },\n          tooltip: {\n            enable: true\n          },\n          crosshair: {\n            enable: true\n          },\n          periods: periods,\n          title: `${selectedTicker} Stock Analysis`,\n          height: \"100%\",\n          width: \"100%\",\n          children: [/*#__PURE__*/_jsxDEV(Inject, {\n            services: [DateTime, Tooltip, RangeTooltip, Crosshair, LineSeries, CandleSeries, Legend, Export, EmaIndicator, TmaIndicator, SmaIndicator, MomentumIndicator, AtrIndicator, AccumulationDistributionIndicator, BollingerBands, MacdIndicator, StochasticIndicator, RsiIndicator]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StockChartSeriesCollectionDirective, {\n            children: /*#__PURE__*/_jsxDEV(StockChartSeriesDirective, {\n              dataSource: chartData,\n              xName: \"x\",\n              open: \"open\",\n              high: \"high\",\n              low: \"low\",\n              close: \"close\",\n              type: \"Candle\",\n              animation: {\n                enable: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AnnotationsDirective, {\n            children: recommendations.map((rec, index) => {\n              var _chartData;\n              return /*#__PURE__*/_jsxDEV(AnnotationDirective, {\n                content: `<div>${rec.recommendation}</div>`,\n                x: new Date(rec.timestamp),\n                y: ((_chartData = chartData[chartData.length - 1]) === null || _chartData === void 0 ? void 0 : _chartData.close) || 0\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\",\n          color: \"gray\"\n        },\n        children: \"No data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scanned-stocks\",\n      style: {\n        marginTop: \"20px\",\n        padding: \"10px\",\n        backgroundColor: \"#f9f9f9\",\n        borderRadius: \"8px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Scanned Stocks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), scannedStocks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No stocks found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: scannedStocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: stock.ticker\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 17\n          }, this), \" - Close Price: $\", stock.c]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(StocksPage, \"aEFgZJ4dP7Sm4b/6HOOp9NyfTeM=\");\n_c = StocksPage;\nexport default StocksPage;\nvar _c;\n$RefreshReg$(_c, \"StocksPage\");","map":{"version":3,"names":["React","useState","useEffect","ErrorBoundary","StockTracker","io","StockChartComponent","StockChartSeriesCollectionDirective","StockChartSeriesDirective","AnnotationsDirective","AnnotationDirective","Inject","DateTime","Tooltip","RangeTooltip","Crosshair","LineSeries","CandleSeries","Legend","Export","EmaIndicator","TmaIndicator","SmaIndicator","MomentumIndicator","AtrIndicator","AccumulationDistributionIndicator","BollingerBands","MacdIndicator","StochasticIndicator","RsiIndicator","jsxDEV","_jsxDEV","socket","StocksPage","_s","ticker","setTicker","selectedTicker","setSelectedTicker","chartData","setChartData","error","setError","loading","setLoading","recommendations","setRecommendations","scannedStocks","setScannedStocks","periods","intervalType","interval","text","fetchChartData","tickerSymbol","response","fetch","ok","Error","data","json","dates","formattedData","map","date","index","x","Date","open","high","low","close","err","console","message","then","res","log","candidates","catch","handleStockUpdate","price","timestamp","prevData","prev","recommendation","warn","emit","on","off","handleSearch","trim","toUpperCase","className","style","padding","children","marginBottom","textAlign","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","gap","type","placeholder","value","onChange","e","target","borderRadius","border","onClick","backgroundColor","color","cursor","id","width","height","length","enableSelector","primaryXAxis","valueType","labelFormat","majorGridLines","crosshairTooltip","enable","primaryYAxis","rangePadding","tooltip","crosshair","title","services","dataSource","xName","animation","rec","_chartData","content","y","marginTop","stock","c","_c","$RefreshReg$"],"sources":["C:/Users/gabby/trax-x/src/components/StocksPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ErrorBoundary from \"./ErrorBoundary\";\r\nimport StockTracker from \"./StockTracker\"; // Live Stock Tracker Component\r\nimport io from \"socket.io-client\";\r\nimport \"./StocksPage.css\";\r\n\r\nimport {\r\n  StockChartComponent,\r\n  StockChartSeriesCollectionDirective,\r\n  StockChartSeriesDirective,\r\n  AnnotationsDirective,\r\n  AnnotationDirective,\r\n  Inject,\r\n  DateTime,\r\n  Tooltip,\r\n  RangeTooltip,\r\n  Crosshair,\r\n  LineSeries,\r\n  CandleSeries,\r\n  Legend,\r\n  Export,\r\n  EmaIndicator,\r\n  TmaIndicator,\r\n  SmaIndicator,\r\n  MomentumIndicator,\r\n  AtrIndicator,\r\n  AccumulationDistributionIndicator,\r\n  BollingerBands,\r\n  MacdIndicator,\r\n  StochasticIndicator,\r\n  RsiIndicator,\r\n} from \"@syncfusion/ej2-react-charts\";\r\n\r\n// Initialize WebSocket connection\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nconst StocksPage = () => {\r\n  const [ticker, setTicker] = useState(\"\");\r\n  const [selectedTicker, setSelectedTicker] = useState(\"AAPL\");\r\n  const [chartData, setChartData] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [recommendations, setRecommendations] = useState([]);\r\n  const [scannedStocks, setScannedStocks] = useState([]); // For scanned stock data\r\n\r\n  const periods = [\r\n    { intervalType: \"Months\", interval: 1, text: \"1M\" },\r\n    { intervalType: \"Months\", interval: 3, text: \"3M\" },\r\n    { intervalType: \"Months\", interval: 6, text: \"6M\" },\r\n    { intervalType: \"Years\", interval: 1, text: \"YTD\" },\r\n    { intervalType: \"Years\", interval: 3, text: \"All\" },\r\n  ];\r\n\r\n  // Fetch historical chart data\r\n  const fetchChartData = async (tickerSymbol) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/candlestick?ticker=${tickerSymbol}`\r\n      );\r\n      if (!response.ok) throw new Error(\"Failed to fetch chart data.\");\r\n\r\n      const data = await response.json();\r\n      if (data && data.dates) {\r\n        const formattedData = data.dates.map((date, index) => ({\r\n          x: new Date(date),\r\n          open: data.open[index],\r\n          high: data.high[index],\r\n          low: data.low[index],\r\n          close: data.close[index],\r\n        }));\r\n        setChartData(formattedData);\r\n        setError(\"\");\r\n      } else {\r\n        setChartData([]);\r\n        setError(\"No data available for the selected ticker.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching chart data:\", err);\r\n      setChartData([]);\r\n      setError(err.message || \"Failed to load chart data.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch scanned stock data\r\n  useEffect(() => {\r\n    fetch(\"/api/scan-stocks\")\r\n      .then((res) => {\r\n        if (!res.ok) throw new Error(\"Failed to fetch scanned stocks.\");\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(\"Scanned stocks data:\", data);\r\n        setScannedStocks(data.candidates || []);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error fetching scanned stocks:\", err);\r\n        setScannedStocks([]);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchChartData(selectedTicker);\r\n  }, [selectedTicker]);\r\n\r\n  // WebSocket Listener for Real-Time Updates\r\n  useEffect(() => {\r\n    const handleStockUpdate = (data) => {\r\n      console.log(\"Real-time data:\", data);\r\n\r\n      if (data && data.price && data.timestamp) {\r\n        setChartData((prevData) => [\r\n          ...prevData,\r\n          {\r\n            x: new Date(data.timestamp),\r\n            open: data.price,\r\n            high: data.price,\r\n            low: data.price,\r\n            close: data.price,\r\n          },\r\n        ]);\r\n\r\n        setRecommendations((prev) => [\r\n          ...prev,\r\n          { timestamp: data.timestamp, recommendation: data.recommendation || \"Hold\" },\r\n        ]);\r\n      } else {\r\n        console.warn(\"Invalid WebSocket data received:\", data);\r\n      }\r\n    };\r\n\r\n    socket.emit(\"track_stock\", { ticker: selectedTicker });\r\n    socket.on(\"stock_update\", handleStockUpdate);\r\n\r\n    return () => {\r\n      socket.off(\"stock_update\", handleStockUpdate);\r\n    };\r\n  }, [selectedTicker]);\r\n\r\n  const handleSearch = () => {\r\n    if (ticker.trim() !== \"\") {\r\n      setSelectedTicker(ticker.toUpperCase());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"stocks-page\" style={{ padding: \"20px\" }}>\r\n      <div className=\"stock-header\" style={{ marginBottom: \"20px\" }}>\r\n        <h2 style={{ textAlign: \"center\", fontSize: \"24px\" }}>\r\n          {selectedTicker} Stock Analysis\r\n        </h2>\r\n      </div>\r\n\r\n      <div className=\"realtime-stock-tracker\" style={{ marginBottom: \"20px\" }}>\r\n        <h3 style={{ textAlign: \"center\" }}>Real-Time Stock Tracker</h3>\r\n        <StockTracker ticker={selectedTicker} />\r\n      </div>\r\n\r\n      <div\r\n        className=\"search-stock\"\r\n        style={{\r\n          marginBottom: \"20px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          gap: \"10px\",\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter stock ticker (e.g., AAPL)\"\r\n          value={ticker}\r\n          onChange={(e) => setTicker(e.target.value)}\r\n          style={{\r\n            padding: \"10px\",\r\n            fontSize: \"16px\",\r\n            borderRadius: \"5px\",\r\n            border: \"1px solid #ccc\",\r\n          }}\r\n        />\r\n        <button\r\n          onClick={handleSearch}\r\n          style={{\r\n            padding: \"10px 20px\",\r\n            fontSize: \"16px\",\r\n            borderRadius: \"5px\",\r\n            backgroundColor: \"#007bff\",\r\n            color: \"#fff\",\r\n            border: \"none\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        id=\"chart-container\"\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"600px\",\r\n          backgroundColor: \"#fff\",\r\n          borderRadius: \"8px\",\r\n          padding: \"10px\",\r\n        }}\r\n      >\r\n        {loading ? (\r\n          <p style={{ textAlign: \"center\", color: \"gray\" }}>Loading...</p>\r\n        ) : error ? (\r\n          <p style={{ color: \"red\", textAlign: \"center\" }}>{error}</p>\r\n        ) : chartData && chartData.length > 0 ? (\r\n          <ErrorBoundary>\r\n            <StockChartComponent\r\n              id=\"stockchart\"\r\n              enableSelector={true}\r\n              primaryXAxis={{\r\n                valueType: \"DateTime\",\r\n                labelFormat: \"MMM dd\",\r\n                majorGridLines: { width: 0 },\r\n                intervalType: \"Days\",\r\n                crosshairTooltip: { enable: true },\r\n              }}\r\n              primaryYAxis={{\r\n                labelFormat: \"${value}\",\r\n                majorGridLines: { width: 0 },\r\n                rangePadding: \"None\",\r\n                crosshairTooltip: { enable: true },\r\n              }}\r\n              tooltip={{ enable: true }}\r\n              crosshair={{ enable: true }}\r\n              periods={periods}\r\n              title={`${selectedTicker} Stock Analysis`}\r\n              height=\"100%\"\r\n              width=\"100%\"\r\n            >\r\n              <Inject\r\n                services={[\r\n                  DateTime,\r\n                  Tooltip,\r\n                  RangeTooltip,\r\n                  Crosshair,\r\n                  LineSeries,\r\n                  CandleSeries,\r\n                  Legend,\r\n                  Export,\r\n                  EmaIndicator,\r\n                  TmaIndicator,\r\n                  SmaIndicator,\r\n                  MomentumIndicator,\r\n                  AtrIndicator,\r\n                  AccumulationDistributionIndicator,\r\n                  BollingerBands,\r\n                  MacdIndicator,\r\n                  StochasticIndicator,\r\n                  RsiIndicator,\r\n                ]}\r\n              />\r\n              <StockChartSeriesCollectionDirective>\r\n                <StockChartSeriesDirective\r\n                  dataSource={chartData}\r\n                  xName=\"x\"\r\n                  open=\"open\"\r\n                  high=\"high\"\r\n                  low=\"low\"\r\n                  close=\"close\"\r\n                  type=\"Candle\"\r\n                  animation={{ enable: true }}\r\n                />\r\n              </StockChartSeriesCollectionDirective>\r\n              <AnnotationsDirective>\r\n                {recommendations.map((rec, index) => (\r\n                  <AnnotationDirective\r\n                    key={index}\r\n                    content={`<div>${rec.recommendation}</div>`}\r\n                    x={new Date(rec.timestamp)}\r\n                    y={chartData[chartData.length - 1]?.close || 0}\r\n                  />\r\n                ))}\r\n              </AnnotationsDirective>\r\n            </StockChartComponent>\r\n          </ErrorBoundary>\r\n        ) : (\r\n          <p style={{ textAlign: \"center\", color: \"gray\" }}>No data available.</p>\r\n        )}\r\n      </div>\r\n\r\n      <div\r\n        className=\"scanned-stocks\"\r\n        style={{ marginTop: \"20px\", padding: \"10px\", backgroundColor: \"#f9f9f9\", borderRadius: \"8px\" }}\r\n      >\r\n        <h3>Scanned Stocks</h3>\r\n        {scannedStocks.length === 0 ? (\r\n          <p>No stocks found.</p>\r\n        ) : (\r\n          <ul>\r\n            {scannedStocks.map((stock, index) => (\r\n              <li key={index}>\r\n                <strong>{stock.ticker}</strong> - Close Price: ${stock.c}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StocksPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}