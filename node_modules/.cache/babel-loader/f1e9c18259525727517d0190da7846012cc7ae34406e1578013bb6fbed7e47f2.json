{"ast":null,"code":"import { slidingWindow, zipper } from \"@react-financial-charts/core\";\nimport { timeFormat, timeFormatDefaultLocale } from \"d3-time-format\";\nimport financeDiscontinuousScale from \"./financeDiscontinuousScale\";\nimport { defaultFormatters, levelDefinition } from \"./levels\";\nconst evaluateLevel = (row, date, i, formatters) => {\n  return levelDefinition.map((eachLevel, idx) => {\n    return {\n      level: levelDefinition.length - idx - 1,\n      // @ts-ignore\n      format: formatters[eachLevel(row, date, i)]\n    };\n  }).find(level => !!level.format);\n};\nconst discontinuousIndexCalculator = slidingWindow().windowSize(2).undefinedValue((d, idx, {\n  initialIndex,\n  formatters\n}) => {\n  const i = initialIndex;\n  const row = {\n    date: d.getTime(),\n    startOfSecond: false,\n    startOf5Seconds: false,\n    startOf15Seconds: false,\n    startOf30Seconds: false,\n    startOfMinute: false,\n    startOf5Minutes: false,\n    startOf15Minutes: false,\n    startOf30Minutes: false,\n    startOfHour: false,\n    startOfEighthOfADay: false,\n    startOfQuarterDay: false,\n    startOfHalfDay: false,\n    startOfDay: true,\n    startOfWeek: false,\n    startOfMonth: false,\n    startOfQuarter: false,\n    startOfYear: false\n  };\n  const level = evaluateLevel(row, d, i, formatters);\n  return Object.assign(Object.assign(Object.assign({}, row), {\n    index: i\n  }), level);\n});\nconst discontinuousIndexCalculatorLocalTime = discontinuousIndexCalculator.accumulator(([prevDate, nowDate], i, idx, {\n  initialIndex,\n  formatters\n}) => {\n  const nowSeconds = nowDate.getSeconds();\n  const nowMinutes = nowDate.getMinutes();\n  const nowHours = nowDate.getHours();\n  const nowDay = nowDate.getDay();\n  const nowMonth = nowDate.getMonth();\n  const startOfSecond = nowSeconds !== prevDate.getSeconds();\n  const startOf5Seconds = startOfSecond && nowSeconds % 5 === 0;\n  const startOf15Seconds = startOfSecond && nowSeconds % 15 === 0;\n  const startOf30Seconds = startOfSecond && nowSeconds % 30 === 0;\n  const startOfMinute = nowMinutes !== prevDate.getMinutes();\n  const startOf5Minutes = startOfMinute && nowMinutes % 5 <= prevDate.getMinutes() % 5;\n  const startOf15Minutes = startOfMinute && nowMinutes % 15 <= prevDate.getMinutes() % 15;\n  const startOf30Minutes = startOfMinute && nowMinutes % 30 <= prevDate.getMinutes() % 30;\n  const startOfHour = nowHours !== prevDate.getHours();\n  const startOfEighthOfADay = startOfHour && nowHours % 3 === 0;\n  const startOfQuarterDay = startOfHour && nowHours % 6 === 0;\n  const startOfHalfDay = startOfHour && nowHours % 12 === 0;\n  const startOfDay = nowDay !== prevDate.getDay();\n  // According to ISO calendar\n  // Sunday = 0, Monday = 1, ... Saturday = 6\n  // day of week of today < day of week of yesterday then today is start of week\n  const startOfWeek = nowDay < prevDate.getDay();\n  // month of today != month of yesterday then today is start of month\n  const startOfMonth = nowMonth !== prevDate.getMonth();\n  // if start of month and month % 3 === 0 then it is start of quarter\n  const startOfQuarter = startOfMonth && nowMonth % 3 <= prevDate.getMonth() % 3;\n  // year of today != year of yesterday then today is start of year\n  const startOfYear = nowDate.getFullYear() !== prevDate.getFullYear();\n  const row = {\n    date: nowDate.getTime(),\n    startOfSecond,\n    startOf5Seconds,\n    startOf15Seconds,\n    startOf30Seconds,\n    startOfMinute,\n    startOf5Minutes,\n    startOf15Minutes,\n    startOf30Minutes,\n    startOfHour,\n    startOfEighthOfADay,\n    startOfQuarterDay,\n    startOfHalfDay,\n    startOfDay,\n    startOfWeek,\n    startOfMonth,\n    startOfQuarter,\n    startOfYear\n  };\n  const level = evaluateLevel(row, nowDate, i, formatters);\n  return Object.assign(Object.assign(Object.assign({}, row), {\n    index: i + initialIndex\n  }), level);\n});\nfunction createIndex(realDateAccessor, inputDateAccessor, initialIndex, formatters) {\n  return function (data) {\n    const dateAccessor = realDateAccessor(inputDateAccessor);\n    const calculate = discontinuousIndexCalculatorLocalTime.source(dateAccessor).misc({\n      initialIndex,\n      formatters\n    });\n    const index = calculate(data).map(each => {\n      const {\n        format\n      } = each;\n      return {\n        index: each.index,\n        level: each.level,\n        date: new Date(each.date),\n        format: timeFormat(format)\n      };\n    });\n    return {\n      index\n    };\n  };\n}\nexport function discontinuousTimeScaleProviderBuilder() {\n  let initialIndex = 0;\n  let realDateAccessor = d => d;\n  let inputDateAccessor = d => d.date;\n  let indexAccessor = d => d.idx;\n  let indexMutator = (d, idx) => Object.assign(Object.assign({}, d), {\n    idx\n  });\n  let withIndex;\n  let currentFormatters = defaultFormatters;\n  const discontinuousTimeScaleProvider = function (data) {\n    let index = withIndex;\n    if (index === undefined) {\n      const response = createIndex(realDateAccessor, inputDateAccessor, initialIndex, currentFormatters)(data);\n      index = response.index;\n    }\n    const inputIndex = index;\n    const xScale = financeDiscontinuousScale(inputIndex);\n    const mergedData = zipper().combine(indexMutator);\n    const finalData = mergedData(data, inputIndex);\n    return {\n      data: finalData,\n      xScale,\n      xAccessor: d => {\n        var _a;\n        return d && ((_a = indexAccessor(d)) === null || _a === void 0 ? void 0 : _a.index);\n      },\n      displayXAccessor: realDateAccessor(inputDateAccessor)\n    };\n  };\n  discontinuousTimeScaleProvider.initialIndex = function (x) {\n    if (!arguments.length) {\n      return initialIndex;\n    }\n    initialIndex = x;\n    return discontinuousTimeScaleProvider;\n  };\n  discontinuousTimeScaleProvider.inputDateAccessor = function (x) {\n    if (!arguments.length) {\n      return inputDateAccessor;\n    }\n    inputDateAccessor = x;\n    return discontinuousTimeScaleProvider;\n  };\n  discontinuousTimeScaleProvider.indexAccessor = function (x) {\n    if (!arguments.length) {\n      return indexAccessor;\n    }\n    indexAccessor = x;\n    return discontinuousTimeScaleProvider;\n  };\n  discontinuousTimeScaleProvider.indexMutator = function (x) {\n    if (!arguments.length) {\n      return indexMutator;\n    }\n    indexMutator = x;\n    return discontinuousTimeScaleProvider;\n  };\n  discontinuousTimeScaleProvider.withIndex = function (x) {\n    if (!arguments.length) {\n      return withIndex;\n    }\n    withIndex = x;\n    return discontinuousTimeScaleProvider;\n  };\n  discontinuousTimeScaleProvider.utc = () => {\n    realDateAccessor = dateAccessor => d => {\n      const date = dateAccessor(d);\n      // The getTimezoneOffset() method returns the time-zone offset from UTC, in minutes, for the current locale.\n      const offsetInMillis = date.getTimezoneOffset() * 60 * 1000;\n      return new Date(date.getTime() + offsetInMillis);\n    };\n    return discontinuousTimeScaleProvider;\n  };\n  discontinuousTimeScaleProvider.setLocale = (locale, formatters) => {\n    if (locale !== undefined) {\n      timeFormatDefaultLocale(locale);\n    }\n    if (formatters !== undefined) {\n      currentFormatters = formatters;\n    }\n    return discontinuousTimeScaleProvider;\n  };\n  discontinuousTimeScaleProvider.indexCalculator = function () {\n    return createIndex(realDateAccessor, inputDateAccessor, initialIndex, currentFormatters);\n  };\n  return discontinuousTimeScaleProvider;\n}\nexport default discontinuousTimeScaleProviderBuilder();","map":{"version":3,"names":["slidingWindow","zipper","timeFormat","timeFormatDefaultLocale","financeDiscontinuousScale","defaultFormatters","levelDefinition","evaluateLevel","row","date","i","formatters","map","eachLevel","idx","level","length","format","find","discontinuousIndexCalculator","windowSize","undefinedValue","d","initialIndex","getTime","startOfSecond","startOf5Seconds","startOf15Seconds","startOf30Seconds","startOfMinute","startOf5Minutes","startOf15Minutes","startOf30Minutes","startOfHour","startOfEighthOfADay","startOfQuarterDay","startOfHalfDay","startOfDay","startOfWeek","startOfMonth","startOfQuarter","startOfYear","Object","assign","index","discontinuousIndexCalculatorLocalTime","accumulator","prevDate","nowDate","nowSeconds","getSeconds","nowMinutes","getMinutes","nowHours","getHours","nowDay","getDay","nowMonth","getMonth","getFullYear","createIndex","realDateAccessor","inputDateAccessor","data","dateAccessor","calculate","source","misc","each","Date","discontinuousTimeScaleProviderBuilder","indexAccessor","indexMutator","withIndex","currentFormatters","discontinuousTimeScaleProvider","undefined","response","inputIndex","xScale","mergedData","combine","finalData","xAccessor","_a","displayXAccessor","x","arguments","utc","offsetInMillis","getTimezoneOffset","setLocale","locale","indexCalculator"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\scales\\src\\discontinuousTimeScaleProvider.ts"],"sourcesContent":["import { slidingWindow, zipper } from \"@react-financial-charts/core\";\nimport { timeFormat, timeFormatDefaultLocale } from \"d3-time-format\";\nimport financeDiscontinuousScale from \"./financeDiscontinuousScale\";\nimport { defaultFormatters, levelDefinition, IFormatters } from \"./levels\";\n\nconst evaluateLevel = (row: any, date: Date, i: number, formatters: IFormatters) => {\n    return levelDefinition\n        .map((eachLevel, idx) => {\n            return {\n                level: levelDefinition.length - idx - 1,\n\n                // @ts-ignore\n                format: formatters[eachLevel(row, date, i)],\n            };\n        })\n        .find((level) => !!level.format);\n};\n\nconst discontinuousIndexCalculator = slidingWindow()\n    .windowSize(2)\n    .undefinedValue(\n        (d: Date, idx: number, { initialIndex, formatters }: { initialIndex: number; formatters: IFormatters }) => {\n            const i = initialIndex;\n            const row = {\n                date: d.getTime(),\n                startOfSecond: false,\n                startOf5Seconds: false,\n                startOf15Seconds: false,\n                startOf30Seconds: false,\n                startOfMinute: false,\n                startOf5Minutes: false,\n                startOf15Minutes: false,\n                startOf30Minutes: false,\n                startOfHour: false,\n                startOfEighthOfADay: false,\n                startOfQuarterDay: false,\n                startOfHalfDay: false,\n                startOfDay: true,\n                startOfWeek: false,\n                startOfMonth: false,\n                startOfQuarter: false,\n                startOfYear: false,\n            };\n\n            const level = evaluateLevel(row, d, i, formatters);\n\n            return { ...row, index: i, ...level };\n        },\n    );\n\nconst discontinuousIndexCalculatorLocalTime = discontinuousIndexCalculator.accumulator(\n    (\n        [prevDate, nowDate]: [Date, Date],\n        i: number,\n        idx: number,\n        { initialIndex, formatters }: { initialIndex: number; formatters: IFormatters },\n    ) => {\n        const nowSeconds = nowDate.getSeconds();\n        const nowMinutes = nowDate.getMinutes();\n        const nowHours = nowDate.getHours();\n        const nowDay = nowDate.getDay();\n        const nowMonth = nowDate.getMonth();\n\n        const startOfSecond = nowSeconds !== prevDate.getSeconds();\n        const startOf5Seconds = startOfSecond && nowSeconds % 5 === 0;\n        const startOf15Seconds = startOfSecond && nowSeconds % 15 === 0;\n        const startOf30Seconds = startOfSecond && nowSeconds % 30 === 0;\n\n        const startOfMinute = nowMinutes !== prevDate.getMinutes();\n        const startOf5Minutes = startOfMinute && nowMinutes % 5 <= prevDate.getMinutes() % 5;\n        const startOf15Minutes = startOfMinute && nowMinutes % 15 <= prevDate.getMinutes() % 15;\n        const startOf30Minutes = startOfMinute && nowMinutes % 30 <= prevDate.getMinutes() % 30;\n\n        const startOfHour = nowHours !== prevDate.getHours();\n\n        const startOfEighthOfADay = startOfHour && nowHours % 3 === 0;\n        const startOfQuarterDay = startOfHour && nowHours % 6 === 0;\n        const startOfHalfDay = startOfHour && nowHours % 12 === 0;\n\n        const startOfDay = nowDay !== prevDate.getDay();\n        // According to ISO calendar\n        // Sunday = 0, Monday = 1, ... Saturday = 6\n        // day of week of today < day of week of yesterday then today is start of week\n        const startOfWeek = nowDay < prevDate.getDay();\n        // month of today != month of yesterday then today is start of month\n        const startOfMonth = nowMonth !== prevDate.getMonth();\n        // if start of month and month % 3 === 0 then it is start of quarter\n        const startOfQuarter = startOfMonth && nowMonth % 3 <= prevDate.getMonth() % 3;\n        // year of today != year of yesterday then today is start of year\n        const startOfYear = nowDate.getFullYear() !== prevDate.getFullYear();\n\n        const row = {\n            date: nowDate.getTime(),\n            startOfSecond,\n            startOf5Seconds,\n            startOf15Seconds,\n            startOf30Seconds,\n            startOfMinute,\n            startOf5Minutes,\n            startOf15Minutes,\n            startOf30Minutes,\n            startOfHour,\n            startOfEighthOfADay,\n            startOfQuarterDay,\n            startOfHalfDay,\n            startOfDay,\n            startOfWeek,\n            startOfMonth,\n            startOfQuarter,\n            startOfYear,\n        };\n\n        const level = evaluateLevel(row, nowDate, i, formatters);\n\n        return { ...row, index: i + initialIndex, ...level };\n    },\n);\n\nfunction createIndex(realDateAccessor: any, inputDateAccessor: any, initialIndex: number, formatters: IFormatters) {\n    return function (data: any[]) {\n        const dateAccessor = realDateAccessor(inputDateAccessor);\n\n        const calculate = discontinuousIndexCalculatorLocalTime.source(dateAccessor).misc({ initialIndex, formatters });\n\n        const index = calculate(data).map((each) => {\n            const { format } = each;\n            return {\n                index: each.index,\n                level: each.level,\n                date: new Date(each.date),\n                format: timeFormat(format),\n            };\n        });\n\n        return { index };\n    };\n}\n\nexport interface DiscontinuousTimeScaleProviderBuilder {\n    (data: any[]): {\n        data: any[];\n        xScale: any;\n        xAccessor: (data: any) => number;\n        displayXAccessor: (data: any) => number;\n    };\n    initialIndex(): any;\n    initialIndex(x: any): DiscontinuousTimeScaleProviderBuilder;\n    inputDateAccessor(): any;\n    inputDateAccessor(accessor: (data: any) => Date): DiscontinuousTimeScaleProviderBuilder;\n    indexAccessor(): any;\n    indexAccessor(x: any): DiscontinuousTimeScaleProviderBuilder;\n    indexMutator(): any;\n    indexMutator(x: any): DiscontinuousTimeScaleProviderBuilder;\n    withIndex(): any;\n    withIndex(x: any): DiscontinuousTimeScaleProviderBuilder;\n    utc(): DiscontinuousTimeScaleProviderBuilder;\n    setLocale(locale?: any, formatters?: IFormatters): DiscontinuousTimeScaleProviderBuilder;\n    indexCalculator(): any;\n}\n\nexport function discontinuousTimeScaleProviderBuilder() {\n    let initialIndex = 0;\n    let realDateAccessor = (d: any) => d;\n    let inputDateAccessor = (d: any) => d.date;\n    let indexAccessor = (d: any) => d.idx;\n    let indexMutator = (d: any, idx: any) => ({ ...d, idx });\n    let withIndex: any;\n\n    let currentFormatters = defaultFormatters;\n\n    const discontinuousTimeScaleProvider = function (data: any[]) {\n        let index = withIndex;\n\n        if (index === undefined) {\n            const response = createIndex(realDateAccessor, inputDateAccessor, initialIndex, currentFormatters)(data);\n\n            index = response.index;\n        }\n\n        const inputIndex = index;\n\n        const xScale = financeDiscontinuousScale(inputIndex);\n\n        const mergedData = zipper().combine(indexMutator);\n\n        const finalData = mergedData(data, inputIndex);\n\n        return {\n            data: finalData,\n            xScale,\n            xAccessor: (d: any) => d && indexAccessor(d)?.index,\n            displayXAccessor: realDateAccessor(inputDateAccessor),\n        };\n    };\n\n    discontinuousTimeScaleProvider.initialIndex = function (x: any) {\n        if (!arguments.length) {\n            return initialIndex;\n        }\n        initialIndex = x;\n        return discontinuousTimeScaleProvider;\n    };\n    discontinuousTimeScaleProvider.inputDateAccessor = function (x: any) {\n        if (!arguments.length) {\n            return inputDateAccessor;\n        }\n        inputDateAccessor = x;\n        return discontinuousTimeScaleProvider;\n    };\n    discontinuousTimeScaleProvider.indexAccessor = function (x: any) {\n        if (!arguments.length) {\n            return indexAccessor;\n        }\n        indexAccessor = x;\n        return discontinuousTimeScaleProvider;\n    };\n    discontinuousTimeScaleProvider.indexMutator = function (x: any) {\n        if (!arguments.length) {\n            return indexMutator;\n        }\n        indexMutator = x;\n        return discontinuousTimeScaleProvider;\n    };\n    discontinuousTimeScaleProvider.withIndex = function (x: any) {\n        if (!arguments.length) {\n            return withIndex;\n        }\n        withIndex = x;\n        return discontinuousTimeScaleProvider;\n    };\n    discontinuousTimeScaleProvider.utc = () => {\n        realDateAccessor = (dateAccessor) => (d: any) => {\n            const date = dateAccessor(d);\n            // The getTimezoneOffset() method returns the time-zone offset from UTC, in minutes, for the current locale.\n            const offsetInMillis = date.getTimezoneOffset() * 60 * 1000;\n            return new Date(date.getTime() + offsetInMillis);\n        };\n\n        return discontinuousTimeScaleProvider;\n    };\n    discontinuousTimeScaleProvider.setLocale = (locale?: any, formatters?: IFormatters) => {\n        if (locale !== undefined) {\n            timeFormatDefaultLocale(locale);\n        }\n        if (formatters !== undefined) {\n            currentFormatters = formatters;\n        }\n\n        return discontinuousTimeScaleProvider;\n    };\n\n    discontinuousTimeScaleProvider.indexCalculator = function () {\n        return createIndex(realDateAccessor, inputDateAccessor, initialIndex, currentFormatters);\n    };\n\n    return discontinuousTimeScaleProvider as DiscontinuousTimeScaleProviderBuilder;\n}\n\nexport default discontinuousTimeScaleProviderBuilder();\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,MAAM,QAAQ,8BAA8B;AACpE,SAASC,UAAU,EAAEC,uBAAuB,QAAQ,gBAAgB;AACpE,OAAOC,yBAAyB,MAAM,6BAA6B;AACnE,SAASC,iBAAiB,EAAEC,eAAe,QAAqB,UAAU;AAE1E,MAAMC,aAAa,GAAGA,CAACC,GAAQ,EAAEC,IAAU,EAAEC,CAAS,EAAEC,UAAuB,KAAI;EAC/E,OAAOL,eAAe,CACjBM,GAAG,CAAC,CAACC,SAAS,EAAEC,GAAG,KAAI;IACpB,OAAO;MACHC,KAAK,EAAET,eAAe,CAACU,MAAM,GAAGF,GAAG,GAAG,CAAC;MAEvC;MACAG,MAAM,EAAEN,UAAU,CAACE,SAAS,CAACL,GAAG,EAAEC,IAAI,EAAEC,CAAC,CAAC;KAC7C;EACL,CAAC,CAAC,CACDQ,IAAI,CAAEH,KAAK,IAAK,CAAC,CAACA,KAAK,CAACE,MAAM,CAAC;AACxC,CAAC;AAED,MAAME,4BAA4B,GAAGnB,aAAa,EAAE,CAC/CoB,UAAU,CAAC,CAAC,CAAC,CACbC,cAAc,CACX,CAACC,CAAO,EAAER,GAAW,EAAE;EAAES,YAAY;EAAEZ;AAAU,CAAqD,KAAI;EACtG,MAAMD,CAAC,GAAGa,YAAY;EACtB,MAAMf,GAAG,GAAG;IACRC,IAAI,EAAEa,CAAC,CAACE,OAAO,EAAE;IACjBC,aAAa,EAAE,KAAK;IACpBC,eAAe,EAAE,KAAK;IACtBC,gBAAgB,EAAE,KAAK;IACvBC,gBAAgB,EAAE,KAAK;IACvBC,aAAa,EAAE,KAAK;IACpBC,eAAe,EAAE,KAAK;IACtBC,gBAAgB,EAAE,KAAK;IACvBC,gBAAgB,EAAE,KAAK;IACvBC,WAAW,EAAE,KAAK;IAClBC,mBAAmB,EAAE,KAAK;IAC1BC,iBAAiB,EAAE,KAAK;IACxBC,cAAc,EAAE,KAAK;IACrBC,UAAU,EAAE,IAAI;IAChBC,WAAW,EAAE,KAAK;IAClBC,YAAY,EAAE,KAAK;IACnBC,cAAc,EAAE,KAAK;IACrBC,WAAW,EAAE;GAChB;EAED,MAAM1B,KAAK,GAAGR,aAAa,CAACC,GAAG,EAAEc,CAAC,EAAEZ,CAAC,EAAEC,UAAU,CAAC;EAElD,OAAA+B,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAYnC,GAAG;IAAEoC,KAAK,EAAElC;EAAC,IAAKK,KAAK;AACvC,CAAC,CACJ;AAEL,MAAM8B,qCAAqC,GAAG1B,4BAA4B,CAAC2B,WAAW,CAClF,CACI,CAACC,QAAQ,EAAEC,OAAO,CAAe,EACjCtC,CAAS,EACTI,GAAW,EACX;EAAES,YAAY;EAAEZ;AAAU,CAAqD,KAC/E;EACA,MAAMsC,UAAU,GAAGD,OAAO,CAACE,UAAU,EAAE;EACvC,MAAMC,UAAU,GAAGH,OAAO,CAACI,UAAU,EAAE;EACvC,MAAMC,QAAQ,GAAGL,OAAO,CAACM,QAAQ,EAAE;EACnC,MAAMC,MAAM,GAAGP,OAAO,CAACQ,MAAM,EAAE;EAC/B,MAAMC,QAAQ,GAAGT,OAAO,CAACU,QAAQ,EAAE;EAEnC,MAAMjC,aAAa,GAAGwB,UAAU,KAAKF,QAAQ,CAACG,UAAU,EAAE;EAC1D,MAAMxB,eAAe,GAAGD,aAAa,IAAIwB,UAAU,GAAG,CAAC,KAAK,CAAC;EAC7D,MAAMtB,gBAAgB,GAAGF,aAAa,IAAIwB,UAAU,GAAG,EAAE,KAAK,CAAC;EAC/D,MAAMrB,gBAAgB,GAAGH,aAAa,IAAIwB,UAAU,GAAG,EAAE,KAAK,CAAC;EAE/D,MAAMpB,aAAa,GAAGsB,UAAU,KAAKJ,QAAQ,CAACK,UAAU,EAAE;EAC1D,MAAMtB,eAAe,GAAGD,aAAa,IAAIsB,UAAU,GAAG,CAAC,IAAIJ,QAAQ,CAACK,UAAU,EAAE,GAAG,CAAC;EACpF,MAAMrB,gBAAgB,GAAGF,aAAa,IAAIsB,UAAU,GAAG,EAAE,IAAIJ,QAAQ,CAACK,UAAU,EAAE,GAAG,EAAE;EACvF,MAAMpB,gBAAgB,GAAGH,aAAa,IAAIsB,UAAU,GAAG,EAAE,IAAIJ,QAAQ,CAACK,UAAU,EAAE,GAAG,EAAE;EAEvF,MAAMnB,WAAW,GAAGoB,QAAQ,KAAKN,QAAQ,CAACO,QAAQ,EAAE;EAEpD,MAAMpB,mBAAmB,GAAGD,WAAW,IAAIoB,QAAQ,GAAG,CAAC,KAAK,CAAC;EAC7D,MAAMlB,iBAAiB,GAAGF,WAAW,IAAIoB,QAAQ,GAAG,CAAC,KAAK,CAAC;EAC3D,MAAMjB,cAAc,GAAGH,WAAW,IAAIoB,QAAQ,GAAG,EAAE,KAAK,CAAC;EAEzD,MAAMhB,UAAU,GAAGkB,MAAM,KAAKR,QAAQ,CAACS,MAAM,EAAE;EAC/C;EACA;EACA;EACA,MAAMlB,WAAW,GAAGiB,MAAM,GAAGR,QAAQ,CAACS,MAAM,EAAE;EAC9C;EACA,MAAMjB,YAAY,GAAGkB,QAAQ,KAAKV,QAAQ,CAACW,QAAQ,EAAE;EACrD;EACA,MAAMlB,cAAc,GAAGD,YAAY,IAAIkB,QAAQ,GAAG,CAAC,IAAIV,QAAQ,CAACW,QAAQ,EAAE,GAAG,CAAC;EAC9E;EACA,MAAMjB,WAAW,GAAGO,OAAO,CAACW,WAAW,EAAE,KAAKZ,QAAQ,CAACY,WAAW,EAAE;EAEpE,MAAMnD,GAAG,GAAG;IACRC,IAAI,EAAEuC,OAAO,CAACxB,OAAO,EAAE;IACvBC,aAAa;IACbC,eAAe;IACfC,gBAAgB;IAChBC,gBAAgB;IAChBC,aAAa;IACbC,eAAe;IACfC,gBAAgB;IAChBC,gBAAgB;IAChBC,WAAW;IACXC,mBAAmB;IACnBC,iBAAiB;IACjBC,cAAc;IACdC,UAAU;IACVC,WAAW;IACXC,YAAY;IACZC,cAAc;IACdC;GACH;EAED,MAAM1B,KAAK,GAAGR,aAAa,CAACC,GAAG,EAAEwC,OAAO,EAAEtC,CAAC,EAAEC,UAAU,CAAC;EAExD,OAAA+B,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAYnC,GAAG;IAAEoC,KAAK,EAAElC,CAAC,GAAGa;EAAY,IAAKR,KAAK;AACtD,CAAC,CACJ;AAED,SAAS6C,WAAWA,CAACC,gBAAqB,EAAEC,iBAAsB,EAAEvC,YAAoB,EAAEZ,UAAuB;EAC7G,OAAO,UAAUoD,IAAW;IACxB,MAAMC,YAAY,GAAGH,gBAAgB,CAACC,iBAAiB,CAAC;IAExD,MAAMG,SAAS,GAAGpB,qCAAqC,CAACqB,MAAM,CAACF,YAAY,CAAC,CAACG,IAAI,CAAC;MAAE5C,YAAY;MAAEZ;IAAU,CAAE,CAAC;IAE/G,MAAMiC,KAAK,GAAGqB,SAAS,CAACF,IAAI,CAAC,CAACnD,GAAG,CAAEwD,IAAI,IAAI;MACvC,MAAM;QAAEnD;MAAM,CAAE,GAAGmD,IAAI;MACvB,OAAO;QACHxB,KAAK,EAAEwB,IAAI,CAACxB,KAAK;QACjB7B,KAAK,EAAEqD,IAAI,CAACrD,KAAK;QACjBN,IAAI,EAAE,IAAI4D,IAAI,CAACD,IAAI,CAAC3D,IAAI,CAAC;QACzBQ,MAAM,EAAEf,UAAU,CAACe,MAAM;OAC5B;IACL,CAAC,CAAC;IAEF,OAAO;MAAE2B;IAAK,CAAE;EACpB,CAAC;AACL;AAwBA,OAAM,SAAU0B,qCAAqCA,CAAA;EACjD,IAAI/C,YAAY,GAAG,CAAC;EACpB,IAAIsC,gBAAgB,GAAIvC,CAAM,IAAKA,CAAC;EACpC,IAAIwC,iBAAiB,GAAIxC,CAAM,IAAKA,CAAC,CAACb,IAAI;EAC1C,IAAI8D,aAAa,GAAIjD,CAAM,IAAKA,CAAC,CAACR,GAAG;EACrC,IAAI0D,YAAY,GAAGA,CAAClD,CAAM,EAAER,GAAQ,KAAK4B,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAMrB,CAAC;IAAER;EAAG,EAAG;EACxD,IAAI2D,SAAc;EAElB,IAAIC,iBAAiB,GAAGrE,iBAAiB;EAEzC,MAAMsE,8BAA8B,GAAG,SAAAA,CAAUZ,IAAW;IACxD,IAAInB,KAAK,GAAG6B,SAAS;IAErB,IAAI7B,KAAK,KAAKgC,SAAS,EAAE;MACrB,MAAMC,QAAQ,GAAGjB,WAAW,CAACC,gBAAgB,EAAEC,iBAAiB,EAAEvC,YAAY,EAAEmD,iBAAiB,CAAC,CAACX,IAAI,CAAC;MAExGnB,KAAK,GAAGiC,QAAQ,CAACjC,KAAK;;IAG1B,MAAMkC,UAAU,GAAGlC,KAAK;IAExB,MAAMmC,MAAM,GAAG3E,yBAAyB,CAAC0E,UAAU,CAAC;IAEpD,MAAME,UAAU,GAAG/E,MAAM,EAAE,CAACgF,OAAO,CAACT,YAAY,CAAC;IAEjD,MAAMU,SAAS,GAAGF,UAAU,CAACjB,IAAI,EAAEe,UAAU,CAAC;IAE9C,OAAO;MACHf,IAAI,EAAEmB,SAAS;MACfH,MAAM;MACNI,SAAS,EAAG7D,CAAM,IAAI;QAAA,IAAA8D,EAAA;QAAC,OAAA9D,CAAC,KAAI,CAAA8D,EAAA,GAAAb,aAAa,CAACjD,CAAC,CAAC,cAAA8D,EAAA,uBAAAA,EAAA,CAAExC,KAAK;MAAA;MACnDyC,gBAAgB,EAAExB,gBAAgB,CAACC,iBAAiB;KACvD;EACL,CAAC;EAEDa,8BAA8B,CAACpD,YAAY,GAAG,UAAU+D,CAAM;IAC1D,IAAI,CAACC,SAAS,CAACvE,MAAM,EAAE;MACnB,OAAOO,YAAY;;IAEvBA,YAAY,GAAG+D,CAAC;IAChB,OAAOX,8BAA8B;EACzC,CAAC;EACDA,8BAA8B,CAACb,iBAAiB,GAAG,UAAUwB,CAAM;IAC/D,IAAI,CAACC,SAAS,CAACvE,MAAM,EAAE;MACnB,OAAO8C,iBAAiB;;IAE5BA,iBAAiB,GAAGwB,CAAC;IACrB,OAAOX,8BAA8B;EACzC,CAAC;EACDA,8BAA8B,CAACJ,aAAa,GAAG,UAAUe,CAAM;IAC3D,IAAI,CAACC,SAAS,CAACvE,MAAM,EAAE;MACnB,OAAOuD,aAAa;;IAExBA,aAAa,GAAGe,CAAC;IACjB,OAAOX,8BAA8B;EACzC,CAAC;EACDA,8BAA8B,CAACH,YAAY,GAAG,UAAUc,CAAM;IAC1D,IAAI,CAACC,SAAS,CAACvE,MAAM,EAAE;MACnB,OAAOwD,YAAY;;IAEvBA,YAAY,GAAGc,CAAC;IAChB,OAAOX,8BAA8B;EACzC,CAAC;EACDA,8BAA8B,CAACF,SAAS,GAAG,UAAUa,CAAM;IACvD,IAAI,CAACC,SAAS,CAACvE,MAAM,EAAE;MACnB,OAAOyD,SAAS;;IAEpBA,SAAS,GAAGa,CAAC;IACb,OAAOX,8BAA8B;EACzC,CAAC;EACDA,8BAA8B,CAACa,GAAG,GAAG,MAAK;IACtC3B,gBAAgB,GAAIG,YAAY,IAAM1C,CAAM,IAAI;MAC5C,MAAMb,IAAI,GAAGuD,YAAY,CAAC1C,CAAC,CAAC;MAC5B;MACA,MAAMmE,cAAc,GAAGhF,IAAI,CAACiF,iBAAiB,EAAE,GAAG,EAAE,GAAG,IAAI;MAC3D,OAAO,IAAIrB,IAAI,CAAC5D,IAAI,CAACe,OAAO,EAAE,GAAGiE,cAAc,CAAC;IACpD,CAAC;IAED,OAAOd,8BAA8B;EACzC,CAAC;EACDA,8BAA8B,CAACgB,SAAS,GAAG,CAACC,MAAY,EAAEjF,UAAwB,KAAI;IAClF,IAAIiF,MAAM,KAAKhB,SAAS,EAAE;MACtBzE,uBAAuB,CAACyF,MAAM,CAAC;;IAEnC,IAAIjF,UAAU,KAAKiE,SAAS,EAAE;MAC1BF,iBAAiB,GAAG/D,UAAU;;IAGlC,OAAOgE,8BAA8B;EACzC,CAAC;EAEDA,8BAA8B,CAACkB,eAAe,GAAG;IAC7C,OAAOjC,WAAW,CAACC,gBAAgB,EAAEC,iBAAiB,EAAEvC,YAAY,EAAEmD,iBAAiB,CAAC;EAC5F,CAAC;EAED,OAAOC,8BAAuE;AAClF;AAEA,eAAeL,qCAAqC,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}