{"ast":null,"code":"import * as React from \"react\";\nimport { isDefined, getAxisCanvas, GenericChartComponent } from \"@react-financial-charts/core\";\nexport class RenkoSeries extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.drawOnCanvas = (ctx, moreProps) => {\n      const {\n        xAccessor,\n        xScale,\n        chartConfig: {\n          yScale\n        },\n        plotData\n      } = moreProps;\n      const renko = this.getRenko(plotData, xScale, xAccessor, yScale);\n      renko.forEach(d => {\n        const {\n          fillStyle,\n          strokeStyle\n        } = d;\n        ctx.beginPath();\n        if (strokeStyle !== undefined) {\n          ctx.strokeStyle = strokeStyle;\n        }\n        if (fillStyle !== undefined) {\n          ctx.fillStyle = fillStyle;\n        }\n        ctx.rect(d.x, d.y, d.width, d.height);\n        ctx.closePath();\n        ctx.fill();\n      });\n    };\n    this.getRenko = (plotData, xScale, xAccessor, yScale) => {\n      const {\n        fill,\n        stroke,\n        yAccessor = RenkoSeries.defaultProps.yAccessor\n      } = this.props;\n      const width = xScale(xAccessor(plotData[plotData.length - 1])) - xScale(xAccessor(plotData[0]));\n      const candleWidth = width / (plotData.length - 1);\n      return plotData.filter(d => isDefined(yAccessor(d).close)).map(d => {\n        const ohlc = yAccessor(d);\n        const x = xScale(xAccessor(d)) - 0.5 * candleWidth;\n        const y = yScale(Math.max(ohlc.open, ohlc.close));\n        const height = Math.abs(yScale(ohlc.open) - yScale(ohlc.close));\n        const fillStyle = d.fullyFormed ? ohlc.open <= ohlc.close ? fill === null || fill === void 0 ? void 0 : fill.up : fill === null || fill === void 0 ? void 0 : fill.down : fill === null || fill === void 0 ? void 0 : fill.partial;\n        const strokeStyle = d.fullyFormed ? ohlc.open <= ohlc.close ? stroke === null || stroke === void 0 ? void 0 : stroke.up : stroke === null || stroke === void 0 ? void 0 : stroke.down : undefined;\n        return {\n          fillStyle,\n          height,\n          strokeStyle,\n          width: candleWidth,\n          x,\n          y\n        };\n      });\n    };\n  }\n  render() {\n    const {\n      clip\n    } = this.props;\n    return React.createElement(GenericChartComponent, {\n      clip: clip,\n      canvasDraw: this.drawOnCanvas,\n      canvasToDraw: getAxisCanvas,\n      drawOn: [\"pan\"]\n    });\n  }\n}\nRenkoSeries.defaultProps = {\n  clip: true,\n  fill: {\n    up: \"#26a69a\",\n    down: \"#ef5350\",\n    partial: \"#4682B4\"\n  },\n  stroke: {\n    up: \"none\",\n    down: \"none\"\n  },\n  yAccessor: d => ({\n    open: d.open,\n    high: d.high,\n    low: d.low,\n    close: d.close\n  })\n};","map":{"version":3,"names":["React","isDefined","getAxisCanvas","GenericChartComponent","RenkoSeries","Component","constructor","drawOnCanvas","ctx","moreProps","xAccessor","xScale","chartConfig","yScale","plotData","renko","getRenko","forEach","d","fillStyle","strokeStyle","beginPath","undefined","rect","x","y","width","height","closePath","fill","stroke","yAccessor","defaultProps","props","length","candleWidth","filter","close","map","ohlc","Math","max","open","abs","fullyFormed","up","down","partial","render","clip","createElement","canvasDraw","canvasToDraw","drawOn","high","low"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\series\\src\\RenkoSeries.tsx"],"sourcesContent":["import { ScaleContinuousNumeric } from \"d3-scale\";\nimport * as React from \"react\";\nimport { isDefined, getAxisCanvas, GenericChartComponent } from \"@react-financial-charts/core\";\n\nexport interface RenkoSeriesProps {\n    readonly clip?: boolean;\n    readonly fill?: {\n        up: string;\n        down: string;\n        partial: string;\n    };\n    readonly stroke?: {\n        up: string;\n        down: string;\n    };\n    readonly yAccessor?: (data: any) => any;\n}\n\nexport class RenkoSeries extends React.Component<RenkoSeriesProps> {\n    public static defaultProps = {\n        clip: true,\n        fill: {\n            up: \"#26a69a\",\n            down: \"#ef5350\",\n            partial: \"#4682B4\",\n        },\n        stroke: {\n            up: \"none\",\n            down: \"none\",\n        },\n        yAccessor: (d: any) => ({ open: d.open, high: d.high, low: d.low, close: d.close }),\n    };\n\n    public render() {\n        const { clip } = this.props;\n\n        return (\n            <GenericChartComponent\n                clip={clip}\n                canvasDraw={this.drawOnCanvas}\n                canvasToDraw={getAxisCanvas}\n                drawOn={[\"pan\"]}\n            />\n        );\n    }\n\n    private readonly drawOnCanvas = (ctx: CanvasRenderingContext2D, moreProps: any) => {\n        const {\n            xAccessor,\n            xScale,\n            chartConfig: { yScale },\n            plotData,\n        } = moreProps;\n\n        const renko = this.getRenko(plotData, xScale, xAccessor, yScale);\n\n        renko.forEach((d) => {\n            const { fillStyle, strokeStyle } = d;\n            ctx.beginPath();\n\n            if (strokeStyle !== undefined) {\n                ctx.strokeStyle = strokeStyle;\n            }\n            if (fillStyle !== undefined) {\n                ctx.fillStyle = fillStyle;\n            }\n\n            ctx.rect(d.x, d.y, d.width, d.height);\n            ctx.closePath();\n            ctx.fill();\n        });\n    };\n\n    private readonly getRenko = (\n        plotData: any[],\n        xScale: ScaleContinuousNumeric<number, number>,\n        xAccessor: any,\n        yScale: ScaleContinuousNumeric<number, number>,\n    ) => {\n        const { fill, stroke, yAccessor = RenkoSeries.defaultProps.yAccessor } = this.props;\n\n        const width = xScale(xAccessor(plotData[plotData.length - 1])) - xScale(xAccessor(plotData[0]));\n\n        const candleWidth = width / (plotData.length - 1);\n\n        return plotData\n            .filter((d) => isDefined(yAccessor(d).close))\n            .map((d) => {\n                const ohlc = yAccessor(d);\n                const x = xScale(xAccessor(d)) - 0.5 * candleWidth;\n                const y = yScale(Math.max(ohlc.open, ohlc.close));\n                const height = Math.abs(yScale(ohlc.open) - yScale(ohlc.close));\n\n                const fillStyle = d.fullyFormed ? (ohlc.open <= ohlc.close ? fill?.up : fill?.down) : fill?.partial;\n                const strokeStyle = d.fullyFormed ? (ohlc.open <= ohlc.close ? stroke?.up : stroke?.down) : undefined;\n\n                return {\n                    fillStyle,\n                    height,\n                    strokeStyle,\n                    width: candleWidth,\n                    x,\n                    y,\n                };\n            });\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}