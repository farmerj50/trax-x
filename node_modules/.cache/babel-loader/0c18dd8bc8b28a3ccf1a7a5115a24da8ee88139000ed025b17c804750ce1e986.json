{"ast":null,"code":"import * as React from \"react\";\nimport { isDefined, GenericChartComponent } from \"@react-financial-charts/core\";\nconst PADDING = 10;\nconst MIN_WIDTH = PADDING;\nexport class HoverTextNearMouse extends React.Component {\n  constructor(props) {\n    super(props);\n    this.textNode = React.createRef();\n    this.renderSVG = moreProps => {\n      const {\n        fontFamily,\n        fontSize,\n        fill,\n        bgFill,\n        bgOpacity\n      } = this.props;\n      const textMetaData = helper(Object.assign(Object.assign({}, this.props), {\n        bgWidth: this.getBgWidth(),\n        bgHeight: this.getBgHeight()\n      }), moreProps);\n      if (textMetaData !== undefined && isDefined(textMetaData)) {\n        const {\n          rect,\n          text\n        } = textMetaData;\n        return React.createElement(\"g\", null, React.createElement(\"rect\", Object.assign({\n          fill: bgFill,\n          fillOpacity: bgOpacity,\n          stroke: bgFill\n        }, rect)), React.createElement(\"text\", {\n          ref: this.textNode,\n          fontSize: fontSize,\n          fontFamily: fontFamily,\n          textAnchor: \"start\",\n          alignmentBaseline: \"central\",\n          fill: fill,\n          x: text.x,\n          y: text.y\n        }, text.text));\n      }\n      return null;\n    };\n    this.getBgHeight = () => {\n      const {\n        bgHeight\n      } = this.props;\n      const {\n        textHeight\n      } = this.state;\n      if (bgHeight !== \"auto\") {\n        return bgHeight;\n      } else if (textHeight !== undefined) {\n        return textHeight + PADDING;\n      } else {\n        return MIN_WIDTH;\n      }\n    };\n    this.getBgWidth = () => {\n      const {\n        bgWidth\n      } = this.props;\n      const {\n        textWidth\n      } = this.state;\n      if (bgWidth !== \"auto\") {\n        return bgWidth;\n      } else if (textWidth !== undefined) {\n        return textWidth + PADDING;\n      } else {\n        return MIN_WIDTH;\n      }\n    };\n    this.updateTextSize = () => {\n      const {\n        bgWidth,\n        bgHeight\n      } = this.props;\n      if (bgWidth === \"auto\" || bgHeight === \"auto\") {\n        const textNode = this.textNode.current;\n        if (textNode !== null) {\n          const {\n            width,\n            height\n          } = textNode.getBBox();\n          if (this.state.textWidth !== width || this.state.textHeight !== height) {\n            this.setState({\n              textWidth: width,\n              textHeight: height\n            });\n          }\n        }\n      }\n    };\n    this.state = {\n      textWidth: undefined,\n      textHeight: undefined\n    };\n  }\n  componentDidMount() {\n    this.updateTextSize();\n  }\n  componentDidUpdate() {\n    this.updateTextSize();\n  }\n  render() {\n    const {\n      text\n    } = this.props;\n    if (text) {\n      return React.createElement(GenericChartComponent, {\n        svgDraw: this.renderSVG,\n        drawOn: [\"mousemove\"]\n      });\n    } else {\n      return null;\n    }\n  }\n}\nHoverTextNearMouse.defaultProps = {\n  fontFamily: \"-apple-system, system-ui, Roboto, 'Helvetica Neue', Ubuntu, sans-serif\",\n  fontSize: 12,\n  fill: \"#000000\",\n  bgFill: \"#FA9325\",\n  bgOpacity: 0.5\n};\nfunction helper(props, moreProps) {\n  const {\n    show,\n    bgWidth,\n    bgHeight\n  } = props;\n  const {\n    mouseXY,\n    chartConfig: {\n      height,\n      width\n    },\n    show: mouseInsideCanvas\n  } = moreProps;\n  if (show && mouseInsideCanvas) {\n    const [x, y] = mouseXY;\n    const cx = x < width / 2 ? x + PADDING : x - bgWidth - PADDING;\n    const cy = y < height / 2 ? y + PADDING : y - bgHeight - PADDING;\n    const rect = {\n      x: cx,\n      y: cy,\n      width: bgWidth,\n      height: bgHeight\n    };\n    const text = {\n      text: props.text,\n      x: cx + PADDING / 2,\n      y: cy + bgHeight / 2\n    };\n    return {\n      rect,\n      text\n    };\n  }\n}","map":{"version":3,"names":["React","isDefined","GenericChartComponent","PADDING","MIN_WIDTH","HoverTextNearMouse","Component","constructor","props","textNode","createRef","renderSVG","moreProps","fontFamily","fontSize","fill","bgFill","bgOpacity","textMetaData","helper","Object","assign","bgWidth","getBgWidth","bgHeight","getBgHeight","undefined","rect","text","createElement","fillOpacity","stroke","ref","textAnchor","alignmentBaseline","x","y","textHeight","state","textWidth","updateTextSize","current","width","height","getBBox","setState","componentDidMount","componentDidUpdate","render","svgDraw","drawOn","defaultProps","show","mouseXY","chartConfig","mouseInsideCanvas","cx","cy"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\interactive\\src\\components\\HoverTextNearMouse.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { isDefined, GenericChartComponent } from \"@react-financial-charts/core\";\n\nconst PADDING = 10;\nconst MIN_WIDTH = PADDING;\n\nexport interface HoverTextNearMouseProps {\n    readonly fontFamily?: string;\n    readonly fontSize?: number;\n    readonly fill?: string;\n    readonly text?: string;\n    readonly bgFill?: string;\n    readonly bgOpacity?: number;\n    readonly bgWidth: number | string;\n    readonly bgHeight: number | string;\n    readonly show: boolean;\n}\n\ninterface HoverTextNearMouseState {\n    textHeight?: number;\n    textWidth?: number;\n}\n\nexport class HoverTextNearMouse extends React.Component<HoverTextNearMouseProps, HoverTextNearMouseState> {\n    public static defaultProps = {\n        fontFamily: \"-apple-system, system-ui, Roboto, 'Helvetica Neue', Ubuntu, sans-serif\",\n        fontSize: 12,\n        fill: \"#000000\",\n        bgFill: \"#FA9325\",\n        bgOpacity: 0.5,\n    };\n\n    private readonly textNode = React.createRef<SVGTextElement>();\n\n    public constructor(props: HoverTextNearMouseProps) {\n        super(props);\n\n        this.state = {\n            textWidth: undefined,\n            textHeight: undefined,\n        };\n    }\n\n    public componentDidMount() {\n        this.updateTextSize();\n    }\n\n    public componentDidUpdate() {\n        this.updateTextSize();\n    }\n\n    public render() {\n        const { text } = this.props;\n        if (text) {\n            return <GenericChartComponent svgDraw={this.renderSVG} drawOn={[\"mousemove\"]} />;\n        } else {\n            return null;\n        }\n    }\n\n    private readonly renderSVG = (moreProps: any) => {\n        const { fontFamily, fontSize, fill, bgFill, bgOpacity } = this.props;\n\n        const textMetaData = helper(\n            {\n                ...this.props,\n                bgWidth: this.getBgWidth(),\n                bgHeight: this.getBgHeight(),\n            },\n            moreProps,\n        );\n\n        if (textMetaData !== undefined && isDefined(textMetaData)) {\n            const { rect, text } = textMetaData;\n            return (\n                <g>\n                    <rect fill={bgFill} fillOpacity={bgOpacity} stroke={bgFill} {...rect} />\n                    <text\n                        ref={this.textNode}\n                        fontSize={fontSize}\n                        fontFamily={fontFamily}\n                        textAnchor=\"start\"\n                        alignmentBaseline={\"central\"}\n                        fill={fill}\n                        x={text.x}\n                        y={text.y}\n                    >\n                        {text.text}\n                    </text>\n                </g>\n            );\n        }\n\n        return null;\n    };\n\n    private readonly getBgHeight = () => {\n        const { bgHeight } = this.props;\n        const { textHeight } = this.state;\n\n        if (bgHeight !== \"auto\") {\n            return bgHeight;\n        } else if (textHeight !== undefined) {\n            return textHeight + PADDING;\n        } else {\n            return MIN_WIDTH;\n        }\n    };\n\n    private readonly getBgWidth = () => {\n        const { bgWidth } = this.props;\n        const { textWidth } = this.state;\n\n        if (bgWidth !== \"auto\") {\n            return bgWidth;\n        } else if (textWidth !== undefined) {\n            return textWidth + PADDING;\n        } else {\n            return MIN_WIDTH;\n        }\n    };\n\n    private readonly updateTextSize = () => {\n        const { bgWidth, bgHeight } = this.props;\n        if (bgWidth === \"auto\" || bgHeight === \"auto\") {\n            const textNode = this.textNode.current;\n            if (textNode !== null) {\n                const { width, height } = textNode.getBBox();\n                if (this.state.textWidth !== width || this.state.textHeight !== height) {\n                    this.setState({\n                        textWidth: width,\n                        textHeight: height,\n                    });\n                }\n            }\n        }\n    };\n}\n\nfunction helper(props: any, moreProps: any) {\n    const { show, bgWidth, bgHeight } = props;\n\n    const {\n        mouseXY,\n        chartConfig: { height, width },\n        show: mouseInsideCanvas,\n    } = moreProps;\n\n    if (show && mouseInsideCanvas) {\n        const [x, y] = mouseXY;\n\n        const cx = x < width / 2 ? x + PADDING : x - bgWidth - PADDING;\n\n        const cy = y < height / 2 ? y + PADDING : y - bgHeight - PADDING;\n\n        const rect = {\n            x: cx,\n            y: cy,\n            width: bgWidth,\n            height: bgHeight,\n        };\n\n        const text = {\n            text: props.text,\n            x: cx + PADDING / 2,\n            y: cy + bgHeight / 2,\n        };\n\n        return {\n            rect,\n            text,\n        };\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}