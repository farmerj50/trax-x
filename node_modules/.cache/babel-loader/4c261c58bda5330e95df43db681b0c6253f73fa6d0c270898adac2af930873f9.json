{"ast":null,"code":"import { timeSecond, timeMinute, timeHour, timeDay, timeWeek, timeMonth, timeYear } from \"d3-time\";\nimport { timeFormat as d3TimeFormat } from \"d3-time-format\";\nconst formatMillisecond = d3TimeFormat(\".%L\");\nconst formatSecond = d3TimeFormat(\":%S\");\nconst formatMinute = d3TimeFormat(\"%H:%M\");\nconst formatHour = d3TimeFormat(\"%H:%M\");\nconst formatDay = d3TimeFormat(\"%e\");\nconst formatWeek = d3TimeFormat(\"%e\");\nconst formatMonth = d3TimeFormat(\"%b\");\nconst formatYear = d3TimeFormat(\"%Y\");\nexport const timeFormat = date => {\n  return (timeSecond(date) < date ? formatMillisecond : timeMinute(date) < date ? formatSecond : timeHour(date) < date ? formatMinute : timeDay(date) < date ? formatHour : timeMonth(date) < date ? timeWeek(date) < date ? formatDay : formatWeek : timeYear(date) < date ? formatMonth : formatYear)(date);\n};","map":{"version":3,"names":["timeSecond","timeMinute","timeHour","timeDay","timeWeek","timeMonth","timeYear","timeFormat","d3TimeFormat","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","date"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\scales\\src\\timeFormat.ts"],"sourcesContent":["import { timeSecond, timeMinute, timeHour, timeDay, timeWeek, timeMonth, timeYear } from \"d3-time\";\nimport { timeFormat as d3TimeFormat } from \"d3-time-format\";\n\nconst formatMillisecond = d3TimeFormat(\".%L\");\nconst formatSecond = d3TimeFormat(\":%S\");\nconst formatMinute = d3TimeFormat(\"%H:%M\");\nconst formatHour = d3TimeFormat(\"%H:%M\");\nconst formatDay = d3TimeFormat(\"%e\");\nconst formatWeek = d3TimeFormat(\"%e\");\nconst formatMonth = d3TimeFormat(\"%b\");\nconst formatYear = d3TimeFormat(\"%Y\");\n\nexport const timeFormat = (date: Date) => {\n    return (\n        timeSecond(date) < date\n            ? formatMillisecond\n            : timeMinute(date) < date\n            ? formatSecond\n            : timeHour(date) < date\n            ? formatMinute\n            : timeDay(date) < date\n            ? formatHour\n            : timeMonth(date) < date\n            ? timeWeek(date) < date\n                ? formatDay\n                : formatWeek\n            : timeYear(date) < date\n            ? formatMonth\n            : formatYear\n    )(date);\n};\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,SAAS;AAClG,SAASC,UAAU,IAAIC,YAAY,QAAQ,gBAAgB;AAE3D,MAAMC,iBAAiB,GAAGD,YAAY,CAAC,KAAK,CAAC;AAC7C,MAAME,YAAY,GAAGF,YAAY,CAAC,KAAK,CAAC;AACxC,MAAMG,YAAY,GAAGH,YAAY,CAAC,OAAO,CAAC;AAC1C,MAAMI,UAAU,GAAGJ,YAAY,CAAC,OAAO,CAAC;AACxC,MAAMK,SAAS,GAAGL,YAAY,CAAC,IAAI,CAAC;AACpC,MAAMM,UAAU,GAAGN,YAAY,CAAC,IAAI,CAAC;AACrC,MAAMO,WAAW,GAAGP,YAAY,CAAC,IAAI,CAAC;AACtC,MAAMQ,UAAU,GAAGR,YAAY,CAAC,IAAI,CAAC;AAErC,OAAO,MAAMD,UAAU,GAAIU,IAAU,IAAI;EACrC,OAAO,CACHjB,UAAU,CAACiB,IAAI,CAAC,GAAGA,IAAI,GACjBR,iBAAiB,GACjBR,UAAU,CAACgB,IAAI,CAAC,GAAGA,IAAI,GACvBP,YAAY,GACZR,QAAQ,CAACe,IAAI,CAAC,GAAGA,IAAI,GACrBN,YAAY,GACZR,OAAO,CAACc,IAAI,CAAC,GAAGA,IAAI,GACpBL,UAAU,GACVP,SAAS,CAACY,IAAI,CAAC,GAAGA,IAAI,GACtBb,QAAQ,CAACa,IAAI,CAAC,GAAGA,IAAI,GACjBJ,SAAS,GACTC,UAAU,GACdR,QAAQ,CAACW,IAAI,CAAC,GAAGA,IAAI,GACrBF,WAAW,GACXC,UAAU,EAClBC,IAAI,CAAC;AACX,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}