{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { isNotDefined, isDefined, noop, functor, identity } from \"./utils\";\nvar aliases = {\n  mouseleave: \"mousemove\",\n  // to draw interactive after mouse exit\n  panend: \"pan\",\n  pinchzoom: \"pan\",\n  mousedown: \"mousemove\",\n  click: \"mousemove\",\n  contextmenu: \"mousemove\",\n  dblclick: \"mousemove\",\n  dragstart: \"drag\",\n  dragend: \"drag\",\n  dragcancel: \"drag\"\n};\nvar GenericComponent = function (_Component) {\n  _inherits(GenericComponent, _Component);\n  function GenericComponent(props, context) {\n    _classCallCheck(this, GenericComponent);\n    var _this = _possibleConstructorReturn(this, (GenericComponent.__proto__ || Object.getPrototypeOf(GenericComponent)).call(this, props, context));\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    _this.getMoreProps = _this.getMoreProps.bind(_this);\n    _this.listener = _this.listener.bind(_this);\n    _this.draw = _this.draw.bind(_this);\n    _this.updateMoreProps = _this.updateMoreProps.bind(_this);\n    _this.evaluateType = _this.evaluateType.bind(_this);\n    _this.isHover = _this.isHover.bind(_this);\n    _this.preCanvasDraw = _this.preCanvasDraw.bind(_this);\n    _this.postCanvasDraw = _this.postCanvasDraw.bind(_this);\n    _this.getPanConditions = _this.getPanConditions.bind(_this);\n    _this.shouldTypeProceed = _this.shouldTypeProceed.bind(_this);\n    _this.preEvaluate = _this.preEvaluate.bind(_this);\n    var generateSubscriptionId = context.generateSubscriptionId;\n    _this.suscriberId = generateSubscriptionId();\n    _this.moreProps = {};\n    _this.state = {\n      updateCount: 0\n    };\n    return _this;\n  }\n  _createClass(GenericComponent, [{\n    key: \"updateMoreProps\",\n    value: function updateMoreProps(moreProps) {\n      var _this2 = this;\n      Object.keys(moreProps).forEach(function (key) {\n        _this2.moreProps[key] = moreProps[key];\n      });\n    }\n  }, {\n    key: \"shouldTypeProceed\",\n    value: function shouldTypeProceed() {\n      return true;\n    }\n  }, {\n    key: \"preEvaluate\",\n    value: function preEvaluate() {}\n  }, {\n    key: \"listener\",\n    value: function listener(type, moreProps, state, e) {\n      // console.log(e.shiftKey)\n      if (isDefined(moreProps)) {\n        this.updateMoreProps(moreProps);\n      }\n      this.evaluationInProgress = true;\n      this.evaluateType(type, e);\n      this.evaluationInProgress = false;\n    }\n  }, {\n    key: \"evaluateType\",\n    value: function evaluateType(type, e) {\n      var newType = aliases[type] || type;\n      var proceed = this.props.drawOn.indexOf(newType) > -1;\n\n      // console.log(\"type ->\", type, proceed);\n\n      if (!proceed) return;\n      // const moreProps = this.getMoreProps();\n      this.preEvaluate(type, this.moreProps, e);\n      if (!this.shouldTypeProceed(type, this.moreProps)) return;\n      switch (type) {\n        case \"zoom\":\n        case \"mouseenter\":\n          // DO NOT DRAW FOR THESE EVENTS\n          break;\n        case \"mouseleave\":\n          {\n            this.moreProps.hovering = false;\n            var moreProps = this.getMoreProps();\n            if (this.props.onUnHover) {\n              this.props.onUnHover(moreProps, e);\n            }\n            break;\n          }\n        case \"contextmenu\":\n          {\n            if (this.props.onContextMenu) {\n              this.props.onContextMenu(this.getMoreProps(), e);\n            }\n            if (this.moreProps.hovering && this.props.onContextMenuWhenHover) {\n              this.props.onContextMenuWhenHover(this.getMoreProps(), e);\n            }\n            break;\n          }\n        case \"mousedown\":\n          {\n            if (this.props.onMouseDown) {\n              this.props.onMouseDown(this.getMoreProps(), e);\n            }\n            break;\n          }\n        case \"click\":\n          {\n            var _moreProps = this.getMoreProps();\n            if (this.moreProps.hovering) {\n              // console.error(\"TODO use this only for SAR, Line series\")\n              this.props.onClickWhenHover(_moreProps, e);\n            } else {\n              this.props.onClickOutside(_moreProps, e);\n            }\n            if (this.props.onClick) {\n              this.props.onClick(_moreProps, e);\n            }\n            break;\n          }\n        case \"mousemove\":\n          {\n            var prevHover = this.moreProps.hovering;\n            this.moreProps.hovering = this.isHover(e);\n            var _context = this.context,\n              amIOnTop = _context.amIOnTop,\n              setCursorClass = _context.setCursorClass;\n            if (this.moreProps.hovering && !this.props.selected\n            /* && !prevHover */ && amIOnTop(this.suscriberId) && isDefined(this.props.onHover)) {\n              setCursorClass(\"react-stockcharts-pointer-cursor\");\n              this.iSetTheCursorClass = true;\n            } else if (this.moreProps.hovering && this.props.selected && amIOnTop(this.suscriberId)) {\n              setCursorClass(this.props.interactiveCursorClass);\n              this.iSetTheCursorClass = true;\n            } else if (prevHover && !this.moreProps.hovering && this.iSetTheCursorClass) {\n              this.iSetTheCursorClass = false;\n              setCursorClass(null);\n            }\n            var _moreProps2 = this.getMoreProps();\n            if (this.moreProps.hovering && !prevHover) {\n              if (this.props.onHover) {\n                this.props.onHover(_moreProps2, e);\n              }\n            }\n            if (prevHover && !this.moreProps.hovering) {\n              if (this.props.onUnHover) {\n                this.props.onUnHover(_moreProps2, e);\n              }\n            }\n            if (this.props.onMouseMove) {\n              this.props.onMouseMove(_moreProps2, e);\n            }\n            break;\n          }\n        case \"dblclick\":\n          {\n            var _moreProps3 = this.getMoreProps();\n            if (this.props.onDoubleClick) {\n              this.props.onDoubleClick(_moreProps3, e);\n            }\n            if (this.moreProps.hovering && this.props.onDoubleClickWhenHover) {\n              this.props.onDoubleClickWhenHover(_moreProps3, e);\n            }\n            break;\n          }\n        case \"pan\":\n          {\n            this.moreProps.hovering = false;\n            if (this.props.onPan) {\n              this.props.onPan(this.getMoreProps(), e);\n            }\n            break;\n          }\n        case \"panend\":\n          {\n            if (this.props.onPanEnd) {\n              this.props.onPanEnd(this.getMoreProps(), e);\n            }\n            break;\n          }\n        case \"dragstart\":\n          {\n            if (this.getPanConditions().draggable) {\n              var _amIOnTop = this.context.amIOnTop;\n              if (_amIOnTop(this.suscriberId)) {\n                this.dragInProgress = true;\n                this.props.onDragStart(this.getMoreProps(), e);\n              }\n            }\n            this.someDragInProgress = true;\n            break;\n          }\n        case \"drag\":\n          {\n            if (this.dragInProgress && this.props.onDrag) {\n              this.props.onDrag(this.getMoreProps(), e);\n            }\n            break;\n          }\n        case \"dragend\":\n          {\n            if (this.dragInProgress && this.props.onDragComplete) {\n              this.props.onDragComplete(this.getMoreProps(), e);\n            }\n            this.dragInProgress = false;\n            this.someDragInProgress = false;\n            break;\n          }\n        case \"dragcancel\":\n          {\n            if (this.dragInProgress || this.iSetTheCursorClass) {\n              var _setCursorClass = this.context.setCursorClass;\n              _setCursorClass(null);\n            }\n            break;\n          }\n      }\n    }\n  }, {\n    key: \"isHover\",\n    value: function isHover(e) {\n      return isDefined(this.props.isHover) ? this.props.isHover(this.getMoreProps(), e) : false;\n    }\n  }, {\n    key: \"getPanConditions\",\n    value: function getPanConditions() {\n      var draggable = !!(this.props.selected && this.moreProps.hovering) || this.props.enableDragOnHover && this.moreProps.hovering;\n      return {\n        draggable: draggable,\n        panEnabled: !this.props.disablePan\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n          force: false\n        },\n        trigger = _ref.trigger,\n        force = _ref.force;\n      var type = aliases[trigger] || trigger;\n      var proceed = this.props.drawOn.indexOf(type) > -1;\n      if (proceed || this.props.selected /* this is to draw as soon as you select */ || force) {\n        var chartCanvasType = this.context.chartCanvasType;\n        var canvasDraw = this.props.canvasDraw;\n        if (isNotDefined(canvasDraw) || chartCanvasType === \"svg\") {\n          var updateCount = this.state.updateCount;\n          this.setState({\n            updateCount: updateCount + 1\n          });\n        } else {\n          this.drawOnCanvas();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _context2 = this.context,\n        subscribe = _context2.subscribe,\n        chartId = _context2.chartId;\n      var _props = this.props,\n        clip = _props.clip,\n        edgeClip = _props.edgeClip;\n      subscribe(this.suscriberId, {\n        chartId: chartId,\n        clip: clip,\n        edgeClip: edgeClip,\n        listener: this.listener,\n        draw: this.draw,\n        getPanConditions: this.getPanConditions\n      });\n      this.componentWillReceiveProps(this.props, this.context);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var unsubscribe = this.context.unsubscribe;\n      unsubscribe(this.suscriberId);\n      if (this.iSetTheCursorClass) {\n        var setCursorClass = this.context.setCursorClass;\n        setCursorClass(null);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.componentDidUpdate(this.props);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var chartCanvasType = this.context.chartCanvasType;\n      var _props2 = this.props,\n        canvasDraw = _props2.canvasDraw,\n        selected = _props2.selected,\n        interactiveCursorClass = _props2.interactiveCursorClass;\n      if (prevProps.selected !== selected) {\n        var setCursorClass = this.context.setCursorClass;\n        if (selected && this.moreProps.hovering) {\n          this.iSetTheCursorClass = true;\n          setCursorClass(interactiveCursorClass);\n        } else {\n          this.iSetTheCursorClass = false;\n          setCursorClass(null);\n        }\n      }\n      if (isDefined(canvasDraw) && !this.evaluationInProgress\n      // && !(this.someDragInProgress && this.props.selected)\n      /*\n      prevent double draw of interactive elements\n      during dragging / hover / click etc.\n      */ && chartCanvasType !== \"svg\") {\n        this.updateMoreProps(this.moreProps);\n        this.drawOnCanvas();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      var xScale = nextContext.xScale,\n        plotData = nextContext.plotData,\n        chartConfig = nextContext.chartConfig,\n        getMutableState = nextContext.getMutableState;\n      this.props.debug(nextContext);\n      this.moreProps = _extends({}, this.moreProps, getMutableState(), {\n        /*\n        ^ this is so\n        mouseXY, currentCharts, currentItem are available to\n        newly created components like MouseHoverText which\n        is created right after a new interactive object is drawn\n        */\n        xScale: xScale,\n        plotData: plotData,\n        chartConfig: chartConfig\n      });\n    }\n  }, {\n    key: \"getMoreProps\",\n    value: function getMoreProps() {\n      var _context3 = this.context,\n        xScale = _context3.xScale,\n        plotData = _context3.plotData,\n        chartConfig = _context3.chartConfig,\n        morePropsDecorator = _context3.morePropsDecorator,\n        xAccessor = _context3.xAccessor,\n        displayXAccessor = _context3.displayXAccessor,\n        width = _context3.width,\n        height = _context3.height;\n      var _context4 = this.context,\n        chartId = _context4.chartId,\n        fullData = _context4.fullData;\n      var moreProps = _extends({\n        xScale: xScale,\n        plotData: plotData,\n        chartConfig: chartConfig,\n        xAccessor: xAccessor,\n        displayXAccessor: displayXAccessor,\n        width: width,\n        height: height,\n        chartId: chartId,\n        fullData: fullData\n      }, this.moreProps);\n      return (morePropsDecorator || identity)(moreProps);\n    }\n  }, {\n    key: \"preCanvasDraw\",\n    value: function preCanvasDraw() {\n      // do nothing\n    }\n  }, {\n    key: \"postCanvasDraw\",\n    value: function postCanvasDraw() {}\n  }, {\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas() {\n      var _props3 = this.props,\n        canvasDraw = _props3.canvasDraw,\n        canvasToDraw = _props3.canvasToDraw;\n      var getCanvasContexts = this.context.getCanvasContexts;\n      var moreProps = this.getMoreProps();\n      var ctx = canvasToDraw(getCanvasContexts());\n      this.preCanvasDraw(ctx, moreProps);\n      canvasDraw(ctx, moreProps);\n      this.postCanvasDraw(ctx, moreProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _context5 = this.context,\n        chartCanvasType = _context5.chartCanvasType,\n        chartId = _context5.chartId;\n      var _props4 = this.props,\n        canvasDraw = _props4.canvasDraw,\n        clip = _props4.clip,\n        svgDraw = _props4.svgDraw;\n      if (isDefined(canvasDraw) && chartCanvasType !== \"svg\") {\n        return null;\n      }\n      var suffix = isDefined(chartId) ? \"-\" + chartId : \"\";\n      var style = clip ? {\n        \"clipPath\": \"url(#chart-area-clip\" + suffix + \")\"\n      } : null;\n      return React.createElement(\"g\", {\n        style: style\n      }, svgDraw(this.getMoreProps()));\n    }\n  }]);\n  return GenericComponent;\n}(Component);\nGenericComponent.propTypes = {\n  svgDraw: PropTypes.func.isRequired,\n  canvasDraw: PropTypes.func,\n  drawOn: PropTypes.array.isRequired,\n  clip: PropTypes.bool.isRequired,\n  edgeClip: PropTypes.bool.isRequired,\n  interactiveCursorClass: PropTypes.string,\n  selected: PropTypes.bool.isRequired,\n  enableDragOnHover: PropTypes.bool.isRequired,\n  disablePan: PropTypes.bool.isRequired,\n  canvasToDraw: PropTypes.func.isRequired,\n  isHover: PropTypes.func,\n  onClick: PropTypes.func,\n  onClickWhenHover: PropTypes.func,\n  onClickOutside: PropTypes.func,\n  onPan: PropTypes.func,\n  onPanEnd: PropTypes.func,\n  onDragStart: PropTypes.func,\n  onDrag: PropTypes.func,\n  onDragComplete: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDoubleClickWhenHover: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  onContextMenuWhenHover: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onHover: PropTypes.func,\n  onUnHover: PropTypes.func,\n  debug: PropTypes.func\n  // owner: PropTypes.string.isRequired,\n};\nGenericComponent.defaultProps = {\n  svgDraw: functor(null),\n  draw: [],\n  canvasToDraw: function canvasToDraw(contexts) {\n    return contexts.mouseCoord;\n  },\n  clip: true,\n  edgeClip: false,\n  selected: false,\n  disablePan: false,\n  enableDragOnHover: false,\n  onClickWhenHover: noop,\n  onClickOutside: noop,\n  onDragStart: noop,\n  onMouseMove: noop,\n  onMouseDown: noop,\n  debug: noop\n};\nGenericComponent.contextTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  margin: PropTypes.object.isRequired,\n  chartId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  getCanvasContexts: PropTypes.func,\n  chartCanvasType: PropTypes.string,\n  xScale: PropTypes.func.isRequired,\n  xAccessor: PropTypes.func.isRequired,\n  displayXAccessor: PropTypes.func.isRequired,\n  plotData: PropTypes.array.isRequired,\n  fullData: PropTypes.array.isRequired,\n  chartConfig: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  morePropsDecorator: PropTypes.func,\n  generateSubscriptionId: PropTypes.func,\n  getMutableState: PropTypes.func.isRequired,\n  amIOnTop: PropTypes.func.isRequired,\n  subscribe: PropTypes.func.isRequired,\n  unsubscribe: PropTypes.func.isRequired,\n  setCursorClass: PropTypes.func.isRequired\n};\nexport default GenericComponent;\nexport function getAxisCanvas(contexts) {\n  return contexts.axes;\n}\nexport function getMouseCanvas(contexts) {\n  return contexts.mouseCoord;\n}","map":{"version":3,"names":["React","Component","PropTypes","isNotDefined","isDefined","noop","functor","identity","aliases","mouseleave","panend","pinchzoom","mousedown","click","contextmenu","dblclick","dragstart","dragend","dragcancel","GenericComponent","props","context","_classCallCheck","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","drawOnCanvas","bind","getMoreProps","listener","draw","updateMoreProps","evaluateType","isHover","preCanvasDraw","postCanvasDraw","getPanConditions","shouldTypeProceed","preEvaluate","generateSubscriptionId","suscriberId","moreProps","state","updateCount","_this2","keys","forEach","key","type","e","evaluationInProgress","newType","proceed","drawOn","indexOf","hovering","onUnHover","onContextMenu","onContextMenuWhenHover","onMouseDown","_moreProps","onClickWhenHover","onClickOutside","onClick","prevHover","_context","amIOnTop","setCursorClass","selected","onHover","iSetTheCursorClass","interactiveCursorClass","_moreProps2","onMouseMove","_moreProps3","onDoubleClick","onDoubleClickWhenHover","onPan","onPanEnd","draggable","_amIOnTop","dragInProgress","onDragStart","someDragInProgress","onDrag","onDragComplete","_setCursorClass","enableDragOnHover","panEnabled","disablePan","_ref","arguments","length","undefined","force","trigger","chartCanvasType","canvasDraw","setState","_context2","subscribe","chartId","_props","clip","edgeClip","componentWillReceiveProps","unsubscribe","componentDidUpdate","prevProps","_props2","nextProps","nextContext","xScale","plotData","chartConfig","getMutableState","debug","_extends","_context3","morePropsDecorator","xAccessor","displayXAccessor","width","height","_context4","fullData","_props3","canvasToDraw","getCanvasContexts","ctx","_context5","_props4","svgDraw","suffix","style","createElement","propTypes","func","isRequired","array","bool","string","defaultProps","contexts","mouseCoord","contextTypes","number","margin","object","oneOfType","getAxisCanvas","axes","getMouseCanvas"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\src\\lib\\GenericComponent.js"],"sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n\tisNotDefined,\n\tisDefined,\n\tnoop,\n\tfunctor,\n\tidentity,\n} from \"./utils\";\n\nconst aliases = {\n\tmouseleave: \"mousemove\", // to draw interactive after mouse exit\n\tpanend: \"pan\",\n\tpinchzoom: \"pan\",\n\tmousedown: \"mousemove\",\n\tclick: \"mousemove\",\n\tcontextmenu: \"mousemove\",\n\tdblclick: \"mousemove\",\n\tdragstart: \"drag\",\n\tdragend: \"drag\",\n\tdragcancel: \"drag\",\n};\n\nclass GenericComponent extends Component {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.getMoreProps = this.getMoreProps.bind(this);\n\t\tthis.listener = this.listener.bind(this);\n\t\tthis.draw = this.draw.bind(this);\n\t\tthis.updateMoreProps = this.updateMoreProps.bind(this);\n\t\tthis.evaluateType = this.evaluateType.bind(this);\n\t\tthis.isHover = this.isHover.bind(this);\n\t\tthis.preCanvasDraw = this.preCanvasDraw.bind(this);\n\t\tthis.postCanvasDraw = this.postCanvasDraw.bind(this);\n\t\tthis.getPanConditions = this.getPanConditions.bind(this);\n\t\tthis.shouldTypeProceed = this.shouldTypeProceed.bind(this);\n\t\tthis.preEvaluate = this.preEvaluate.bind(this);\n\n\t\tconst { generateSubscriptionId } = context;\n\t\tthis.suscriberId = generateSubscriptionId();\n\n\t\tthis.moreProps = {};\n\n\t\tthis.state = {\n\t\t\tupdateCount: 0,\n\t\t};\n\t}\n\tupdateMoreProps(moreProps) {\n\t\tObject.keys(moreProps).forEach(key => {\n\t\t\tthis.moreProps[key] = moreProps[key];\n\t\t});\n\t}\n\tshouldTypeProceed() {\n\t\treturn true;\n\t}\n\tpreEvaluate() {\n\t}\n\tlistener(type, moreProps, state, e) {\n\t\t// console.log(e.shiftKey)\n\t\tif (isDefined(moreProps)) {\n\t\t\tthis.updateMoreProps(moreProps);\n\t\t}\n\t\tthis.evaluationInProgress = true;\n\t\tthis.evaluateType(type, e);\n\t\tthis.evaluationInProgress = false;\n\t}\n\tevaluateType(type, e) {\n\t\tconst newType = aliases[type] || type;\n\t\tconst proceed = this.props.drawOn.indexOf(newType) > -1;\n\n\t\t// console.log(\"type ->\", type, proceed);\n\n\t\tif (!proceed) return;\n\t\t// const moreProps = this.getMoreProps();\n\t\tthis.preEvaluate(type, this.moreProps, e);\n\t\tif (!this.shouldTypeProceed(type, this.moreProps)) return;\n\n\t\tswitch (type) {\n\t\t\tcase \"zoom\":\n\t\t\tcase \"mouseenter\":\n\t\t\t// DO NOT DRAW FOR THESE EVENTS\n\t\t\t\tbreak;\n\t\t\tcase \"mouseleave\": {\n\t\t\t\tthis.moreProps.hovering = false;\n\t\t\t\tconst moreProps = this.getMoreProps();\n\n\t\t\t\tif (this.props.onUnHover) {\n\t\t\t\t\tthis.props.onUnHover(moreProps, e);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"contextmenu\": {\n\t\t\t\tif (this.props.onContextMenu) {\n\t\t\t\t\tthis.props.onContextMenu(this.getMoreProps(), e);\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tthis.moreProps.hovering\n\t\t\t\t&& this.props.onContextMenuWhenHover\n\t\t\t\t) {\n\t\t\t\t\tthis.props.onContextMenuWhenHover(this.getMoreProps(), e);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"mousedown\": {\n\t\t\t\tif (this.props.onMouseDown) {\n\t\t\t\t\tthis.props.onMouseDown(this.getMoreProps(), e);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"click\": {\n\t\t\t\tconst moreProps = this.getMoreProps();\n\t\t\t\tif (this.moreProps.hovering) {\n\t\t\t\t// console.error(\"TODO use this only for SAR, Line series\")\n\t\t\t\t\tthis.props.onClickWhenHover(moreProps, e);\n\t\t\t\t} else {\n\t\t\t\t\tthis.props.onClickOutside(moreProps, e);\n\t\t\t\t}\n\t\t\t\tif (this.props.onClick) {\n\t\t\t\t\tthis.props.onClick(moreProps, e);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"mousemove\": {\n\n\t\t\t\tconst prevHover = this.moreProps.hovering;\n\t\t\t\tthis.moreProps.hovering = this.isHover(e);\n\n\t\t\t\tconst { amIOnTop, setCursorClass } = this.context;\n\n\t\t\t\tif (this.moreProps.hovering\n\t\t\t\t\t&& !this.props.selected\n\t\t\t\t\t/* && !prevHover */\n\t\t\t\t\t&& amIOnTop(this.suscriberId)\n\t\t\t\t\t&& isDefined(this.props.onHover)) {\n\t\t\t\t\tsetCursorClass(\"react-stockcharts-pointer-cursor\");\n\t\t\t\t\tthis.iSetTheCursorClass = true;\n\t\t\t\t} else if (this.moreProps.hovering\n\t\t\t\t\t&& this.props.selected\n\t\t\t\t\t&& amIOnTop(this.suscriberId)) {\n\t\t\t\t\tsetCursorClass(this.props.interactiveCursorClass);\n\t\t\t\t\tthis.iSetTheCursorClass = true;\n\t\t\t\t} else if (prevHover\n\t\t\t\t\t&& !this.moreProps.hovering\n\t\t\t\t\t&& this.iSetTheCursorClass) {\n\t\t\t\t\tthis.iSetTheCursorClass = false;\n\t\t\t\t\tsetCursorClass(null);\n\t\t\t\t}\n\t\t\t\tconst moreProps = this.getMoreProps();\n\n\t\t\t\tif (this.moreProps.hovering && !prevHover) {\n\t\t\t\t\tif (this.props.onHover) {\n\t\t\t\t\t\tthis.props.onHover(moreProps, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (prevHover && !this.moreProps.hovering) {\n\t\t\t\t\tif (this.props.onUnHover) {\n\t\t\t\t\t\tthis.props.onUnHover(moreProps, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.props.onMouseMove) {\n\t\t\t\t\tthis.props.onMouseMove(moreProps, e);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"dblclick\": {\n\t\t\t\tconst moreProps = this.getMoreProps();\n\n\t\t\t\tif (this.props.onDoubleClick) {\n\t\t\t\t\tthis.props.onDoubleClick(moreProps, e);\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tthis.moreProps.hovering\n\t\t\t\t&& this.props.onDoubleClickWhenHover\n\t\t\t\t) {\n\t\t\t\t\tthis.props.onDoubleClickWhenHover(moreProps, e);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"pan\": {\n\t\t\t\tthis.moreProps.hovering = false;\n\t\t\t\tif (this.props.onPan) {\n\t\t\t\t\tthis.props.onPan(this.getMoreProps(), e);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"panend\": {\n\t\t\t\tif (this.props.onPanEnd) {\n\t\t\t\t\tthis.props.onPanEnd(this.getMoreProps(), e);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"dragstart\": {\n\t\t\t\tif (this.getPanConditions().draggable) {\n\t\t\t\t\tconst { amIOnTop } = this.context;\n\t\t\t\t\tif (amIOnTop(this.suscriberId)) {\n\t\t\t\t\t\tthis.dragInProgress = true;\n\t\t\t\t\t\tthis.props.onDragStart(this.getMoreProps(), e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.someDragInProgress = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"drag\": {\n\t\t\t\tif (this.dragInProgress && this.props.onDrag) {\n\t\t\t\t\tthis.props.onDrag(this.getMoreProps(), e);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"dragend\": {\n\t\t\t\tif (this.dragInProgress && this.props.onDragComplete) {\n\t\t\t\t\tthis.props.onDragComplete(this.getMoreProps(), e);\n\t\t\t\t}\n\t\t\t\tthis.dragInProgress = false;\n\t\t\t\tthis.someDragInProgress = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"dragcancel\": {\n\t\t\t\tif (this.dragInProgress || this.iSetTheCursorClass) {\n\t\t\t\t\tconst { setCursorClass } = this.context;\n\t\t\t\t\tsetCursorClass(null);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tisHover(e) {\n\t\treturn isDefined(this.props.isHover)\n\t\t\t? this.props.isHover(this.getMoreProps(), e)\n\t\t\t: false;\n\t}\n\tgetPanConditions() {\n\t\tconst draggable = (\n\t\t\t!!(this.props.selected && this.moreProps.hovering)\n\t\t\t|| (this.props.enableDragOnHover && this.moreProps.hovering)\n\t\t);\n\n\t\treturn {\n\t\t\tdraggable,\n\t\t\tpanEnabled: !this.props.disablePan,\n\t\t};\n\t}\n\tdraw({ trigger, force } = { force: false }) {\n\t\tconst type = aliases[trigger] || trigger;\n\t\tconst proceed = this.props.drawOn.indexOf(type) > -1;\n\n\t\tif (proceed\n\t\t\t|| this.props.selected /* this is to draw as soon as you select */\n\t\t\t|| force\n\t\t) {\n\t\t\tconst { chartCanvasType } = this.context;\n\t\t\tconst { canvasDraw } = this.props;\n\n\t\t\tif (isNotDefined(canvasDraw) || chartCanvasType === \"svg\") {\n\t\t\t\tconst { updateCount } = this.state;\n\t\t\t\tthis.setState({\n\t\t\t\t\tupdateCount: updateCount + 1,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.drawOnCanvas();\n\t\t\t}\n\t\t}\n\t}\n\tcomponentWillMount() {\n\t\tconst { subscribe, chartId } = this.context;\n\t\tconst { clip, edgeClip } = this.props;\n\n\t\tsubscribe(this.suscriberId,\n\t\t\t{\n\t\t\t\tchartId, clip, edgeClip,\n\t\t\t\tlistener: this.listener,\n\t\t\t\tdraw: this.draw,\n\t\t\t\tgetPanConditions: this.getPanConditions,\n\t\t\t}\n\t\t);\n\t\tthis.componentWillReceiveProps(this.props, this.context);\n\t}\n\tcomponentWillUnmount() {\n\t\tconst { unsubscribe } = this.context;\n\t\tunsubscribe(this.suscriberId);\n\t\tif (this.iSetTheCursorClass) {\n\t\t\tconst { setCursorClass } = this.context;\n\t\t\tsetCursorClass(null);\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tthis.componentDidUpdate(this.props);\n\t}\n\tcomponentDidUpdate(prevProps) {\n\t\tconst { chartCanvasType } = this.context;\n\t\tconst { canvasDraw, selected, interactiveCursorClass } = this.props;\n\n\t\tif (prevProps.selected !== selected) {\n\t\t\tconst { setCursorClass } = this.context;\n\t\t\tif (selected && this.moreProps.hovering) {\n\t\t\t\tthis.iSetTheCursorClass = true;\n\t\t\t\tsetCursorClass(interactiveCursorClass);\n\t\t\t} else {\n\t\t\t\tthis.iSetTheCursorClass = false;\n\t\t\t\tsetCursorClass(null);\n\t\t\t}\n\t\t}\n\t\tif (isDefined(canvasDraw)\n\t\t\t\t&& !this.evaluationInProgress\n\t\t\t\t// && !(this.someDragInProgress && this.props.selected)\n\t\t\t\t/*\n\t\t\t\tprevent double draw of interactive elements\n\t\t\t\tduring dragging / hover / click etc.\n\t\t\t\t*/\n\t\t\t\t&& chartCanvasType !== \"svg\") {\n\n\t\t\tthis.updateMoreProps(this.moreProps);\n\t\t\tthis.drawOnCanvas();\n\t\t}\n\t}\n\tcomponentWillReceiveProps(nextProps, nextContext) {\n\t\tconst { xScale, plotData, chartConfig, getMutableState } = nextContext;\n\n\t\tthis.props.debug(nextContext);\n\t\tthis.moreProps = {\n\t\t\t...this.moreProps,\n\t\t\t...getMutableState(),\n\t\t\t/*\n\t\t\t^ this is so\n\t\t\tmouseXY, currentCharts, currentItem are available to\n\t\t\tnewly created components like MouseHoverText which\n\t\t\tis created right after a new interactive object is drawn\n\t\t\t*/\n\t\t\txScale, plotData, chartConfig\n\t\t};\n\t}\n\tgetMoreProps() {\n\t\tconst {\n\t\t\txScale,\n\t\t\tplotData,\n\t\t\tchartConfig,\n\t\t\tmorePropsDecorator,\n\t\t\txAccessor,\n\t\t\tdisplayXAccessor,\n\t\t\twidth,\n\t\t\theight,\n\t\t} = this.context;\n\n\t\tconst { chartId, fullData } = this.context;\n\n\t\tconst moreProps = {\n\t\t\txScale, plotData, chartConfig,\n\t\t\txAccessor, displayXAccessor,\n\t\t\twidth, height,\n\t\t\tchartId,\n\t\t\tfullData,\n\t\t\t...this.moreProps,\n\t\t};\n\n\t\treturn (morePropsDecorator || identity)(moreProps);\n\t}\n\tpreCanvasDraw() {\n\t\t// do nothing\n\t}\n\tpostCanvasDraw() {\n\t}\n\tdrawOnCanvas() {\n\t\tconst { canvasDraw, canvasToDraw } = this.props;\n\t\tconst { getCanvasContexts } = this.context;\n\n\t\tconst moreProps = this.getMoreProps();\n\n\t\tconst ctx = canvasToDraw(getCanvasContexts());\n\n\t\tthis.preCanvasDraw(ctx, moreProps);\n\t\tcanvasDraw(ctx, moreProps);\n\t\tthis.postCanvasDraw(ctx, moreProps);\n\t}\n\trender() {\n\t\tconst { chartCanvasType, chartId } = this.context;\n\t\tconst { canvasDraw, clip, svgDraw } = this.props;\n\n\t\tif (isDefined(canvasDraw) && chartCanvasType !== \"svg\") {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst suffix = isDefined(chartId) ? \"-\" + chartId : \"\";\n\n\t\tconst style = clip ? { \"clipPath\": `url(#chart-area-clip${suffix})` } : null;\n\n\t\treturn <g style={style}>{svgDraw(this.getMoreProps())}</g>;\n\t}\n}\n\nGenericComponent.propTypes = {\n\tsvgDraw: PropTypes.func.isRequired,\n\tcanvasDraw: PropTypes.func,\n\n\tdrawOn: PropTypes.array.isRequired,\n\n\tclip: PropTypes.bool.isRequired,\n\tedgeClip: PropTypes.bool.isRequired,\n\tinteractiveCursorClass: PropTypes.string,\n\n\tselected: PropTypes.bool.isRequired,\n\tenableDragOnHover: PropTypes.bool.isRequired,\n\tdisablePan: PropTypes.bool.isRequired,\n\n\tcanvasToDraw: PropTypes.func.isRequired,\n\n\tisHover: PropTypes.func,\n\n\tonClick: PropTypes.func,\n\tonClickWhenHover: PropTypes.func,\n\tonClickOutside: PropTypes.func,\n\n\tonPan: PropTypes.func,\n\tonPanEnd: PropTypes.func,\n\tonDragStart: PropTypes.func,\n\tonDrag: PropTypes.func,\n\tonDragComplete: PropTypes.func,\n\tonDoubleClick: PropTypes.func,\n\tonDoubleClickWhenHover: PropTypes.func,\n\tonContextMenu: PropTypes.func,\n\tonContextMenuWhenHover: PropTypes.func,\n\tonMouseMove: PropTypes.func,\n\tonMouseDown: PropTypes.func,\n\tonHover: PropTypes.func,\n\tonUnHover: PropTypes.func,\n\n\tdebug: PropTypes.func,\n\t// owner: PropTypes.string.isRequired,\n};\n\nGenericComponent.defaultProps = {\n\tsvgDraw: functor(null),\n\tdraw: [],\n\tcanvasToDraw: contexts => contexts.mouseCoord,\n\tclip: true,\n\tedgeClip: false,\n\tselected: false,\n\tdisablePan: false,\n\tenableDragOnHover: false,\n\n\tonClickWhenHover: noop,\n\tonClickOutside: noop,\n\tonDragStart: noop,\n\tonMouseMove: noop,\n\tonMouseDown: noop,\n\tdebug: noop,\n};\n\nGenericComponent.contextTypes = {\n\twidth: PropTypes.number.isRequired,\n\theight: PropTypes.number.isRequired,\n\tmargin: PropTypes.object.isRequired,\n\tchartId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\tgetCanvasContexts: PropTypes.func,\n\n\tchartCanvasType: PropTypes.string,\n\txScale: PropTypes.func.isRequired,\n\txAccessor: PropTypes.func.isRequired,\n\tdisplayXAccessor: PropTypes.func.isRequired,\n\tplotData: PropTypes.array.isRequired,\n\tfullData: PropTypes.array.isRequired,\n\n\tchartConfig: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t]).isRequired,\n\n\tmorePropsDecorator: PropTypes.func,\n\tgenerateSubscriptionId: PropTypes.func,\n\tgetMutableState: PropTypes.func.isRequired,\n\n\tamIOnTop: PropTypes.func.isRequired,\n\tsubscribe: PropTypes.func.isRequired,\n\tunsubscribe: PropTypes.func.isRequired,\n\tsetCursorClass: PropTypes.func.isRequired,\n};\n\nexport default GenericComponent;\n\nexport function getAxisCanvas(contexts) {\n\treturn contexts.axes;\n}\n\nexport function getMouseCanvas(contexts) {\n\treturn contexts.mouseCoord;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}