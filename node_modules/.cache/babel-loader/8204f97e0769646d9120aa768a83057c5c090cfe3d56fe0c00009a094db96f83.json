{"ast":null,"code":"import { GenericComponent, functor, ChartCanvasContext } from \"@react-financial-charts/core\";\nimport * as React from \"react\";\nexport class Label extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.drawOnCanvas = (ctx, moreProps) => {\n      ctx.save();\n      const {\n        textAlign = \"center\",\n        fontFamily,\n        fontSize,\n        fontWeight,\n        rotate\n      } = this.props;\n      const {\n        canvasOriginX,\n        canvasOriginY,\n        margin,\n        ratio\n      } = this.context;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.scale(ratio, ratio);\n      if (canvasOriginX !== undefined) {\n        ctx.translate(canvasOriginX, canvasOriginY);\n      } else {\n        ctx.translate(margin.left + 0.5 * ratio, margin.top + 0.5 * ratio);\n      }\n      const {\n        xScale,\n        chartConfig,\n        xAccessor\n      } = moreProps;\n      const yScale = Array.isArray(chartConfig) || !chartConfig ? undefined : chartConfig.yScale;\n      const {\n        xPos,\n        yPos,\n        fillStyle,\n        text\n      } = this.helper(moreProps, xAccessor, xScale, yScale);\n      ctx.save();\n      ctx.translate(xPos, yPos);\n      if (rotate !== undefined) {\n        const radians = rotate / 180 * Math.PI;\n        ctx.rotate(radians);\n      }\n      if (fontFamily !== undefined) {\n        ctx.font = `${fontWeight} ${fontSize}px ${fontFamily}`;\n      }\n      if (fillStyle !== undefined) {\n        ctx.fillStyle = fillStyle;\n      }\n      if (textAlign !== undefined) {\n        ctx.textAlign = textAlign;\n      }\n      ctx.beginPath();\n      ctx.fillText(text, 0, 0);\n      ctx.restore();\n    };\n    this.helper = (moreProps, xAccessor, xScale, yScale) => {\n      const {\n        x,\n        y,\n        datum,\n        fillStyle,\n        text\n      } = this.props;\n      const {\n        plotData\n      } = moreProps;\n      const xFunc = functor(x);\n      const yFunc = functor(y);\n      const [xPos, yPos] = [xFunc({\n        xScale,\n        xAccessor,\n        datum,\n        plotData\n      }), yFunc({\n        yScale,\n        datum,\n        plotData\n      })];\n      return {\n        xPos,\n        yPos,\n        text: functor(text)(datum),\n        fillStyle: functor(fillStyle)(datum)\n      };\n    };\n  }\n  render() {\n    const {\n      selectCanvas\n    } = this.props;\n    return React.createElement(GenericComponent, {\n      canvasToDraw: selectCanvas,\n      canvasDraw: this.drawOnCanvas,\n      drawOn: []\n    });\n  }\n}\nLabel.defaultProps = {\n  fontFamily: \"-apple-system, system-ui, Roboto, 'Helvetica Neue', Ubuntu, sans-serif\",\n  fontSize: 64,\n  fontWeight: \"bold\",\n  fillStyle: \"#dcdcdc\",\n  rotate: 0,\n  x: ({\n    xScale,\n    xAccessor,\n    datum\n  }) => xScale(xAccessor(datum)),\n  selectCanvas: canvases => canvases.bg\n};\nLabel.contextType = ChartCanvasContext;","map":{"version":3,"names":["GenericComponent","functor","ChartCanvasContext","React","Label","Component","constructor","drawOnCanvas","ctx","moreProps","save","textAlign","fontFamily","fontSize","fontWeight","rotate","props","canvasOriginX","canvasOriginY","margin","ratio","context","setTransform","scale","undefined","translate","left","top","xScale","chartConfig","xAccessor","yScale","Array","isArray","xPos","yPos","fillStyle","text","helper","radians","Math","PI","font","beginPath","fillText","restore","x","y","datum","plotData","xFunc","yFunc","render","selectCanvas","createElement","canvasToDraw","canvasDraw","drawOn","defaultProps","canvases","bg","contextType"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\annotations\\src\\Label.tsx"],"sourcesContent":["import { GenericComponent, functor, ChartCanvasContext } from \"@react-financial-charts/core\";\nimport { ScaleContinuousNumeric } from \"d3-scale\";\nimport * as React from \"react\";\n\nexport interface LabelProps {\n    readonly datum?: any;\n    readonly fillStyle?: string | ((datum: any) => string);\n    readonly fontFamily?: string;\n    readonly fontSize?: number;\n    readonly fontWeight?: string;\n    readonly rotate?: number;\n    readonly selectCanvas?: (canvases: any) => any;\n    readonly text?: string | ((datum: any) => string);\n    readonly textAlign?: CanvasTextAlign;\n    readonly x:\n        | number\n        | ((xScale: ScaleContinuousNumeric<number, number>, xAccessor: any, datum: any, plotData: any[]) => number);\n    readonly xAccessor?: (datum: any) => any;\n    readonly xScale?: ScaleContinuousNumeric<number, number>;\n    readonly y: number | ((yScale: ScaleContinuousNumeric<number, number>, datum: any, plotData: any[]) => number);\n    readonly yScale?: ScaleContinuousNumeric<number, number>;\n}\n\nexport class Label extends React.Component<LabelProps> {\n    public static defaultProps = {\n        fontFamily: \"-apple-system, system-ui, Roboto, 'Helvetica Neue', Ubuntu, sans-serif\",\n        fontSize: 64,\n        fontWeight: \"bold\",\n        fillStyle: \"#dcdcdc\",\n        rotate: 0,\n        x: ({ xScale, xAccessor, datum }: any) => xScale(xAccessor(datum)),\n        selectCanvas: (canvases: any) => canvases.bg,\n    };\n\n    public static contextType = ChartCanvasContext;\n\n    public render() {\n        const { selectCanvas } = this.props;\n\n        return <GenericComponent canvasToDraw={selectCanvas} canvasDraw={this.drawOnCanvas} drawOn={[]} />;\n    }\n\n    private readonly drawOnCanvas = (ctx: CanvasRenderingContext2D, moreProps: any) => {\n        ctx.save();\n\n        const { textAlign = \"center\", fontFamily, fontSize, fontWeight, rotate } = this.props;\n\n        const { canvasOriginX, canvasOriginY, margin, ratio } = this.context;\n\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.scale(ratio, ratio);\n\n        if (canvasOriginX !== undefined) {\n            ctx.translate(canvasOriginX, canvasOriginY);\n        } else {\n            ctx.translate(margin.left + 0.5 * ratio, margin.top + 0.5 * ratio);\n        }\n\n        const { xScale, chartConfig, xAccessor } = moreProps;\n\n        const yScale = Array.isArray(chartConfig) || !chartConfig ? undefined : chartConfig.yScale;\n\n        const { xPos, yPos, fillStyle, text } = this.helper(moreProps, xAccessor, xScale, yScale);\n\n        ctx.save();\n        ctx.translate(xPos, yPos);\n        if (rotate !== undefined) {\n            const radians = (rotate / 180) * Math.PI;\n\n            ctx.rotate(radians);\n        }\n\n        if (fontFamily !== undefined) {\n            ctx.font = `${fontWeight} ${fontSize}px ${fontFamily}`;\n        }\n        if (fillStyle !== undefined) {\n            ctx.fillStyle = fillStyle;\n        }\n        if (textAlign !== undefined) {\n            ctx.textAlign = textAlign;\n        }\n\n        ctx.beginPath();\n        ctx.fillText(text, 0, 0);\n        ctx.restore();\n    };\n\n    private readonly helper = (\n        moreProps: any,\n        xAccessor: any,\n        xScale: ScaleContinuousNumeric<number, number>,\n        yScale: ScaleContinuousNumeric<number, number>,\n    ) => {\n        const { x, y, datum, fillStyle, text } = this.props;\n\n        const { plotData } = moreProps;\n\n        const xFunc = functor(x);\n        const yFunc = functor(y);\n\n        const [xPos, yPos] = [xFunc({ xScale, xAccessor, datum, plotData }), yFunc({ yScale, datum, plotData })];\n\n        return {\n            xPos,\n            yPos,\n            text: functor(text)(datum),\n            fillStyle: functor(fillStyle)(datum),\n        };\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}