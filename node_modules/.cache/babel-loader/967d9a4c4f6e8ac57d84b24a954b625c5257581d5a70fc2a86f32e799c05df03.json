{"ast":null,"code":"import { mappedSlidingWindow } from \"../utils\";\nimport { SAR as defaultOptions } from \"./defaultOptionsForComputation\";\nfunction calc(prev, now) {\n  const risingSar = prev.risingSar + prev.af * (prev.risingEp - prev.risingSar);\n  const fallingSar = prev.fallingSar - prev.af * (prev.fallingSar - prev.fallingEp);\n  const risingEp = Math.max(prev.risingEp, now.high);\n  const fallingEp = Math.min(prev.fallingEp, now.low);\n  return {\n    risingSar,\n    fallingSar,\n    risingEp,\n    fallingEp\n  };\n}\nexport default function () {\n  let options = defaultOptions;\n  const calculator = data => {\n    const {\n      accelerationFactor,\n      maxAccelerationFactor\n    } = options;\n    const algorithm = mappedSlidingWindow().windowSize(2)\n    // @ts-ignore\n    .undefinedValue(({\n      high,\n      low\n    }) => {\n      return {\n        risingSar: low,\n        risingEp: high,\n        fallingSar: high,\n        fallingEp: low,\n        af: accelerationFactor\n      };\n    }).accumulator(([prev, now]) => {\n      const {\n        risingSar,\n        fallingSar,\n        risingEp,\n        fallingEp\n      } = calc(prev, now);\n      if (prev.use === undefined && risingSar > now.low && fallingSar < now.high) {\n        return {\n          risingSar,\n          fallingSar,\n          risingEp,\n          fallingEp\n        };\n      }\n      const use = prev.use !== undefined ? prev.use === \"rising\" ? risingSar > now.low ? \"falling\" : \"rising\" : fallingSar < now.high ? \"rising\" : \"falling\" : risingSar > now.low ? \"falling\" : \"rising\";\n      const current = prev.use === use ? {\n        af: Math.min(maxAccelerationFactor, prev.af + accelerationFactor),\n        fallingEp,\n        risingEp,\n        fallingSar,\n        risingSar\n      } : {\n        af: accelerationFactor,\n        fallingEp: now.low,\n        risingEp: now.high,\n        fallingSar: Math.max(prev.risingEp, now.high),\n        risingSar: Math.min(prev.fallingEp, now.low)\n      };\n      const {\n        date,\n        high,\n        low\n      } = now;\n      return Object.assign(Object.assign({\n        date,\n        high,\n        low\n      }, current), {\n        use,\n        sar: use === \"falling\" ? current.fallingSar : current.risingSar\n      });\n    });\n    const calculatedData = algorithm(data).map(d => d.sar);\n    return calculatedData;\n  };\n  calculator.undefinedLength = () => {\n    return 1;\n  };\n  calculator.options = newOptions => {\n    if (newOptions === undefined) {\n      return options;\n    }\n    options = Object.assign(Object.assign({}, defaultOptions), newOptions);\n    return calculator;\n  };\n  return calculator;\n}","map":{"version":3,"names":["mappedSlidingWindow","SAR","defaultOptions","calc","prev","now","risingSar","af","risingEp","fallingSar","fallingEp","Math","max","high","min","low","options","calculator","data","accelerationFactor","maxAccelerationFactor","algorithm","windowSize","undefinedValue","accumulator","use","undefined","current","date","Object","assign","sar","calculatedData","map","d","undefinedLength","newOptions"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\indicators\\src\\calculator\\sar.ts"],"sourcesContent":["import { mappedSlidingWindow } from \"../utils\";\nimport { SAR as defaultOptions } from \"./defaultOptionsForComputation\";\n\nfunction calc(prev: any, now: any) {\n    const risingSar = prev.risingSar + prev.af * (prev.risingEp - prev.risingSar);\n\n    const fallingSar = prev.fallingSar - prev.af * (prev.fallingSar - prev.fallingEp);\n\n    const risingEp = Math.max(prev.risingEp, now.high);\n    const fallingEp = Math.min(prev.fallingEp, now.low);\n\n    return {\n        risingSar,\n        fallingSar,\n        risingEp,\n        fallingEp,\n    };\n}\n\nexport interface SAROptions {\n    readonly accelerationFactor: number;\n    readonly maxAccelerationFactor: number;\n}\n\nexport default function () {\n    let options = defaultOptions;\n\n    const calculator = (data: any[]) => {\n        const { accelerationFactor, maxAccelerationFactor } = options;\n\n        const algorithm = mappedSlidingWindow()\n            .windowSize(2)\n            // @ts-ignore\n            .undefinedValue(({ high, low }) => {\n                return {\n                    risingSar: low,\n                    risingEp: high,\n                    fallingSar: high,\n                    fallingEp: low,\n                    af: accelerationFactor,\n                };\n            })\n            .accumulator(([prev, now]: any) => {\n                const { risingSar, fallingSar, risingEp, fallingEp } = calc(prev, now);\n\n                if (prev.use === undefined && risingSar > now.low && fallingSar < now.high) {\n                    return {\n                        risingSar,\n                        fallingSar,\n                        risingEp,\n                        fallingEp,\n                    };\n                }\n\n                const use =\n                    prev.use !== undefined\n                        ? prev.use === \"rising\"\n                            ? risingSar > now.low\n                                ? \"falling\"\n                                : \"rising\"\n                            : fallingSar < now.high\n                            ? \"rising\"\n                            : \"falling\"\n                        : risingSar > now.low\n                        ? \"falling\"\n                        : \"rising\";\n\n                const current =\n                    prev.use === use\n                        ? {\n                              af: Math.min(maxAccelerationFactor, prev.af + accelerationFactor),\n                              fallingEp,\n                              risingEp,\n                              fallingSar,\n                              risingSar,\n                          }\n                        : {\n                              af: accelerationFactor,\n                              fallingEp: now.low,\n                              risingEp: now.high,\n                              fallingSar: Math.max(prev.risingEp, now.high),\n                              risingSar: Math.min(prev.fallingEp, now.low),\n                          };\n\n                const { date, high, low } = now;\n\n                return {\n                    date,\n                    high,\n                    low,\n                    ...current,\n                    use,\n                    sar: use === \"falling\" ? current.fallingSar : current.risingSar,\n                };\n            });\n\n        const calculatedData = algorithm(data).map((d: any) => d.sar);\n\n        return calculatedData;\n    };\n\n    calculator.undefinedLength = () => {\n        return 1;\n    };\n\n    calculator.options = (newOptions?: SAROptions) => {\n        if (newOptions === undefined) {\n            return options;\n        }\n\n        options = { ...defaultOptions, ...newOptions };\n\n        return calculator;\n    };\n\n    return calculator;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}