{"ast":null,"code":"import { ascending, descending, histogram as d3Histogram, max, merge, rollup, sum, zip } from \"d3-array\";\nimport { scaleLinear } from \"d3-scale\";\nimport * as React from \"react\";\nimport { accumulatingWindow, functor, head, identity, getAxisCanvas, GenericChartComponent, last } from \"@react-financial-charts/core\";\nexport class VolumeProfileSeries extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.drawOnCanvas = (ctx, moreProps) => {\n      const {\n        xAccessor,\n        width\n      } = moreProps;\n      const {\n        rects,\n        sessionBg\n      } = this.helper(this.props, moreProps, xAccessor, width);\n      this.drawOnCanvasContext(ctx, rects, sessionBg);\n    };\n    this.drawOnCanvasContext = (ctx, rects, sessionBg) => {\n      const {\n        sessionBackGround,\n        showSessionBackground\n      } = this.props;\n      if (showSessionBackground) {\n        if (sessionBackGround !== undefined) {\n          ctx.fillStyle = sessionBackGround;\n        }\n        sessionBg.forEach(each => {\n          const {\n            x,\n            y,\n            height,\n            width\n          } = each;\n          ctx.beginPath();\n          ctx.rect(x, y, width, height);\n          ctx.closePath();\n          ctx.fill();\n        });\n      }\n      rects.forEach(each => {\n        const {\n          x,\n          y,\n          height,\n          w1,\n          w2,\n          stroke1,\n          stroke2,\n          fill1,\n          fill2\n        } = each;\n        if (w1 > 0) {\n          ctx.fillStyle = fill1;\n          if (stroke1 !== \"none\") {\n            ctx.strokeStyle = stroke1;\n          }\n          ctx.beginPath();\n          ctx.rect(x, y, w1, height);\n          ctx.closePath();\n          ctx.fill();\n          if (stroke1 !== \"none\") {\n            ctx.stroke();\n          }\n        }\n        if (w2 > 0) {\n          ctx.fillStyle = fill2;\n          if (stroke2 !== \"none\") {\n            ctx.strokeStyle = stroke2;\n          }\n          ctx.beginPath();\n          ctx.rect(x + w1, y, w2, height);\n          ctx.closePath();\n          ctx.fill();\n          if (stroke2 !== \"none\") {\n            ctx.stroke();\n          }\n        }\n      });\n    };\n    this.helper = (props, moreProps, xAccessor, width) => {\n      const {\n        xScale: realXScale,\n        chartConfig: {\n          yScale\n        },\n        plotData\n      } = moreProps;\n      const {\n        sessionStart,\n        bySession,\n        partialStartOK,\n        partialEndOK,\n        bins,\n        maxProfileWidthPercent,\n        source,\n        volume,\n        absoluteChange,\n        orient,\n        fill,\n        stroke\n      } = props;\n      const sessionBuilder = accumulatingWindow().discardTillStart(!partialStartOK).discardTillEnd(!partialEndOK).accumulateTill((d, i) => {\n        return sessionStart(Object.assign({\n          d,\n          i\n        }, moreProps));\n      }).accumulator(identity);\n      const dx = plotData.length > 1 ? realXScale(xAccessor(plotData[1])) - realXScale(xAccessor(head(plotData))) : 0;\n      const sessions = bySession ? sessionBuilder(plotData) : [plotData];\n      const allRects = sessions.map(session => {\n        const begin = bySession ? realXScale(xAccessor(head(session))) : 0;\n        const finish = bySession ? realXScale(xAccessor(last(session))) : width;\n        const sessionWidth = finish - begin + dx;\n        const histogram2 = d3Histogram().value(source).thresholds(bins);\n        const rolledup = data => {\n          const sortFunction = orient === \"right\" ? descending : ascending;\n          const sortedData = data.sort((a, b) => sortFunction(a.direction, b.direction));\n          return rollup(sortedData, leaves => sum(leaves, d => d.volume), d => d.direction);\n        };\n        const values = histogram2(session);\n        const volumeInBins = values.map(arr => arr.map(d => {\n          return absoluteChange(d) > 0 ? {\n            direction: \"up\",\n            volume: volume(d)\n          } : {\n            direction: \"down\",\n            volume: volume(d)\n          };\n        })).map(arr => Array.from(rolledup(arr)));\n        const volumeValues = volumeInBins.map(each => sum(each.map(d => d[1])));\n        const base = xScaleD => head(xScaleD.range());\n        const [start, end] = orient === \"right\" ? [begin, begin + sessionWidth * maxProfileWidthPercent / 100] : [finish, finish - sessionWidth * (100 - maxProfileWidthPercent) / 100];\n        const xScale = scaleLinear().domain([0, max(volumeValues)]).range([start, end]);\n        const totalVolumes = volumeInBins.map(volumes => {\n          const totalVolume = sum(volumes, d => d[1]);\n          const totalVolumeX = xScale(totalVolume);\n          const widthLocal = base(xScale) - totalVolumeX;\n          const x = widthLocal < 0 ? totalVolumeX + widthLocal : totalVolumeX;\n          const ws = volumes.map(d => {\n            return {\n              type: d[0],\n              width: d[1] * Math.abs(widthLocal) / totalVolume\n            };\n          });\n          return {\n            x,\n            ws,\n            totalVolumeX\n          };\n        });\n        // @ts-ignore\n        const rects = zip(values, totalVolumes)\n        // @ts-ignore\n        .map(([d, {\n          x,\n          ws\n        }]) => {\n          const w1 = ws[0] || {\n            type: \"up\",\n            width: 0\n          };\n          const w2 = ws[1] || {\n            type: \"down\",\n            width: 0\n          };\n          return {\n            y: yScale(d.x1),\n            height: yScale(d.x1) - yScale(d.x0),\n            x,\n            width,\n            w1: w1.width,\n            w2: w2.width,\n            stroke1: functor(stroke)(w1),\n            stroke2: functor(stroke)(w2),\n            fill1: functor(fill)(w1),\n            fill2: functor(fill)(w2)\n          };\n        });\n        const sessionBg = {\n          x: begin,\n          y: last(rects).y,\n          height: head(rects).y - last(rects).y + head(rects).height,\n          width: sessionWidth\n        };\n        return {\n          rects,\n          sessionBg\n        };\n      });\n      return {\n        rects: merge(allRects.map(d => d.rects)),\n        sessionBg: allRects.map(d => d.sessionBg)\n      };\n    };\n  }\n  render() {\n    return React.createElement(GenericChartComponent, {\n      canvasDraw: this.drawOnCanvas,\n      canvasToDraw: getAxisCanvas,\n      drawOn: [\"pan\"]\n    });\n  }\n}\nVolumeProfileSeries.defaultProps = {\n  absoluteChange: d => d.absoluteChange,\n  bins: 20,\n  bySession: false,\n  fill: ({\n    type\n  }) => type === \"up\" ? \"rgba(38, 166, 154, 0.5)\" : \"rgba(239, 83, 80, 0.5)\",\n  maxProfileWidthPercent: 50,\n  orient: \"left\",\n  partialStartOK: true,\n  partialEndOK: true,\n  sessionBackGround: \"rgba(70, 130, 180, 0.3)\",\n  sessionStart: ({\n    d,\n    i,\n    plotData\n  }) => i > 0 && plotData[i - 1].date.getMonth() !== d.date.getMonth(),\n  showSessionBackground: false,\n  source: d => d.close,\n  stroke: \"#FFFFFF\",\n  volume: d => d.volume\n};","map":{"version":3,"names":["ascending","descending","histogram","d3Histogram","max","merge","rollup","sum","zip","scaleLinear","React","accumulatingWindow","functor","head","identity","getAxisCanvas","GenericChartComponent","last","VolumeProfileSeries","Component","constructor","drawOnCanvas","ctx","moreProps","xAccessor","width","rects","sessionBg","helper","props","drawOnCanvasContext","sessionBackGround","showSessionBackground","undefined","fillStyle","forEach","each","x","y","height","beginPath","rect","closePath","fill","w1","w2","stroke1","stroke2","fill1","fill2","strokeStyle","stroke","xScale","realXScale","chartConfig","yScale","plotData","sessionStart","bySession","partialStartOK","partialEndOK","bins","maxProfileWidthPercent","source","volume","absoluteChange","orient","sessionBuilder","discardTillStart","discardTillEnd","accumulateTill","d","i","Object","assign","accumulator","dx","length","sessions","allRects","map","session","begin","finish","sessionWidth","histogram2","value","thresholds","rolledup","data","sortFunction","sortedData","sort","a","b","direction","leaves","values","volumeInBins","arr","Array","from","volumeValues","base","xScaleD","range","start","end","domain","totalVolumes","volumes","totalVolume","totalVolumeX","widthLocal","ws","type","Math","abs","x1","x0","render","createElement","canvasDraw","canvasToDraw","drawOn","defaultProps","date","getMonth","close"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\series\\src\\VolumeProfileSeries.tsx"],"sourcesContent":["import { ascending, descending, histogram as d3Histogram, max, merge, rollup, sum, zip } from \"d3-array\";\nimport { scaleLinear } from \"d3-scale\";\nimport * as React from \"react\";\nimport {\n    accumulatingWindow,\n    functor,\n    head,\n    identity,\n    getAxisCanvas,\n    GenericChartComponent,\n    last,\n} from \"@react-financial-charts/core\";\n\nexport interface VolumeProfileSeriesProps {\n    readonly absoluteChange: (datum: any) => number;\n    readonly bins: number;\n    readonly bySession?: boolean;\n    readonly fill?: (widthType: { type: \"up\" | \"down\"; width: number }) => string;\n    readonly maxProfileWidthPercent: number;\n    readonly orient?: \"left\" | \"right\";\n    readonly partialStartOK?: boolean;\n    readonly partialEndOK?: boolean;\n    readonly sessionBackGround?: string;\n    readonly sessionStart: ({ d, i, plotData }: any) => boolean;\n    readonly showSessionBackground?: boolean;\n    readonly source: (d: number, i: number, data: ArrayLike<number>) => number;\n    readonly stroke?: string;\n    readonly volume: (datum: any) => number;\n}\n\nexport class VolumeProfileSeries extends React.Component<VolumeProfileSeriesProps> {\n    public static defaultProps = {\n        absoluteChange: (d: any) => d.absoluteChange,\n        bins: 20,\n        bySession: false,\n        fill: ({ type }: { type: \"up\" | \"down\"; width: number }) =>\n            type === \"up\" ? \"rgba(38, 166, 154, 0.5)\" : \"rgba(239, 83, 80, 0.5)\",\n        maxProfileWidthPercent: 50,\n        orient: \"left\",\n        partialStartOK: true,\n        partialEndOK: true,\n        sessionBackGround: \"rgba(70, 130, 180, 0.3)\",\n        sessionStart: ({ d, i, plotData }: any) => i > 0 && plotData[i - 1].date.getMonth() !== d.date.getMonth(),\n        showSessionBackground: false,\n        source: (d: any) => d.close,\n        stroke: \"#FFFFFF\",\n        volume: (d: any) => d.volume,\n    };\n\n    public render() {\n        return <GenericChartComponent canvasDraw={this.drawOnCanvas} canvasToDraw={getAxisCanvas} drawOn={[\"pan\"]} />;\n    }\n\n    private readonly drawOnCanvas = (ctx: CanvasRenderingContext2D, moreProps: any) => {\n        const { xAccessor, width } = moreProps;\n\n        const { rects, sessionBg } = this.helper(this.props, moreProps, xAccessor, width);\n\n        this.drawOnCanvasContext(ctx, rects, sessionBg);\n    };\n\n    private readonly drawOnCanvasContext = (ctx: CanvasRenderingContext2D, rects: any[], sessionBg: any[]) => {\n        const { sessionBackGround, showSessionBackground } = this.props;\n\n        if (showSessionBackground) {\n            if (sessionBackGround !== undefined) {\n                ctx.fillStyle = sessionBackGround;\n            }\n\n            sessionBg.forEach((each: any) => {\n                const { x, y, height, width } = each;\n\n                ctx.beginPath();\n                ctx.rect(x, y, width, height);\n                ctx.closePath();\n                ctx.fill();\n            });\n        }\n\n        rects.forEach((each: any) => {\n            const { x, y, height, w1, w2, stroke1, stroke2, fill1, fill2 } = each;\n\n            if (w1 > 0) {\n                ctx.fillStyle = fill1;\n                if (stroke1 !== \"none\") {\n                    ctx.strokeStyle = stroke1;\n                }\n\n                ctx.beginPath();\n                ctx.rect(x, y, w1, height);\n                ctx.closePath();\n                ctx.fill();\n\n                if (stroke1 !== \"none\") {\n                    ctx.stroke();\n                }\n            }\n\n            if (w2 > 0) {\n                ctx.fillStyle = fill2;\n                if (stroke2 !== \"none\") {\n                    ctx.strokeStyle = stroke2;\n                }\n\n                ctx.beginPath();\n                ctx.rect(x + w1, y, w2, height);\n                ctx.closePath();\n                ctx.fill();\n\n                if (stroke2 !== \"none\") {\n                    ctx.stroke();\n                }\n            }\n        });\n    };\n\n    private readonly helper = (props: VolumeProfileSeriesProps, moreProps: any, xAccessor: any, width: number) => {\n        const {\n            xScale: realXScale,\n            chartConfig: { yScale },\n            plotData,\n        } = moreProps;\n\n        const {\n            sessionStart,\n            bySession,\n            partialStartOK,\n            partialEndOK,\n            bins,\n            maxProfileWidthPercent,\n            source,\n            volume,\n            absoluteChange,\n            orient,\n            fill,\n            stroke,\n        } = props;\n\n        const sessionBuilder = accumulatingWindow()\n            .discardTillStart(!partialStartOK)\n            .discardTillEnd(!partialEndOK)\n            .accumulateTill((d: any, i: any) => {\n                return sessionStart({ d, i, ...moreProps });\n            })\n            .accumulator(identity);\n\n        const dx = plotData.length > 1 ? realXScale(xAccessor(plotData[1])) - realXScale(xAccessor(head(plotData))) : 0;\n\n        const sessions = bySession ? sessionBuilder(plotData) : [plotData];\n\n        const allRects = sessions.map((session: any) => {\n            const begin = bySession ? realXScale(xAccessor(head(session))) : 0;\n            const finish = bySession ? realXScale(xAccessor(last(session))) : width;\n            const sessionWidth = finish - begin + dx;\n\n            const histogram2 = d3Histogram().value(source).thresholds(bins);\n\n            const rolledup = (data: any[]) => {\n                const sortFunction = orient === \"right\" ? descending : ascending;\n\n                const sortedData = data.sort((a, b) => sortFunction(a.direction, b.direction));\n\n                return rollup(\n                    sortedData,\n                    (leaves) => sum<any>(leaves, (d) => d.volume),\n                    (d) => d.direction,\n                );\n            };\n\n            const values = histogram2(session);\n\n            const volumeInBins = values\n                .map((arr) =>\n                    arr.map((d) => {\n                        return absoluteChange(d) > 0\n                            ? { direction: \"up\", volume: volume(d) }\n                            : { direction: \"down\", volume: volume(d) };\n                    }),\n                )\n                .map((arr) => Array.from(rolledup(arr)));\n\n            const volumeValues = volumeInBins.map((each) => sum(each.map((d) => d[1])));\n\n            const base = (xScaleD: any) => head(xScaleD.range());\n\n            const [start, end] =\n                orient === \"right\"\n                    ? [begin, begin + (sessionWidth * maxProfileWidthPercent) / 100]\n                    : [finish, finish - (sessionWidth * (100 - maxProfileWidthPercent)) / 100];\n\n            const xScale = scaleLinear()\n                .domain([0, max(volumeValues)!])\n                .range([start, end]);\n\n            const totalVolumes = volumeInBins.map((volumes) => {\n                const totalVolume = sum<any>(volumes, (d) => d[1]);\n                const totalVolumeX = xScale(totalVolume);\n                const widthLocal = base(xScale) - totalVolumeX;\n                const x = widthLocal < 0 ? totalVolumeX + widthLocal : totalVolumeX;\n\n                const ws = volumes.map((d) => {\n                    return {\n                        type: d[0],\n                        width: (d[1] * Math.abs(widthLocal)) / totalVolume,\n                    };\n                });\n\n                return { x, ws, totalVolumeX };\n            });\n\n            // @ts-ignore\n            const rects = zip(values, totalVolumes)\n                // @ts-ignore\n                .map(([d, { x, ws }]) => {\n                    const w1 = ws[0] || { type: \"up\", width: 0 };\n                    const w2 = ws[1] || { type: \"down\", width: 0 };\n\n                    return {\n                        y: yScale(d.x1),\n                        height: yScale(d.x1) - yScale(d.x0),\n                        x,\n                        width,\n                        w1: w1.width,\n                        w2: w2.width,\n                        stroke1: functor(stroke)(w1),\n                        stroke2: functor(stroke)(w2),\n                        fill1: functor(fill)(w1),\n                        fill2: functor(fill)(w2),\n                    };\n                });\n\n            const sessionBg = {\n                x: begin,\n                y: last(rects).y,\n                height: head(rects).y - last(rects).y + head(rects).height,\n                width: sessionWidth,\n            };\n\n            return { rects, sessionBg };\n        });\n\n        return {\n            rects: merge<any>(allRects.map((d: any) => d.rects)),\n            sessionBg: allRects.map((d: any) => d.sessionBg),\n        };\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}