{"ast":null,"code":"/* an extension to d3.zip so we call a function instead of an array */\nimport { min } from \"d3-array\";\nimport { identity } from \"./identity\";\nexport default function zipper() {\n  let combine = identity;\n  function zip() {\n    var _a;\n    const n = arguments.length;\n    if (n === 0) {\n      return [];\n    }\n    const m = (_a = min(arguments, d3_zipLength)) !== null && _a !== void 0 ? _a : 0;\n    const zips = new Array(m);\n    for (let i = -1; ++i < m;) {\n      // tslint:disable-next-line: no-shadowed-variable\n      for (let j = -1, zip = zips[i] = new Array(n); ++j < n;) {\n        zip[j] = arguments[j][i];\n      }\n      // @ts-ignore\n      zips[i] = combine.apply(this, zips[i]);\n    }\n    return zips;\n  }\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  zip.combine = function (x) {\n    if (!arguments.length) {\n      return combine;\n    }\n    combine = x;\n    return zip;\n  };\n  return zip;\n}","map":{"version":3,"names":["min","identity","zipper","combine","zip","n","arguments","length","m","_a","d3_zipLength","zips","Array","i","j","apply","d","x"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\core\\src\\utils\\zipper.ts"],"sourcesContent":["/* an extension to d3.zip so we call a function instead of an array */\n\nimport { min } from \"d3-array\";\nimport { identity } from \"./identity\";\n\ninterface Zip {\n    (...args: any[]): any[];\n    combine(): any;\n    combine(x: any): Zip;\n}\n\nexport default function zipper() {\n    let combine = identity;\n\n    function zip() {\n        const n = arguments.length;\n        if (n === 0) {\n            return [];\n        }\n        const m = min(arguments, d3_zipLength) ?? 0;\n\n        const zips = new Array(m);\n        for (let i = -1; ++i < m; ) {\n            // tslint:disable-next-line: no-shadowed-variable\n            for (let j = -1, zip = (zips[i] = new Array(n)); ++j < n; ) {\n                zip[j] = arguments[j][i];\n            }\n\n            // @ts-ignore\n            zips[i] = combine.apply(this, zips[i]);\n        }\n        return zips;\n    }\n    function d3_zipLength(d: any[]) {\n        return d.length;\n    }\n    zip.combine = function (x: any) {\n        if (!arguments.length) {\n            return combine;\n        }\n        combine = x;\n        return zip;\n    };\n    return zip as Zip;\n}\n"],"mappings":"AAAA;AAEA,SAASA,GAAG,QAAQ,UAAU;AAC9B,SAASC,QAAQ,QAAQ,YAAY;AAQrC,eAAc,SAAUC,MAAMA,CAAA;EAC1B,IAAIC,OAAO,GAAGF,QAAQ;EAEtB,SAASG,GAAGA,CAAA;;IACR,MAAMC,CAAC,GAAGC,SAAS,CAACC,MAAM;IAC1B,IAAIF,CAAC,KAAK,CAAC,EAAE;MACT,OAAO,EAAE;;IAEb,MAAMG,CAAC,GAAG,CAAAC,EAAA,GAAAT,GAAG,CAACM,SAAS,EAAEI,YAAY,CAAC,cAAAD,EAAA,cAAAA,EAAA,GAAI,CAAC;IAE3C,MAAME,IAAI,GAAG,IAAIC,KAAK,CAACJ,CAAC,CAAC;IACzB,KAAK,IAAIK,CAAC,GAAG,CAAC,CAAC,EAAE,EAAEA,CAAC,GAAGL,CAAC,GAAI;MACxB;MACA,KAAK,IAAIM,CAAC,GAAG,CAAC,CAAC,EAAEV,GAAG,GAAIO,IAAI,CAACE,CAAC,CAAC,GAAG,IAAID,KAAK,CAACP,CAAC,CAAE,EAAE,EAAES,CAAC,GAAGT,CAAC,GAAI;QACxDD,GAAG,CAACU,CAAC,CAAC,GAAGR,SAAS,CAACQ,CAAC,CAAC,CAACD,CAAC,CAAC;;MAG5B;MACAF,IAAI,CAACE,CAAC,CAAC,GAAGV,OAAO,CAACY,KAAK,CAAC,IAAI,EAAEJ,IAAI,CAACE,CAAC,CAAC,CAAC;;IAE1C,OAAOF,IAAI;EACf;EACA,SAASD,YAAYA,CAACM,CAAQ;IAC1B,OAAOA,CAAC,CAACT,MAAM;EACnB;EACAH,GAAG,CAACD,OAAO,GAAG,UAAUc,CAAM;IAC1B,IAAI,CAACX,SAAS,CAACC,MAAM,EAAE;MACnB,OAAOJ,OAAO;;IAElBA,OAAO,GAAGc,CAAC;IACX,OAAOb,GAAG;EACd,CAAC;EACD,OAAOA,GAAU;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}