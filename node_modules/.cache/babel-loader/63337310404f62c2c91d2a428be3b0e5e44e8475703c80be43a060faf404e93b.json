{"ast":null,"code":"import * as React from \"react\";\nimport { functor } from \"@react-financial-charts/core\";\nexport class Triangle extends React.Component {\n  render() {\n    const {\n      className,\n      fillStyle,\n      strokeStyle,\n      strokeWidth,\n      point,\n      width\n    } = this.props;\n    const rotation = getRotationInDegrees(this.props, point);\n    if (rotation == null) {\n      return null;\n    }\n    const fillColor = functor(fillStyle)(point.datum);\n    const strokeColor = functor(strokeStyle)(point.datum);\n    const w = functor(width)(point.datum);\n    const {\n      x,\n      y\n    } = point;\n    const {\n      innerOpposite,\n      innerHypotenuse\n    } = getTrianglePoints(w);\n    const points = `\n\t\t${x} ${y - innerHypotenuse},\n\t\t${x + w / 2} ${y + innerOpposite},\n\t\t${x - w / 2} ${y + innerOpposite}\n\t    `;\n    return React.createElement(\"polygon\", {\n      className: className,\n      points: points,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth,\n      fill: fillColor,\n      transform: rotation !== 0 ? `rotate(${rotation}, ${x}, ${y})` : undefined\n    });\n  }\n}\nTriangle.defaultProps = {\n  direction: \"top\",\n  fillStyle: \"#4682B4\",\n  className: \"react-financial-charts-marker-triangle\"\n};\nTriangle.drawOnCanvas = (props, point, ctx) => {\n  const {\n    fillStyle,\n    strokeStyle,\n    strokeWidth,\n    width\n  } = props;\n  if (strokeStyle !== undefined) {\n    ctx.strokeStyle = functor(strokeStyle)(point.datum);\n  }\n  if (strokeWidth !== undefined) {\n    ctx.lineWidth = strokeWidth;\n  }\n  if (fillStyle !== undefined) {\n    ctx.fillStyle = functor(fillStyle)(point.datum);\n  }\n  const w = functor(width)(point.datum);\n  const {\n    x,\n    y\n  } = point;\n  const {\n    innerOpposite,\n    innerHypotenuse\n  } = getTrianglePoints(w);\n  const rotationDeg = getRotationInDegrees(props, point);\n  ctx.beginPath();\n  ctx.moveTo(x, y - innerHypotenuse);\n  ctx.lineTo(x + w / 2, y + innerOpposite);\n  ctx.lineTo(x - w / 2, y + innerOpposite);\n  // TODO: rotation does not work\n  // example: https://gist.github.com/geoffb/6392450\n  if (rotationDeg !== null && rotationDeg !== 0) {\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rotationDeg * Math.PI / 180); // 45 degrees\n    ctx.fill();\n    ctx.restore();\n  }\n  ctx.fill();\n  if (strokeStyle !== undefined) {\n    ctx.stroke();\n  }\n};\nconst getTrianglePoints = width => {\n  const innerHypotenuse = width / 2 * (1 / Math.cos(30 * Math.PI / 180));\n  const innerOpposite = width / 2 * (1 / Math.tan(60 * Math.PI / 180));\n  return {\n    innerOpposite,\n    innerHypotenuse\n  };\n};\nconst getRotationInDegrees = (props, point) => {\n  const {\n    direction = Triangle.defaultProps.direction\n  } = props;\n  const directionVal = functor(direction)(point.datum);\n  if (directionVal === \"hide\") {\n    return null;\n  }\n  let rotate = 0;\n  switch (directionVal) {\n    case \"bottom\":\n      rotate = 180;\n      break;\n    case \"left\":\n      rotate = -90;\n      break;\n    case \"right\":\n      rotate = 90;\n      break;\n  }\n  return rotate;\n};","map":{"version":3,"names":["React","functor","Triangle","Component","render","className","fillStyle","strokeStyle","strokeWidth","point","width","props","rotation","getRotationInDegrees","fillColor","datum","strokeColor","w","x","y","innerOpposite","innerHypotenuse","getTrianglePoints","points","createElement","stroke","fill","transform","undefined","defaultProps","direction","drawOnCanvas","ctx","lineWidth","rotationDeg","beginPath","moveTo","lineTo","save","translate","rotate","Math","PI","restore","cos","tan","directionVal"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\series\\src\\markers\\TriangleMarker.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { functor } from \"@react-financial-charts/core\";\n\nexport interface TriangleProps {\n    readonly className?: string;\n    readonly direction?: \"top\" | \"bottom\" | \"left\" | \"right\" | \"hide\" | ((datum: any) => any);\n    readonly fillStyle?: string | ((datum: any) => string);\n    readonly point: {\n        x: number;\n        y: number;\n        datum: any;\n    };\n    readonly strokeStyle?: string | ((datum: any) => string);\n    readonly strokeWidth?: number;\n    readonly width?: number | ((datum: any) => number);\n}\n\nexport class Triangle extends React.Component<TriangleProps> {\n    public static defaultProps = {\n        direction: \"top\",\n        fillStyle: \"#4682B4\",\n        className: \"react-financial-charts-marker-triangle\",\n    };\n\n    public static drawOnCanvas = (\n        props: TriangleProps,\n        point: { x: number; y: number; datum: unknown },\n        ctx: CanvasRenderingContext2D,\n    ) => {\n        const { fillStyle, strokeStyle, strokeWidth, width } = props;\n\n        if (strokeStyle !== undefined) {\n            ctx.strokeStyle = functor(strokeStyle)(point.datum);\n        }\n        if (strokeWidth !== undefined) {\n            ctx.lineWidth = strokeWidth;\n        }\n        if (fillStyle !== undefined) {\n            ctx.fillStyle = functor(fillStyle)(point.datum);\n        }\n\n        const w = functor(width)(point.datum);\n        const { x, y } = point;\n        const { innerOpposite, innerHypotenuse } = getTrianglePoints(w);\n        const rotationDeg = getRotationInDegrees(props, point);\n\n        ctx.beginPath();\n        ctx.moveTo(x, y - innerHypotenuse);\n        ctx.lineTo(x + w / 2, y + innerOpposite);\n        ctx.lineTo(x - w / 2, y + innerOpposite);\n\n        // TODO: rotation does not work\n        // example: https://gist.github.com/geoffb/6392450\n        if (rotationDeg !== null && rotationDeg !== 0) {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate((rotationDeg * Math.PI) / 180); // 45 degrees\n            ctx.fill();\n            ctx.restore();\n        }\n        ctx.fill();\n\n        if (strokeStyle !== undefined) {\n            ctx.stroke();\n        }\n    };\n\n    public render() {\n        const { className, fillStyle, strokeStyle, strokeWidth, point, width } = this.props;\n\n        const rotation = getRotationInDegrees(this.props, point);\n        if (rotation == null) {\n            return null;\n        }\n\n        const fillColor = functor(fillStyle)(point.datum);\n        const strokeColor = functor(strokeStyle)(point.datum);\n\n        const w = functor(width)(point.datum);\n        const { x, y } = point;\n        const { innerOpposite, innerHypotenuse } = getTrianglePoints(w);\n        const points = `\n\t\t${x} ${y - innerHypotenuse},\n\t\t${x + w / 2} ${y + innerOpposite},\n\t\t${x - w / 2} ${y + innerOpposite}\n\t    `;\n\n        return (\n            <polygon\n                className={className}\n                points={points}\n                stroke={strokeColor}\n                strokeWidth={strokeWidth}\n                fill={fillColor}\n                transform={rotation !== 0 ? `rotate(${rotation}, ${x}, ${y})` : undefined}\n            />\n        );\n    }\n}\n\nconst getTrianglePoints = (width: number) => {\n    const innerHypotenuse = (width / 2) * (1 / Math.cos((30 * Math.PI) / 180));\n    const innerOpposite = (width / 2) * (1 / Math.tan((60 * Math.PI) / 180));\n    return {\n        innerOpposite,\n        innerHypotenuse,\n    };\n};\n\nconst getRotationInDegrees = (props: TriangleProps, point: any) => {\n    const { direction = Triangle.defaultProps.direction } = props;\n\n    const directionVal = functor(direction)(point.datum);\n    if (directionVal === \"hide\") {\n        return null;\n    }\n\n    let rotate = 0;\n    switch (directionVal) {\n        case \"bottom\":\n            rotate = 180;\n            break;\n        case \"left\":\n            rotate = -90;\n            break;\n        case \"right\":\n            rotate = 90;\n            break;\n    }\n    return rotate;\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,OAAO,QAAQ,8BAA8B;AAgBtD,OAAM,MAAOC,QAAS,SAAQF,KAAK,CAACG,SAAwB;EAkDjDC,MAAMA,CAAA;IACT,MAAM;MAAEC,SAAS;MAAEC,SAAS;MAAEC,WAAW;MAAEC,WAAW;MAAEC,KAAK;MAAEC;IAAK,CAAE,GAAG,IAAI,CAACC,KAAK;IAEnF,MAAMC,QAAQ,GAAGC,oBAAoB,CAAC,IAAI,CAACF,KAAK,EAAEF,KAAK,CAAC;IACxD,IAAIG,QAAQ,IAAI,IAAI,EAAE;MAClB,OAAO,IAAI;;IAGf,MAAME,SAAS,GAAGb,OAAO,CAACK,SAAS,CAAC,CAACG,KAAK,CAACM,KAAK,CAAC;IACjD,MAAMC,WAAW,GAAGf,OAAO,CAACM,WAAW,CAAC,CAACE,KAAK,CAACM,KAAK,CAAC;IAErD,MAAME,CAAC,GAAGhB,OAAO,CAACS,KAAK,CAAC,CAACD,KAAK,CAACM,KAAK,CAAC;IACrC,MAAM;MAAEG,CAAC;MAAEC;IAAC,CAAE,GAAGV,KAAK;IACtB,MAAM;MAAEW,aAAa;MAAEC;IAAe,CAAE,GAAGC,iBAAiB,CAACL,CAAC,CAAC;IAC/D,MAAMM,MAAM,GAAG;IACnBL,CAAC,IAAIC,CAAC,GAAGE,eAAe;IACxBH,CAAC,GAAGD,CAAC,GAAG,CAAC,IAAIE,CAAC,GAAGC,aAAa;IAC9BF,CAAC,GAAGD,CAAC,GAAG,CAAC,IAAIE,CAAC,GAAGC,aAAa;MAC5B;IAEE,OACIpB,KAAA,CAAAwB,aAAA;MACInB,SAAS,EAAEA,SAAS;MACpBkB,MAAM,EAAEA,MAAM;MACdE,MAAM,EAAET,WAAW;MACnBR,WAAW,EAAEA,WAAW;MACxBkB,IAAI,EAAEZ,SAAS;MACfa,SAAS,EAAEf,QAAQ,KAAK,CAAC,GAAG,UAAUA,QAAQ,KAAKM,CAAC,KAAKC,CAAC,GAAG,GAAGS;IAAS,EAC3E;EAEV;;AA/Ec1B,QAAA,CAAA2B,YAAY,GAAG;EACzBC,SAAS,EAAE,KAAK;EAChBxB,SAAS,EAAE,SAAS;EACpBD,SAAS,EAAE;CACd;AAEaH,QAAA,CAAA6B,YAAY,GAAG,CACzBpB,KAAoB,EACpBF,KAA+C,EAC/CuB,GAA6B,KAC7B;EACA,MAAM;IAAE1B,SAAS;IAAEC,WAAW;IAAEC,WAAW;IAAEE;EAAK,CAAE,GAAGC,KAAK;EAE5D,IAAIJ,WAAW,KAAKqB,SAAS,EAAE;IAC3BI,GAAG,CAACzB,WAAW,GAAGN,OAAO,CAACM,WAAW,CAAC,CAACE,KAAK,CAACM,KAAK,CAAC;;EAEvD,IAAIP,WAAW,KAAKoB,SAAS,EAAE;IAC3BI,GAAG,CAACC,SAAS,GAAGzB,WAAW;;EAE/B,IAAIF,SAAS,KAAKsB,SAAS,EAAE;IACzBI,GAAG,CAAC1B,SAAS,GAAGL,OAAO,CAACK,SAAS,CAAC,CAACG,KAAK,CAACM,KAAK,CAAC;;EAGnD,MAAME,CAAC,GAAGhB,OAAO,CAACS,KAAK,CAAC,CAACD,KAAK,CAACM,KAAK,CAAC;EACrC,MAAM;IAAEG,CAAC;IAAEC;EAAC,CAAE,GAAGV,KAAK;EACtB,MAAM;IAAEW,aAAa;IAAEC;EAAe,CAAE,GAAGC,iBAAiB,CAACL,CAAC,CAAC;EAC/D,MAAMiB,WAAW,GAAGrB,oBAAoB,CAACF,KAAK,EAAEF,KAAK,CAAC;EAEtDuB,GAAG,CAACG,SAAS,EAAE;EACfH,GAAG,CAACI,MAAM,CAAClB,CAAC,EAAEC,CAAC,GAAGE,eAAe,CAAC;EAClCW,GAAG,CAACK,MAAM,CAACnB,CAAC,GAAGD,CAAC,GAAG,CAAC,EAAEE,CAAC,GAAGC,aAAa,CAAC;EACxCY,GAAG,CAACK,MAAM,CAACnB,CAAC,GAAGD,CAAC,GAAG,CAAC,EAAEE,CAAC,GAAGC,aAAa,CAAC;EAExC;EACA;EACA,IAAIc,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAK,CAAC,EAAE;IAC3CF,GAAG,CAACM,IAAI,EAAE;IACVN,GAAG,CAACO,SAAS,CAACrB,CAAC,EAAEC,CAAC,CAAC;IACnBa,GAAG,CAACQ,MAAM,CAAEN,WAAW,GAAGO,IAAI,CAACC,EAAE,GAAI,GAAG,CAAC,CAAC,CAAC;IAC3CV,GAAG,CAACN,IAAI,EAAE;IACVM,GAAG,CAACW,OAAO,EAAE;;EAEjBX,GAAG,CAACN,IAAI,EAAE;EAEV,IAAInB,WAAW,KAAKqB,SAAS,EAAE;IAC3BI,GAAG,CAACP,MAAM,EAAE;;AAEpB,CAAC;AAmCL,MAAMH,iBAAiB,GAAIZ,KAAa,IAAI;EACxC,MAAMW,eAAe,GAAIX,KAAK,GAAG,CAAC,IAAK,CAAC,GAAG+B,IAAI,CAACG,GAAG,CAAE,EAAE,GAAGH,IAAI,CAACC,EAAE,GAAI,GAAG,CAAC,CAAC;EAC1E,MAAMtB,aAAa,GAAIV,KAAK,GAAG,CAAC,IAAK,CAAC,GAAG+B,IAAI,CAACI,GAAG,CAAE,EAAE,GAAGJ,IAAI,CAACC,EAAE,GAAI,GAAG,CAAC,CAAC;EACxE,OAAO;IACHtB,aAAa;IACbC;GACH;AACL,CAAC;AAED,MAAMR,oBAAoB,GAAGA,CAACF,KAAoB,EAAEF,KAAU,KAAI;EAC9D,MAAM;IAAEqB,SAAS,GAAG5B,QAAQ,CAAC2B,YAAY,CAACC;EAAS,CAAE,GAAGnB,KAAK;EAE7D,MAAMmC,YAAY,GAAG7C,OAAO,CAAC6B,SAAS,CAAC,CAACrB,KAAK,CAACM,KAAK,CAAC;EACpD,IAAI+B,YAAY,KAAK,MAAM,EAAE;IACzB,OAAO,IAAI;;EAGf,IAAIN,MAAM,GAAG,CAAC;EACd,QAAQM,YAAY;IAChB,KAAK,QAAQ;MACTN,MAAM,GAAG,GAAG;MACZ;IACJ,KAAK,MAAM;MACPA,MAAM,GAAG,CAAC,EAAE;MACZ;IACJ,KAAK,OAAO;MACRA,MAAM,GAAG,EAAE;MACX;;EAER,OAAOA,MAAM;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}