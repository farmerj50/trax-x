{"ast":null,"code":"import { merge, rebind } from \"../utils\";\nimport { macd } from \"../calculator\";\nimport baseIndicator from \"./baseIndicator\";\nimport { MACD as appearanceOptions } from \"./defaultOptionsForAppearance\";\nconst ALGORITHM_TYPE = \"MACD\";\nexport default function () {\n  const base = baseIndicator().type(ALGORITHM_TYPE).fill(appearanceOptions.fill).stroke(appearanceOptions.stroke).accessor(d => d.macd);\n  const underlyingAlgorithm = macd();\n  const mergedAlgorithm = merge().algorithm(underlyingAlgorithm).merge((datum, i) => {\n    datum.macd = i;\n  });\n  const indicator = (data, options = {\n    merge: true\n  }) => {\n    if (options.merge) {\n      if (!base.accessor()) {\n        throw new Error(`Set an accessor to ${ALGORITHM_TYPE} before calculating`);\n      }\n      return mergedAlgorithm(data);\n    }\n    return underlyingAlgorithm(data);\n  };\n  rebind(indicator, base, \"id\", \"accessor\", \"stroke\", \"fill\", \"echo\", \"type\");\n  rebind(indicator, underlyingAlgorithm, \"options\", \"undefinedLength\");\n  rebind(indicator, mergedAlgorithm, \"merge\", \"skipUndefined\");\n  return indicator;\n}","map":{"version":3,"names":["merge","rebind","macd","baseIndicator","MACD","appearanceOptions","ALGORITHM_TYPE","base","type","fill","stroke","accessor","d","underlyingAlgorithm","mergedAlgorithm","algorithm","datum","i","indicator","data","options","Error"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\indicators\\src\\indicator\\macd.ts"],"sourcesContent":["import { merge, rebind } from \"../utils\";\nimport { macd } from \"../calculator\";\nimport { MACDOptions } from \"../calculator/macd\";\nimport baseIndicator from \"./baseIndicator\";\nimport { MACD as appearanceOptions } from \"./defaultOptionsForAppearance\";\n\nconst ALGORITHM_TYPE = \"MACD\";\n\ninterface MACDIndicator {\n    (data: any[], options?: { merge: boolean }): any;\n    id(): number;\n    id(x: number): MACDIndicator;\n    accessor(): any;\n    accessor(x: any): MACDIndicator;\n    stroke(): string | any;\n    stroke(x: string | any): MACDIndicator;\n    fill(): string | any;\n    fill(x: string | any): MACDIndicator;\n    echo(): any;\n    echo(x: any): MACDIndicator;\n    type(): string;\n    type(x: string): MACDIndicator;\n    merge(): any;\n    merge(newMerge: any): MACDIndicator;\n    options(): MACDOptions;\n    options(newOptions: MACDOptions): MACDIndicator;\n}\n\nexport default function () {\n    const base = baseIndicator()\n        .type(ALGORITHM_TYPE)\n        .fill(appearanceOptions.fill)\n        .stroke(appearanceOptions.stroke)\n        .accessor((d: any) => d.macd);\n\n    const underlyingAlgorithm = macd();\n\n    const mergedAlgorithm = merge()\n        .algorithm(underlyingAlgorithm)\n        .merge((datum: any, i: number) => {\n            datum.macd = i;\n        });\n\n    const indicator = (data: any[], options = { merge: true }) => {\n        if (options.merge) {\n            if (!base.accessor()) {\n                throw new Error(`Set an accessor to ${ALGORITHM_TYPE} before calculating`);\n            }\n\n            return mergedAlgorithm(data);\n        }\n        return underlyingAlgorithm(data);\n    };\n\n    rebind(indicator, base, \"id\", \"accessor\", \"stroke\", \"fill\", \"echo\", \"type\");\n    rebind(indicator, underlyingAlgorithm, \"options\", \"undefinedLength\");\n    rebind(indicator, mergedAlgorithm, \"merge\", \"skipUndefined\");\n\n    return indicator as MACDIndicator;\n}\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,MAAM,QAAQ,UAAU;AACxC,SAASC,IAAI,QAAQ,eAAe;AAEpC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,IAAI,IAAIC,iBAAiB,QAAQ,+BAA+B;AAEzE,MAAMC,cAAc,GAAG,MAAM;AAsB7B,eAAc;EACV,MAAMC,IAAI,GAAGJ,aAAa,EAAE,CACvBK,IAAI,CAACF,cAAc,CAAC,CACpBG,IAAI,CAACJ,iBAAiB,CAACI,IAAI,CAAC,CAC5BC,MAAM,CAACL,iBAAiB,CAACK,MAAM,CAAC,CAChCC,QAAQ,CAAEC,CAAM,IAAKA,CAAC,CAACV,IAAI,CAAC;EAEjC,MAAMW,mBAAmB,GAAGX,IAAI,EAAE;EAElC,MAAMY,eAAe,GAAGd,KAAK,EAAE,CAC1Be,SAAS,CAACF,mBAAmB,CAAC,CAC9Bb,KAAK,CAAC,CAACgB,KAAU,EAAEC,CAAS,KAAI;IAC7BD,KAAK,CAACd,IAAI,GAAGe,CAAC;EAClB,CAAC,CAAC;EAEN,MAAMC,SAAS,GAAGA,CAACC,IAAW,EAAEC,OAAO,GAAG;IAAEpB,KAAK,EAAE;EAAI,CAAE,KAAI;IACzD,IAAIoB,OAAO,CAACpB,KAAK,EAAE;MACf,IAAI,CAACO,IAAI,CAACI,QAAQ,EAAE,EAAE;QAClB,MAAM,IAAIU,KAAK,CAAC,sBAAsBf,cAAc,qBAAqB,CAAC;;MAG9E,OAAOQ,eAAe,CAACK,IAAI,CAAC;;IAEhC,OAAON,mBAAmB,CAACM,IAAI,CAAC;EACpC,CAAC;EAEDlB,MAAM,CAACiB,SAAS,EAAEX,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;EAC3EN,MAAM,CAACiB,SAAS,EAAEL,mBAAmB,EAAE,SAAS,EAAE,iBAAiB,CAAC;EACpEZ,MAAM,CAACiB,SAAS,EAAEJ,eAAe,EAAE,OAAO,EAAE,eAAe,CAAC;EAE5D,OAAOI,SAA0B;AACrC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}