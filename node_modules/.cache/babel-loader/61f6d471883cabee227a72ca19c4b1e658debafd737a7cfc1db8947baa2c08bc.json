{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabby\\\\trax-x\\\\src\\\\components\\\\StocksPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { StockChartComponent, StockChartSeriesCollectionDirective, StockChartSeriesDirective, Inject, DateTime, Tooltip, RangeTooltip, Crosshair, CandleSeries, Legend, Export } from \"@syncfusion/ej2-react-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StocksPage = () => {\n  _s();\n  const [ticker, setTicker] = useState(\"\"); // Input for ticker search\n  const [selectedTicker, setSelectedTicker] = useState(\"AAPL\"); // Default ticker\n  const [chartData, setChartData] = useState([]); // Holds chart data\n  const [error, setError] = useState(\"\"); // Tracks errors during data fetching\n  const [selectedRange, setSelectedRange] = useState(\"6M\"); // Default time range\n\n  const fetchChartData = async tickerSymbol => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${tickerSymbol}`);\n      const data = await response.json();\n      if (data.dates) {\n        const formattedData = data.dates.map((date, index) => ({\n          x: new Date(date),\n          open: data.open[index],\n          high: data.high[index],\n          low: data.low[index],\n          close: data.close[index]\n        }));\n        setChartData(formattedData);\n        setError(\"\");\n      } else {\n        setChartData([]);\n        setError(\"No data available for the selected ticker.\");\n      }\n    } catch (err) {\n      console.error(\"Error fetching chart data:\", err);\n      setError(\"Failed to load chart data.\");\n    }\n  };\n  const filterDataByRange = range => {\n    if (chartData.length > 0) {\n      const now = new Date();\n      let filteredData = chartData;\n      switch (range) {\n        case \"1M\":\n          filteredData = chartData.filter(d => d.x >= new Date(now.setMonth(now.getMonth() - 1)));\n          break;\n        case \"3M\":\n          filteredData = chartData.filter(d => d.x >= new Date(now.setMonth(now.getMonth() - 3)));\n          break;\n        case \"6M\":\n          filteredData = chartData.filter(d => d.x >= new Date(now.setMonth(now.getMonth() - 6)));\n          break;\n        case \"1Y\":\n          filteredData = chartData.filter(d => d.x >= new Date(now.setFullYear(now.getFullYear() - 1)));\n          break;\n        case \"All\":\n        default:\n          filteredData = chartData;\n          break;\n      }\n      return filteredData;\n    }\n    return [];\n  };\n  useEffect(() => {\n    fetchChartData(selectedTicker);\n  }, [selectedTicker]);\n  const handleSearch = () => {\n    if (ticker.trim() !== \"\") {\n      setSelectedTicker(ticker.toUpperCase());\n    }\n  };\n  const handleRangeChange = range => {\n    setSelectedRange(range);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stocks-page\",\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-header\",\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\",\n          fontSize: \"24px\"\n        },\n        children: [selectedTicker, \" Stock Analysis\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-stock\",\n        style: {\n          display: \"flex\",\n          gap: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter stock ticker (e.g., AAPL)\",\n          value: ticker,\n          onChange: e => setTicker(e.target.value),\n          style: {\n            padding: \"10px\",\n            fontSize: \"16px\",\n            borderRadius: \"5px\",\n            border: \"1px solid #ccc\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSearch,\n          style: {\n            padding: \"10px 20px\",\n            fontSize: \"16px\",\n            borderRadius: \"5px\",\n            backgroundColor: \"#007bff\",\n            color: \"#fff\",\n            border: \"none\",\n            cursor: \"pointer\"\n          },\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"range-indicators\",\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"10px\"\n        },\n        children: [[\"1M\", \"3M\", \"6M\", \"1Y\", \"All\"].map(range => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRangeChange(range),\n          style: {\n            padding: \"5px 10px\",\n            fontSize: \"14px\",\n            borderRadius: \"5px\",\n            backgroundColor: selectedRange === range ? \"#007bff\" : \"#f0f0f0\",\n            color: selectedRange === range ? \"#fff\" : \"#000\",\n            border: \"none\",\n            cursor: \"pointer\"\n          },\n          children: range\n        }, range, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            padding: \"5px 15px\",\n            fontSize: \"14px\",\n            borderRadius: \"5px\",\n            backgroundColor: \"#007bff\",\n            color: \"#fff\",\n            border: \"none\",\n            cursor: \"pointer\"\n          },\n          children: \"Indicators\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chart-container\",\n      style: {\n        width: \"100%\",\n        height: \"500px\",\n        backgroundColor: \"#fff\",\n        borderRadius: \"8px\",\n        padding: \"10px\"\n      },\n      children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\",\n          textAlign: \"center\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(StockChartComponent, {\n        id: \"stockchart\",\n        primaryXAxis: {\n          valueType: \"DateTime\",\n          labelFormat: \"MMM dd\",\n          majorGridLines: {\n            width: 0\n          },\n          intervalType: \"Days\"\n        },\n        primaryYAxis: {\n          labelFormat: \"${value}\",\n          majorGridLines: {\n            width: 0\n          },\n          rangePadding: \"None\"\n        },\n        legendSettings: {\n          visible: true\n        },\n        title: `${selectedTicker} Stock Analysis`,\n        enableSelector: false,\n        height: \"100%\",\n        width: \"100%\",\n        children: [/*#__PURE__*/_jsxDEV(Inject, {\n          services: [DateTime, Tooltip, RangeTooltip, Crosshair, CandleSeries, Legend, Export]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StockChartSeriesCollectionDirective, {\n          children: /*#__PURE__*/_jsxDEV(StockChartSeriesDirective, {\n            dataSource: filterDataByRange(selectedRange),\n            xName: \"x\",\n            open: \"open\",\n            high: \"high\",\n            low: \"low\",\n            close: \"close\",\n            type: \"Candle\",\n            animation: {\n              enable: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(StocksPage, \"1lUtzCmBJ6Xs06KMSe7gUaOW0n0=\");\n_c = StocksPage;\nexport default StocksPage;\nvar _c;\n$RefreshReg$(_c, \"StocksPage\");","map":{"version":3,"names":["React","useState","useEffect","StockChartComponent","StockChartSeriesCollectionDirective","StockChartSeriesDirective","Inject","DateTime","Tooltip","RangeTooltip","Crosshair","CandleSeries","Legend","Export","jsxDEV","_jsxDEV","StocksPage","_s","ticker","setTicker","selectedTicker","setSelectedTicker","chartData","setChartData","error","setError","selectedRange","setSelectedRange","fetchChartData","tickerSymbol","response","fetch","data","json","dates","formattedData","map","date","index","x","Date","open","high","low","close","err","console","filterDataByRange","range","length","now","filteredData","filter","d","setMonth","getMonth","setFullYear","getFullYear","handleSearch","trim","toUpperCase","handleRangeChange","className","style","padding","children","marginBottom","textAlign","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","gap","type","placeholder","value","onChange","e","target","borderRadius","border","onClick","backgroundColor","color","cursor","id","width","height","primaryXAxis","valueType","labelFormat","majorGridLines","intervalType","primaryYAxis","rangePadding","legendSettings","visible","title","enableSelector","services","dataSource","xName","animation","enable","_c","$RefreshReg$"],"sources":["C:/Users/gabby/trax-x/src/components/StocksPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StockChartComponent,\r\n  StockChartSeriesCollectionDirective,\r\n  StockChartSeriesDirective,\r\n  Inject,\r\n  DateTime,\r\n  Tooltip,\r\n  RangeTooltip,\r\n  Crosshair,\r\n  CandleSeries,\r\n  Legend,\r\n  Export,\r\n} from \"@syncfusion/ej2-react-charts\";\r\n\r\nconst StocksPage = () => {\r\n  const [ticker, setTicker] = useState(\"\"); // Input for ticker search\r\n  const [selectedTicker, setSelectedTicker] = useState(\"AAPL\"); // Default ticker\r\n  const [chartData, setChartData] = useState([]); // Holds chart data\r\n  const [error, setError] = useState(\"\"); // Tracks errors during data fetching\r\n  const [selectedRange, setSelectedRange] = useState(\"6M\"); // Default time range\r\n\r\n  const fetchChartData = async (tickerSymbol) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/candlestick?ticker=${tickerSymbol}`\r\n      );\r\n      const data = await response.json();\r\n      if (data.dates) {\r\n        const formattedData = data.dates.map((date, index) => ({\r\n          x: new Date(date),\r\n          open: data.open[index],\r\n          high: data.high[index],\r\n          low: data.low[index],\r\n          close: data.close[index],\r\n        }));\r\n        setChartData(formattedData);\r\n        setError(\"\");\r\n      } else {\r\n        setChartData([]);\r\n        setError(\"No data available for the selected ticker.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching chart data:\", err);\r\n      setError(\"Failed to load chart data.\");\r\n    }\r\n  };\r\n\r\n  const filterDataByRange = (range) => {\r\n    if (chartData.length > 0) {\r\n      const now = new Date();\r\n      let filteredData = chartData;\r\n      switch (range) {\r\n        case \"1M\":\r\n          filteredData = chartData.filter(\r\n            (d) => d.x >= new Date(now.setMonth(now.getMonth() - 1))\r\n          );\r\n          break;\r\n        case \"3M\":\r\n          filteredData = chartData.filter(\r\n            (d) => d.x >= new Date(now.setMonth(now.getMonth() - 3))\r\n          );\r\n          break;\r\n        case \"6M\":\r\n          filteredData = chartData.filter(\r\n            (d) => d.x >= new Date(now.setMonth(now.getMonth() - 6))\r\n          );\r\n          break;\r\n        case \"1Y\":\r\n          filteredData = chartData.filter(\r\n            (d) => d.x >= new Date(now.setFullYear(now.getFullYear() - 1))\r\n          );\r\n          break;\r\n        case \"All\":\r\n        default:\r\n          filteredData = chartData;\r\n          break;\r\n      }\r\n      return filteredData;\r\n    }\r\n    return [];\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchChartData(selectedTicker);\r\n  }, [selectedTicker]);\r\n\r\n  const handleSearch = () => {\r\n    if (ticker.trim() !== \"\") {\r\n      setSelectedTicker(ticker.toUpperCase());\r\n    }\r\n  };\r\n\r\n  const handleRangeChange = (range) => {\r\n    setSelectedRange(range);\r\n  };\r\n\r\n  return (\r\n    <div className=\"stocks-page\" style={{ padding: \"20px\" }}>\r\n      {/* Header Section */}\r\n      <div className=\"stock-header\" style={{ marginBottom: \"20px\" }}>\r\n        <h2 style={{ textAlign: \"center\", fontSize: \"24px\" }}>\r\n          {selectedTicker} Stock Analysis\r\n        </h2>\r\n      </div>\r\n\r\n      {/* Search and Time Range Controls */}\r\n      <div\r\n        className=\"controls\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          marginBottom: \"20px\",\r\n        }}\r\n      >\r\n        {/* Search Field */}\r\n        <div className=\"search-stock\" style={{ display: \"flex\", gap: \"10px\" }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter stock ticker (e.g., AAPL)\"\r\n            value={ticker}\r\n            onChange={(e) => setTicker(e.target.value)}\r\n            style={{\r\n              padding: \"10px\",\r\n              fontSize: \"16px\",\r\n              borderRadius: \"5px\",\r\n              border: \"1px solid #ccc\",\r\n            }}\r\n          />\r\n          <button\r\n            onClick={handleSearch}\r\n            style={{\r\n              padding: \"10px 20px\",\r\n              fontSize: \"16px\",\r\n              borderRadius: \"5px\",\r\n              backgroundColor: \"#007bff\",\r\n              color: \"#fff\",\r\n              border: \"none\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n\r\n        {/* Time Range and Indicators */}\r\n        <div\r\n          className=\"range-indicators\"\r\n          style={{ display: \"flex\", alignItems: \"center\", gap: \"10px\" }}\r\n        >\r\n          {/* Time Range */}\r\n          {[\"1M\", \"3M\", \"6M\", \"1Y\", \"All\"].map((range) => (\r\n            <button\r\n              key={range}\r\n              onClick={() => handleRangeChange(range)}\r\n              style={{\r\n                padding: \"5px 10px\",\r\n                fontSize: \"14px\",\r\n                borderRadius: \"5px\",\r\n                backgroundColor: selectedRange === range ? \"#007bff\" : \"#f0f0f0\",\r\n                color: selectedRange === range ? \"#fff\" : \"#000\",\r\n                border: \"none\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              {range}\r\n            </button>\r\n          ))}\r\n          <button\r\n            style={{\r\n              padding: \"5px 15px\",\r\n              fontSize: \"14px\",\r\n              borderRadius: \"5px\",\r\n              backgroundColor: \"#007bff\",\r\n              color: \"#fff\",\r\n              border: \"none\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            Indicators\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Chart Section */}\r\n      <div\r\n        id=\"chart-container\"\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"500px\",\r\n          backgroundColor: \"#fff\",\r\n          borderRadius: \"8px\",\r\n          padding: \"10px\",\r\n        }}\r\n      >\r\n        {error ? (\r\n          <p style={{ color: \"red\", textAlign: \"center\" }}>{error}</p>\r\n        ) : (\r\n          <StockChartComponent\r\n            id=\"stockchart\"\r\n            primaryXAxis={{\r\n              valueType: \"DateTime\",\r\n              labelFormat: \"MMM dd\",\r\n              majorGridLines: { width: 0 },\r\n              intervalType: \"Days\",\r\n            }}\r\n            primaryYAxis={{\r\n              labelFormat: \"${value}\",\r\n              majorGridLines: { width: 0 },\r\n              rangePadding: \"None\",\r\n            }}\r\n            legendSettings={{ visible: true }}\r\n            title={`${selectedTicker} Stock Analysis`}\r\n            enableSelector={false}\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          >\r\n            <Inject\r\n              services={[\r\n                DateTime,\r\n                Tooltip,\r\n                RangeTooltip,\r\n                Crosshair,\r\n                CandleSeries,\r\n                Legend,\r\n                Export,\r\n              ]}\r\n            />\r\n            <StockChartSeriesCollectionDirective>\r\n              <StockChartSeriesDirective\r\n                dataSource={filterDataByRange(selectedRange)}\r\n                xName=\"x\"\r\n                open=\"open\"\r\n                high=\"high\"\r\n                low=\"low\"\r\n                close=\"close\"\r\n                type=\"Candle\"\r\n                animation={{ enable: true }}\r\n              />\r\n            </StockChartSeriesCollectionDirective>\r\n          </StockChartComponent>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StocksPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}