{"ast":null,"code":"/* eslint-disable valid-jsdoc */\n/* eslint-disable security/detect-object-injection */\nimport { Fetch } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Predicate, Query } from './query';\nimport { ODataAdaptor, JsonAdaptor, CacheAdaptor, RemoteSaveAdaptor, CustomDataAdaptor } from './adaptors';\n/**\n * DataManager is used to manage and manipulate relational data.\n */\nvar DataManager = /** @class */function () {\n  /**\n   * Constructor for DataManager class\n   *\n   * @param {DataOptions|JSON[]} dataSource?\n   * @param {Query} query?\n   * @param {AdaptorOptions|string} adaptor?\n   * @param dataSource\n   * @param query\n   * @param adaptor\n   * @hidden\n   */\n  function DataManager(dataSource, query, adaptor) {\n    var _this = this;\n    /** @hidden */\n    this.dateParse = true;\n    /** @hidden */\n    this.timeZoneHandling = true;\n    this.persistQuery = {};\n    this.isInitialLoad = false;\n    this.requests = [];\n    this.isInitialLoad = true;\n    if (!dataSource && !this.dataSource) {\n      dataSource = [];\n    }\n    adaptor = adaptor || dataSource.adaptor;\n    if (dataSource && dataSource.timeZoneHandling === false) {\n      this.timeZoneHandling = dataSource.timeZoneHandling;\n    }\n    var data;\n    if (dataSource instanceof Array) {\n      data = {\n        json: dataSource,\n        offline: true\n      };\n    } else if (typeof dataSource === 'object') {\n      if (!dataSource.json) {\n        dataSource.json = [];\n      }\n      if (!dataSource.enablePersistence) {\n        dataSource.enablePersistence = false;\n      }\n      if (!dataSource.id) {\n        dataSource.id = '';\n      }\n      if (!dataSource.ignoreOnPersist) {\n        dataSource.ignoreOnPersist = [];\n      }\n      data = {\n        url: dataSource.url,\n        insertUrl: dataSource.insertUrl,\n        removeUrl: dataSource.removeUrl,\n        updateUrl: dataSource.updateUrl,\n        crudUrl: dataSource.crudUrl,\n        batchUrl: dataSource.batchUrl,\n        json: dataSource.json,\n        headers: dataSource.headers,\n        accept: dataSource.accept,\n        data: dataSource.data,\n        timeTillExpiration: dataSource.timeTillExpiration,\n        cachingPageSize: dataSource.cachingPageSize,\n        enableCaching: dataSource.enableCaching,\n        requestType: dataSource.requestType,\n        key: dataSource.key,\n        crossDomain: dataSource.crossDomain,\n        jsonp: dataSource.jsonp,\n        dataType: dataSource.dataType,\n        offline: dataSource.offline !== undefined ? dataSource.offline : dataSource.adaptor instanceof RemoteSaveAdaptor || dataSource.adaptor instanceof CustomDataAdaptor ? false : dataSource.url ? false : true,\n        requiresFormat: dataSource.requiresFormat,\n        enablePersistence: dataSource.enablePersistence,\n        id: dataSource.id,\n        ignoreOnPersist: dataSource.ignoreOnPersist\n      };\n    } else {\n      DataUtil.throwError('DataManager: Invalid arguments');\n    }\n    if (data.requiresFormat === undefined && !DataUtil.isCors()) {\n      data.requiresFormat = isNullOrUndefined(data.crossDomain) ? true : data.crossDomain;\n    }\n    if (data.dataType === undefined) {\n      data.dataType = 'json';\n    }\n    this.dataSource = data;\n    this.defaultQuery = query;\n    if (this.dataSource.enablePersistence && this.dataSource.id) {\n      window.addEventListener('unload', this.setPersistData.bind(this));\n    }\n    if (data.url && data.offline && !data.json.length) {\n      this.isDataAvailable = false;\n      this.adaptor = adaptor || new ODataAdaptor();\n      this.dataSource.offline = false;\n      this.ready = this.executeQuery(query || new Query());\n      this.ready.then(function (e) {\n        _this.dataSource.offline = true;\n        _this.isDataAvailable = true;\n        data.json = e.result;\n        _this.adaptor = new JsonAdaptor();\n      });\n    } else {\n      this.adaptor = data.offline ? new JsonAdaptor() : new ODataAdaptor();\n    }\n    if (!data.jsonp && this.adaptor instanceof ODataAdaptor) {\n      data.jsonp = 'callback';\n    }\n    this.adaptor = adaptor || this.adaptor;\n    if (data.enableCaching) {\n      this.adaptor = new CacheAdaptor(this.adaptor, data.timeTillExpiration, data.cachingPageSize);\n    }\n    return this;\n  }\n  Object.defineProperty(DataManager.prototype, \"moduleName\", {\n    /** @hidden */\n    get: function () {\n      return 'datamanager';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  ;\n  /**\n   * Get the queries maintained in the persisted state.\n   * @param {string} id - The identifier of the persisted query to retrieve.\n   * @returns {object} The persisted data object.\n   */\n  DataManager.prototype.getPersistedData = function (id) {\n    var persistedData = localStorage.getItem(id || this.dataSource.id);\n    return JSON.parse(persistedData);\n  };\n  /**\n  * Set the queries to be maintained in the persisted state.\n  * @param {Event} e - The event parameter that triggers the setPersistData method.\n  * @param {string} id - The identifier of the persisted query to set.\n  * @param {object} persistData - The data to be persisted.\n  * @returns {void} .\n  */\n  DataManager.prototype.setPersistData = function (e, id, persistData) {\n    localStorage.setItem(id || this.dataSource.id, JSON.stringify(persistData || this.persistQuery));\n  };\n  DataManager.prototype.setPersistQuery = function (query) {\n    var _this = this;\n    var persistedQuery = this.getPersistedData();\n    if (this.isInitialLoad && persistedQuery && Object.keys(persistedQuery).length) {\n      this.persistQuery = persistedQuery;\n      this.persistQuery.queries = this.persistQuery.queries.filter(function (query) {\n        if (_this.dataSource.ignoreOnPersist && _this.dataSource.ignoreOnPersist.length) {\n          if (query.fn && _this.dataSource.ignoreOnPersist.some(function (keyword) {\n            return query.fn === keyword;\n          })) {\n            return false; // Exclude the matching query\n          }\n        }\n        if (query.fn === 'onWhere') {\n          var e = query.e;\n          if (e && e.isComplex && e.predicates instanceof Array) {\n            var allPredicates = e.predicates.map(function (predicateObj) {\n              if (predicateObj.predicates && predicateObj.predicates instanceof Array) {\n                // Process nested predicate array\n                var nestedPredicates = predicateObj.predicates.map(function (nestedPredicate) {\n                  var field = nestedPredicate.field,\n                    operator = nestedPredicate.operator,\n                    value = nestedPredicate.value,\n                    ignoreCase = nestedPredicate.ignoreCase,\n                    ignoreAccent = nestedPredicate.ignoreAccent,\n                    matchCase = nestedPredicate.matchCase;\n                  return new Predicate(field, operator, value, ignoreCase, ignoreAccent, matchCase);\n                });\n                return predicateObj.condition === 'and' ? Predicate.and(nestedPredicates) : Predicate.or(nestedPredicates);\n              } else {\n                // Process individual predicate\n                var field = predicateObj.field,\n                  operator = predicateObj.operator,\n                  value = predicateObj.value,\n                  ignoreCase = predicateObj.ignoreCase,\n                  ignoreAccent = predicateObj.ignoreAccent,\n                  matchCase = predicateObj.matchCase;\n                return new Predicate(field, operator, value, ignoreCase, ignoreAccent, matchCase);\n              }\n            });\n            query.e = new Predicate(allPredicates[0], e.condition, allPredicates.slice(1));\n          }\n        }\n        return true; // Keep all other queries\n      });\n      var newQuery = extend(new Query(), this.persistQuery);\n      this.isInitialLoad = false;\n      return newQuery;\n    } else {\n      this.persistQuery = query;\n      this.isInitialLoad = false;\n      return query;\n    }\n  };\n  /**\n   * Overrides DataManager's default query with given query.\n   *\n   * @param  {Query} query - Defines the new default query.\n   */\n  DataManager.prototype.setDefaultQuery = function (query) {\n    this.defaultQuery = query;\n    return this;\n  };\n  /**\n   * Executes the given query with local data source.\n   *\n   * @param  {Query} query - Defines the query to retrieve data.\n   */\n  DataManager.prototype.executeLocal = function (query) {\n    if (!this.defaultQuery && !(query instanceof Query)) {\n      DataUtil.throwError('DataManager - executeLocal() : A query is required to execute');\n    }\n    if (!this.dataSource.json) {\n      DataUtil.throwError('DataManager - executeLocal() : Json data is required to execute');\n    }\n    if (this.dataSource.enablePersistence && this.dataSource.id) {\n      query = this.setPersistQuery(query);\n    }\n    query = query || this.defaultQuery;\n    var result = this.adaptor.processQuery(this, query);\n    if (query.subQuery) {\n      var from = query.subQuery.fromTable;\n      var lookup = query.subQuery.lookups;\n      var res = query.isCountRequired ? result.result : result;\n      if (lookup && lookup instanceof Array) {\n        DataUtil.buildHierarchy(query.subQuery.fKey, from, res, lookup, query.subQuery.key);\n      }\n      for (var j = 0; j < res.length; j++) {\n        if (res[j][from] instanceof Array) {\n          res[j] = extend({}, {}, res[j]);\n          res[j][from] = this.adaptor.processResponse(query.subQuery.using(new DataManager(res[j][from].slice(0))).executeLocal(), this, query);\n        }\n      }\n    }\n    return this.adaptor.processResponse(result, this, query);\n  };\n  /**\n   * Executes the given query with either local or remote data source.\n   * It will be executed as asynchronously and returns Promise object which will be resolved or rejected after action completed.\n   *\n   * @param  {Query|Function} query - Defines the query to retrieve data.\n   * @param  {Function} done - Defines the callback function and triggers when the Promise is resolved.\n   * @param  {Function} fail - Defines the callback function and triggers when the Promise is rejected.\n   * @param  {Function} always - Defines the callback function and triggers when the Promise is resolved or rejected.\n   */\n  DataManager.prototype.executeQuery = function (query, done, fail, always) {\n    var _this = this;\n    var makeRequest = 'makeRequest';\n    if (this.dataSource.enablePersistence && this.dataSource.id) {\n      query = this.setPersistQuery(query);\n    }\n    if (typeof query === 'function') {\n      always = fail;\n      fail = done;\n      done = query;\n      query = null;\n    }\n    if (!query) {\n      query = this.defaultQuery;\n    }\n    if (!(query instanceof Query)) {\n      DataUtil.throwError('DataManager - executeQuery() : A query is required to execute');\n    }\n    var deffered = new Deferred();\n    var args = {\n      query: query\n    };\n    if (!this.dataSource.offline && this.dataSource.url !== undefined && this.dataSource.url !== '' || !isNullOrUndefined(this.adaptor[makeRequest]) || this.isCustomDataAdaptor(this.adaptor)) {\n      var result = this.adaptor.processQuery(this, query);\n      if (!isNullOrUndefined(this.adaptor[makeRequest])) {\n        this.adaptor[makeRequest](result, deffered, args, query);\n      } else if (!isNullOrUndefined(result.url) || this.isCustomDataAdaptor(this.adaptor)) {\n        this.requests = [];\n        this.makeRequest(result, deffered, args, query);\n      } else {\n        args = DataManager.getDeferedArgs(query, result, args);\n        deffered.resolve(args);\n      }\n    } else {\n      DataManager.nextTick(function () {\n        var res = _this.executeLocal(query);\n        args = DataManager.getDeferedArgs(query, res, args);\n        deffered.resolve(args);\n      });\n    }\n    if (done || fail) {\n      deffered.promise.then(done, fail);\n    }\n    if (always) {\n      deffered.promise.then(always, always);\n    }\n    return deffered.promise;\n  };\n  DataManager.getDeferedArgs = function (query, result, args) {\n    if (query.isCountRequired) {\n      args.result = result.result;\n      args.count = result.count;\n      args.aggregates = result.aggregates;\n    } else {\n      args.result = result;\n    }\n    return args;\n  };\n  DataManager.nextTick = function (fn) {\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    // tslint:disable-next-line:no-any\n    (window.setImmediate || window.setTimeout)(fn, 0);\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n  };\n  DataManager.prototype.extendRequest = function (url, fnSuccess, fnFail) {\n    return extend({}, {\n      type: 'GET',\n      dataType: this.dataSource.dataType,\n      crossDomain: this.dataSource.crossDomain,\n      jsonp: this.dataSource.jsonp,\n      cache: true,\n      processData: false,\n      onSuccess: fnSuccess,\n      onFailure: fnFail\n    }, url);\n  };\n  // tslint:disable-next-line:max-func-body-length\n  DataManager.prototype.makeRequest = function (url, deffered, args, query) {\n    var _this = this;\n    var isSelector = !!query.subQuerySelector;\n    var fnFail = function (e) {\n      args.error = e;\n      deffered.reject(args);\n    };\n    var process = function (data, count, xhr, request, actual, aggregates, virtualSelectRecords) {\n      args.xhr = xhr;\n      args.count = count ? parseInt(count.toString(), 10) : 0;\n      args.result = data;\n      args.request = request;\n      args.aggregates = aggregates;\n      args.actual = actual;\n      args.virtualSelectRecords = virtualSelectRecords;\n      deffered.resolve(args);\n    };\n    var fnQueryChild = function (data, selector) {\n      var subDeffer = new Deferred();\n      var childArgs = {\n        parent: args\n      };\n      query.subQuery.isChild = true;\n      var subUrl = _this.adaptor.processQuery(_this, query.subQuery, data ? _this.adaptor.processResponse(data) : selector);\n      var childReq = _this.makeRequest(subUrl, subDeffer, childArgs, query.subQuery);\n      if (!isSelector) {\n        subDeffer.then(function (subData) {\n          if (data) {\n            DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, data, subData, query.subQuery.key);\n            process(data, subData.count, subData.xhr);\n          }\n        }, fnFail);\n      }\n      return childReq;\n    };\n    var fnSuccess = function (data, request) {\n      if (_this.isGraphQLAdaptor(_this.adaptor)) {\n        // tslint:disable-next-line:no-string-literal\n        if (!isNullOrUndefined(data['errors'])) {\n          // tslint:disable-next-line:no-string-literal\n          return fnFail(data['errors'], request);\n        }\n      }\n      if (_this.isCustomDataAdaptor(_this.adaptor)) {\n        request = extend({}, _this.fetchReqOption, request);\n      }\n      if (request.contentType.indexOf('xml') === -1 && _this.dateParse) {\n        data = DataUtil.parse.parseJson(data);\n      }\n      var result = _this.adaptor.processResponse(data, _this, query, request.fetchRequest, request);\n      var count = 0;\n      var aggregates = null;\n      var virtualSelectRecords = 'virtualSelectRecords';\n      var virtualRecords = data[virtualSelectRecords];\n      if (query.isCountRequired) {\n        count = result.count;\n        aggregates = result.aggregates;\n        result = result.result;\n      }\n      if (!query.subQuery) {\n        process(result, count, request.fetchRequest, request.type, data, aggregates, virtualRecords);\n        return;\n      }\n      if (!isSelector) {\n        fnQueryChild(result, request);\n      }\n    };\n    var req = this.extendRequest(url, fnSuccess, fnFail);\n    if (!this.isCustomDataAdaptor(this.adaptor)) {\n      var fetch_1 = new Fetch(req);\n      fetch_1.beforeSend = function () {\n        _this.beforeSend(fetch_1.fetchRequest, fetch_1);\n      };\n      req = fetch_1.send();\n      req.catch(function (e) {\n        return true;\n      }); // to handle failure remote requests.\n      this.requests.push(fetch_1);\n    } else {\n      this.fetchReqOption = req;\n      var request = req;\n      this.adaptor.options.getData({\n        data: request.data,\n        onSuccess: request.onSuccess,\n        onFailure: request.onFailure\n      });\n    }\n    if (isSelector) {\n      var promise = void 0;\n      var res = query.subQuerySelector.call(this, {\n        query: query.subQuery,\n        parent: query\n      });\n      if (res && res.length) {\n        promise = Promise.all([req, fnQueryChild(null, res)]);\n        promise.then(function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          var result = args[0];\n          var pResult = _this.adaptor.processResponse(result[0], _this, query, _this.requests[0].fetchRequest, _this.requests[0]);\n          var count = 0;\n          if (query.isCountRequired) {\n            count = pResult.count;\n            pResult = pResult.result;\n          }\n          var cResult = _this.adaptor.processResponse(result[1], _this, query.subQuery, _this.requests[1].fetchRequest, _this.requests[1]);\n          count = 0;\n          if (query.subQuery.isCountRequired) {\n            count = cResult.count;\n            cResult = cResult.result;\n          }\n          DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, pResult, cResult, query.subQuery.key);\n          isSelector = false;\n          process(pResult, count, _this.requests[0].fetchRequest);\n        });\n      } else {\n        isSelector = false;\n      }\n    }\n    return req;\n  };\n  DataManager.prototype.beforeSend = function (request, settings) {\n    this.adaptor.beforeSend(this, request, settings);\n    var headers = this.dataSource.headers;\n    var props;\n    for (var i = 0; headers && i < headers.length; i++) {\n      props = [];\n      var keys = Object.keys(headers[i]);\n      for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var prop = keys_1[_i];\n        props.push(prop);\n        request.headers.set(prop, headers[i][prop]);\n      }\n    }\n  };\n  /**\n   * Save bulk changes to the given table name.\n   * User can add a new record, edit an existing record, and delete a record at the same time.\n   * If the datasource from remote, then updated in a single post.\n   *\n   * @param {Object} changes - Defines the CrudOptions.\n   * @param {string} key - Defines the column field.\n   * @param {string|Query} tableName - Defines the table name.\n   * @param {Query} query - Sets default query for the DataManager.\n   * @param original\n   */\n  DataManager.prototype.saveChanges = function (changes, key, tableName, query, original) {\n    var _this = this;\n    if (tableName instanceof Query) {\n      query = tableName;\n      tableName = null;\n    }\n    var args = {\n      url: tableName,\n      key: key || this.dataSource.key\n    };\n    var req = this.adaptor.batchRequest(this, changes, args, query || new Query(), original);\n    var dofetchRequest = 'dofetchRequest';\n    if (this.dataSource.offline) {\n      return req;\n    }\n    if (!isNullOrUndefined(this.adaptor[dofetchRequest])) {\n      return this.adaptor[dofetchRequest](req);\n    } else if (!this.isCustomDataAdaptor(this.adaptor)) {\n      var deff_1 = new Deferred();\n      var fetch_2 = new Fetch(req);\n      fetch_2.beforeSend = function () {\n        _this.beforeSend(fetch_2.fetchRequest, fetch_2);\n      };\n      fetch_2.onSuccess = function (data, request) {\n        if (_this.isGraphQLAdaptor(_this.adaptor)) {\n          // tslint:disable-next-line:no-string-literal\n          if (!isNullOrUndefined(data['errors'])) {\n            // tslint:disable-next-line:no-string-literal\n            fetch_2.onFailure(JSON.stringify(data['errors']));\n          }\n        }\n        deff_1.resolve(_this.adaptor.processResponse(data, _this, null, request.fetchRequest, request, changes, args));\n      };\n      fetch_2.onFailure = function (e) {\n        deff_1.reject([{\n          error: e\n        }]);\n      };\n      fetch_2.send().catch(function (e) {\n        return true;\n      }); // to handle the failure requests.\n      return deff_1.promise;\n    } else {\n      return this.dofetchRequest(req, this.adaptor.options.batchUpdate, changes);\n    }\n  };\n  /**\n   * Inserts new record in the given table.\n   *\n   * @param {Object} data - Defines the data to insert.\n   * @param {string|Query} tableName - Defines the table name.\n   * @param {Query} query - Sets default query for the DataManager.\n   * @param position\n   */\n  DataManager.prototype.insert = function (data, tableName, query, position) {\n    if (tableName instanceof Query) {\n      query = tableName;\n      tableName = null;\n    }\n    var req = this.adaptor.insert(this, data, tableName, query, position);\n    var dofetchRequest = 'dofetchRequest';\n    if (this.dataSource.offline) {\n      return req;\n    }\n    if (!isNullOrUndefined(this.adaptor[dofetchRequest])) {\n      return this.adaptor[dofetchRequest](req);\n    } else {\n      return this.dofetchRequest(req, this.adaptor.options.addRecord);\n    }\n  };\n  /**\n   * Removes data from the table with the given key.\n   *\n   * @param  {string} keyField - Defines the column field.\n   * @param  {Object} value - Defines the value to find the data in the specified column.\n   * @param  {string|Query} tableName - Defines the table name\n   * @param  {Query} query - Sets default query for the DataManager.\n   */\n  DataManager.prototype.remove = function (keyField, value, tableName, query) {\n    if (typeof value === 'object') {\n      value = DataUtil.getObject(keyField, value);\n    }\n    if (tableName instanceof Query) {\n      query = tableName;\n      tableName = null;\n    }\n    var res = this.adaptor.remove(this, keyField, value, tableName, query);\n    var dofetchRequest = 'dofetchRequest';\n    if (this.dataSource.offline) {\n      return res;\n    }\n    if (!isNullOrUndefined(this.adaptor[dofetchRequest])) {\n      return this.adaptor[dofetchRequest](res);\n    } else {\n      var remove = this.adaptor.options.deleteRecord;\n      return this.dofetchRequest(res, remove);\n    }\n  };\n  /**\n   * Updates existing record in the given table.\n   *\n   * @param {string} keyField - Defines the column field.\n   * @param {Object} value - Defines the value to find the data in the specified column.\n   * @param {string|Query} tableName - Defines the table name\n   * @param {Query} query - Sets default query for the DataManager.\n   * @param original\n   */\n  DataManager.prototype.update = function (keyField, value, tableName, query, original) {\n    if (tableName instanceof Query) {\n      query = tableName;\n      tableName = null;\n    }\n    var res = this.adaptor.update(this, keyField, value, tableName, query, original);\n    var dofetchRequest = 'dofetchRequest';\n    if (this.dataSource.offline) {\n      return res;\n    }\n    if (!isNullOrUndefined(this.adaptor[dofetchRequest])) {\n      return this.adaptor[dofetchRequest](res);\n    } else {\n      var update = this.adaptor.options.updateRecord;\n      return this.dofetchRequest(res, update);\n    }\n  };\n  DataManager.prototype.isCustomDataAdaptor = function (dataSource) {\n    return this.adaptor.getModuleName && this.adaptor.getModuleName() === 'CustomDataAdaptor';\n  };\n  DataManager.prototype.isGraphQLAdaptor = function (dataSource) {\n    return this.adaptor.getModuleName && this.adaptor.getModuleName() === 'GraphQLAdaptor';\n  };\n  DataManager.prototype.successFunc = function (record, request, changes) {\n    if (this.isGraphQLAdaptor(this.adaptor)) {\n      var data = typeof record === 'object' ? record : JSON.parse(record);\n      // tslint:disable-next-line:no-string-literal\n      if (!isNullOrUndefined(data['errors'])) {\n        // tslint:disable-next-line:no-string-literal\n        this.failureFunc(JSON.stringify(data['errors']));\n      }\n    }\n    if (this.isCustomDataAdaptor(this.adaptor)) {\n      request = extend({}, this.fetchReqOption, request);\n    }\n    try {\n      DataUtil.parse.parseJson(record);\n    } catch (e) {\n      record = [];\n    }\n    record = this.adaptor.processResponse(DataUtil.parse.parseJson(record), this, null, request.fetchRequest, request, changes);\n    this.fetchDeffered.resolve(record);\n  };\n  DataManager.prototype.failureFunc = function (e) {\n    this.fetchDeffered.reject([{\n      error: e\n    }]);\n  };\n  DataManager.prototype.dofetchRequest = function (res, fetchFunc, changes) {\n    var _this = this;\n    res = extend({}, {\n      type: 'POST',\n      contentType: 'application/json; charset=utf-8',\n      processData: false\n    }, res);\n    this.fetchDeffered = new Deferred();\n    if (!this.isCustomDataAdaptor(this.adaptor)) {\n      var fetch_3 = new Fetch(res);\n      fetch_3.beforeSend = function () {\n        _this.beforeSend(fetch_3.fetchRequest, fetch_3);\n      };\n      fetch_3.onSuccess = this.successFunc.bind(this);\n      fetch_3.onFailure = this.failureFunc.bind(this);\n      fetch_3.send().catch(function (e) {\n        return true;\n      }); // to handle the failure requests.\n    } else {\n      this.fetchReqOption = res;\n      fetchFunc.call(this, {\n        data: res.data,\n        onSuccess: this.successFunc.bind(this),\n        onFailure: this.failureFunc.bind(this),\n        changes: changes\n      });\n    }\n    return this.fetchDeffered.promise;\n  };\n  DataManager.prototype.clearPersistence = function () {\n    window.removeEventListener('unload', this.setPersistData.bind(this));\n    this.dataSource.enablePersistence = false;\n    this.persistQuery = {};\n    window.localStorage.setItem(this.dataSource.id, '[]');\n  };\n  return DataManager;\n}();\nexport { DataManager };\n/**\n * Deferred is used to handle asynchronous operation.\n */\nvar Deferred = /** @class */function () {\n  function Deferred() {\n    var _this = this;\n    /**\n     * Promise is an object that represents a value that may not be available yet, but will be resolved at some point in the future.\n     */\n    this.promise = new Promise(function (resolve, reject) {\n      _this.resolve = resolve;\n      _this.reject = reject;\n    });\n    /**\n     * Defines the callback function triggers when the Deferred object is resolved.\n     */\n    this.then = this.promise.then.bind(this.promise);\n    /**\n     * Defines the callback function triggers when the Deferred object is rejected.\n     */\n    this.catch = this.promise.catch.bind(this.promise);\n  }\n  return Deferred;\n}();\nexport { Deferred };","map":{"version":3,"names":["Fetch","extend","isNullOrUndefined","DataUtil","Predicate","Query","ODataAdaptor","JsonAdaptor","CacheAdaptor","RemoteSaveAdaptor","CustomDataAdaptor","DataManager","dataSource","query","adaptor","_this","dateParse","timeZoneHandling","persistQuery","isInitialLoad","requests","data","Array","json","offline","enablePersistence","id","ignoreOnPersist","url","insertUrl","removeUrl","updateUrl","crudUrl","batchUrl","headers","accept","timeTillExpiration","cachingPageSize","enableCaching","requestType","key","crossDomain","jsonp","dataType","undefined","requiresFormat","throwError","isCors","defaultQuery","window","addEventListener","setPersistData","bind","length","isDataAvailable","ready","executeQuery","then","e","result","Object","defineProperty","prototype","get","enumerable","configurable","getPersistedData","persistedData","localStorage","getItem","JSON","parse","persistData","setItem","stringify","setPersistQuery","persistedQuery","keys","queries","filter","fn","some","keyword","isComplex","predicates","allPredicates","map","predicateObj","nestedPredicates","nestedPredicate","field","operator","value","ignoreCase","ignoreAccent","matchCase","condition","and","or","slice","newQuery","setDefaultQuery","executeLocal","processQuery","subQuery","from","fromTable","lookup","lookups","res","isCountRequired","buildHierarchy","fKey","j","processResponse","using","done","fail","always","makeRequest","deffered","Deferred","args","isCustomDataAdaptor","getDeferedArgs","resolve","nextTick","promise","count","aggregates","setImmediate","setTimeout","extendRequest","fnSuccess","fnFail","type","cache","processData","onSuccess","onFailure","isSelector","subQuerySelector","error","reject","process","xhr","request","actual","virtualSelectRecords","parseInt","toString","fnQueryChild","selector","subDeffer","childArgs","parent","isChild","subUrl","childReq","subData","isGraphQLAdaptor","fetchReqOption","contentType","indexOf","parseJson","fetchRequest","virtualRecords","req","fetch_1","beforeSend","send","catch","push","options","getData","call","Promise","all","_i","arguments","pResult","cResult","settings","props","i","keys_1","prop","set","saveChanges","changes","tableName","original","batchRequest","dofetchRequest","deff_1","fetch_2","batchUpdate","insert","position","addRecord","remove","keyField","getObject","deleteRecord","update","updateRecord","getModuleName","successFunc","record","failureFunc","fetchDeffered","fetchFunc","fetch_3","clearPersistence","removeEventListener"],"sources":["C:/Users/gabby/trax-x/node_modules/@syncfusion/ej2-data/src/manager.js"],"sourcesContent":["/* eslint-disable valid-jsdoc */\n/* eslint-disable security/detect-object-injection */\nimport { Fetch } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Predicate, Query } from './query';\nimport { ODataAdaptor, JsonAdaptor, CacheAdaptor, RemoteSaveAdaptor, CustomDataAdaptor } from './adaptors';\n/**\n * DataManager is used to manage and manipulate relational data.\n */\nvar DataManager = /** @class */ (function () {\n    /**\n     * Constructor for DataManager class\n     *\n     * @param {DataOptions|JSON[]} dataSource?\n     * @param {Query} query?\n     * @param {AdaptorOptions|string} adaptor?\n     * @param dataSource\n     * @param query\n     * @param adaptor\n     * @hidden\n     */\n    function DataManager(dataSource, query, adaptor) {\n        var _this = this;\n        /** @hidden */\n        this.dateParse = true;\n        /** @hidden */\n        this.timeZoneHandling = true;\n        this.persistQuery = {};\n        this.isInitialLoad = false;\n        this.requests = [];\n        this.isInitialLoad = true;\n        if (!dataSource && !this.dataSource) {\n            dataSource = [];\n        }\n        adaptor = adaptor || dataSource.adaptor;\n        if (dataSource && dataSource.timeZoneHandling === false) {\n            this.timeZoneHandling = dataSource.timeZoneHandling;\n        }\n        var data;\n        if (dataSource instanceof Array) {\n            data = {\n                json: dataSource,\n                offline: true\n            };\n        }\n        else if (typeof dataSource === 'object') {\n            if (!dataSource.json) {\n                dataSource.json = [];\n            }\n            if (!dataSource.enablePersistence) {\n                dataSource.enablePersistence = false;\n            }\n            if (!dataSource.id) {\n                dataSource.id = '';\n            }\n            if (!dataSource.ignoreOnPersist) {\n                dataSource.ignoreOnPersist = [];\n            }\n            data = {\n                url: dataSource.url,\n                insertUrl: dataSource.insertUrl,\n                removeUrl: dataSource.removeUrl,\n                updateUrl: dataSource.updateUrl,\n                crudUrl: dataSource.crudUrl,\n                batchUrl: dataSource.batchUrl,\n                json: dataSource.json,\n                headers: dataSource.headers,\n                accept: dataSource.accept,\n                data: dataSource.data,\n                timeTillExpiration: dataSource.timeTillExpiration,\n                cachingPageSize: dataSource.cachingPageSize,\n                enableCaching: dataSource.enableCaching,\n                requestType: dataSource.requestType,\n                key: dataSource.key,\n                crossDomain: dataSource.crossDomain,\n                jsonp: dataSource.jsonp,\n                dataType: dataSource.dataType,\n                offline: dataSource.offline !== undefined ? dataSource.offline\n                    : dataSource.adaptor instanceof RemoteSaveAdaptor || dataSource.adaptor instanceof CustomDataAdaptor ?\n                        false : dataSource.url ? false : true,\n                requiresFormat: dataSource.requiresFormat,\n                enablePersistence: dataSource.enablePersistence,\n                id: dataSource.id,\n                ignoreOnPersist: dataSource.ignoreOnPersist\n            };\n        }\n        else {\n            DataUtil.throwError('DataManager: Invalid arguments');\n        }\n        if (data.requiresFormat === undefined && !DataUtil.isCors()) {\n            data.requiresFormat = isNullOrUndefined(data.crossDomain) ? true : data.crossDomain;\n        }\n        if (data.dataType === undefined) {\n            data.dataType = 'json';\n        }\n        this.dataSource = data;\n        this.defaultQuery = query;\n        if (this.dataSource.enablePersistence && this.dataSource.id) {\n            window.addEventListener('unload', this.setPersistData.bind(this));\n        }\n        if (data.url && data.offline && !data.json.length) {\n            this.isDataAvailable = false;\n            this.adaptor = adaptor || new ODataAdaptor();\n            this.dataSource.offline = false;\n            this.ready = this.executeQuery(query || new Query());\n            this.ready.then(function (e) {\n                _this.dataSource.offline = true;\n                _this.isDataAvailable = true;\n                data.json = e.result;\n                _this.adaptor = new JsonAdaptor();\n            });\n        }\n        else {\n            this.adaptor = data.offline ? new JsonAdaptor() : new ODataAdaptor();\n        }\n        if (!data.jsonp && this.adaptor instanceof ODataAdaptor) {\n            data.jsonp = 'callback';\n        }\n        this.adaptor = adaptor || this.adaptor;\n        if (data.enableCaching) {\n            this.adaptor = new CacheAdaptor(this.adaptor, data.timeTillExpiration, data.cachingPageSize);\n        }\n        return this;\n    }\n    Object.defineProperty(DataManager.prototype, \"moduleName\", {\n        /** @hidden */\n        get: function () { return 'datamanager'; },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    /**\n     * Get the queries maintained in the persisted state.\n     * @param {string} id - The identifier of the persisted query to retrieve.\n     * @returns {object} The persisted data object.\n     */\n    DataManager.prototype.getPersistedData = function (id) {\n        var persistedData = localStorage.getItem(id || this.dataSource.id);\n        return JSON.parse(persistedData);\n    };\n    /**\n    * Set the queries to be maintained in the persisted state.\n    * @param {Event} e - The event parameter that triggers the setPersistData method.\n    * @param {string} id - The identifier of the persisted query to set.\n    * @param {object} persistData - The data to be persisted.\n    * @returns {void} .\n    */\n    DataManager.prototype.setPersistData = function (e, id, persistData) {\n        localStorage.setItem(id || this.dataSource.id, JSON.stringify(persistData || this.persistQuery));\n    };\n    DataManager.prototype.setPersistQuery = function (query) {\n        var _this = this;\n        var persistedQuery = this.getPersistedData();\n        if (this.isInitialLoad && persistedQuery && Object.keys(persistedQuery).length) {\n            this.persistQuery = persistedQuery;\n            this.persistQuery.queries = this.persistQuery.queries.filter(function (query) {\n                if (_this.dataSource.ignoreOnPersist && _this.dataSource.ignoreOnPersist.length) {\n                    if (query.fn && _this.dataSource.ignoreOnPersist.some(function (keyword) { return query.fn === keyword; })) {\n                        return false; // Exclude the matching query\n                    }\n                }\n                if (query.fn === 'onWhere') {\n                    var e = query.e;\n                    if (e && e.isComplex && e.predicates instanceof Array) {\n                        var allPredicates = e.predicates.map(function (predicateObj) {\n                            if (predicateObj.predicates && predicateObj.predicates instanceof Array) {\n                                // Process nested predicate array\n                                var nestedPredicates = predicateObj.predicates.map(function (nestedPredicate) {\n                                    var field = nestedPredicate.field, operator = nestedPredicate.operator, value = nestedPredicate.value, ignoreCase = nestedPredicate.ignoreCase, ignoreAccent = nestedPredicate.ignoreAccent, matchCase = nestedPredicate.matchCase;\n                                    return new Predicate(field, operator, value, ignoreCase, ignoreAccent, matchCase);\n                                });\n                                return predicateObj.condition === 'and' ? Predicate.and(nestedPredicates) : Predicate.or(nestedPredicates);\n                            }\n                            else {\n                                // Process individual predicate\n                                var field = predicateObj.field, operator = predicateObj.operator, value = predicateObj.value, ignoreCase = predicateObj.ignoreCase, ignoreAccent = predicateObj.ignoreAccent, matchCase = predicateObj.matchCase;\n                                return new Predicate(field, operator, value, ignoreCase, ignoreAccent, matchCase);\n                            }\n                        });\n                        query.e = new Predicate(allPredicates[0], e.condition, allPredicates.slice(1));\n                    }\n                }\n                return true; // Keep all other queries\n            });\n            var newQuery = extend(new Query(), this.persistQuery);\n            this.isInitialLoad = false;\n            return (newQuery);\n        }\n        else {\n            this.persistQuery = query;\n            this.isInitialLoad = false;\n            return query;\n        }\n    };\n    /**\n     * Overrides DataManager's default query with given query.\n     *\n     * @param  {Query} query - Defines the new default query.\n     */\n    DataManager.prototype.setDefaultQuery = function (query) {\n        this.defaultQuery = query;\n        return this;\n    };\n    /**\n     * Executes the given query with local data source.\n     *\n     * @param  {Query} query - Defines the query to retrieve data.\n     */\n    DataManager.prototype.executeLocal = function (query) {\n        if (!this.defaultQuery && !(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeLocal() : A query is required to execute');\n        }\n        if (!this.dataSource.json) {\n            DataUtil.throwError('DataManager - executeLocal() : Json data is required to execute');\n        }\n        if (this.dataSource.enablePersistence && this.dataSource.id) {\n            query = this.setPersistQuery(query);\n        }\n        query = query || this.defaultQuery;\n        var result = this.adaptor.processQuery(this, query);\n        if (query.subQuery) {\n            var from = query.subQuery.fromTable;\n            var lookup = query.subQuery.lookups;\n            var res = query.isCountRequired ? result.result :\n                result;\n            if (lookup && lookup instanceof Array) {\n                DataUtil.buildHierarchy(query.subQuery.fKey, from, res, lookup, query.subQuery.key);\n            }\n            for (var j = 0; j < res.length; j++) {\n                if (res[j][from] instanceof Array) {\n                    res[j] = extend({}, {}, res[j]);\n                    res[j][from] = this.adaptor.processResponse(query.subQuery.using(new DataManager(res[j][from].slice(0))).executeLocal(), this, query);\n                }\n            }\n        }\n        return this.adaptor.processResponse(result, this, query);\n    };\n    /**\n     * Executes the given query with either local or remote data source.\n     * It will be executed as asynchronously and returns Promise object which will be resolved or rejected after action completed.\n     *\n     * @param  {Query|Function} query - Defines the query to retrieve data.\n     * @param  {Function} done - Defines the callback function and triggers when the Promise is resolved.\n     * @param  {Function} fail - Defines the callback function and triggers when the Promise is rejected.\n     * @param  {Function} always - Defines the callback function and triggers when the Promise is resolved or rejected.\n     */\n    DataManager.prototype.executeQuery = function (query, done, fail, always) {\n        var _this = this;\n        var makeRequest = 'makeRequest';\n        if (this.dataSource.enablePersistence && this.dataSource.id) {\n            query = this.setPersistQuery(query);\n        }\n        if (typeof query === 'function') {\n            always = fail;\n            fail = done;\n            done = query;\n            query = null;\n        }\n        if (!query) {\n            query = this.defaultQuery;\n        }\n        if (!(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeQuery() : A query is required to execute');\n        }\n        var deffered = new Deferred();\n        var args = { query: query };\n        if (!this.dataSource.offline && (this.dataSource.url !== undefined && this.dataSource.url !== '')\n            || (!isNullOrUndefined(this.adaptor[makeRequest])) || this.isCustomDataAdaptor(this.adaptor)) {\n            var result = this.adaptor.processQuery(this, query);\n            if (!isNullOrUndefined(this.adaptor[makeRequest])) {\n                this.adaptor[makeRequest](result, deffered, args, query);\n            }\n            else if (!isNullOrUndefined(result.url) || this.isCustomDataAdaptor(this.adaptor)) {\n                this.requests = [];\n                this.makeRequest(result, deffered, args, query);\n            }\n            else {\n                args = DataManager.getDeferedArgs(query, result, args);\n                deffered.resolve(args);\n            }\n        }\n        else {\n            DataManager.nextTick(function () {\n                var res = _this.executeLocal(query);\n                args = DataManager.getDeferedArgs(query, res, args);\n                deffered.resolve(args);\n            });\n        }\n        if (done || fail) {\n            deffered.promise.then(done, fail);\n        }\n        if (always) {\n            deffered.promise.then(always, always);\n        }\n        return deffered.promise;\n    };\n    DataManager.getDeferedArgs = function (query, result, args) {\n        if (query.isCountRequired) {\n            args.result = result.result;\n            args.count = result.count;\n            args.aggregates = result.aggregates;\n        }\n        else {\n            args.result = result;\n        }\n        return args;\n    };\n    DataManager.nextTick = function (fn) {\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        // tslint:disable-next-line:no-any\n        (window.setImmediate || window.setTimeout)(fn, 0);\n        /* eslint-enable @typescript-eslint/no-explicit-any */\n    };\n    DataManager.prototype.extendRequest = function (url, fnSuccess, fnFail) {\n        return extend({}, {\n            type: 'GET',\n            dataType: this.dataSource.dataType,\n            crossDomain: this.dataSource.crossDomain,\n            jsonp: this.dataSource.jsonp,\n            cache: true,\n            processData: false,\n            onSuccess: fnSuccess,\n            onFailure: fnFail\n        }, url);\n    };\n    // tslint:disable-next-line:max-func-body-length\n    DataManager.prototype.makeRequest = function (url, deffered, args, query) {\n        var _this = this;\n        var isSelector = !!query.subQuerySelector;\n        var fnFail = function (e) {\n            args.error = e;\n            deffered.reject(args);\n        };\n        var process = function (data, count, xhr, request, actual, aggregates, virtualSelectRecords) {\n            args.xhr = xhr;\n            args.count = count ? parseInt(count.toString(), 10) : 0;\n            args.result = data;\n            args.request = request;\n            args.aggregates = aggregates;\n            args.actual = actual;\n            args.virtualSelectRecords = virtualSelectRecords;\n            deffered.resolve(args);\n        };\n        var fnQueryChild = function (data, selector) {\n            var subDeffer = new Deferred();\n            var childArgs = { parent: args };\n            query.subQuery.isChild = true;\n            var subUrl = _this.adaptor.processQuery(_this, query.subQuery, data ? _this.adaptor.processResponse(data) : selector);\n            var childReq = _this.makeRequest(subUrl, subDeffer, childArgs, query.subQuery);\n            if (!isSelector) {\n                subDeffer.then(function (subData) {\n                    if (data) {\n                        DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, data, subData, query.subQuery.key);\n                        process(data, subData.count, subData.xhr);\n                    }\n                }, fnFail);\n            }\n            return childReq;\n        };\n        var fnSuccess = function (data, request) {\n            if (_this.isGraphQLAdaptor(_this.adaptor)) {\n                // tslint:disable-next-line:no-string-literal\n                if (!isNullOrUndefined(data['errors'])) {\n                    // tslint:disable-next-line:no-string-literal\n                    return fnFail(data['errors'], request);\n                }\n            }\n            if (_this.isCustomDataAdaptor(_this.adaptor)) {\n                request = extend({}, _this.fetchReqOption, request);\n            }\n            if (request.contentType.indexOf('xml') === -1 && _this.dateParse) {\n                data = DataUtil.parse.parseJson(data);\n            }\n            var result = _this.adaptor.processResponse(data, _this, query, request.fetchRequest, request);\n            var count = 0;\n            var aggregates = null;\n            var virtualSelectRecords = 'virtualSelectRecords';\n            var virtualRecords = data[virtualSelectRecords];\n            if (query.isCountRequired) {\n                count = result.count;\n                aggregates = result.aggregates;\n                result = result.result;\n            }\n            if (!query.subQuery) {\n                process(result, count, request.fetchRequest, request.type, data, aggregates, virtualRecords);\n                return;\n            }\n            if (!isSelector) {\n                fnQueryChild(result, request);\n            }\n        };\n        var req = this.extendRequest(url, fnSuccess, fnFail);\n        if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var fetch_1 = new Fetch(req);\n            fetch_1.beforeSend = function () {\n                _this.beforeSend(fetch_1.fetchRequest, fetch_1);\n            };\n            req = fetch_1.send();\n            req.catch(function (e) { return true; }); // to handle failure remote requests.\n            this.requests.push(fetch_1);\n        }\n        else {\n            this.fetchReqOption = req;\n            var request = req;\n            this.adaptor.options.getData({\n                data: request.data,\n                onSuccess: request.onSuccess, onFailure: request.onFailure\n            });\n        }\n        if (isSelector) {\n            var promise = void 0;\n            var res = query.subQuerySelector.call(this, { query: query.subQuery, parent: query });\n            if (res && res.length) {\n                promise = Promise.all([req, fnQueryChild(null, res)]);\n                promise.then(function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var result = args[0];\n                    var pResult = _this.adaptor.processResponse(result[0], _this, query, _this.requests[0].fetchRequest, _this.requests[0]);\n                    var count = 0;\n                    if (query.isCountRequired) {\n                        count = pResult.count;\n                        pResult = pResult.result;\n                    }\n                    var cResult = _this.adaptor.processResponse(result[1], _this, query.subQuery, _this.requests[1].fetchRequest, _this.requests[1]);\n                    count = 0;\n                    if (query.subQuery.isCountRequired) {\n                        count = cResult.count;\n                        cResult = cResult.result;\n                    }\n                    DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, pResult, cResult, query.subQuery.key);\n                    isSelector = false;\n                    process(pResult, count, _this.requests[0].fetchRequest);\n                });\n            }\n            else {\n                isSelector = false;\n            }\n        }\n        return req;\n    };\n    DataManager.prototype.beforeSend = function (request, settings) {\n        this.adaptor.beforeSend(this, request, settings);\n        var headers = this.dataSource.headers;\n        var props;\n        for (var i = 0; headers && i < headers.length; i++) {\n            props = [];\n            var keys = Object.keys(headers[i]);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                props.push(prop);\n                request.headers.set(prop, headers[i][prop]);\n            }\n        }\n    };\n    /**\n     * Save bulk changes to the given table name.\n     * User can add a new record, edit an existing record, and delete a record at the same time.\n     * If the datasource from remote, then updated in a single post.\n     *\n     * @param {Object} changes - Defines the CrudOptions.\n     * @param {string} key - Defines the column field.\n     * @param {string|Query} tableName - Defines the table name.\n     * @param {Query} query - Sets default query for the DataManager.\n     * @param original\n     */\n    DataManager.prototype.saveChanges = function (changes, key, tableName, query, original) {\n        var _this = this;\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var args = {\n            url: tableName,\n            key: key || this.dataSource.key\n        };\n        var req = this.adaptor.batchRequest(this, changes, args, query || new Query(), original);\n        var dofetchRequest = 'dofetchRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[dofetchRequest])) {\n            return this.adaptor[dofetchRequest](req);\n        }\n        else if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var deff_1 = new Deferred();\n            var fetch_2 = new Fetch(req);\n            fetch_2.beforeSend = function () {\n                _this.beforeSend(fetch_2.fetchRequest, fetch_2);\n            };\n            fetch_2.onSuccess = function (data, request) {\n                if (_this.isGraphQLAdaptor(_this.adaptor)) {\n                    // tslint:disable-next-line:no-string-literal\n                    if (!isNullOrUndefined(data['errors'])) {\n                        // tslint:disable-next-line:no-string-literal\n                        fetch_2.onFailure(JSON.stringify(data['errors']));\n                    }\n                }\n                deff_1.resolve(_this.adaptor.processResponse(data, _this, null, request.fetchRequest, request, changes, args));\n            };\n            fetch_2.onFailure = function (e) {\n                deff_1.reject([{ error: e }]);\n            };\n            fetch_2.send().catch(function (e) { return true; }); // to handle the failure requests.\n            return deff_1.promise;\n        }\n        else {\n            return this.dofetchRequest(req, this.adaptor.options.batchUpdate, changes);\n        }\n    };\n    /**\n     * Inserts new record in the given table.\n     *\n     * @param {Object} data - Defines the data to insert.\n     * @param {string|Query} tableName - Defines the table name.\n     * @param {Query} query - Sets default query for the DataManager.\n     * @param position\n     */\n    DataManager.prototype.insert = function (data, tableName, query, position) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var req = this.adaptor.insert(this, data, tableName, query, position);\n        var dofetchRequest = 'dofetchRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[dofetchRequest])) {\n            return this.adaptor[dofetchRequest](req);\n        }\n        else {\n            return this.dofetchRequest(req, this.adaptor.options.addRecord);\n        }\n    };\n    /**\n     * Removes data from the table with the given key.\n     *\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.remove = function (keyField, value, tableName, query) {\n        if (typeof value === 'object') {\n            value = DataUtil.getObject(keyField, value);\n        }\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.remove(this, keyField, value, tableName, query);\n        var dofetchRequest = 'dofetchRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[dofetchRequest])) {\n            return this.adaptor[dofetchRequest](res);\n        }\n        else {\n            var remove = this.adaptor.options.deleteRecord;\n            return this.dofetchRequest(res, remove);\n        }\n    };\n    /**\n     * Updates existing record in the given table.\n     *\n     * @param {string} keyField - Defines the column field.\n     * @param {Object} value - Defines the value to find the data in the specified column.\n     * @param {string|Query} tableName - Defines the table name\n     * @param {Query} query - Sets default query for the DataManager.\n     * @param original\n     */\n    DataManager.prototype.update = function (keyField, value, tableName, query, original) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.update(this, keyField, value, tableName, query, original);\n        var dofetchRequest = 'dofetchRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[dofetchRequest])) {\n            return this.adaptor[dofetchRequest](res);\n        }\n        else {\n            var update = this.adaptor.options.updateRecord;\n            return this.dofetchRequest(res, update);\n        }\n    };\n    DataManager.prototype.isCustomDataAdaptor = function (dataSource) {\n        return this.adaptor.getModuleName &&\n            this.adaptor.getModuleName() === 'CustomDataAdaptor';\n    };\n    DataManager.prototype.isGraphQLAdaptor = function (dataSource) {\n        return this.adaptor.getModuleName &&\n            this.adaptor.getModuleName() === 'GraphQLAdaptor';\n    };\n    DataManager.prototype.successFunc = function (record, request, changes) {\n        if (this.isGraphQLAdaptor(this.adaptor)) {\n            var data = typeof record === 'object' ? record : JSON.parse(record);\n            // tslint:disable-next-line:no-string-literal\n            if (!isNullOrUndefined(data['errors'])) {\n                // tslint:disable-next-line:no-string-literal\n                this.failureFunc(JSON.stringify(data['errors']));\n            }\n        }\n        if (this.isCustomDataAdaptor(this.adaptor)) {\n            request = extend({}, this.fetchReqOption, request);\n        }\n        try {\n            DataUtil.parse.parseJson(record);\n        }\n        catch (e) {\n            record = [];\n        }\n        record = this.adaptor.processResponse(DataUtil.parse.parseJson(record), this, null, request.fetchRequest, request, changes);\n        this.fetchDeffered.resolve(record);\n    };\n    DataManager.prototype.failureFunc = function (e) {\n        this.fetchDeffered.reject([{ error: e }]);\n    };\n    DataManager.prototype.dofetchRequest = function (res, fetchFunc, changes) {\n        var _this = this;\n        res = extend({}, {\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8',\n            processData: false\n        }, res);\n        this.fetchDeffered = new Deferred();\n        if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var fetch_3 = new Fetch(res);\n            fetch_3.beforeSend = function () {\n                _this.beforeSend(fetch_3.fetchRequest, fetch_3);\n            };\n            fetch_3.onSuccess = this.successFunc.bind(this);\n            fetch_3.onFailure = this.failureFunc.bind(this);\n            fetch_3.send().catch(function (e) { return true; }); // to handle the failure requests.\n        }\n        else {\n            this.fetchReqOption = res;\n            fetchFunc.call(this, {\n                data: res.data, onSuccess: this.successFunc.bind(this),\n                onFailure: this.failureFunc.bind(this),\n                changes: changes\n            });\n        }\n        return this.fetchDeffered.promise;\n    };\n    DataManager.prototype.clearPersistence = function () {\n        window.removeEventListener('unload', this.setPersistData.bind(this));\n        this.dataSource.enablePersistence = false;\n        this.persistQuery = {};\n        window.localStorage.setItem(this.dataSource.id, '[]');\n    };\n    return DataManager;\n}());\nexport { DataManager };\n/**\n * Deferred is used to handle asynchronous operation.\n */\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        /**\n         * Promise is an object that represents a value that may not be available yet, but will be resolved at some point in the future.\n         */\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n        /**\n         * Defines the callback function triggers when the Deferred object is resolved.\n         */\n        this.then = this.promise.then.bind(this.promise);\n        /**\n         * Defines the callback function triggers when the Deferred object is rejected.\n         */\n        this.catch = this.promise.catch.bind(this.promise);\n    }\n    return Deferred;\n}());\nexport { Deferred };\n"],"mappings":"AAAA;AACA;AACA,SAASA,KAAK,QAAQ,sBAAsB;AAC5C,SAASC,MAAM,EAAEC,iBAAiB,QAAQ,sBAAsB;AAChE,SAASC,QAAQ,QAAQ,QAAQ;AACjC,SAASC,SAAS,EAAEC,KAAK,QAAQ,SAAS;AAC1C,SAASC,YAAY,EAAEC,WAAW,EAAEC,YAAY,EAAEC,iBAAiB,EAAEC,iBAAiB,QAAQ,YAAY;AAC1G;AACA;AACA;AACA,IAAIC,WAAW,GAAG,aAAe,YAAY;EACzC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,SAASA,WAAWA,CAACC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAE;IAC7C,IAAIC,KAAK,GAAG,IAAI;IAChB;IACA,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB;IACA,IAAI,CAACC,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACC,YAAY,GAAG,CAAC,CAAC;IACtB,IAAI,CAACC,aAAa,GAAG,KAAK;IAC1B,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACD,aAAa,GAAG,IAAI;IACzB,IAAI,CAACP,UAAU,IAAI,CAAC,IAAI,CAACA,UAAU,EAAE;MACjCA,UAAU,GAAG,EAAE;IACnB;IACAE,OAAO,GAAGA,OAAO,IAAIF,UAAU,CAACE,OAAO;IACvC,IAAIF,UAAU,IAAIA,UAAU,CAACK,gBAAgB,KAAK,KAAK,EAAE;MACrD,IAAI,CAACA,gBAAgB,GAAGL,UAAU,CAACK,gBAAgB;IACvD;IACA,IAAII,IAAI;IACR,IAAIT,UAAU,YAAYU,KAAK,EAAE;MAC7BD,IAAI,GAAG;QACHE,IAAI,EAAEX,UAAU;QAChBY,OAAO,EAAE;MACb,CAAC;IACL,CAAC,MACI,IAAI,OAAOZ,UAAU,KAAK,QAAQ,EAAE;MACrC,IAAI,CAACA,UAAU,CAACW,IAAI,EAAE;QAClBX,UAAU,CAACW,IAAI,GAAG,EAAE;MACxB;MACA,IAAI,CAACX,UAAU,CAACa,iBAAiB,EAAE;QAC/Bb,UAAU,CAACa,iBAAiB,GAAG,KAAK;MACxC;MACA,IAAI,CAACb,UAAU,CAACc,EAAE,EAAE;QAChBd,UAAU,CAACc,EAAE,GAAG,EAAE;MACtB;MACA,IAAI,CAACd,UAAU,CAACe,eAAe,EAAE;QAC7Bf,UAAU,CAACe,eAAe,GAAG,EAAE;MACnC;MACAN,IAAI,GAAG;QACHO,GAAG,EAAEhB,UAAU,CAACgB,GAAG;QACnBC,SAAS,EAAEjB,UAAU,CAACiB,SAAS;QAC/BC,SAAS,EAAElB,UAAU,CAACkB,SAAS;QAC/BC,SAAS,EAAEnB,UAAU,CAACmB,SAAS;QAC/BC,OAAO,EAAEpB,UAAU,CAACoB,OAAO;QAC3BC,QAAQ,EAAErB,UAAU,CAACqB,QAAQ;QAC7BV,IAAI,EAAEX,UAAU,CAACW,IAAI;QACrBW,OAAO,EAAEtB,UAAU,CAACsB,OAAO;QAC3BC,MAAM,EAAEvB,UAAU,CAACuB,MAAM;QACzBd,IAAI,EAAET,UAAU,CAACS,IAAI;QACrBe,kBAAkB,EAAExB,UAAU,CAACwB,kBAAkB;QACjDC,eAAe,EAAEzB,UAAU,CAACyB,eAAe;QAC3CC,aAAa,EAAE1B,UAAU,CAAC0B,aAAa;QACvCC,WAAW,EAAE3B,UAAU,CAAC2B,WAAW;QACnCC,GAAG,EAAE5B,UAAU,CAAC4B,GAAG;QACnBC,WAAW,EAAE7B,UAAU,CAAC6B,WAAW;QACnCC,KAAK,EAAE9B,UAAU,CAAC8B,KAAK;QACvBC,QAAQ,EAAE/B,UAAU,CAAC+B,QAAQ;QAC7BnB,OAAO,EAAEZ,UAAU,CAACY,OAAO,KAAKoB,SAAS,GAAGhC,UAAU,CAACY,OAAO,GACxDZ,UAAU,CAACE,OAAO,YAAYL,iBAAiB,IAAIG,UAAU,CAACE,OAAO,YAAYJ,iBAAiB,GAChG,KAAK,GAAGE,UAAU,CAACgB,GAAG,GAAG,KAAK,GAAG,IAAI;QAC7CiB,cAAc,EAAEjC,UAAU,CAACiC,cAAc;QACzCpB,iBAAiB,EAAEb,UAAU,CAACa,iBAAiB;QAC/CC,EAAE,EAAEd,UAAU,CAACc,EAAE;QACjBC,eAAe,EAAEf,UAAU,CAACe;MAChC,CAAC;IACL,CAAC,MACI;MACDxB,QAAQ,CAAC2C,UAAU,CAAC,gCAAgC,CAAC;IACzD;IACA,IAAIzB,IAAI,CAACwB,cAAc,KAAKD,SAAS,IAAI,CAACzC,QAAQ,CAAC4C,MAAM,CAAC,CAAC,EAAE;MACzD1B,IAAI,CAACwB,cAAc,GAAG3C,iBAAiB,CAACmB,IAAI,CAACoB,WAAW,CAAC,GAAG,IAAI,GAAGpB,IAAI,CAACoB,WAAW;IACvF;IACA,IAAIpB,IAAI,CAACsB,QAAQ,KAAKC,SAAS,EAAE;MAC7BvB,IAAI,CAACsB,QAAQ,GAAG,MAAM;IAC1B;IACA,IAAI,CAAC/B,UAAU,GAAGS,IAAI;IACtB,IAAI,CAAC2B,YAAY,GAAGnC,KAAK;IACzB,IAAI,IAAI,CAACD,UAAU,CAACa,iBAAiB,IAAI,IAAI,CAACb,UAAU,CAACc,EAAE,EAAE;MACzDuB,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACC,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrE;IACA,IAAI/B,IAAI,CAACO,GAAG,IAAIP,IAAI,CAACG,OAAO,IAAI,CAACH,IAAI,CAACE,IAAI,CAAC8B,MAAM,EAAE;MAC/C,IAAI,CAACC,eAAe,GAAG,KAAK;MAC5B,IAAI,CAACxC,OAAO,GAAGA,OAAO,IAAI,IAAIR,YAAY,CAAC,CAAC;MAC5C,IAAI,CAACM,UAAU,CAACY,OAAO,GAAG,KAAK;MAC/B,IAAI,CAAC+B,KAAK,GAAG,IAAI,CAACC,YAAY,CAAC3C,KAAK,IAAI,IAAIR,KAAK,CAAC,CAAC,CAAC;MACpD,IAAI,CAACkD,KAAK,CAACE,IAAI,CAAC,UAAUC,CAAC,EAAE;QACzB3C,KAAK,CAACH,UAAU,CAACY,OAAO,GAAG,IAAI;QAC/BT,KAAK,CAACuC,eAAe,GAAG,IAAI;QAC5BjC,IAAI,CAACE,IAAI,GAAGmC,CAAC,CAACC,MAAM;QACpB5C,KAAK,CAACD,OAAO,GAAG,IAAIP,WAAW,CAAC,CAAC;MACrC,CAAC,CAAC;IACN,CAAC,MACI;MACD,IAAI,CAACO,OAAO,GAAGO,IAAI,CAACG,OAAO,GAAG,IAAIjB,WAAW,CAAC,CAAC,GAAG,IAAID,YAAY,CAAC,CAAC;IACxE;IACA,IAAI,CAACe,IAAI,CAACqB,KAAK,IAAI,IAAI,CAAC5B,OAAO,YAAYR,YAAY,EAAE;MACrDe,IAAI,CAACqB,KAAK,GAAG,UAAU;IAC3B;IACA,IAAI,CAAC5B,OAAO,GAAGA,OAAO,IAAI,IAAI,CAACA,OAAO;IACtC,IAAIO,IAAI,CAACiB,aAAa,EAAE;MACpB,IAAI,CAACxB,OAAO,GAAG,IAAIN,YAAY,CAAC,IAAI,CAACM,OAAO,EAAEO,IAAI,CAACe,kBAAkB,EAAEf,IAAI,CAACgB,eAAe,CAAC;IAChG;IACA,OAAO,IAAI;EACf;EACAuB,MAAM,CAACC,cAAc,CAAClD,WAAW,CAACmD,SAAS,EAAE,YAAY,EAAE;IACvD;IACAC,GAAG,EAAE,SAAAA,CAAA,EAAY;MAAE,OAAO,aAAa;IAAE,CAAC;IAC1CC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF;EACA;AACJ;AACA;AACA;AACA;EACItD,WAAW,CAACmD,SAAS,CAACI,gBAAgB,GAAG,UAAUxC,EAAE,EAAE;IACnD,IAAIyC,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC3C,EAAE,IAAI,IAAI,CAACd,UAAU,CAACc,EAAE,CAAC;IAClE,OAAO4C,IAAI,CAACC,KAAK,CAACJ,aAAa,CAAC;EACpC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIxD,WAAW,CAACmD,SAAS,CAACX,cAAc,GAAG,UAAUO,CAAC,EAAEhC,EAAE,EAAE8C,WAAW,EAAE;IACjEJ,YAAY,CAACK,OAAO,CAAC/C,EAAE,IAAI,IAAI,CAACd,UAAU,CAACc,EAAE,EAAE4C,IAAI,CAACI,SAAS,CAACF,WAAW,IAAI,IAAI,CAACtD,YAAY,CAAC,CAAC;EACpG,CAAC;EACDP,WAAW,CAACmD,SAAS,CAACa,eAAe,GAAG,UAAU9D,KAAK,EAAE;IACrD,IAAIE,KAAK,GAAG,IAAI;IAChB,IAAI6D,cAAc,GAAG,IAAI,CAACV,gBAAgB,CAAC,CAAC;IAC5C,IAAI,IAAI,CAAC/C,aAAa,IAAIyD,cAAc,IAAIhB,MAAM,CAACiB,IAAI,CAACD,cAAc,CAAC,CAACvB,MAAM,EAAE;MAC5E,IAAI,CAACnC,YAAY,GAAG0D,cAAc;MAClC,IAAI,CAAC1D,YAAY,CAAC4D,OAAO,GAAG,IAAI,CAAC5D,YAAY,CAAC4D,OAAO,CAACC,MAAM,CAAC,UAAUlE,KAAK,EAAE;QAC1E,IAAIE,KAAK,CAACH,UAAU,CAACe,eAAe,IAAIZ,KAAK,CAACH,UAAU,CAACe,eAAe,CAAC0B,MAAM,EAAE;UAC7E,IAAIxC,KAAK,CAACmE,EAAE,IAAIjE,KAAK,CAACH,UAAU,CAACe,eAAe,CAACsD,IAAI,CAAC,UAAUC,OAAO,EAAE;YAAE,OAAOrE,KAAK,CAACmE,EAAE,KAAKE,OAAO;UAAE,CAAC,CAAC,EAAE;YACxG,OAAO,KAAK,CAAC,CAAC;UAClB;QACJ;QACA,IAAIrE,KAAK,CAACmE,EAAE,KAAK,SAAS,EAAE;UACxB,IAAItB,CAAC,GAAG7C,KAAK,CAAC6C,CAAC;UACf,IAAIA,CAAC,IAAIA,CAAC,CAACyB,SAAS,IAAIzB,CAAC,CAAC0B,UAAU,YAAY9D,KAAK,EAAE;YACnD,IAAI+D,aAAa,GAAG3B,CAAC,CAAC0B,UAAU,CAACE,GAAG,CAAC,UAAUC,YAAY,EAAE;cACzD,IAAIA,YAAY,CAACH,UAAU,IAAIG,YAAY,CAACH,UAAU,YAAY9D,KAAK,EAAE;gBACrE;gBACA,IAAIkE,gBAAgB,GAAGD,YAAY,CAACH,UAAU,CAACE,GAAG,CAAC,UAAUG,eAAe,EAAE;kBAC1E,IAAIC,KAAK,GAAGD,eAAe,CAACC,KAAK;oBAAEC,QAAQ,GAAGF,eAAe,CAACE,QAAQ;oBAAEC,KAAK,GAAGH,eAAe,CAACG,KAAK;oBAAEC,UAAU,GAAGJ,eAAe,CAACI,UAAU;oBAAEC,YAAY,GAAGL,eAAe,CAACK,YAAY;oBAAEC,SAAS,GAAGN,eAAe,CAACM,SAAS;kBAClO,OAAO,IAAI3F,SAAS,CAACsF,KAAK,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,UAAU,EAAEC,YAAY,EAAEC,SAAS,CAAC;gBACrF,CAAC,CAAC;gBACF,OAAOR,YAAY,CAACS,SAAS,KAAK,KAAK,GAAG5F,SAAS,CAAC6F,GAAG,CAACT,gBAAgB,CAAC,GAAGpF,SAAS,CAAC8F,EAAE,CAACV,gBAAgB,CAAC;cAC9G,CAAC,MACI;gBACD;gBACA,IAAIE,KAAK,GAAGH,YAAY,CAACG,KAAK;kBAAEC,QAAQ,GAAGJ,YAAY,CAACI,QAAQ;kBAAEC,KAAK,GAAGL,YAAY,CAACK,KAAK;kBAAEC,UAAU,GAAGN,YAAY,CAACM,UAAU;kBAAEC,YAAY,GAAGP,YAAY,CAACO,YAAY;kBAAEC,SAAS,GAAGR,YAAY,CAACQ,SAAS;gBAChN,OAAO,IAAI3F,SAAS,CAACsF,KAAK,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,UAAU,EAAEC,YAAY,EAAEC,SAAS,CAAC;cACrF;YACJ,CAAC,CAAC;YACFlF,KAAK,CAAC6C,CAAC,GAAG,IAAItD,SAAS,CAACiF,aAAa,CAAC,CAAC,CAAC,EAAE3B,CAAC,CAACsC,SAAS,EAAEX,aAAa,CAACc,KAAK,CAAC,CAAC,CAAC,CAAC;UAClF;QACJ;QACA,OAAO,IAAI,CAAC,CAAC;MACjB,CAAC,CAAC;MACF,IAAIC,QAAQ,GAAGnG,MAAM,CAAC,IAAII,KAAK,CAAC,CAAC,EAAE,IAAI,CAACa,YAAY,CAAC;MACrD,IAAI,CAACC,aAAa,GAAG,KAAK;MAC1B,OAAQiF,QAAQ;IACpB,CAAC,MACI;MACD,IAAI,CAAClF,YAAY,GAAGL,KAAK;MACzB,IAAI,CAACM,aAAa,GAAG,KAAK;MAC1B,OAAON,KAAK;IAChB;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIF,WAAW,CAACmD,SAAS,CAACuC,eAAe,GAAG,UAAUxF,KAAK,EAAE;IACrD,IAAI,CAACmC,YAAY,GAAGnC,KAAK;IACzB,OAAO,IAAI;EACf,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIF,WAAW,CAACmD,SAAS,CAACwC,YAAY,GAAG,UAAUzF,KAAK,EAAE;IAClD,IAAI,CAAC,IAAI,CAACmC,YAAY,IAAI,EAAEnC,KAAK,YAAYR,KAAK,CAAC,EAAE;MACjDF,QAAQ,CAAC2C,UAAU,CAAC,+DAA+D,CAAC;IACxF;IACA,IAAI,CAAC,IAAI,CAAClC,UAAU,CAACW,IAAI,EAAE;MACvBpB,QAAQ,CAAC2C,UAAU,CAAC,iEAAiE,CAAC;IAC1F;IACA,IAAI,IAAI,CAAClC,UAAU,CAACa,iBAAiB,IAAI,IAAI,CAACb,UAAU,CAACc,EAAE,EAAE;MACzDb,KAAK,GAAG,IAAI,CAAC8D,eAAe,CAAC9D,KAAK,CAAC;IACvC;IACAA,KAAK,GAAGA,KAAK,IAAI,IAAI,CAACmC,YAAY;IAClC,IAAIW,MAAM,GAAG,IAAI,CAAC7C,OAAO,CAACyF,YAAY,CAAC,IAAI,EAAE1F,KAAK,CAAC;IACnD,IAAIA,KAAK,CAAC2F,QAAQ,EAAE;MAChB,IAAIC,IAAI,GAAG5F,KAAK,CAAC2F,QAAQ,CAACE,SAAS;MACnC,IAAIC,MAAM,GAAG9F,KAAK,CAAC2F,QAAQ,CAACI,OAAO;MACnC,IAAIC,GAAG,GAAGhG,KAAK,CAACiG,eAAe,GAAGnD,MAAM,CAACA,MAAM,GAC3CA,MAAM;MACV,IAAIgD,MAAM,IAAIA,MAAM,YAAYrF,KAAK,EAAE;QACnCnB,QAAQ,CAAC4G,cAAc,CAAClG,KAAK,CAAC2F,QAAQ,CAACQ,IAAI,EAAEP,IAAI,EAAEI,GAAG,EAAEF,MAAM,EAAE9F,KAAK,CAAC2F,QAAQ,CAAChE,GAAG,CAAC;MACvF;MACA,KAAK,IAAIyE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,GAAG,CAACxD,MAAM,EAAE4D,CAAC,EAAE,EAAE;QACjC,IAAIJ,GAAG,CAACI,CAAC,CAAC,CAACR,IAAI,CAAC,YAAYnF,KAAK,EAAE;UAC/BuF,GAAG,CAACI,CAAC,CAAC,GAAGhH,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE4G,GAAG,CAACI,CAAC,CAAC,CAAC;UAC/BJ,GAAG,CAACI,CAAC,CAAC,CAACR,IAAI,CAAC,GAAG,IAAI,CAAC3F,OAAO,CAACoG,eAAe,CAACrG,KAAK,CAAC2F,QAAQ,CAACW,KAAK,CAAC,IAAIxG,WAAW,CAACkG,GAAG,CAACI,CAAC,CAAC,CAACR,IAAI,CAAC,CAACN,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAACG,YAAY,CAAC,CAAC,EAAE,IAAI,EAAEzF,KAAK,CAAC;QACzI;MACJ;IACJ;IACA,OAAO,IAAI,CAACC,OAAO,CAACoG,eAAe,CAACvD,MAAM,EAAE,IAAI,EAAE9C,KAAK,CAAC;EAC5D,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIF,WAAW,CAACmD,SAAS,CAACN,YAAY,GAAG,UAAU3C,KAAK,EAAEuG,IAAI,EAAEC,IAAI,EAAEC,MAAM,EAAE;IACtE,IAAIvG,KAAK,GAAG,IAAI;IAChB,IAAIwG,WAAW,GAAG,aAAa;IAC/B,IAAI,IAAI,CAAC3G,UAAU,CAACa,iBAAiB,IAAI,IAAI,CAACb,UAAU,CAACc,EAAE,EAAE;MACzDb,KAAK,GAAG,IAAI,CAAC8D,eAAe,CAAC9D,KAAK,CAAC;IACvC;IACA,IAAI,OAAOA,KAAK,KAAK,UAAU,EAAE;MAC7ByG,MAAM,GAAGD,IAAI;MACbA,IAAI,GAAGD,IAAI;MACXA,IAAI,GAAGvG,KAAK;MACZA,KAAK,GAAG,IAAI;IAChB;IACA,IAAI,CAACA,KAAK,EAAE;MACRA,KAAK,GAAG,IAAI,CAACmC,YAAY;IAC7B;IACA,IAAI,EAAEnC,KAAK,YAAYR,KAAK,CAAC,EAAE;MAC3BF,QAAQ,CAAC2C,UAAU,CAAC,+DAA+D,CAAC;IACxF;IACA,IAAI0E,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC7B,IAAIC,IAAI,GAAG;MAAE7G,KAAK,EAAEA;IAAM,CAAC;IAC3B,IAAI,CAAC,IAAI,CAACD,UAAU,CAACY,OAAO,IAAK,IAAI,CAACZ,UAAU,CAACgB,GAAG,KAAKgB,SAAS,IAAI,IAAI,CAAChC,UAAU,CAACgB,GAAG,KAAK,EAAG,IACzF,CAAC1B,iBAAiB,CAAC,IAAI,CAACY,OAAO,CAACyG,WAAW,CAAC,CAAE,IAAI,IAAI,CAACI,mBAAmB,CAAC,IAAI,CAAC7G,OAAO,CAAC,EAAE;MAC9F,IAAI6C,MAAM,GAAG,IAAI,CAAC7C,OAAO,CAACyF,YAAY,CAAC,IAAI,EAAE1F,KAAK,CAAC;MACnD,IAAI,CAACX,iBAAiB,CAAC,IAAI,CAACY,OAAO,CAACyG,WAAW,CAAC,CAAC,EAAE;QAC/C,IAAI,CAACzG,OAAO,CAACyG,WAAW,CAAC,CAAC5D,MAAM,EAAE6D,QAAQ,EAAEE,IAAI,EAAE7G,KAAK,CAAC;MAC5D,CAAC,MACI,IAAI,CAACX,iBAAiB,CAACyD,MAAM,CAAC/B,GAAG,CAAC,IAAI,IAAI,CAAC+F,mBAAmB,CAAC,IAAI,CAAC7G,OAAO,CAAC,EAAE;QAC/E,IAAI,CAACM,QAAQ,GAAG,EAAE;QAClB,IAAI,CAACmG,WAAW,CAAC5D,MAAM,EAAE6D,QAAQ,EAAEE,IAAI,EAAE7G,KAAK,CAAC;MACnD,CAAC,MACI;QACD6G,IAAI,GAAG/G,WAAW,CAACiH,cAAc,CAAC/G,KAAK,EAAE8C,MAAM,EAAE+D,IAAI,CAAC;QACtDF,QAAQ,CAACK,OAAO,CAACH,IAAI,CAAC;MAC1B;IACJ,CAAC,MACI;MACD/G,WAAW,CAACmH,QAAQ,CAAC,YAAY;QAC7B,IAAIjB,GAAG,GAAG9F,KAAK,CAACuF,YAAY,CAACzF,KAAK,CAAC;QACnC6G,IAAI,GAAG/G,WAAW,CAACiH,cAAc,CAAC/G,KAAK,EAAEgG,GAAG,EAAEa,IAAI,CAAC;QACnDF,QAAQ,CAACK,OAAO,CAACH,IAAI,CAAC;MAC1B,CAAC,CAAC;IACN;IACA,IAAIN,IAAI,IAAIC,IAAI,EAAE;MACdG,QAAQ,CAACO,OAAO,CAACtE,IAAI,CAAC2D,IAAI,EAAEC,IAAI,CAAC;IACrC;IACA,IAAIC,MAAM,EAAE;MACRE,QAAQ,CAACO,OAAO,CAACtE,IAAI,CAAC6D,MAAM,EAAEA,MAAM,CAAC;IACzC;IACA,OAAOE,QAAQ,CAACO,OAAO;EAC3B,CAAC;EACDpH,WAAW,CAACiH,cAAc,GAAG,UAAU/G,KAAK,EAAE8C,MAAM,EAAE+D,IAAI,EAAE;IACxD,IAAI7G,KAAK,CAACiG,eAAe,EAAE;MACvBY,IAAI,CAAC/D,MAAM,GAAGA,MAAM,CAACA,MAAM;MAC3B+D,IAAI,CAACM,KAAK,GAAGrE,MAAM,CAACqE,KAAK;MACzBN,IAAI,CAACO,UAAU,GAAGtE,MAAM,CAACsE,UAAU;IACvC,CAAC,MACI;MACDP,IAAI,CAAC/D,MAAM,GAAGA,MAAM;IACxB;IACA,OAAO+D,IAAI;EACf,CAAC;EACD/G,WAAW,CAACmH,QAAQ,GAAG,UAAU9C,EAAE,EAAE;IACjC;IACA;IACA,CAAC/B,MAAM,CAACiF,YAAY,IAAIjF,MAAM,CAACkF,UAAU,EAAEnD,EAAE,EAAE,CAAC,CAAC;IACjD;EACJ,CAAC;EACDrE,WAAW,CAACmD,SAAS,CAACsE,aAAa,GAAG,UAAUxG,GAAG,EAAEyG,SAAS,EAAEC,MAAM,EAAE;IACpE,OAAOrI,MAAM,CAAC,CAAC,CAAC,EAAE;MACdsI,IAAI,EAAE,KAAK;MACX5F,QAAQ,EAAE,IAAI,CAAC/B,UAAU,CAAC+B,QAAQ;MAClCF,WAAW,EAAE,IAAI,CAAC7B,UAAU,CAAC6B,WAAW;MACxCC,KAAK,EAAE,IAAI,CAAC9B,UAAU,CAAC8B,KAAK;MAC5B8F,KAAK,EAAE,IAAI;MACXC,WAAW,EAAE,KAAK;MAClBC,SAAS,EAAEL,SAAS;MACpBM,SAAS,EAAEL;IACf,CAAC,EAAE1G,GAAG,CAAC;EACX,CAAC;EACD;EACAjB,WAAW,CAACmD,SAAS,CAACyD,WAAW,GAAG,UAAU3F,GAAG,EAAE4F,QAAQ,EAAEE,IAAI,EAAE7G,KAAK,EAAE;IACtE,IAAIE,KAAK,GAAG,IAAI;IAChB,IAAI6H,UAAU,GAAG,CAAC,CAAC/H,KAAK,CAACgI,gBAAgB;IACzC,IAAIP,MAAM,GAAG,SAAAA,CAAU5E,CAAC,EAAE;MACtBgE,IAAI,CAACoB,KAAK,GAAGpF,CAAC;MACd8D,QAAQ,CAACuB,MAAM,CAACrB,IAAI,CAAC;IACzB,CAAC;IACD,IAAIsB,OAAO,GAAG,SAAAA,CAAU3H,IAAI,EAAE2G,KAAK,EAAEiB,GAAG,EAAEC,OAAO,EAAEC,MAAM,EAAElB,UAAU,EAAEmB,oBAAoB,EAAE;MACzF1B,IAAI,CAACuB,GAAG,GAAGA,GAAG;MACdvB,IAAI,CAACM,KAAK,GAAGA,KAAK,GAAGqB,QAAQ,CAACrB,KAAK,CAACsB,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC;MACvD5B,IAAI,CAAC/D,MAAM,GAAGtC,IAAI;MAClBqG,IAAI,CAACwB,OAAO,GAAGA,OAAO;MACtBxB,IAAI,CAACO,UAAU,GAAGA,UAAU;MAC5BP,IAAI,CAACyB,MAAM,GAAGA,MAAM;MACpBzB,IAAI,CAAC0B,oBAAoB,GAAGA,oBAAoB;MAChD5B,QAAQ,CAACK,OAAO,CAACH,IAAI,CAAC;IAC1B,CAAC;IACD,IAAI6B,YAAY,GAAG,SAAAA,CAAUlI,IAAI,EAAEmI,QAAQ,EAAE;MACzC,IAAIC,SAAS,GAAG,IAAIhC,QAAQ,CAAC,CAAC;MAC9B,IAAIiC,SAAS,GAAG;QAAEC,MAAM,EAAEjC;MAAK,CAAC;MAChC7G,KAAK,CAAC2F,QAAQ,CAACoD,OAAO,GAAG,IAAI;MAC7B,IAAIC,MAAM,GAAG9I,KAAK,CAACD,OAAO,CAACyF,YAAY,CAACxF,KAAK,EAAEF,KAAK,CAAC2F,QAAQ,EAAEnF,IAAI,GAAGN,KAAK,CAACD,OAAO,CAACoG,eAAe,CAAC7F,IAAI,CAAC,GAAGmI,QAAQ,CAAC;MACrH,IAAIM,QAAQ,GAAG/I,KAAK,CAACwG,WAAW,CAACsC,MAAM,EAAEJ,SAAS,EAAEC,SAAS,EAAE7I,KAAK,CAAC2F,QAAQ,CAAC;MAC9E,IAAI,CAACoC,UAAU,EAAE;QACba,SAAS,CAAChG,IAAI,CAAC,UAAUsG,OAAO,EAAE;UAC9B,IAAI1I,IAAI,EAAE;YACNlB,QAAQ,CAAC4G,cAAc,CAAClG,KAAK,CAAC2F,QAAQ,CAACQ,IAAI,EAAEnG,KAAK,CAAC2F,QAAQ,CAACE,SAAS,EAAErF,IAAI,EAAE0I,OAAO,EAAElJ,KAAK,CAAC2F,QAAQ,CAAChE,GAAG,CAAC;YACzGwG,OAAO,CAAC3H,IAAI,EAAE0I,OAAO,CAAC/B,KAAK,EAAE+B,OAAO,CAACd,GAAG,CAAC;UAC7C;QACJ,CAAC,EAAEX,MAAM,CAAC;MACd;MACA,OAAOwB,QAAQ;IACnB,CAAC;IACD,IAAIzB,SAAS,GAAG,SAAAA,CAAUhH,IAAI,EAAE6H,OAAO,EAAE;MACrC,IAAInI,KAAK,CAACiJ,gBAAgB,CAACjJ,KAAK,CAACD,OAAO,CAAC,EAAE;QACvC;QACA,IAAI,CAACZ,iBAAiB,CAACmB,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE;UACpC;UACA,OAAOiH,MAAM,CAACjH,IAAI,CAAC,QAAQ,CAAC,EAAE6H,OAAO,CAAC;QAC1C;MACJ;MACA,IAAInI,KAAK,CAAC4G,mBAAmB,CAAC5G,KAAK,CAACD,OAAO,CAAC,EAAE;QAC1CoI,OAAO,GAAGjJ,MAAM,CAAC,CAAC,CAAC,EAAEc,KAAK,CAACkJ,cAAc,EAAEf,OAAO,CAAC;MACvD;MACA,IAAIA,OAAO,CAACgB,WAAW,CAACC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAIpJ,KAAK,CAACC,SAAS,EAAE;QAC9DK,IAAI,GAAGlB,QAAQ,CAACoE,KAAK,CAAC6F,SAAS,CAAC/I,IAAI,CAAC;MACzC;MACA,IAAIsC,MAAM,GAAG5C,KAAK,CAACD,OAAO,CAACoG,eAAe,CAAC7F,IAAI,EAAEN,KAAK,EAAEF,KAAK,EAAEqI,OAAO,CAACmB,YAAY,EAAEnB,OAAO,CAAC;MAC7F,IAAIlB,KAAK,GAAG,CAAC;MACb,IAAIC,UAAU,GAAG,IAAI;MACrB,IAAImB,oBAAoB,GAAG,sBAAsB;MACjD,IAAIkB,cAAc,GAAGjJ,IAAI,CAAC+H,oBAAoB,CAAC;MAC/C,IAAIvI,KAAK,CAACiG,eAAe,EAAE;QACvBkB,KAAK,GAAGrE,MAAM,CAACqE,KAAK;QACpBC,UAAU,GAAGtE,MAAM,CAACsE,UAAU;QAC9BtE,MAAM,GAAGA,MAAM,CAACA,MAAM;MAC1B;MACA,IAAI,CAAC9C,KAAK,CAAC2F,QAAQ,EAAE;QACjBwC,OAAO,CAACrF,MAAM,EAAEqE,KAAK,EAAEkB,OAAO,CAACmB,YAAY,EAAEnB,OAAO,CAACX,IAAI,EAAElH,IAAI,EAAE4G,UAAU,EAAEqC,cAAc,CAAC;QAC5F;MACJ;MACA,IAAI,CAAC1B,UAAU,EAAE;QACbW,YAAY,CAAC5F,MAAM,EAAEuF,OAAO,CAAC;MACjC;IACJ,CAAC;IACD,IAAIqB,GAAG,GAAG,IAAI,CAACnC,aAAa,CAACxG,GAAG,EAAEyG,SAAS,EAAEC,MAAM,CAAC;IACpD,IAAI,CAAC,IAAI,CAACX,mBAAmB,CAAC,IAAI,CAAC7G,OAAO,CAAC,EAAE;MACzC,IAAI0J,OAAO,GAAG,IAAIxK,KAAK,CAACuK,GAAG,CAAC;MAC5BC,OAAO,CAACC,UAAU,GAAG,YAAY;QAC7B1J,KAAK,CAAC0J,UAAU,CAACD,OAAO,CAACH,YAAY,EAAEG,OAAO,CAAC;MACnD,CAAC;MACDD,GAAG,GAAGC,OAAO,CAACE,IAAI,CAAC,CAAC;MACpBH,GAAG,CAACI,KAAK,CAAC,UAAUjH,CAAC,EAAE;QAAE,OAAO,IAAI;MAAE,CAAC,CAAC,CAAC,CAAC;MAC1C,IAAI,CAACtC,QAAQ,CAACwJ,IAAI,CAACJ,OAAO,CAAC;IAC/B,CAAC,MACI;MACD,IAAI,CAACP,cAAc,GAAGM,GAAG;MACzB,IAAIrB,OAAO,GAAGqB,GAAG;MACjB,IAAI,CAACzJ,OAAO,CAAC+J,OAAO,CAACC,OAAO,CAAC;QACzBzJ,IAAI,EAAE6H,OAAO,CAAC7H,IAAI;QAClBqH,SAAS,EAAEQ,OAAO,CAACR,SAAS;QAAEC,SAAS,EAAEO,OAAO,CAACP;MACrD,CAAC,CAAC;IACN;IACA,IAAIC,UAAU,EAAE;MACZ,IAAIb,OAAO,GAAG,KAAK,CAAC;MACpB,IAAIlB,GAAG,GAAGhG,KAAK,CAACgI,gBAAgB,CAACkC,IAAI,CAAC,IAAI,EAAE;QAAElK,KAAK,EAAEA,KAAK,CAAC2F,QAAQ;QAAEmD,MAAM,EAAE9I;MAAM,CAAC,CAAC;MACrF,IAAIgG,GAAG,IAAIA,GAAG,CAACxD,MAAM,EAAE;QACnB0E,OAAO,GAAGiD,OAAO,CAACC,GAAG,CAAC,CAACV,GAAG,EAAEhB,YAAY,CAAC,IAAI,EAAE1C,GAAG,CAAC,CAAC,CAAC;QACrDkB,OAAO,CAACtE,IAAI,CAAC,YAAY;UACrB,IAAIiE,IAAI,GAAG,EAAE;UACb,KAAK,IAAIwD,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGC,SAAS,CAAC9H,MAAM,EAAE6H,EAAE,EAAE,EAAE;YAC1CxD,IAAI,CAACwD,EAAE,CAAC,GAAGC,SAAS,CAACD,EAAE,CAAC;UAC5B;UACA,IAAIvH,MAAM,GAAG+D,IAAI,CAAC,CAAC,CAAC;UACpB,IAAI0D,OAAO,GAAGrK,KAAK,CAACD,OAAO,CAACoG,eAAe,CAACvD,MAAM,CAAC,CAAC,CAAC,EAAE5C,KAAK,EAAEF,KAAK,EAAEE,KAAK,CAACK,QAAQ,CAAC,CAAC,CAAC,CAACiJ,YAAY,EAAEtJ,KAAK,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;UACvH,IAAI4G,KAAK,GAAG,CAAC;UACb,IAAInH,KAAK,CAACiG,eAAe,EAAE;YACvBkB,KAAK,GAAGoD,OAAO,CAACpD,KAAK;YACrBoD,OAAO,GAAGA,OAAO,CAACzH,MAAM;UAC5B;UACA,IAAI0H,OAAO,GAAGtK,KAAK,CAACD,OAAO,CAACoG,eAAe,CAACvD,MAAM,CAAC,CAAC,CAAC,EAAE5C,KAAK,EAAEF,KAAK,CAAC2F,QAAQ,EAAEzF,KAAK,CAACK,QAAQ,CAAC,CAAC,CAAC,CAACiJ,YAAY,EAAEtJ,KAAK,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;UAChI4G,KAAK,GAAG,CAAC;UACT,IAAInH,KAAK,CAAC2F,QAAQ,CAACM,eAAe,EAAE;YAChCkB,KAAK,GAAGqD,OAAO,CAACrD,KAAK;YACrBqD,OAAO,GAAGA,OAAO,CAAC1H,MAAM;UAC5B;UACAxD,QAAQ,CAAC4G,cAAc,CAAClG,KAAK,CAAC2F,QAAQ,CAACQ,IAAI,EAAEnG,KAAK,CAAC2F,QAAQ,CAACE,SAAS,EAAE0E,OAAO,EAAEC,OAAO,EAAExK,KAAK,CAAC2F,QAAQ,CAAChE,GAAG,CAAC;UAC5GoG,UAAU,GAAG,KAAK;UAClBI,OAAO,CAACoC,OAAO,EAAEpD,KAAK,EAAEjH,KAAK,CAACK,QAAQ,CAAC,CAAC,CAAC,CAACiJ,YAAY,CAAC;QAC3D,CAAC,CAAC;MACN,CAAC,MACI;QACDzB,UAAU,GAAG,KAAK;MACtB;IACJ;IACA,OAAO2B,GAAG;EACd,CAAC;EACD5J,WAAW,CAACmD,SAAS,CAAC2G,UAAU,GAAG,UAAUvB,OAAO,EAAEoC,QAAQ,EAAE;IAC5D,IAAI,CAACxK,OAAO,CAAC2J,UAAU,CAAC,IAAI,EAAEvB,OAAO,EAAEoC,QAAQ,CAAC;IAChD,IAAIpJ,OAAO,GAAG,IAAI,CAACtB,UAAU,CAACsB,OAAO;IACrC,IAAIqJ,KAAK;IACT,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEtJ,OAAO,IAAIsJ,CAAC,GAAGtJ,OAAO,CAACmB,MAAM,EAAEmI,CAAC,EAAE,EAAE;MAChDD,KAAK,GAAG,EAAE;MACV,IAAI1G,IAAI,GAAGjB,MAAM,CAACiB,IAAI,CAAC3C,OAAO,CAACsJ,CAAC,CAAC,CAAC;MAClC,KAAK,IAAIN,EAAE,GAAG,CAAC,EAAEO,MAAM,GAAG5G,IAAI,EAAEqG,EAAE,GAAGO,MAAM,CAACpI,MAAM,EAAE6H,EAAE,EAAE,EAAE;QACtD,IAAIQ,IAAI,GAAGD,MAAM,CAACP,EAAE,CAAC;QACrBK,KAAK,CAACX,IAAI,CAACc,IAAI,CAAC;QAChBxC,OAAO,CAAChH,OAAO,CAACyJ,GAAG,CAACD,IAAI,EAAExJ,OAAO,CAACsJ,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MAC/C;IACJ;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI/K,WAAW,CAACmD,SAAS,CAAC8H,WAAW,GAAG,UAAUC,OAAO,EAAErJ,GAAG,EAAEsJ,SAAS,EAAEjL,KAAK,EAAEkL,QAAQ,EAAE;IACpF,IAAIhL,KAAK,GAAG,IAAI;IAChB,IAAI+K,SAAS,YAAYzL,KAAK,EAAE;MAC5BQ,KAAK,GAAGiL,SAAS;MACjBA,SAAS,GAAG,IAAI;IACpB;IACA,IAAIpE,IAAI,GAAG;MACP9F,GAAG,EAAEkK,SAAS;MACdtJ,GAAG,EAAEA,GAAG,IAAI,IAAI,CAAC5B,UAAU,CAAC4B;IAChC,CAAC;IACD,IAAI+H,GAAG,GAAG,IAAI,CAACzJ,OAAO,CAACkL,YAAY,CAAC,IAAI,EAAEH,OAAO,EAAEnE,IAAI,EAAE7G,KAAK,IAAI,IAAIR,KAAK,CAAC,CAAC,EAAE0L,QAAQ,CAAC;IACxF,IAAIE,cAAc,GAAG,gBAAgB;IACrC,IAAI,IAAI,CAACrL,UAAU,CAACY,OAAO,EAAE;MACzB,OAAO+I,GAAG;IACd;IACA,IAAI,CAACrK,iBAAiB,CAAC,IAAI,CAACY,OAAO,CAACmL,cAAc,CAAC,CAAC,EAAE;MAClD,OAAO,IAAI,CAACnL,OAAO,CAACmL,cAAc,CAAC,CAAC1B,GAAG,CAAC;IAC5C,CAAC,MACI,IAAI,CAAC,IAAI,CAAC5C,mBAAmB,CAAC,IAAI,CAAC7G,OAAO,CAAC,EAAE;MAC9C,IAAIoL,MAAM,GAAG,IAAIzE,QAAQ,CAAC,CAAC;MAC3B,IAAI0E,OAAO,GAAG,IAAInM,KAAK,CAACuK,GAAG,CAAC;MAC5B4B,OAAO,CAAC1B,UAAU,GAAG,YAAY;QAC7B1J,KAAK,CAAC0J,UAAU,CAAC0B,OAAO,CAAC9B,YAAY,EAAE8B,OAAO,CAAC;MACnD,CAAC;MACDA,OAAO,CAACzD,SAAS,GAAG,UAAUrH,IAAI,EAAE6H,OAAO,EAAE;QACzC,IAAInI,KAAK,CAACiJ,gBAAgB,CAACjJ,KAAK,CAACD,OAAO,CAAC,EAAE;UACvC;UACA,IAAI,CAACZ,iBAAiB,CAACmB,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE;YACpC;YACA8K,OAAO,CAACxD,SAAS,CAACrE,IAAI,CAACI,SAAS,CAACrD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;UACrD;QACJ;QACA6K,MAAM,CAACrE,OAAO,CAAC9G,KAAK,CAACD,OAAO,CAACoG,eAAe,CAAC7F,IAAI,EAAEN,KAAK,EAAE,IAAI,EAAEmI,OAAO,CAACmB,YAAY,EAAEnB,OAAO,EAAE2C,OAAO,EAAEnE,IAAI,CAAC,CAAC;MAClH,CAAC;MACDyE,OAAO,CAACxD,SAAS,GAAG,UAAUjF,CAAC,EAAE;QAC7BwI,MAAM,CAACnD,MAAM,CAAC,CAAC;UAAED,KAAK,EAAEpF;QAAE,CAAC,CAAC,CAAC;MACjC,CAAC;MACDyI,OAAO,CAACzB,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,UAAUjH,CAAC,EAAE;QAAE,OAAO,IAAI;MAAE,CAAC,CAAC,CAAC,CAAC;MACrD,OAAOwI,MAAM,CAACnE,OAAO;IACzB,CAAC,MACI;MACD,OAAO,IAAI,CAACkE,cAAc,CAAC1B,GAAG,EAAE,IAAI,CAACzJ,OAAO,CAAC+J,OAAO,CAACuB,WAAW,EAAEP,OAAO,CAAC;IAC9E;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIlL,WAAW,CAACmD,SAAS,CAACuI,MAAM,GAAG,UAAUhL,IAAI,EAAEyK,SAAS,EAAEjL,KAAK,EAAEyL,QAAQ,EAAE;IACvE,IAAIR,SAAS,YAAYzL,KAAK,EAAE;MAC5BQ,KAAK,GAAGiL,SAAS;MACjBA,SAAS,GAAG,IAAI;IACpB;IACA,IAAIvB,GAAG,GAAG,IAAI,CAACzJ,OAAO,CAACuL,MAAM,CAAC,IAAI,EAAEhL,IAAI,EAAEyK,SAAS,EAAEjL,KAAK,EAAEyL,QAAQ,CAAC;IACrE,IAAIL,cAAc,GAAG,gBAAgB;IACrC,IAAI,IAAI,CAACrL,UAAU,CAACY,OAAO,EAAE;MACzB,OAAO+I,GAAG;IACd;IACA,IAAI,CAACrK,iBAAiB,CAAC,IAAI,CAACY,OAAO,CAACmL,cAAc,CAAC,CAAC,EAAE;MAClD,OAAO,IAAI,CAACnL,OAAO,CAACmL,cAAc,CAAC,CAAC1B,GAAG,CAAC;IAC5C,CAAC,MACI;MACD,OAAO,IAAI,CAAC0B,cAAc,CAAC1B,GAAG,EAAE,IAAI,CAACzJ,OAAO,CAAC+J,OAAO,CAAC0B,SAAS,CAAC;IACnE;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI5L,WAAW,CAACmD,SAAS,CAAC0I,MAAM,GAAG,UAAUC,QAAQ,EAAE7G,KAAK,EAAEkG,SAAS,EAAEjL,KAAK,EAAE;IACxE,IAAI,OAAO+E,KAAK,KAAK,QAAQ,EAAE;MAC3BA,KAAK,GAAGzF,QAAQ,CAACuM,SAAS,CAACD,QAAQ,EAAE7G,KAAK,CAAC;IAC/C;IACA,IAAIkG,SAAS,YAAYzL,KAAK,EAAE;MAC5BQ,KAAK,GAAGiL,SAAS;MACjBA,SAAS,GAAG,IAAI;IACpB;IACA,IAAIjF,GAAG,GAAG,IAAI,CAAC/F,OAAO,CAAC0L,MAAM,CAAC,IAAI,EAAEC,QAAQ,EAAE7G,KAAK,EAAEkG,SAAS,EAAEjL,KAAK,CAAC;IACtE,IAAIoL,cAAc,GAAG,gBAAgB;IACrC,IAAI,IAAI,CAACrL,UAAU,CAACY,OAAO,EAAE;MACzB,OAAOqF,GAAG;IACd;IACA,IAAI,CAAC3G,iBAAiB,CAAC,IAAI,CAACY,OAAO,CAACmL,cAAc,CAAC,CAAC,EAAE;MAClD,OAAO,IAAI,CAACnL,OAAO,CAACmL,cAAc,CAAC,CAACpF,GAAG,CAAC;IAC5C,CAAC,MACI;MACD,IAAI2F,MAAM,GAAG,IAAI,CAAC1L,OAAO,CAAC+J,OAAO,CAAC8B,YAAY;MAC9C,OAAO,IAAI,CAACV,cAAc,CAACpF,GAAG,EAAE2F,MAAM,CAAC;IAC3C;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI7L,WAAW,CAACmD,SAAS,CAAC8I,MAAM,GAAG,UAAUH,QAAQ,EAAE7G,KAAK,EAAEkG,SAAS,EAAEjL,KAAK,EAAEkL,QAAQ,EAAE;IAClF,IAAID,SAAS,YAAYzL,KAAK,EAAE;MAC5BQ,KAAK,GAAGiL,SAAS;MACjBA,SAAS,GAAG,IAAI;IACpB;IACA,IAAIjF,GAAG,GAAG,IAAI,CAAC/F,OAAO,CAAC8L,MAAM,CAAC,IAAI,EAAEH,QAAQ,EAAE7G,KAAK,EAAEkG,SAAS,EAAEjL,KAAK,EAAEkL,QAAQ,CAAC;IAChF,IAAIE,cAAc,GAAG,gBAAgB;IACrC,IAAI,IAAI,CAACrL,UAAU,CAACY,OAAO,EAAE;MACzB,OAAOqF,GAAG;IACd;IACA,IAAI,CAAC3G,iBAAiB,CAAC,IAAI,CAACY,OAAO,CAACmL,cAAc,CAAC,CAAC,EAAE;MAClD,OAAO,IAAI,CAACnL,OAAO,CAACmL,cAAc,CAAC,CAACpF,GAAG,CAAC;IAC5C,CAAC,MACI;MACD,IAAI+F,MAAM,GAAG,IAAI,CAAC9L,OAAO,CAAC+J,OAAO,CAACgC,YAAY;MAC9C,OAAO,IAAI,CAACZ,cAAc,CAACpF,GAAG,EAAE+F,MAAM,CAAC;IAC3C;EACJ,CAAC;EACDjM,WAAW,CAACmD,SAAS,CAAC6D,mBAAmB,GAAG,UAAU/G,UAAU,EAAE;IAC9D,OAAO,IAAI,CAACE,OAAO,CAACgM,aAAa,IAC7B,IAAI,CAAChM,OAAO,CAACgM,aAAa,CAAC,CAAC,KAAK,mBAAmB;EAC5D,CAAC;EACDnM,WAAW,CAACmD,SAAS,CAACkG,gBAAgB,GAAG,UAAUpJ,UAAU,EAAE;IAC3D,OAAO,IAAI,CAACE,OAAO,CAACgM,aAAa,IAC7B,IAAI,CAAChM,OAAO,CAACgM,aAAa,CAAC,CAAC,KAAK,gBAAgB;EACzD,CAAC;EACDnM,WAAW,CAACmD,SAAS,CAACiJ,WAAW,GAAG,UAAUC,MAAM,EAAE9D,OAAO,EAAE2C,OAAO,EAAE;IACpE,IAAI,IAAI,CAAC7B,gBAAgB,CAAC,IAAI,CAAClJ,OAAO,CAAC,EAAE;MACrC,IAAIO,IAAI,GAAG,OAAO2L,MAAM,KAAK,QAAQ,GAAGA,MAAM,GAAG1I,IAAI,CAACC,KAAK,CAACyI,MAAM,CAAC;MACnE;MACA,IAAI,CAAC9M,iBAAiB,CAACmB,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE;QACpC;QACA,IAAI,CAAC4L,WAAW,CAAC3I,IAAI,CAACI,SAAS,CAACrD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;MACpD;IACJ;IACA,IAAI,IAAI,CAACsG,mBAAmB,CAAC,IAAI,CAAC7G,OAAO,CAAC,EAAE;MACxCoI,OAAO,GAAGjJ,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACgK,cAAc,EAAEf,OAAO,CAAC;IACtD;IACA,IAAI;MACA/I,QAAQ,CAACoE,KAAK,CAAC6F,SAAS,CAAC4C,MAAM,CAAC;IACpC,CAAC,CACD,OAAOtJ,CAAC,EAAE;MACNsJ,MAAM,GAAG,EAAE;IACf;IACAA,MAAM,GAAG,IAAI,CAAClM,OAAO,CAACoG,eAAe,CAAC/G,QAAQ,CAACoE,KAAK,CAAC6F,SAAS,CAAC4C,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE9D,OAAO,CAACmB,YAAY,EAAEnB,OAAO,EAAE2C,OAAO,CAAC;IAC3H,IAAI,CAACqB,aAAa,CAACrF,OAAO,CAACmF,MAAM,CAAC;EACtC,CAAC;EACDrM,WAAW,CAACmD,SAAS,CAACmJ,WAAW,GAAG,UAAUvJ,CAAC,EAAE;IAC7C,IAAI,CAACwJ,aAAa,CAACnE,MAAM,CAAC,CAAC;MAAED,KAAK,EAAEpF;IAAE,CAAC,CAAC,CAAC;EAC7C,CAAC;EACD/C,WAAW,CAACmD,SAAS,CAACmI,cAAc,GAAG,UAAUpF,GAAG,EAAEsG,SAAS,EAAEtB,OAAO,EAAE;IACtE,IAAI9K,KAAK,GAAG,IAAI;IAChB8F,GAAG,GAAG5G,MAAM,CAAC,CAAC,CAAC,EAAE;MACbsI,IAAI,EAAE,MAAM;MACZ2B,WAAW,EAAE,iCAAiC;MAC9CzB,WAAW,EAAE;IACjB,CAAC,EAAE5B,GAAG,CAAC;IACP,IAAI,CAACqG,aAAa,GAAG,IAAIzF,QAAQ,CAAC,CAAC;IACnC,IAAI,CAAC,IAAI,CAACE,mBAAmB,CAAC,IAAI,CAAC7G,OAAO,CAAC,EAAE;MACzC,IAAIsM,OAAO,GAAG,IAAIpN,KAAK,CAAC6G,GAAG,CAAC;MAC5BuG,OAAO,CAAC3C,UAAU,GAAG,YAAY;QAC7B1J,KAAK,CAAC0J,UAAU,CAAC2C,OAAO,CAAC/C,YAAY,EAAE+C,OAAO,CAAC;MACnD,CAAC;MACDA,OAAO,CAAC1E,SAAS,GAAG,IAAI,CAACqE,WAAW,CAAC3J,IAAI,CAAC,IAAI,CAAC;MAC/CgK,OAAO,CAACzE,SAAS,GAAG,IAAI,CAACsE,WAAW,CAAC7J,IAAI,CAAC,IAAI,CAAC;MAC/CgK,OAAO,CAAC1C,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,UAAUjH,CAAC,EAAE;QAAE,OAAO,IAAI;MAAE,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC,MACI;MACD,IAAI,CAACuG,cAAc,GAAGpD,GAAG;MACzBsG,SAAS,CAACpC,IAAI,CAAC,IAAI,EAAE;QACjB1J,IAAI,EAAEwF,GAAG,CAACxF,IAAI;QAAEqH,SAAS,EAAE,IAAI,CAACqE,WAAW,CAAC3J,IAAI,CAAC,IAAI,CAAC;QACtDuF,SAAS,EAAE,IAAI,CAACsE,WAAW,CAAC7J,IAAI,CAAC,IAAI,CAAC;QACtCyI,OAAO,EAAEA;MACb,CAAC,CAAC;IACN;IACA,OAAO,IAAI,CAACqB,aAAa,CAACnF,OAAO;EACrC,CAAC;EACDpH,WAAW,CAACmD,SAAS,CAACuJ,gBAAgB,GAAG,YAAY;IACjDpK,MAAM,CAACqK,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACnK,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpE,IAAI,CAACxC,UAAU,CAACa,iBAAiB,GAAG,KAAK;IACzC,IAAI,CAACP,YAAY,GAAG,CAAC,CAAC;IACtB+B,MAAM,CAACmB,YAAY,CAACK,OAAO,CAAC,IAAI,CAAC7D,UAAU,CAACc,EAAE,EAAE,IAAI,CAAC;EACzD,CAAC;EACD,OAAOf,WAAW;AACtB,CAAC,CAAC,CAAE;AACJ,SAASA,WAAW;AACpB;AACA;AACA;AACA,IAAI8G,QAAQ,GAAG,aAAe,YAAY;EACtC,SAASA,QAAQA,CAAA,EAAG;IAChB,IAAI1G,KAAK,GAAG,IAAI;IAChB;AACR;AACA;IACQ,IAAI,CAACgH,OAAO,GAAG,IAAIiD,OAAO,CAAC,UAAUnD,OAAO,EAAEkB,MAAM,EAAE;MAClDhI,KAAK,CAAC8G,OAAO,GAAGA,OAAO;MACvB9G,KAAK,CAACgI,MAAM,GAAGA,MAAM;IACzB,CAAC,CAAC;IACF;AACR;AACA;IACQ,IAAI,CAACtF,IAAI,GAAG,IAAI,CAACsE,OAAO,CAACtE,IAAI,CAACL,IAAI,CAAC,IAAI,CAAC2E,OAAO,CAAC;IAChD;AACR;AACA;IACQ,IAAI,CAAC4C,KAAK,GAAG,IAAI,CAAC5C,OAAO,CAAC4C,KAAK,CAACvH,IAAI,CAAC,IAAI,CAAC2E,OAAO,CAAC;EACtD;EACA,OAAON,QAAQ;AACnB,CAAC,CAAC,CAAE;AACJ,SAASA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}