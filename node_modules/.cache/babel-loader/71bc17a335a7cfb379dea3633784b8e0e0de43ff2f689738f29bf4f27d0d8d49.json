{"ast":null,"code":"import * as React from \"react\";\nimport { getStrokeDasharrayCanvas, GenericComponent, getMouseCanvas, ChartCanvasContext } from \"@react-financial-charts/core\";\nconst defaultCustomX = (props, moreProps) => {\n  const {\n    xScale,\n    xAccessor,\n    currentItem,\n    mouseXY\n  } = moreProps;\n  const {\n    snapX\n  } = props;\n  const x = snapX ? Math.round(xScale(xAccessor(currentItem))) : mouseXY[0] + 0.5;\n  return x;\n};\nexport class CrossHairCursor extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.drawOnCanvas = (ctx, moreProps) => {\n      const lines = this.getLines(this.props, moreProps);\n      if (lines === undefined) {\n        return;\n      }\n      const {\n        margin,\n        ratio\n      } = this.context;\n      const originX = 0.5 * ratio + margin.left;\n      const originY = 0.5 * ratio + margin.top;\n      ctx.save();\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.scale(ratio, ratio);\n      ctx.translate(originX, originY);\n      lines.forEach(line => {\n        const dashArray = getStrokeDasharrayCanvas(line.strokeDasharray);\n        ctx.strokeStyle = line.strokeStyle;\n        ctx.lineWidth = line.strokeWidth;\n        ctx.setLineDash(dashArray);\n        ctx.beginPath();\n        ctx.moveTo(line.x1, line.y1);\n        ctx.lineTo(line.x2, line.y2);\n        ctx.stroke();\n      });\n      ctx.restore();\n    };\n    this.getLines = (props, moreProps) => {\n      const {\n        mouseXY,\n        currentItem,\n        show,\n        height,\n        width\n      } = moreProps;\n      const {\n        customX = CrossHairCursor.defaultProps.customX,\n        strokeStyle = CrossHairCursor.defaultProps.strokeStyle,\n        strokeDasharray,\n        strokeWidth = CrossHairCursor.defaultProps.strokeWidth\n      } = props;\n      if (!show || currentItem === undefined) {\n        return undefined;\n      }\n      const line1 = {\n        x1: 0,\n        x2: width,\n        y1: mouseXY[1] + 0.5,\n        y2: mouseXY[1] + 0.5,\n        strokeStyle,\n        strokeDasharray,\n        strokeWidth\n      };\n      const x = customX(props, moreProps);\n      const line2 = {\n        x1: x,\n        x2: x,\n        y1: 0,\n        y2: height,\n        strokeStyle,\n        strokeDasharray,\n        strokeWidth\n      };\n      return [line1, line2];\n    };\n  }\n  render() {\n    return React.createElement(GenericComponent, {\n      clip: false,\n      canvasDraw: this.drawOnCanvas,\n      canvasToDraw: getMouseCanvas,\n      drawOn: [\"mousemove\", \"pan\", \"drag\"]\n    });\n  }\n}\nCrossHairCursor.defaultProps = {\n  customX: defaultCustomX,\n  snapX: true,\n  strokeStyle: \"rgba(55, 71, 79, 0.8)\",\n  strokeDasharray: \"Dash\",\n  strokeWidth: 1\n};\nCrossHairCursor.contextType = ChartCanvasContext;","map":{"version":3,"names":["React","getStrokeDasharrayCanvas","GenericComponent","getMouseCanvas","ChartCanvasContext","defaultCustomX","props","moreProps","xScale","xAccessor","currentItem","mouseXY","snapX","x","Math","round","CrossHairCursor","Component","constructor","drawOnCanvas","ctx","lines","getLines","undefined","margin","ratio","context","originX","left","originY","top","save","setTransform","scale","translate","forEach","line","dashArray","strokeDasharray","strokeStyle","lineWidth","strokeWidth","setLineDash","beginPath","moveTo","x1","y1","lineTo","x2","y2","stroke","restore","show","height","width","customX","defaultProps","line1","line2","render","createElement","clip","canvasDraw","canvasToDraw","drawOn","contextType"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\coordinates\\src\\CrossHairCursor.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n    getStrokeDasharrayCanvas,\n    strokeDashTypes,\n    GenericComponent,\n    getMouseCanvas,\n    ChartCanvasContext,\n} from \"@react-financial-charts/core\";\n\nconst defaultCustomX = (props: CrossHairCursorProps, moreProps: any) => {\n    const { xScale, xAccessor, currentItem, mouseXY } = moreProps;\n    const { snapX } = props;\n    const x = snapX ? Math.round(xScale(xAccessor(currentItem))) : mouseXY[0] + 0.5;\n    return x;\n};\n\nexport interface CrossHairCursorProps {\n    readonly customX?: (props: CrossHairCursorProps, moreProps: any) => number;\n    readonly snapX?: boolean;\n    readonly strokeStyle?: string;\n    readonly strokeDasharray?: strokeDashTypes;\n    readonly strokeWidth?: number;\n}\n\nexport class CrossHairCursor extends React.Component<CrossHairCursorProps> {\n    public static defaultProps = {\n        customX: defaultCustomX,\n        snapX: true,\n        strokeStyle: \"rgba(55, 71, 79, 0.8)\",\n        strokeDasharray: \"Dash\",\n        strokeWidth: 1,\n    };\n\n    public static contextType = ChartCanvasContext;\n\n    public render() {\n        return (\n            <GenericComponent\n                clip={false}\n                canvasDraw={this.drawOnCanvas}\n                canvasToDraw={getMouseCanvas}\n                drawOn={[\"mousemove\", \"pan\", \"drag\"]}\n            />\n        );\n    }\n\n    private readonly drawOnCanvas = (ctx: CanvasRenderingContext2D, moreProps: any) => {\n        const lines = this.getLines(this.props, moreProps);\n        if (lines === undefined) {\n            return;\n        }\n\n        const { margin, ratio } = this.context;\n\n        const originX = 0.5 * ratio + margin.left;\n        const originY = 0.5 * ratio + margin.top;\n\n        ctx.save();\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.scale(ratio, ratio);\n        ctx.translate(originX, originY);\n\n        lines.forEach((line) => {\n            const dashArray = getStrokeDasharrayCanvas(line.strokeDasharray);\n\n            ctx.strokeStyle = line.strokeStyle;\n            ctx.lineWidth = line.strokeWidth;\n            ctx.setLineDash(dashArray);\n            ctx.beginPath();\n            ctx.moveTo(line.x1, line.y1);\n            ctx.lineTo(line.x2, line.y2);\n            ctx.stroke();\n        });\n\n        ctx.restore();\n    };\n\n    private readonly getLines = (props: CrossHairCursorProps, moreProps: any) => {\n        const { mouseXY, currentItem, show, height, width } = moreProps;\n\n        const {\n            customX = CrossHairCursor.defaultProps.customX,\n            strokeStyle = CrossHairCursor.defaultProps.strokeStyle,\n            strokeDasharray,\n            strokeWidth = CrossHairCursor.defaultProps.strokeWidth,\n        } = props;\n\n        if (!show || currentItem === undefined) {\n            return undefined;\n        }\n\n        const line1 = {\n            x1: 0,\n            x2: width,\n            y1: mouseXY[1] + 0.5,\n            y2: mouseXY[1] + 0.5,\n            strokeStyle,\n            strokeDasharray,\n            strokeWidth,\n        };\n\n        const x = customX(props, moreProps);\n\n        const line2 = {\n            x1: x,\n            x2: x,\n            y1: 0,\n            y2: height,\n            strokeStyle,\n            strokeDasharray,\n            strokeWidth,\n        };\n\n        return [line1, line2];\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}