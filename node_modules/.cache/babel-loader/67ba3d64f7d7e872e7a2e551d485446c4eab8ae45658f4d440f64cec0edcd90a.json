{"ast":null,"code":"import * as React from \"react\";\nimport { getMouseCanvas, GenericChartComponent, isNotDefined } from \"@react-financial-charts/core\";\nimport { drawOnCanvas } from \"./EdgeCoordinateV3\";\nexport class MouseCoordinateY extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.drawOnCanvas = (ctx, moreProps) => {\n      const props = this.helper(this.props, moreProps);\n      if (props === undefined) {\n        return;\n      }\n      drawOnCanvas(ctx, props);\n    };\n    this.helper = (props, moreProps) => {\n      const {\n        chartConfig: {\n          yScale\n        },\n        chartId,\n        currentItem,\n        currentCharts,\n        mouseXY,\n        show\n      } = moreProps;\n      if (!show) {\n        return undefined;\n      }\n      if (isNotDefined(mouseXY)) {\n        return undefined;\n      }\n      if (currentCharts.indexOf(chartId) < 0) {\n        return undefined;\n      }\n      const {\n        displayFormat,\n        yAccessor\n      } = props;\n      if (yAccessor && !currentItem) {\n        return undefined;\n      }\n      const y = yAccessor ? yScale(yAccessor(currentItem)) : mouseXY[1];\n      const coordinate = displayFormat(yScale.invert(y));\n      return getYCoordinate(y, coordinate, props, moreProps);\n    };\n  }\n  render() {\n    return React.createElement(GenericChartComponent, {\n      clip: false,\n      canvasDraw: this.drawOnCanvas,\n      canvasToDraw: getMouseCanvas,\n      drawOn: [\"mousemove\", \"pan\", \"drag\"]\n    });\n  }\n}\nMouseCoordinateY.defaultProps = {\n  arrowWidth: 0,\n  at: \"right\",\n  dx: 0,\n  fill: \"#4C525E\",\n  fitToText: false,\n  fontFamily: \"-apple-system, system-ui, Roboto, 'Helvetica Neue', Ubuntu, sans-serif\",\n  fontSize: 13,\n  opacity: 1,\n  orient: \"right\",\n  rectWidth: 50,\n  rectHeight: 20,\n  strokeOpacity: 1,\n  strokeWidth: 1,\n  textFill: \"#FFFFFF\",\n  yAxisPad: 0\n};\nexport function getYCoordinate(y, coordinate, props, moreProps) {\n  const {\n    width\n  } = moreProps;\n  const {\n    orient,\n    at,\n    rectWidth,\n    rectHeight,\n    dx,\n    stroke,\n    strokeOpacity,\n    strokeWidth\n  } = props;\n  const {\n    fill,\n    opacity,\n    fitToText,\n    fontFamily,\n    fontSize,\n    textFill,\n    arrowWidth\n  } = props;\n  const x1 = 0;\n  const x2 = width;\n  const edgeAt = at === \"right\" ? width : 0;\n  const type = \"horizontal\";\n  const hideLine = true;\n  const coordinateProps = {\n    coordinate,\n    show: true,\n    fitToText,\n    type,\n    orient,\n    edgeAt,\n    hideLine,\n    fill,\n    opacity,\n    fontFamily,\n    fontSize,\n    textFill,\n    stroke,\n    strokeOpacity,\n    strokeWidth,\n    rectWidth,\n    rectHeight,\n    arrowWidth,\n    dx,\n    x1,\n    x2,\n    y1: y,\n    y2: y\n  };\n  return coordinateProps;\n}","map":{"version":3,"names":["React","getMouseCanvas","GenericChartComponent","isNotDefined","drawOnCanvas","MouseCoordinateY","Component","constructor","ctx","moreProps","props","helper","undefined","chartConfig","yScale","chartId","currentItem","currentCharts","mouseXY","show","indexOf","displayFormat","yAccessor","y","coordinate","invert","getYCoordinate","render","createElement","clip","canvasDraw","canvasToDraw","drawOn","defaultProps","arrowWidth","at","dx","fill","fitToText","fontFamily","fontSize","opacity","orient","rectWidth","rectHeight","strokeOpacity","strokeWidth","textFill","yAxisPad","width","stroke","x1","x2","edgeAt","type","hideLine","coordinateProps","y1","y2"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\coordinates\\src\\MouseCoordinateY.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { getMouseCanvas, GenericChartComponent, isNotDefined } from \"@react-financial-charts/core\";\nimport { drawOnCanvas } from \"./EdgeCoordinateV3\";\n\nexport interface MouseCoordinateYProps {\n    readonly arrowWidth?: number;\n    readonly at?: \"left\" | \"right\";\n    readonly displayFormat: (value: number) => string;\n    readonly dx?: number;\n    readonly fontFamily?: string;\n    readonly fontSize?: number;\n    readonly fill?: string;\n    readonly fitToText?: boolean;\n    readonly opacity?: number;\n    readonly orient?: \"left\" | \"right\";\n    readonly rectWidth?: number;\n    readonly rectHeight?: number;\n    readonly stroke?: string;\n    readonly strokeOpacity?: number;\n    readonly strokeWidth?: number;\n    readonly textFill?: string;\n    readonly yAccessor?: (data: any) => number | undefined;\n    readonly yAxisPad?: number;\n}\n\nexport class MouseCoordinateY extends React.Component<MouseCoordinateYProps> {\n    public static defaultProps = {\n        arrowWidth: 0,\n        at: \"right\",\n        dx: 0,\n        fill: \"#4C525E\",\n        fitToText: false,\n        fontFamily: \"-apple-system, system-ui, Roboto, 'Helvetica Neue', Ubuntu, sans-serif\",\n        fontSize: 13,\n        opacity: 1,\n        orient: \"right\",\n        rectWidth: 50,\n        rectHeight: 20,\n        strokeOpacity: 1,\n        strokeWidth: 1,\n        textFill: \"#FFFFFF\",\n        yAxisPad: 0,\n    };\n\n    public render() {\n        return (\n            <GenericChartComponent\n                clip={false}\n                canvasDraw={this.drawOnCanvas}\n                canvasToDraw={getMouseCanvas}\n                drawOn={[\"mousemove\", \"pan\", \"drag\"]}\n            />\n        );\n    }\n\n    private readonly drawOnCanvas = (ctx: CanvasRenderingContext2D, moreProps: any) => {\n        const props = this.helper(this.props, moreProps);\n        if (props === undefined) {\n            return;\n        }\n\n        drawOnCanvas(ctx, props);\n    };\n\n    private readonly helper = (props: MouseCoordinateYProps, moreProps: any) => {\n        const {\n            chartConfig: { yScale },\n            chartId,\n            currentItem,\n            currentCharts,\n            mouseXY,\n            show,\n        } = moreProps;\n\n        if (!show) {\n            return undefined;\n        }\n\n        if (isNotDefined(mouseXY)) {\n            return undefined;\n        }\n\n        if (currentCharts.indexOf(chartId) < 0) {\n            return undefined;\n        }\n\n        const { displayFormat, yAccessor } = props;\n\n        if (yAccessor && !currentItem) {\n            return undefined;\n        }\n\n        const y = yAccessor ? yScale(yAccessor(currentItem)) : mouseXY[1];\n\n        const coordinate = displayFormat(yScale.invert(y));\n\n        return getYCoordinate(y, coordinate, props, moreProps);\n    };\n}\n\nexport function getYCoordinate(y: number, coordinate: string, props: any, moreProps: any) {\n    const { width } = moreProps;\n\n    const { orient, at, rectWidth, rectHeight, dx, stroke, strokeOpacity, strokeWidth } = props;\n    const { fill, opacity, fitToText, fontFamily, fontSize, textFill, arrowWidth } = props;\n\n    const x1 = 0;\n    const x2 = width;\n    const edgeAt = at === \"right\" ? width : 0;\n\n    const type = \"horizontal\";\n    const hideLine = true;\n\n    const coordinateProps = {\n        coordinate,\n        show: true,\n        fitToText,\n        type,\n        orient,\n        edgeAt,\n        hideLine,\n        fill,\n        opacity,\n        fontFamily,\n        fontSize,\n        textFill,\n        stroke,\n        strokeOpacity,\n        strokeWidth,\n        rectWidth,\n        rectHeight,\n        arrowWidth,\n        dx,\n        x1,\n        x2,\n        y1: y,\n        y2: y,\n    };\n\n    return coordinateProps;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}