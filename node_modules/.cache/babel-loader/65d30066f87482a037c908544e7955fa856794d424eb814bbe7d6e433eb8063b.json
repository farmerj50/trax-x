{"ast":null,"code":"import { group } from \"d3-array\";\nimport * as React from \"react\";\nimport { functor, isDefined, getAxisCanvas, GenericChartComponent } from \"@react-financial-charts/core\";\nexport class OHLCSeries extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.drawOnCanvas = (ctx, moreProps) => {\n      const {\n        xAccessor,\n        xScale,\n        chartConfig: {\n          yScale\n        },\n        plotData\n      } = moreProps;\n      const barData = this.getOHLCBars(this.props, xAccessor, xScale, yScale, plotData);\n      this.drawBarDataOnCanvas(ctx, barData);\n    };\n    this.getOHLCBars = (props, xAccessor, xScale, yScale, plotData) => {\n      const {\n        stroke: strokeProp,\n        strokeWidth: strokeWidthProp = 1,\n        yAccessor\n      } = props;\n      const strokeFunc = functor(strokeProp);\n      const width = xScale(xAccessor(plotData[plotData.length - 1])) - xScale(xAccessor(plotData[0]));\n      const barWidth = Math.max(1, Math.round(width / (plotData.length - 1) / 2) - 1.5);\n      const strokeWidth = Math.min(barWidth, strokeWidthProp);\n      const bars = plotData.filter(d => yAccessor(d).close !== undefined).map(d => {\n        const ohlc = yAccessor(d);\n        const x = Math.round(xScale(xAccessor(d)));\n        const y1 = yScale(ohlc.high);\n        const y2 = yScale(ohlc.low);\n        const openX1 = x - barWidth;\n        const openX2 = x + strokeWidth / 2;\n        const openY = yScale(ohlc.open);\n        const closeX1 = x - strokeWidth / 2;\n        const closeX2 = x + barWidth;\n        const closeY = yScale(ohlc.close);\n        const stroke = strokeFunc(d);\n        return {\n          x,\n          y1,\n          y2,\n          openX1,\n          openX2,\n          openY,\n          closeX1,\n          closeX2,\n          closeY,\n          stroke\n        };\n      });\n      return {\n        barWidth,\n        strokeWidth,\n        bars\n      };\n    };\n    this.drawBarDataOnCanvas = (ctx, barData) => {\n      const {\n        strokeWidth,\n        bars\n      } = barData;\n      const wickNest = group(bars, d => d.stroke);\n      ctx.lineWidth = strokeWidth;\n      wickNest.forEach((values, key) => {\n        ctx.strokeStyle = key;\n        values.forEach(d => {\n          ctx.beginPath();\n          ctx.moveTo(d.x, d.y1);\n          ctx.lineTo(d.x, d.y2);\n          ctx.moveTo(d.openX1, d.openY);\n          ctx.lineTo(d.openX2, d.openY);\n          ctx.moveTo(d.closeX1, d.closeY);\n          ctx.lineTo(d.closeX2, d.closeY);\n          ctx.stroke();\n        });\n      });\n    };\n  }\n  render() {\n    const {\n      clip\n    } = this.props;\n    return React.createElement(GenericChartComponent, {\n      canvasToDraw: getAxisCanvas,\n      canvasDraw: this.drawOnCanvas,\n      clip: clip,\n      drawOn: [\"pan\"]\n    });\n  }\n}\nOHLCSeries.defaultProps = {\n  yAccessor: d => ({\n    open: d.open,\n    high: d.high,\n    low: d.low,\n    close: d.close\n  }),\n  classNames: d => isDefined(d.absoluteChange) ? d.absoluteChange > 0 ? \"up\" : \"down\" : \"firstbar\",\n  stroke: d => isDefined(d.absoluteChange) ? d.absoluteChange > 0 ? \"#26a69a\" : \"#ef5350\" : \"#000000\",\n  strokeWidth: 1,\n  clip: true\n};","map":{"version":3,"names":["group","React","functor","isDefined","getAxisCanvas","GenericChartComponent","OHLCSeries","Component","constructor","drawOnCanvas","ctx","moreProps","xAccessor","xScale","chartConfig","yScale","plotData","barData","getOHLCBars","props","drawBarDataOnCanvas","stroke","strokeProp","strokeWidth","strokeWidthProp","yAccessor","strokeFunc","width","length","barWidth","Math","max","round","min","bars","filter","d","close","undefined","map","ohlc","x","y1","high","y2","low","openX1","openX2","openY","open","closeX1","closeX2","closeY","wickNest","lineWidth","forEach","values","key","strokeStyle","beginPath","moveTo","lineTo","render","clip","createElement","canvasToDraw","canvasDraw","drawOn","defaultProps","classNames","absoluteChange"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\series\\src\\OHLCSeries.tsx"],"sourcesContent":["import { group } from \"d3-array\";\nimport * as React from \"react\";\nimport { functor, isDefined, getAxisCanvas, GenericChartComponent } from \"@react-financial-charts/core\";\n\ninterface IOHLC {\n    readonly close?: number;\n    readonly high?: number;\n    readonly low?: number;\n    readonly open?: number;\n}\n\nexport interface OHLCSeriesProps {\n    readonly clip?: boolean;\n    readonly stroke?: string | ((datum: any) => string);\n    readonly strokeWidth?: number;\n    readonly yAccessor: (datum: any) => IOHLC;\n}\n\nexport class OHLCSeries extends React.Component<OHLCSeriesProps> {\n    public static defaultProps = {\n        yAccessor: (d: any) => ({ open: d.open, high: d.high, low: d.low, close: d.close }),\n        classNames: (d: any) => (isDefined(d.absoluteChange) ? (d.absoluteChange > 0 ? \"up\" : \"down\") : \"firstbar\"),\n        stroke: (d: any) => (isDefined(d.absoluteChange) ? (d.absoluteChange > 0 ? \"#26a69a\" : \"#ef5350\") : \"#000000\"),\n        strokeWidth: 1,\n        clip: true,\n    };\n\n    public render() {\n        const { clip } = this.props;\n\n        return (\n            <GenericChartComponent\n                canvasToDraw={getAxisCanvas}\n                canvasDraw={this.drawOnCanvas}\n                clip={clip}\n                drawOn={[\"pan\"]}\n            />\n        );\n    }\n\n    private readonly drawOnCanvas = (ctx: CanvasRenderingContext2D, moreProps: any) => {\n        const {\n            xAccessor,\n            xScale,\n            chartConfig: { yScale },\n            plotData,\n        } = moreProps;\n\n        const barData = this.getOHLCBars(this.props, xAccessor, xScale, yScale, plotData);\n\n        this.drawBarDataOnCanvas(ctx, barData);\n    };\n\n    private readonly getOHLCBars = (\n        props: OHLCSeriesProps,\n        xAccessor: any,\n        xScale: any,\n        yScale: any,\n        plotData: any,\n    ) => {\n        const { stroke: strokeProp, strokeWidth: strokeWidthProp = 1, yAccessor } = props;\n\n        const strokeFunc = functor(strokeProp);\n\n        const width = xScale(xAccessor(plotData[plotData.length - 1])) - xScale(xAccessor(plotData[0]));\n\n        const barWidth = Math.max(1, Math.round(width / (plotData.length - 1) / 2) - 1.5);\n\n        const strokeWidth = Math.min(barWidth, strokeWidthProp);\n\n        const bars = plotData\n            .filter((d: any) => yAccessor(d).close !== undefined)\n            .map((d: any) => {\n                const ohlc = yAccessor(d);\n                const x = Math.round(xScale(xAccessor(d)));\n                const y1 = yScale(ohlc.high);\n                const y2 = yScale(ohlc.low);\n                const openX1 = x - barWidth;\n                const openX2 = x + strokeWidth / 2;\n                const openY = yScale(ohlc.open);\n                const closeX1 = x - strokeWidth / 2;\n                const closeX2 = x + barWidth;\n                const closeY = yScale(ohlc.close);\n                const stroke = strokeFunc(d);\n\n                return { x, y1, y2, openX1, openX2, openY, closeX1, closeX2, closeY, stroke };\n            });\n\n        return { barWidth, strokeWidth, bars };\n    };\n\n    private readonly drawBarDataOnCanvas = (ctx: CanvasRenderingContext2D, barData: any) => {\n        const { strokeWidth, bars } = barData;\n\n        const wickNest = group(bars, (d: any) => d.stroke);\n\n        ctx.lineWidth = strokeWidth;\n\n        wickNest.forEach((values, key) => {\n            ctx.strokeStyle = key;\n            values.forEach((d) => {\n                ctx.beginPath();\n                ctx.moveTo(d.x, d.y1);\n                ctx.lineTo(d.x, d.y2);\n\n                ctx.moveTo(d.openX1, d.openY);\n                ctx.lineTo(d.openX2, d.openY);\n\n                ctx.moveTo(d.closeX1, d.closeY);\n                ctx.lineTo(d.closeX2, d.closeY);\n\n                ctx.stroke();\n            });\n        });\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}