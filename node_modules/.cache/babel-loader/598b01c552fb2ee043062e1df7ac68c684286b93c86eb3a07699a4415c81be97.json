{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabby\\\\trax-x\\\\src\\\\components\\\\StockScanner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport CandlestickChart from \"./CandlestickChart\";\nimport './StockScanner.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockScanner = () => {\n  _s();\n  const [stocks, setStocks] = useState([]); // Initialize as an empty array\n  const [minPrice, setMinPrice] = useState(\"\");\n  const [maxPrice, setMaxPrice] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // Fetch stocks based on price range\n  const fetchStocks = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/scan-stocks?min_price=${minPrice}&max_price=${maxPrice}`);\n      const data = await response.json();\n      if (response.ok) {\n        if (data.candidates && data.candidates.length > 0) {\n          setStocks(data.candidates); // Store the array of stocks\n          setError(\"\");\n        } else {\n          setStocks([]); // No stocks returned\n          setError(\"No stocks found. Please adjust your criteria.\");\n        }\n      } else {\n        setError(data.error || \"Failed to fetch stocks.\");\n      }\n    } catch (err) {\n      setError(\"Failed to fetch stocks.\");\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stock-scanner\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Find Stocks by Price Range\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"price-filter\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Min Price:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: minPrice,\n          onChange: e => setMinPrice(e.target.value),\n          placeholder: \"Enter min price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Max Price:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: maxPrice,\n          onChange: e => setMaxPrice(e.target.value),\n          placeholder: \"Enter max price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchStocks,\n        children: \"Search Stocks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        textAlign: \"center\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-list\",\n      children: stocks && stocks.length > 0 ?\n      // Safely check if stocks exists and has length\n      stocks.map(stock => /*#__PURE__*/_jsxDEV(CandlestickChart, {\n        // Use \"T\" for the ticker key\n        ticker: stock.T // Use \"T\" for the ticker\n        ,\n        entryPoint: stock.c * 0.95 // Use \"c\" (close price) for calculations\n        ,\n        exitPoint: stock.c * 1.10 // Use \"c\" (close price) for calculations\n        ,\n        additionalData: `Volatility: ${(stock.volatility * 100).toFixed(2)}%, Change: ${(stock.price_change * 100).toFixed(2)}%`\n      }, stock.T, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"No stocks found. Please adjust your criteria.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(StockScanner, \"awCpHV68vcAMGWfD4bfXC8/TpaQ=\");\n_c = StockScanner;\nexport default StockScanner;\nvar _c;\n$RefreshReg$(_c, \"StockScanner\");","map":{"version":3,"names":["React","useEffect","useState","CandlestickChart","jsxDEV","_jsxDEV","StockScanner","_s","stocks","setStocks","minPrice","setMinPrice","maxPrice","setMaxPrice","error","setError","fetchStocks","response","fetch","data","json","ok","candidates","length","err","console","className","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","color","map","stock","ticker","T","entryPoint","c","exitPoint","additionalData","volatility","toFixed","price_change","_c","$RefreshReg$"],"sources":["C:/Users/gabby/trax-x/src/components/StockScanner.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport CandlestickChart from \"./CandlestickChart\";\r\nimport './StockScanner.css';\r\n\r\nconst StockScanner = () => {\r\n  const [stocks, setStocks] = useState([]); // Initialize as an empty array\r\n  const [minPrice, setMinPrice] = useState(\"\"); \r\n  const [maxPrice, setMaxPrice] = useState(\"\"); \r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Fetch stocks based on price range\r\n  const fetchStocks = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/scan-stocks?min_price=${minPrice}&max_price=${maxPrice}`\r\n      );\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        if (data.candidates && data.candidates.length > 0) {\r\n          setStocks(data.candidates); // Store the array of stocks\r\n          setError(\"\");\r\n        } else {\r\n          setStocks([]); // No stocks returned\r\n          setError(\"No stocks found. Please adjust your criteria.\");\r\n        }\r\n      } else {\r\n        setError(data.error || \"Failed to fetch stocks.\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Failed to fetch stocks.\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"stock-scanner\">\r\n      <h2 style={{ textAlign: \"center\" }}>Find Stocks by Price Range</h2>\r\n\r\n      {/* Form for price range input */}\r\n      <div className=\"price-filter\">\r\n        <label>\r\n          Min Price:\r\n          <input\r\n            type=\"number\"\r\n            value={minPrice}\r\n            onChange={(e) => setMinPrice(e.target.value)}\r\n            placeholder=\"Enter min price\"\r\n          />\r\n        </label>\r\n        <label>\r\n          Max Price:\r\n          <input\r\n            type=\"number\"\r\n            value={maxPrice}\r\n            onChange={(e) => setMaxPrice(e.target.value)}\r\n            placeholder=\"Enter max price\"\r\n          />\r\n        </label>\r\n        <button onClick={fetchStocks}>Search Stocks</button>\r\n      </div>\r\n\r\n      {/* Display error message */}\r\n      {error && <p style={{ color: \"red\", textAlign: \"center\" }}>{error}</p>}\r\n\r\n      {/* Display stock results */}\r\n      <div className=\"stock-list\">\r\n        {stocks && stocks.length > 0 ? ( // Safely check if stocks exists and has length\r\n          stocks.map((stock) => (\r\n            <CandlestickChart\r\n              key={stock.T} // Use \"T\" for the ticker key\r\n              ticker={stock.T} // Use \"T\" for the ticker\r\n              entryPoint={stock.c * 0.95} // Use \"c\" (close price) for calculations\r\n              exitPoint={stock.c * 1.10} // Use \"c\" (close price) for calculations\r\n              additionalData={`Volatility: ${(stock.volatility * 100).toFixed(2)}%, Change: ${(stock.price_change * 100).toFixed(2)}%`}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p style={{ textAlign: \"center\" }}>No stocks found. Please adjust your criteria.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockScanner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}