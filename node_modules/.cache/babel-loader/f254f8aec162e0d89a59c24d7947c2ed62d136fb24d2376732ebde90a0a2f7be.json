{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabby\\\\trax-x\\\\src\\\\components\\\\CandlestickChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { createChart } from \"lightweight-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CandlestickChart = ({\n  ticker\n}) => {\n  _s();\n  const chartContainerRef = useRef(null);\n  const chartInstance = useRef(null);\n  useEffect(() => {\n    const initializeChart = () => {\n      if (!chartContainerRef.current) {\n        console.error(\"Chart container not found.\");\n        return;\n      }\n      const containerWidth = chartContainerRef.current.clientWidth || 800;\n      const containerHeight = chartContainerRef.current.clientHeight || 400;\n\n      // Initialize the chart\n      const chart = createChart(chartContainerRef.current, {\n        width: containerWidth,\n        height: containerHeight,\n        layout: {\n          backgroundColor: \"#ffffff\",\n          textColor: \"#000000\"\n        },\n        grid: {\n          vertLines: {\n            color: \"#eeeeee\"\n          },\n          horzLines: {\n            color: \"#eeeeee\"\n          }\n        }\n      });\n      chartInstance.current = chart;\n      const candlestickSeries = chart.addCandlestickSeries();\n\n      // Fetch and set data to the chart\n      const fetchChartData = async () => {\n        try {\n          const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${ticker}`);\n          const data = await response.json();\n          if (data.dates) {\n            const formattedData = data.dates.map((date, index) => ({\n              time: date,\n              open: data.open[index],\n              high: data.high[index],\n              low: data.low[index],\n              close: data.close[index]\n            }));\n            candlestickSeries.setData(formattedData);\n          }\n        } catch (error) {\n          console.error(\"Error fetching candlestick data:\", error);\n        }\n      };\n      fetchChartData();\n    };\n    initializeChart();\n\n    // Resize observer to handle chart resizing\n    let resizeTimeout;\n    const resizeObserver = new ResizeObserver(() => {\n      clearTimeout(resizeTimeout);\n      resizeTimeout = setTimeout(() => {\n        if (chartContainerRef.current && chartInstance.current) {\n          const width = chartContainerRef.current.clientWidth || 800;\n          const height = chartContainerRef.current.clientHeight || 400;\n          console.log(\"Resizing chart to:\", width, height);\n          chartInstance.current.applyOptions({\n            width,\n            height\n          });\n        }\n      }, 300); // Debounce resize\n    });\n    resizeObserver.observe(chartContainerRef.current);\n\n    // Cleanup on unmount\n    return () => {\n      clearTimeout(resizeTimeout);\n      if (chartInstance.current) chartInstance.current.remove();\n      resizeObserver.disconnect();\n    };\n  }, [ticker]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-widget-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-wrapper\",\n      ref: chartContainerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(CandlestickChart, \"N2RNfpCCBNmwUUFk2m+R3gAcL7Q=\");\n_c = CandlestickChart;\nexport default CandlestickChart;\nvar _c;\n$RefreshReg$(_c, \"CandlestickChart\");","map":{"version":3,"names":["React","useEffect","useRef","createChart","jsxDEV","_jsxDEV","CandlestickChart","ticker","_s","chartContainerRef","chartInstance","initializeChart","current","console","error","containerWidth","clientWidth","containerHeight","clientHeight","chart","width","height","layout","backgroundColor","textColor","grid","vertLines","color","horzLines","candlestickSeries","addCandlestickSeries","fetchChartData","response","fetch","data","json","dates","formattedData","map","date","index","time","open","high","low","close","setData","resizeTimeout","resizeObserver","ResizeObserver","clearTimeout","setTimeout","log","applyOptions","observe","remove","disconnect","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gabby/trax-x/src/components/CandlestickChart.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { createChart } from \"lightweight-charts\";\r\n\r\nconst CandlestickChart = ({ ticker }) => {\r\n  const chartContainerRef = useRef(null);\r\n  const chartInstance = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const initializeChart = () => {\r\n      if (!chartContainerRef.current) {\r\n        console.error(\"Chart container not found.\");\r\n        return;\r\n      }\r\n\r\n      const containerWidth = chartContainerRef.current.clientWidth || 800;\r\n      const containerHeight = chartContainerRef.current.clientHeight || 400;\r\n\r\n      // Initialize the chart\r\n      const chart = createChart(chartContainerRef.current, {\r\n        width: containerWidth,\r\n        height: containerHeight,\r\n        layout: { backgroundColor: \"#ffffff\", textColor: \"#000000\" },\r\n        grid: { vertLines: { color: \"#eeeeee\" }, horzLines: { color: \"#eeeeee\" } },\r\n      });\r\n\r\n      chartInstance.current = chart;\r\n\r\n      const candlestickSeries = chart.addCandlestickSeries();\r\n\r\n      // Fetch and set data to the chart\r\n      const fetchChartData = async () => {\r\n        try {\r\n          const response = await fetch(\r\n            `http://localhost:5000/api/candlestick?ticker=${ticker}`\r\n          );\r\n          const data = await response.json();\r\n          if (data.dates) {\r\n            const formattedData = data.dates.map((date, index) => ({\r\n              time: date,\r\n              open: data.open[index],\r\n              high: data.high[index],\r\n              low: data.low[index],\r\n              close: data.close[index],\r\n            }));\r\n            candlestickSeries.setData(formattedData);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching candlestick data:\", error);\r\n        }\r\n      };\r\n\r\n      fetchChartData();\r\n    };\r\n\r\n    initializeChart();\r\n\r\n    // Resize observer to handle chart resizing\r\n    let resizeTimeout;\r\n    const resizeObserver = new ResizeObserver(() => {\r\n      clearTimeout(resizeTimeout);\r\n      resizeTimeout = setTimeout(() => {\r\n        if (chartContainerRef.current && chartInstance.current) {\r\n          const width = chartContainerRef.current.clientWidth || 800;\r\n          const height = chartContainerRef.current.clientHeight || 400;\r\n\r\n          console.log(\"Resizing chart to:\", width, height);\r\n\r\n          chartInstance.current.applyOptions({ width, height });\r\n        }\r\n      }, 300); // Debounce resize\r\n    });\r\n\r\n    resizeObserver.observe(chartContainerRef.current);\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      clearTimeout(resizeTimeout);\r\n      if (chartInstance.current) chartInstance.current.remove();\r\n      resizeObserver.disconnect();\r\n    };\r\n  }, [ticker]);\r\n\r\n  return (\r\n    <div className=\"chart-widget-container\">\r\n      <div className=\"chart-wrapper\" ref={chartContainerRef}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CandlestickChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}