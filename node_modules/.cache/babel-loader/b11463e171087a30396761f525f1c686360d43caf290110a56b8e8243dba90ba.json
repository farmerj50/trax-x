{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabby\\\\trax-x\\\\src\\\\components\\\\StocksPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../components/StocksPage.css\";\nimport { StockChartComponent, StockChartSeriesCollectionDirective, StockChartSeriesDirective, Inject, DateTime, Tooltip, Crosshair, CandleSeries } from \"@syncfusion/ej2-react-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StocksPage = () => {\n  _s();\n  const [ticker, setTicker] = useState(\"\");\n  const [selectedTicker, setSelectedTicker] = useState(\"AAPL\"); // Default ticker\n  const [chartData, setChartData] = useState([]);\n  const handleSearch = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/candlestick?ticker=${ticker.toUpperCase()}`);\n      const data = await response.json();\n      if (data.dates) {\n        const formattedData = data.dates.map((date, index) => ({\n          x: new Date(date),\n          open: data.open[index],\n          high: data.high[index],\n          low: data.low[index],\n          close: data.close[index]\n        }));\n        setChartData(formattedData);\n      } else {\n        setChartData([]);\n        alert(\"No data available for the entered stock ticker.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching stock data:\", error);\n      alert(\"Failed to load stock data.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stocks-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedTicker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter ticker\",\n        value: ticker,\n        onChange: e => setTicker(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: /*#__PURE__*/_jsxDEV(StockChartComponent, {\n        primaryXAxis: {\n          valueType: \"DateTime\"\n        },\n        primaryYAxis: {\n          labelFormat: \"${value}\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Inject, {\n          services: [DateTime, Tooltip, Crosshair, CandleSeries]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StockChartSeriesCollectionDirective, {\n          children: /*#__PURE__*/_jsxDEV(StockChartSeriesDirective, {\n            dataSource: chartData,\n            type: \"Candle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(StocksPage, \"L7qC11O1btM10EkEYys/MKTZXVc=\");\n_c = StocksPage;\nexport default StocksPage;\nvar _c;\n$RefreshReg$(_c, \"StocksPage\");","map":{"version":3,"names":["React","useState","StockChartComponent","StockChartSeriesCollectionDirective","StockChartSeriesDirective","Inject","DateTime","Tooltip","Crosshair","CandleSeries","jsxDEV","_jsxDEV","StocksPage","_s","ticker","setTicker","selectedTicker","setSelectedTicker","chartData","setChartData","handleSearch","response","fetch","toUpperCase","data","json","dates","formattedData","map","date","index","x","Date","open","high","low","close","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","primaryXAxis","valueType","primaryYAxis","labelFormat","services","dataSource","_c","$RefreshReg$"],"sources":["C:/Users/gabby/trax-x/src/components/StocksPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../components/StocksPage.css\";\r\nimport {\r\n  StockChartComponent,\r\n  StockChartSeriesCollectionDirective,\r\n  StockChartSeriesDirective,\r\n  Inject,\r\n  DateTime,\r\n  Tooltip,\r\n  Crosshair,\r\n  CandleSeries,\r\n} from \"@syncfusion/ej2-react-charts\";\r\n\r\nconst StocksPage = () => {\r\n  const [ticker, setTicker] = useState(\"\");\r\n  const [selectedTicker, setSelectedTicker] = useState(\"AAPL\"); // Default ticker\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/candlestick?ticker=${ticker.toUpperCase()}`\r\n      );\r\n      const data = await response.json();\r\n\r\n      if (data.dates) {\r\n        const formattedData = data.dates.map((date, index) => ({\r\n          x: new Date(date),\r\n          open: data.open[index],\r\n          high: data.high[index],\r\n          low: data.low[index],\r\n          close: data.close[index],\r\n        }));\r\n        setChartData(formattedData);\r\n      } else {\r\n        setChartData([]);\r\n        alert(\"No data available for the entered stock ticker.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching stock data:\", error);\r\n      alert(\"Failed to load stock data.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"stocks-page\">\r\n      <div className=\"stock-header\">\r\n        <h2>{selectedTicker}</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter ticker\"\r\n          value={ticker}\r\n          onChange={(e) => setTicker(e.target.value)}\r\n        />\r\n        <button onClick={handleSearch}>Search</button>\r\n      </div>\r\n      <div className=\"chart-section\">\r\n        <StockChartComponent\r\n          primaryXAxis={{ valueType: \"DateTime\" }}\r\n          primaryYAxis={{ labelFormat: \"${value}\" }}\r\n        >\r\n          <Inject services={[DateTime, Tooltip, Crosshair, CandleSeries]} />\r\n          <StockChartSeriesCollectionDirective>\r\n            <StockChartSeriesDirective\r\n              dataSource={chartData}\r\n              type=\"Candle\"\r\n            />\r\n          </StockChartSeriesCollectionDirective>\r\n        </StockChartComponent>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StocksPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}