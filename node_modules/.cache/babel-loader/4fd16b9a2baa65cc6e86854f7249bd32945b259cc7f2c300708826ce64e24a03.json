{"ast":null,"code":"import { deviation, sum, zip } from \"d3-array\";\nimport * as React from \"react\";\nimport { getClosestItemIndexes, getMouseCanvas, GenericChartComponent } from \"@react-financial-charts/core\";\nimport { isHovering2 } from \"./InteractiveStraightLine\";\nexport class LinearRegressionChannelWithArea extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.drawOnCanvas = (ctx, moreProps) => {\n      const {\n        strokeStyle,\n        strokeWidth,\n        fillStyle\n      } = this.props;\n      const {\n        x1,\n        y1,\n        x2,\n        y2,\n        dy\n      } = helper(this.props, moreProps);\n      ctx.lineWidth = strokeWidth;\n      ctx.strokeStyle = strokeStyle;\n      ctx.fillStyle = fillStyle;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1 - dy);\n      ctx.lineTo(x2, y2 - dy);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(x2, y2 + dy);\n      ctx.lineTo(x1, y1 + dy);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(x1, y1 - dy);\n      ctx.lineTo(x2, y2 - dy);\n      ctx.lineTo(x2, y2 + dy);\n      ctx.lineTo(x1, y1 + dy);\n      ctx.closePath();\n      ctx.fill();\n      ctx.beginPath();\n      ctx.moveTo(x2, y2);\n      ctx.lineTo(x1, y1);\n      ctx.stroke();\n    };\n    this.isHover = moreProps => {\n      const {\n        tolerance,\n        onHover\n      } = this.props;\n      if (onHover !== undefined) {\n        const {\n          mouseXY\n        } = moreProps;\n        const {\n          x1,\n          y1,\n          x2,\n          y2,\n          dy\n        } = helper(this.props, moreProps);\n        const yDiffs = [-dy, 0, dy];\n        const hovering = yDiffs.reduce((result, diff) => result || isHovering2([x1, y1 + diff], [x2, y2 + diff], mouseXY, tolerance), false);\n        return hovering;\n      }\n      return false;\n    };\n  }\n  render() {\n    const {\n      selected,\n      interactiveCursorClass\n    } = this.props;\n    const {\n      onDragStart,\n      onDrag,\n      onDragComplete,\n      onHover,\n      onUnHover\n    } = this.props;\n    return React.createElement(GenericChartComponent, {\n      isHover: this.isHover,\n      canvasToDraw: getMouseCanvas,\n      canvasDraw: this.drawOnCanvas,\n      interactiveCursorClass: interactiveCursorClass,\n      selected: selected,\n      onDragStart: onDragStart,\n      onDrag: onDrag,\n      onDragComplete: onDragComplete,\n      onHover: onHover,\n      onUnHover: onUnHover,\n      drawOn: [\"mousemove\", \"mouseleave\", \"pan\", \"drag\"]\n    });\n  }\n}\nLinearRegressionChannelWithArea.defaultProps = {\n  type: \"SD\",\n  strokeWidth: 1,\n  tolerance: 4,\n  selected: false\n};\nexport function edge1Provider(props) {\n  return function (moreProps) {\n    const {\n      x1,\n      y1\n    } = helper(props, moreProps);\n    return [x1, y1];\n  };\n}\nexport function edge2Provider(props) {\n  return function (moreProps) {\n    const {\n      x2,\n      y2\n    } = helper(props, moreProps);\n    return [x2, y2];\n  };\n}\nfunction helper(props, moreProps) {\n  const {\n    x1Value,\n    x2Value,\n    type\n  } = props;\n  const {\n    xScale,\n    chartConfig: {\n      yScale\n    },\n    fullData\n  } = moreProps;\n  const {\n    xAccessor\n  } = moreProps;\n  const {\n    left\n  } = getClosestItemIndexes(fullData, x1Value, xAccessor);\n  const {\n    right\n  } = getClosestItemIndexes(fullData, x2Value, xAccessor);\n  const startIndex = Math.min(left, right);\n  const endIndex = Math.max(left, right) + 1;\n  const array = fullData.slice(startIndex, endIndex);\n  const xs = array.map(d => xAccessor(d).valueOf());\n  const ys = array.map(d => d.close);\n  const n = array.length;\n  const xys = zip(xs, ys).map(d => {\n    return d[0] * d[1];\n  });\n  const xSquareds = xs.map(x => Math.pow(x, 2));\n  const b = (n * sum(xys) - sum(xs) * sum(ys)) / (n * sum(xSquareds) - Math.pow(sum(xs), 2));\n  const a = (sum(ys) - b * sum(xs)) / n;\n  const newy1 = a + b * x1Value;\n  const newy2 = a + b * x2Value;\n  const x1 = xScale(x1Value);\n  const y1 = yScale(newy1);\n  const x2 = xScale(x2Value);\n  const y2 = yScale(newy2);\n  const stdDev = type === \"SD\" ? deviation(array, d => d.close) : 0;\n  const dy = yScale(newy1 - stdDev) - y1;\n  return {\n    x1,\n    y1,\n    x2,\n    y2,\n    dy\n  };\n}","map":{"version":3,"names":["deviation","sum","zip","React","getClosestItemIndexes","getMouseCanvas","GenericChartComponent","isHovering2","LinearRegressionChannelWithArea","Component","constructor","drawOnCanvas","ctx","moreProps","strokeStyle","strokeWidth","fillStyle","props","x1","y1","x2","y2","dy","helper","lineWidth","beginPath","moveTo","lineTo","stroke","closePath","fill","isHover","tolerance","onHover","undefined","mouseXY","yDiffs","hovering","reduce","result","diff","render","selected","interactiveCursorClass","onDragStart","onDrag","onDragComplete","onUnHover","createElement","canvasToDraw","canvasDraw","drawOn","defaultProps","type","edge1Provider","edge2Provider","x1Value","x2Value","xScale","chartConfig","yScale","fullData","xAccessor","left","right","startIndex","Math","min","endIndex","max","array","slice","xs","map","d","valueOf","ys","close","n","length","xys","xSquareds","x","pow","b","a","newy1","newy2","stdDev"],"sources":["C:\\Users\\gabby\\trax-x\\node_modules\\@react-financial-charts\\interactive\\src\\components\\LinearRegressionChannelWithArea.tsx"],"sourcesContent":["import { deviation, sum, zip } from \"d3-array\";\nimport * as React from \"react\";\nimport { getClosestItemIndexes, getMouseCanvas, GenericChartComponent } from \"@react-financial-charts/core\";\nimport { isHovering2 } from \"./InteractiveStraightLine\";\n\nexport interface LinearRegressionChannelWithAreaProps {\n    readonly x1Value: any;\n    readonly x2Value: any;\n    readonly type:\n        | \"SD\" // standard deviation channel\n        | \"Raff\"; // Raff Regression Channel\n    readonly interactiveCursorClass?: string;\n    readonly strokeStyle: string;\n    readonly strokeWidth: number;\n    readonly fillStyle: string;\n    readonly onDragStart?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onDrag?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onDragComplete?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onHover?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly onUnHover?: (e: React.MouseEvent, moreProps: any) => void;\n    readonly defaultClassName?: string;\n    readonly tolerance: number;\n    readonly selected: boolean;\n}\n\nexport class LinearRegressionChannelWithArea extends React.Component<LinearRegressionChannelWithAreaProps> {\n    public static defaultProps = {\n        type: \"SD\", // standard dev\n        strokeWidth: 1,\n        tolerance: 4,\n        selected: false,\n    };\n\n    public render() {\n        const { selected, interactiveCursorClass } = this.props;\n        const { onDragStart, onDrag, onDragComplete, onHover, onUnHover } = this.props;\n\n        return (\n            <GenericChartComponent\n                isHover={this.isHover}\n                canvasToDraw={getMouseCanvas}\n                canvasDraw={this.drawOnCanvas}\n                interactiveCursorClass={interactiveCursorClass}\n                selected={selected}\n                onDragStart={onDragStart}\n                onDrag={onDrag}\n                onDragComplete={onDragComplete}\n                onHover={onHover}\n                onUnHover={onUnHover}\n                drawOn={[\"mousemove\", \"mouseleave\", \"pan\", \"drag\"]}\n            />\n        );\n    }\n\n    private readonly drawOnCanvas = (ctx: CanvasRenderingContext2D, moreProps: any) => {\n        const { strokeStyle, strokeWidth, fillStyle } = this.props;\n        const { x1, y1, x2, y2, dy } = helper(this.props, moreProps);\n\n        ctx.lineWidth = strokeWidth;\n        ctx.strokeStyle = strokeStyle;\n        ctx.fillStyle = fillStyle;\n\n        ctx.beginPath();\n        ctx.moveTo(x1, y1 - dy);\n        ctx.lineTo(x2, y2 - dy);\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.moveTo(x2, y2 + dy);\n        ctx.lineTo(x1, y1 + dy);\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.moveTo(x1, y1 - dy);\n        ctx.lineTo(x2, y2 - dy);\n        ctx.lineTo(x2, y2 + dy);\n        ctx.lineTo(x1, y1 + dy);\n        ctx.closePath();\n        ctx.fill();\n\n        ctx.beginPath();\n        ctx.moveTo(x2, y2);\n        ctx.lineTo(x1, y1);\n        ctx.stroke();\n    };\n\n    private readonly isHover = (moreProps: any) => {\n        const { tolerance, onHover } = this.props;\n\n        if (onHover !== undefined) {\n            const { mouseXY } = moreProps;\n\n            const { x1, y1, x2, y2, dy } = helper(this.props, moreProps);\n            const yDiffs = [-dy, 0, dy];\n\n            const hovering = yDiffs.reduce(\n                (result, diff) => result || isHovering2([x1, y1 + diff], [x2, y2 + diff], mouseXY, tolerance),\n                false,\n            );\n            return hovering;\n        }\n        return false;\n    };\n}\n\nexport function edge1Provider(props: any) {\n    return function (moreProps: any) {\n        const { x1, y1 } = helper(props, moreProps);\n        return [x1, y1];\n    };\n}\n\nexport function edge2Provider(props: any) {\n    return function (moreProps: any) {\n        const { x2, y2 } = helper(props, moreProps);\n        return [x2, y2];\n    };\n}\n\nfunction helper(props: any, moreProps: any) {\n    const { x1Value, x2Value, type } = props;\n\n    const {\n        xScale,\n        chartConfig: { yScale },\n        fullData,\n    } = moreProps;\n    const { xAccessor } = moreProps;\n\n    const { left } = getClosestItemIndexes(fullData, x1Value, xAccessor);\n    const { right } = getClosestItemIndexes(fullData, x2Value, xAccessor);\n\n    const startIndex = Math.min(left, right);\n    const endIndex = Math.max(left, right) + 1;\n\n    const array = fullData.slice(startIndex, endIndex);\n\n    const xs = array.map((d: any) => xAccessor(d).valueOf());\n    const ys = array.map((d: any) => d.close);\n    const n = array.length;\n\n    const xys = zip<number>(xs, ys).map((d) => {\n        return d[0] * d[1];\n    });\n    const xSquareds = xs.map((x: any) => Math.pow(x, 2));\n\n    const b = (n * sum(xys) - sum(xs) * sum(ys)) / (n * sum(xSquareds) - Math.pow(sum(xs), 2));\n    const a = (sum(ys) - b * sum(xs)) / n;\n\n    const newy1 = a + b * x1Value;\n    const newy2 = a + b * x2Value;\n\n    const x1 = xScale(x1Value);\n    const y1 = yScale(newy1);\n    const x2 = xScale(x2Value);\n    const y2 = yScale(newy2);\n\n    const stdDev = type === \"SD\" ? deviation<any>(array, (d) => d.close) : 0;\n\n    const dy = yScale(newy1 - stdDev!) - y1;\n\n    return {\n        x1,\n        y1,\n        x2,\n        y2,\n        dy,\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}